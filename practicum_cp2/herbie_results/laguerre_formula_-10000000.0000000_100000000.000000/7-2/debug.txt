* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 2 ] rewriting at (2)
* * * * [misc]progress:  [ 2 / 2 ] rewriting at (2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 2 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0.5 (pow x 2)) (+ (* (- 2.0) x) 1.0)) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* (- 2.0) (/ 1 (/ 1 x))) (* 0.5 (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify 2.0 into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* 2.0 (/ 1 (/ 1 (- x)))) (* 0.5 (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * * * [misc]progress:  [ 2 / 2 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* 0.5 (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.5 (pow x 2)) into (* 0.5 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.5 (pow (/ 1 (/ 1 x)) 2)) into (* 0.5 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.5 (pow (/ 1 (/ 1 (- x))) 2)) into (* 0.5 (pow x 2))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (+ 1.0 (* -2.0 x))) (exp (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (exp (+ 1.0 (* -2.0 x))) (exp (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (71 enodes)
* [exit]simplify:  Simplified to (exp (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (exp (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* * * * [misc]progress:  [ 2 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1))>
* * * * [misc]progress:  [ 3 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (log (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (log (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 4 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (exp (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 5 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 6 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* * * * [misc]progress:  [ 7 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 8 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (272 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))
* [enter]simplify:  Simplifying (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* * [misc]simplify:  iters left: 3 (482 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 9 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* * * * [misc]progress:  [ 10 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (336 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [enter]simplify:  Simplifying (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (60 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (66 enodes)
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* * * * [misc]progress:  [ 11 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (+ (* -2.0 x) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (+ (* -2.0 x) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (* (+ -2.0 (* 0.5 x)) x)
* [exit]simplify:  Simplified to (* (+ -2.0 (* 0.5 x)) x)
* * * * [misc]progress:  [ 12 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 0.5 (* x x)) (+ 1.0 (* -2.0 x))))>
* * * * [misc]progress:  [ 13 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (pow (* 0.5 (* x x)) 1)))>
* * * * [misc]progress:  [ 14 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (exp (log (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (log (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (log (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (log (* 0.5 (* x x)))
* * * * [misc]progress:  [ 15 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (log (exp (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (exp (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp 0.5) (* x x))
* [exit]simplify:  Simplified to (pow (exp 0.5) (* x x))
* * * * [misc]progress:  [ 16 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* [enter]simplify:  Simplifying (cbrt (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* 0.5 (* x x)))
* * * * [misc]progress:  [ 17 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (cbrt (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (127 enodes)
* * [misc]simplify:  iters left: 2 (270 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* 0.5 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* 0.5 (* x x)) 3)
* * * * [misc]progress:  [ 18 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (sqrt (* 0.5 (* x x))) (sqrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* * * * [misc]progress:  [ 19 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 1 (* 0.5 (* x x)))))>
* * * * [misc]progress:  [ 20 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* 0.5 x) x)))>
* [enter]simplify:  Simplifying (* 0.5 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 0.5 x)
* [exit]simplify:  Simplified to (* 0.5 x)
* * * * [misc]progress:  [ 21 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* x x) 0.5)))>
* * * * [misc]progress:  [ 22 / 27 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 0.5 x)) (- 1.0 (* 2.0 x)))
* * * * [misc]progress:  [ 23 / 27 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 0.5 x)) (- 1.0 (* 2.0 x)))
* * * * [misc]progress:  [ 24 / 27 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 0.5 x)) (- 1.0 (* 2.0 x)))
* * * * [misc]progress:  [ 25 / 27 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (* 0.5 (* x x)))
* * * * [misc]progress:  [ 26 / 27 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (* 0.5 (* x x)))
* * * * [misc]progress:  [ 27 / 27 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (* 0.5 (* x x)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (* (* 0.5 (* x x)) (* 0.5 (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (* x x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (* x x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0 0.5) (+ (* 0 0) (* 0.5 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0.5) (+ (* 0.5 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0.5 0.5) (+ (* 0 0) (* 0 0))))) into 0.25
* [misc]backup-simplify:  Simplify 0.25 into 0.25
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0.5 0) (+ (* 0 0.5) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0.5) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.5) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.5) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.5) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.5) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.25 (pow x 4)) into (* 0.25 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* (* 0.5 (* (/ 1 x) (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (* (/ 1 x) (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (* (/ 1 x) (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* 0.5 0.5) into 0.25
* [misc]backup-simplify:  Simplify 0.25 into 0.25
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0.5)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 0.5))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.5)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.5))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.5)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.5))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.25 (pow (/ 1 (/ 1 x)) 4)) into (* 0.25 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* 0.5 0.5) into 0.25
* [misc]backup-simplify:  Simplify 0.25 into 0.25
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0.5)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 0.5))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.5)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.5))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.5)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.5))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.25 (pow (/ 1 (/ 1 (- x))) 4)) into (* 0.25 (pow x 4))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 1.0 1.0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 1.0 (- 2.0)) (* (- 2.0) 1.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.0 0) (+ (* (- 2.0) (- 2.0)) (* 0 1.0))) into 4.0
* [misc]backup-simplify:  Simplify 4.0 into 4.0
* [misc]backup-simplify:  Simplify (+ (* 4.0 (pow x 2)) (+ (* (- 4.0) x) 1.0)) into (- (+ (* 4.0 (pow x 2)) 1.0) (* 4.0 x))
* [misc]approximate:  Taking taylor expansion of (* (+ 1.0 (* -2.0 (/ 1 x))) (+ 1.0 (* -2.0 (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.0 (* -2.0 (/ 1 x))) (+ 1.0 (* -2.0 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.0 (* -2.0 (/ 1 x))) (+ 1.0 (* -2.0 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (* (- 2.0) (- 2.0)) into 4.0
* [misc]backup-simplify:  Simplify 4.0 into 4.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (+ (* (- 2.0) 1.0) (* 1.0 (- 2.0))) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.0) 0) (+ (* 1.0 1.0) (* 0 (- 2.0)))) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* (- 4.0) (/ 1 (/ 1 x))) (* 4.0 (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 4.0 (pow x 2)) 1.0) (* 4.0 x))
* [misc]approximate:  Taking taylor expansion of (* (+ 1.0 (* -2.0 (/ 1 (- x)))) (+ 1.0 (* -2.0 (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.0 (* -2.0 (/ 1 (- x)))) (+ 1.0 (* -2.0 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.0 (* -2.0 (/ 1 (- x)))) (+ 1.0 (* -2.0 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (* 2.0 2.0) into 4.0
* [misc]backup-simplify:  Simplify 4.0 into 4.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (+ (* 2.0 1.0) (* 1.0 2.0)) into 4.0
* [misc]backup-simplify:  Simplify 4.0 into 4.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.0 0) (+ (* 1.0 1.0) (* 0 2.0))) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* 4.0 (/ 1 (/ 1 (- x)))) (* 4.0 (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 4.0 (pow x 2)) 1.0) (* 4.0 x))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (* x x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 1.0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ 1.0 1.0) into 1.0
* [misc]taylor:  Taking taylor expansion of (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (* x x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 1.0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ 1.0 1.0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 1.0 (- 2.0)) (* (- 2.0) 1.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ (- 4.0) 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (/ (- 4.0) 1.0) (+ (* 1.0 (/ (- 2.0) 1.0)))) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.0 0) (+ (* (- 2.0) (- 2.0)) (* 0 1.0))) into 4.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0 0.5) (+ (* 0 0) (* 0.5 0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (- 0.5) into (- 0.5)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.5)) into (- 0.5)
* [misc]backup-simplify:  Simplify (- (/ 4.0 1.0) (+ (* 1.0 (/ (- 0.5) 1.0)) (* (- 2.0) (/ (- 2.0) 1.0)))) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0.5 (pow x 2)) (+ (* (- 2.0) x) 1.0)) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (/ (- (* (+ 1.0 (* -2.0 (/ 1 x))) (+ 1.0 (* -2.0 (/ 1 x)))) (* (* 0.5 (* (/ 1 x) (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) (- (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (/ (- (* (+ 1.0 (* -2.0 (/ 1 x))) (+ 1.0 (* -2.0 (/ 1 x)))) (* (* 0.5 (* (/ 1 x) (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) (- (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (- (* (+ 1.0 (* -2.0 (/ 1 x))) (+ 1.0 (* -2.0 (/ 1 x)))) (* (* 0.5 (* (/ 1 x) (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.0 (* -2.0 (/ 1 x))) (+ 1.0 (* -2.0 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (* (/ 1 x) (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (- (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* 0.5 0.5) into 0.25
* [misc]backup-simplify:  Simplify (- 0.25) into (- 0.25)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.25)) into (- 0.25)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (- 0.5) into (- 0.5)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.5)) into (- 0.5)
* [misc]backup-simplify:  Simplify (/ (- 0.25) (- 0.5)) into 0.5
* [misc]taylor:  Taking taylor expansion of (/ (- (* (+ 1.0 (* -2.0 (/ 1 x))) (+ 1.0 (* -2.0 (/ 1 x)))) (* (* 0.5 (* (/ 1 x) (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) (- (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (- (* (+ 1.0 (* -2.0 (/ 1 x))) (+ 1.0 (* -2.0 (/ 1 x)))) (* (* 0.5 (* (/ 1 x) (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.0 (* -2.0 (/ 1 x))) (+ 1.0 (* -2.0 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (* (/ 1 x) (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (- (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* 0.5 0.5) into 0.25
* [misc]backup-simplify:  Simplify (- 0.25) into (- 0.25)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.25)) into (- 0.25)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (- 0.5) into (- 0.5)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.5)) into (- 0.5)
* [misc]backup-simplify:  Simplify (/ (- 0.25) (- 0.5)) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0.5)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (/ 0 (- 0.5)) (+ (* 0.5 (/ (- 2.0) (- 0.5))))) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (* (- 2.0) (- 2.0)) into 4.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 0.5))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (/ 4.0 (- 0.5)) (+ (* 0.5 (/ 1.0 (- 0.5))) (* (- 2.0) (/ (- 2.0) (- 0.5))))) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* (- 2.0) (/ 1 (/ 1 x))) (* 0.5 (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (/ (- (* (+ 1.0 (* -2.0 (/ 1 (- x)))) (+ 1.0 (* -2.0 (/ 1 (- x))))) (* (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) (- (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (/ (- (* (+ 1.0 (* -2.0 (/ 1 (- x)))) (+ 1.0 (* -2.0 (/ 1 (- x))))) (* (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) (- (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (- (* (+ 1.0 (* -2.0 (/ 1 (- x)))) (+ 1.0 (* -2.0 (/ 1 (- x))))) (* (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.0 (* -2.0 (/ 1 (- x)))) (+ 1.0 (* -2.0 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (- (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* 0.5 0.5) into 0.25
* [misc]backup-simplify:  Simplify (- 0.25) into (- 0.25)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.25)) into (- 0.25)
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (- 0.5) into (- 0.5)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.5)) into (- 0.5)
* [misc]backup-simplify:  Simplify (/ (- 0.25) (- 0.5)) into 0.5
* [misc]taylor:  Taking taylor expansion of (/ (- (* (+ 1.0 (* -2.0 (/ 1 (- x)))) (+ 1.0 (* -2.0 (/ 1 (- x))))) (* (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) (- (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (- (* (+ 1.0 (* -2.0 (/ 1 (- x)))) (+ 1.0 (* -2.0 (/ 1 (- x))))) (* (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.0 (* -2.0 (/ 1 (- x)))) (+ 1.0 (* -2.0 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (- (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* 0.5 0.5) into 0.25
* [misc]backup-simplify:  Simplify (- 0.25) into (- 0.25)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.25)) into (- 0.25)
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (- 0.5) into (- 0.5)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.5)) into (- 0.5)
* [misc]backup-simplify:  Simplify (/ (- 0.25) (- 0.5)) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0.5)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (- (/ 0 (- 0.5)) (+ (* 0.5 (/ 2.0 (- 0.5))))) into 2.0
* [misc]backup-simplify:  Simplify 2.0 into 2.0
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (* 2.0 2.0) into 4.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 0.5))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (/ 4.0 (- 0.5)) (+ (* 0.5 (/ 1.0 (- 0.5))) (* 2.0 (/ 2.0 (- 0.5))))) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* 2.0 (/ 1 (/ 1 (- x)))) (* 0.5 (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (* x x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (* x x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 1.0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 1.0 (- 2.0)) (* (- 2.0) 1.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ (- 4.0) 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.0 0) (+ (* (- 2.0) (- 2.0)) (* 0 1.0))) into 4.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0 0.5) (+ (* 0 0) (* 0.5 0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify 4.0 into 4.0
* [misc]backup-simplify:  Simplify (+ (* 4.0 (pow x 2)) (+ (* (- 4.0) x) 1.0)) into (- (+ (* 4.0 (pow x 2)) 1.0) (* 4.0 x))
* [misc]approximate:  Taking taylor expansion of (- (* (+ 1.0 (* -2.0 (/ 1 x))) (+ 1.0 (* -2.0 (/ 1 x)))) (* (* 0.5 (* (/ 1 x) (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (- (* (+ 1.0 (* -2.0 (/ 1 x))) (+ 1.0 (* -2.0 (/ 1 x)))) (* (* 0.5 (* (/ 1 x) (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.0 (* -2.0 (/ 1 x))) (+ 1.0 (* -2.0 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (* (/ 1 x) (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (- (* (+ 1.0 (* -2.0 (/ 1 x))) (+ 1.0 (* -2.0 (/ 1 x)))) (* (* 0.5 (* (/ 1 x) (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.0 (* -2.0 (/ 1 x))) (+ 1.0 (* -2.0 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (* (/ 1 x) (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* 0.5 0.5) into 0.25
* [misc]backup-simplify:  Simplify (- 0.25) into (- 0.25)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.25)) into (- 0.25)
* [misc]backup-simplify:  Simplify (- 0.25) into (- 0.25)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0.5)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (* (- 2.0) (- 2.0)) into 4.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 0.5))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify 4.0 into 4.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (+ (* (- 2.0) 1.0) (* 1.0 (- 2.0))) into (- 4.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.5)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ (- 4.0) 0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (* (- 4.0) (/ 1 (/ 1 x))) (+ (* 4.0 (pow (/ 1 (/ 1 x)) 2)) (* (- 0.25) (pow (/ 1 (/ 1 x)) 4)))) into (- (* 4.0 (pow x 2)) (+ (* 0.25 (pow x 4)) (* 4.0 x)))
* [misc]approximate:  Taking taylor expansion of (- (* (+ 1.0 (* -2.0 (/ 1 (- x)))) (+ 1.0 (* -2.0 (/ 1 (- x))))) (* (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (- (* (+ 1.0 (* -2.0 (/ 1 (- x)))) (+ 1.0 (* -2.0 (/ 1 (- x))))) (* (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.0 (* -2.0 (/ 1 (- x)))) (+ 1.0 (* -2.0 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (- (* (+ 1.0 (* -2.0 (/ 1 (- x)))) (+ 1.0 (* -2.0 (/ 1 (- x))))) (* (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.0 (* -2.0 (/ 1 (- x)))) (+ 1.0 (* -2.0 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (* 0.5 0.5) into 0.25
* [misc]backup-simplify:  Simplify (- 0.25) into (- 0.25)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.25)) into (- 0.25)
* [misc]backup-simplify:  Simplify (- 0.25) into (- 0.25)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0.5)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (* 2.0 2.0) into 4.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 0.5))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify 4.0 into 4.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (+ (* 2.0 1.0) (* 1.0 2.0)) into 4.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 0.5)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 4.0 0) into 4.0
* [misc]backup-simplify:  Simplify 4.0 into 4.0
* [misc]backup-simplify:  Simplify (+ (* 4.0 (/ 1 (/ 1 (- x)))) (+ (* 4.0 (pow (/ 1 (/ 1 (- x))) 2)) (* (- 0.25) (pow (/ 1 (/ 1 (- x))) 4)))) into (- (* 4.0 (pow x 2)) (+ (* 0.25 (pow x 4)) (* 4.0 x)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (pow (* 0.5 (* x x)) (+ 1 1))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 2 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (pow (* (* 0.5 (* x x)) (* 0.5 (* x x))) 1)) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (* 0.5 (* x x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (90 enodes)
* [exit]simplify:  Simplified to (* (* 0.5 (* x x)) (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (* (* 0.5 (* x x)) (* 0.5 (* x x)))
* * * * [misc]progress:  [ 3 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (pow (* 0.5 (* x x)) 2)) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* * * * [misc]progress:  [ 4 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (pow (* 0.5 (* x x)) (+ 1 1))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 5 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (pow (* (* 0.5 (* x x)) (* 0.5 (* x x))) 1)) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* * * * [misc]progress:  [ 6 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (exp (+ (log (* 0.5 (* x x))) (log (* 0.5 (* x x)))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (+ (log (* 0.5 (* x x))) (log (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (68 enodes)
* * [misc]simplify:  iters left: 1 (95 enodes)
* [exit]simplify:  Simplified to (+ (log (* 0.5 (* x x))) (log (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (+ (log (* 0.5 (* x x))) (log (* 0.5 (* x x))))
* * * * [misc]progress:  [ 7 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (exp (log (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (log (* (* 0.5 (* x x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (146 enodes)
* * [misc]simplify:  iters left: 1 (195 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 1 3) (log x)) (+ (log 0.5) (log 0.5)))
* [exit]simplify:  Simplified to (+ (* (+ 1 3) (log x)) (+ (log 0.5) (log 0.5)))
* * * * [misc]progress:  [ 8 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (log (exp (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (exp (* (* 0.5 (* x x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (70 enodes)
* * [misc]simplify:  iters left: 2 (95 enodes)
* * [misc]simplify:  iters left: 1 (108 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 0.5) (* x x)) (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (pow (pow (exp 0.5) (* x x)) (* 0.5 (* x x)))
* * * * [misc]progress:  [ 9 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (cbrt (* (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* 0.5 (* x x))) (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* 0.5 (* x x)))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* 0.5 (* x x))) (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (* (pow (* 0.5 (* x x)) 3) (pow (* 0.5 (* x x)) 3))
* [exit]simplify:  Simplified to (* (pow (* 0.5 (* x x)) 3) (pow (* 0.5 (* x x)) 3))
* * * * [misc]progress:  [ 10 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* (cbrt (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (cbrt (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (cbrt (* (* 0.5 (* x x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (58 enodes)
* * [misc]simplify:  iters left: 2 (83 enodes)
* * [misc]simplify:  iters left: 1 (92 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (cbrt (* (* 0.5 (* x x)) (* 0.5 (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (cbrt (* (* 0.5 (* x x)) (* 0.5 (* x x)))))
* [enter]simplify:  Simplifying (cbrt (* (* 0.5 (* x x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (91 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* 0.5 (* x x)) (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (cbrt (* (* 0.5 (* x x)) (* 0.5 (* x x))))
* * * * [misc]progress:  [ 11 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (cbrt (* (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (329 enodes)
* [exit]simplify:  Simplified to (pow (* (* 0.5 (* x x)) (* 0.5 (* x x))) 3)
* [exit]simplify:  Simplified to (pow (* (* 0.5 (* x x)) (* 0.5 (* x x))) 3)
* * * * [misc]progress:  [ 12 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (sqrt (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (sqrt (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (sqrt (* (* 0.5 (* x x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (58 enodes)
* * [misc]simplify:  iters left: 2 (83 enodes)
* * [misc]simplify:  iters left: 1 (92 enodes)
* [exit]simplify:  Simplified to (fabs (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (fabs (* 0.5 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (* 0.5 (* x x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (58 enodes)
* * [misc]simplify:  iters left: 2 (83 enodes)
* * [misc]simplify:  iters left: 1 (92 enodes)
* [exit]simplify:  Simplified to (fabs (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (fabs (* 0.5 (* x x)))
* * * * [misc]progress:  [ 13 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* 1 (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* * * * [misc]progress:  [ 14 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* (* 0.5 (* x x)) 0.5) (* x x))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (* 0.5 (* x x)) 0.5)
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* * [misc]simplify:  iters left: 2 (22 enodes)
* [exit]simplify:  Simplified to (* (* 0.5 x) (* 0.5 x))
* [exit]simplify:  Simplified to (* (* 0.5 x) (* 0.5 x))
* * * * [misc]progress:  [ 15 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* 0.5 (* (* x x) (* 0.5 (* x x))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (* x x) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x 0.5))
* [exit]simplify:  Simplified to (* (pow x 3) (* x 0.5))
* * * * [misc]progress:  [ 16 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* * * * [misc]progress:  [ 17 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (pow (+ 1.0 (* -2.0 x)) (+ 1 1)) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 18 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (pow (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) 1) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (141 enodes)
* * [misc]simplify:  iters left: 1 (208 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 19 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (pow (+ 1.0 (* -2.0 x)) 2) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* * * * [misc]progress:  [ 20 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (pow (+ 1.0 (* -2.0 x)) (+ 1 1)) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 21 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (pow (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) 1) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* * * * [misc]progress:  [ 22 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (exp (+ (log (+ 1.0 (* -2.0 x))) (log (+ 1.0 (* -2.0 x))))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (+ (log (+ 1.0 (* -2.0 x))) (log (+ 1.0 (* -2.0 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x -2.0) 1.0)) (log (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (+ (log (+ (* x -2.0) 1.0)) (log (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 23 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (exp (log (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (log (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (91 enodes)
* * [misc]simplify:  iters left: 2 (136 enodes)
* * [misc]simplify:  iters left: 1 (194 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x -2.0) 1.0)) (log (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (+ (log (+ (* x -2.0) 1.0)) (log (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 24 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (log (exp (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (exp (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (134 enodes)
* * [misc]simplify:  iters left: 2 (275 enodes)
* * [misc]simplify:  iters left: 1 (463 enodes)
* [exit]simplify:  Simplified to (exp (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (exp (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 25 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (cbrt (* (* (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (+ 1.0 (* -2.0 x))) (* (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (+ 1.0 (* -2.0 x))))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (* (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (+ 1.0 (* -2.0 x))) (* (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (+ 1.0 (* -2.0 x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (pow (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) 3)
* * * * [misc]progress:  [ 26 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (* (cbrt (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))) (cbrt (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))))) (cbrt (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))) (cbrt (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (139 enodes)
* * [misc]simplify:  iters left: 1 (203 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (cbrt (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (cbrt (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (cbrt (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (138 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (cbrt (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 27 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (cbrt (* (* (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))) (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (* (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))) (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* [exit]simplify:  Simplified to (* (pow (+ (* x -2.0) 1.0) 3) (pow (+ (* x -2.0) 1.0) 3))
* [exit]simplify:  Simplified to (* (pow (+ (* x -2.0) 1.0) 3) (pow (+ (* x -2.0) 1.0) 3))
* * * * [misc]progress:  [ 28 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (sqrt (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))) (sqrt (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (sqrt (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (139 enodes)
* * [misc]simplify:  iters left: 1 (203 enodes)
* [exit]simplify:  Simplified to (fabs (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (fabs (+ (* x -2.0) 1.0))
* [enter]simplify:  Simplifying (sqrt (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (139 enodes)
* * [misc]simplify:  iters left: 1 (203 enodes)
* [exit]simplify:  Simplified to (fabs (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (fabs (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 29 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (/ (* (+ (pow 1.0 3) (pow (* -2.0 x) 3)) (+ (pow 1.0 3) (pow (* -2.0 x) 3))) (* (+ (* 1.0 1.0) (- (* (* -2.0 x) (* -2.0 x)) (* 1.0 (* -2.0 x)))) (+ (* 1.0 1.0) (- (* (* -2.0 x) (* -2.0 x)) (* 1.0 (* -2.0 x)))))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (+ (pow 1.0 3) (pow (* -2.0 x) 3)) (+ (pow 1.0 3) (pow (* -2.0 x) 3)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (83 enodes)
* * [misc]simplify:  iters left: 3 (323 enodes)
* [exit]simplify:  Simplified to (* (+ (pow 1.0 3) (pow (* -2.0 x) 3)) (+ (pow 1.0 3) (pow (* -2.0 x) 3)))
* [exit]simplify:  Simplified to (* (+ (pow 1.0 3) (pow (* -2.0 x) 3)) (+ (pow 1.0 3) (pow (* -2.0 x) 3)))
* [enter]simplify:  Simplifying (* (+ (* 1.0 1.0) (- (* (* -2.0 x) (* -2.0 x)) (* 1.0 (* -2.0 x)))) (+ (* 1.0 1.0) (- (* (* -2.0 x) (* -2.0 x)) (* 1.0 (* -2.0 x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (382 enodes)
* [exit]simplify:  Simplified to (* (+ (* 1.0 1.0) (* (- (* -2.0 x) 1.0) (* -2.0 x))) (+ (* 1.0 1.0) (* (- (* -2.0 x) 1.0) (* -2.0 x))))
* [exit]simplify:  Simplified to (* (+ (* 1.0 1.0) (* (- (* -2.0 x) 1.0) (* -2.0 x))) (+ (* 1.0 1.0) (* (- (* -2.0 x) 1.0) (* -2.0 x))))
* * * * [misc]progress:  [ 30 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (/ (* (+ (pow 1.0 3) (pow (* -2.0 x) 3)) (- (* 1.0 1.0) (* (* -2.0 x) (* -2.0 x)))) (* (+ (* 1.0 1.0) (- (* (* -2.0 x) (* -2.0 x)) (* 1.0 (* -2.0 x)))) (- 1.0 (* -2.0 x)))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (+ (pow 1.0 3) (pow (* -2.0 x) 3)) (- (* 1.0 1.0) (* (* -2.0 x) (* -2.0 x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (289 enodes)
* [exit]simplify:  Simplified to (* (* (+ 1.0 (* -2.0 x)) (- 1.0 (* -2.0 x))) (+ (pow 1.0 3) (pow (* -2.0 x) 3)))
* [exit]simplify:  Simplified to (* (* (+ 1.0 (* -2.0 x)) (- 1.0 (* -2.0 x))) (+ (pow 1.0 3) (pow (* -2.0 x) 3)))
* [enter]simplify:  Simplifying (* (+ (* 1.0 1.0) (- (* (* -2.0 x) (* -2.0 x)) (* 1.0 (* -2.0 x)))) (- 1.0 (* -2.0 x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (233 enodes)
* [exit]simplify:  Simplified to (* (+ (* 1.0 1.0) (* (- (* -2.0 x) 1.0) (* -2.0 x))) (- 1.0 (* -2.0 x)))
* [exit]simplify:  Simplified to (* (+ (* 1.0 1.0) (* (- (* -2.0 x) 1.0) (* -2.0 x))) (- 1.0 (* -2.0 x)))
* * * * [misc]progress:  [ 31 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (/ (* (- (* 1.0 1.0) (* (* -2.0 x) (* -2.0 x))) (+ (pow 1.0 3) (pow (* -2.0 x) 3))) (* (- 1.0 (* -2.0 x)) (+ (* 1.0 1.0) (- (* (* -2.0 x) (* -2.0 x)) (* 1.0 (* -2.0 x)))))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (- (* 1.0 1.0) (* (* -2.0 x) (* -2.0 x))) (+ (pow 1.0 3) (pow (* -2.0 x) 3)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* [exit]simplify:  Simplified to (* (+ (pow 1.0 3) (pow (* -2.0 x) 3)) (* (+ (* -2.0 x) 1.0) (- 1.0 (* -2.0 x))))
* [exit]simplify:  Simplified to (* (+ (pow 1.0 3) (pow (* -2.0 x) 3)) (* (+ (* -2.0 x) 1.0) (- 1.0 (* -2.0 x))))
* [enter]simplify:  Simplifying (* (- 1.0 (* -2.0 x)) (+ (* 1.0 1.0) (- (* (* -2.0 x) (* -2.0 x)) (* 1.0 (* -2.0 x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (390 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- 1.0 (* x -2.0)) (- 1.0 (* x -2.0))) 1.0) (* (* (* x -2.0) (* x -2.0)) (- 1.0 (* x -2.0))))
* [exit]simplify:  Simplified to (+ (* (* (- 1.0 (* x -2.0)) (- 1.0 (* x -2.0))) 1.0) (* (* (* x -2.0) (* x -2.0)) (- 1.0 (* x -2.0))))
* * * * [misc]progress:  [ 32 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (/ (* (- (* 1.0 1.0) (* (* -2.0 x) (* -2.0 x))) (- (* 1.0 1.0) (* (* -2.0 x) (* -2.0 x)))) (* (- 1.0 (* -2.0 x)) (- 1.0 (* -2.0 x)))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (- (* 1.0 1.0) (* (* -2.0 x) (* -2.0 x))) (- (* 1.0 1.0) (* (* -2.0 x) (* -2.0 x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (179 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* -2.0 x) 1.0) (- 1.0 (* -2.0 x))) (* (+ (* -2.0 x) 1.0) (- 1.0 (* -2.0 x))))
* [exit]simplify:  Simplified to (* (* (+ (* -2.0 x) 1.0) (- 1.0 (* -2.0 x))) (* (+ (* -2.0 x) 1.0) (- 1.0 (* -2.0 x))))
* [enter]simplify:  Simplifying (* (- 1.0 (* -2.0 x)) (- 1.0 (* -2.0 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (162 enodes)
* * [misc]simplify:  iters left: 1 (362 enodes)
* [exit]simplify:  Simplified to (* (- 1.0 (* x -2.0)) (- 1.0 (* x -2.0)))
* [exit]simplify:  Simplified to (* (- 1.0 (* x -2.0)) (- 1.0 (* x -2.0)))
* * * * [misc]progress:  [ 33 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* 1 (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* * * * [misc]progress:  [ 34 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (+ (* (+ 1.0 (* -2.0 x)) 1.0) (* (+ 1.0 (* -2.0 x)) (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (+ 1.0 (* -2.0 x)) 1.0)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* 1.0 (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (* 1.0 (+ (* x -2.0) 1.0))
* [enter]simplify:  Simplifying (* (+ 1.0 (* -2.0 x)) (* -2.0 x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (75 enodes)
* * [misc]simplify:  iters left: 1 (77 enodes)
* [exit]simplify:  Simplified to (* (* x -2.0) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (* (* x -2.0) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 35 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (+ (* 1.0 (+ 1.0 (* -2.0 x))) (* (* -2.0 x) (+ 1.0 (* -2.0 x)))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* 1.0 (+ 1.0 (* -2.0 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* [exit]simplify:  Simplified to (* 1.0 (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (* 1.0 (+ (* x -2.0) 1.0))
* [enter]simplify:  Simplifying (* (* -2.0 x) (+ 1.0 (* -2.0 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (65 enodes)
* * [misc]simplify:  iters left: 2 (99 enodes)
* [exit]simplify:  Simplified to (* (+ 1.0 (* -2.0 x)) (* -2.0 x))
* [exit]simplify:  Simplified to (* (+ 1.0 (* -2.0 x)) (* -2.0 x))
* * * * [misc]progress:  [ 36 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (* (+ 1.0 (* -2.0 x)) (* (cbrt (+ 1.0 (* -2.0 x))) (cbrt (+ 1.0 (* -2.0 x))))) (cbrt (+ 1.0 (* -2.0 x)))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (+ 1.0 (* -2.0 x)) (* (cbrt (+ 1.0 (* -2.0 x))) (cbrt (+ 1.0 (* -2.0 x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (55 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0)) (cbrt (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0)) (cbrt (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 37 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (* (+ 1.0 (* -2.0 x)) (sqrt (+ 1.0 (* -2.0 x)))) (sqrt (+ 1.0 (* -2.0 x)))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (+ 1.0 (* -2.0 x)) (sqrt (+ 1.0 (* -2.0 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (* (sqrt (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 38 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (* (+ 1.0 (* -2.0 x)) 1) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (+ 1.0 (* -2.0 x)) 1)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (31 enodes)
* [exit]simplify:  Simplified to (+ (* x -2.0) 1.0)
* [exit]simplify:  Simplified to (+ (* x -2.0) 1.0)
* * * * [misc]progress:  [ 39 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (* (cbrt (+ 1.0 (* -2.0 x))) (cbrt (+ 1.0 (* -2.0 x)))) (* (cbrt (+ 1.0 (* -2.0 x))) (+ 1.0 (* -2.0 x)))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.0 (* -2.0 x))) (+ 1.0 (* -2.0 x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 40 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (sqrt (+ 1.0 (* -2.0 x))) (* (sqrt (+ 1.0 (* -2.0 x))) (+ 1.0 (* -2.0 x)))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (sqrt (+ 1.0 (* -2.0 x))) (+ 1.0 (* -2.0 x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (* (sqrt (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 41 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* 1 (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (141 enodes)
* * [misc]simplify:  iters left: 1 (208 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 42 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (/ (* (+ 1.0 (* -2.0 x)) (+ (pow 1.0 3) (pow (* -2.0 x) 3))) (+ (* 1.0 1.0) (- (* (* -2.0 x) (* -2.0 x)) (* 1.0 (* -2.0 x))))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (+ 1.0 (* -2.0 x)) (+ (pow 1.0 3) (pow (* -2.0 x) 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (349 enodes)
* [exit]simplify:  Simplified to (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 43 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (/ (* (+ 1.0 (* -2.0 x)) (- (* 1.0 1.0) (* (* -2.0 x) (* -2.0 x)))) (- 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (+ 1.0 (* -2.0 x)) (- (* 1.0 1.0) (* (* -2.0 x) (* -2.0 x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (184 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (- 1.0 (* x -2.0)))
* [exit]simplify:  Simplified to (* (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (- 1.0 (* x -2.0)))
* * * * [misc]progress:  [ 44 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (/ (* (+ (pow 1.0 3) (pow (* -2.0 x) 3)) (+ 1.0 (* -2.0 x))) (+ (* 1.0 1.0) (- (* (* -2.0 x) (* -2.0 x)) (* 1.0 (* -2.0 x))))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (+ (pow 1.0 3) (pow (* -2.0 x) 3)) (+ 1.0 (* -2.0 x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (288 enodes)
* [exit]simplify:  Simplified to (* (+ (pow 1.0 3) (pow (* -2.0 x) 3)) (+ 1.0 (* -2.0 x)))
* [exit]simplify:  Simplified to (* (+ (pow 1.0 3) (pow (* -2.0 x) 3)) (+ 1.0 (* -2.0 x)))
* * * * [misc]progress:  [ 45 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (/ (* (- (* 1.0 1.0) (* (* -2.0 x) (* -2.0 x))) (+ 1.0 (* -2.0 x))) (- 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (- (* 1.0 1.0) (* (* -2.0 x) (* -2.0 x))) (+ 1.0 (* -2.0 x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (307 enodes)
* [exit]simplify:  Simplified to (* (- 1.0 (* -2.0 x)) (* (+ (* -2.0 x) 1.0) (+ (* -2.0 x) 1.0)))
* [exit]simplify:  Simplified to (* (- 1.0 (* -2.0 x)) (* (+ (* -2.0 x) 1.0) (+ (* -2.0 x) 1.0)))
* * * * [misc]progress:  [ 46 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* * * * [misc]progress:  [ 47 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (pow (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 1))>
* * * * [misc]progress:  [ 48 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (exp (- (log (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (log (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (- (log (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (log (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* * [misc]simplify:  iters left: 3 (485 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))) 0)
* [exit]simplify:  Simplified to (+ (log (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))) 0)
* * * * [misc]progress:  [ 49 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (log (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (log (/ (+ (+ (* x -2.0) 1.0) (* x (* x 0.5))) 1))
* [exit]simplify:  Simplified to (log (/ (+ (+ (* x -2.0) 1.0) (* x (* x 0.5))) 1))
* * * * [misc]progress:  [ 50 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (exp (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* [exit]simplify:  Simplified to (exp (/ (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) 1))
* [exit]simplify:  Simplified to (exp (/ (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) 1))
* * * * [misc]progress:  [ 51 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (/ (* (* (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (* (* (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (/ (* (* (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (* (* (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (226 enodes)
* [exit]simplify:  Simplified to (pow (/ (+ (+ (* x -2.0) 1.0) (* x (* x 0.5))) 1) 3)
* [exit]simplify:  Simplified to (pow (/ (+ (+ (* x -2.0) 1.0) (* x (* x 0.5))) 1) 3)
* * * * [misc]progress:  [ 52 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* [exit]simplify:  Simplified to (* (cbrt (/ (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) 1)) (cbrt (/ (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) 1)))
* [exit]simplify:  Simplified to (* (cbrt (/ (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) 1)) (cbrt (/ (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) 1)))
* [enter]simplify:  Simplifying (cbrt (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (cbrt (/ (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) 1))
* [exit]simplify:  Simplified to (cbrt (/ (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) 1))
* * * * [misc]progress:  [ 53 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (193 enodes)
* [exit]simplify:  Simplified to (pow (/ (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) 1) 3)
* [exit]simplify:  Simplified to (pow (/ (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) 1) 3)
* * * * [misc]progress:  [ 54 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (sqrt (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (sqrt (/ (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) 1))
* [exit]simplify:  Simplified to (sqrt (/ (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) 1))
* [enter]simplify:  Simplifying (sqrt (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (sqrt (/ (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) 1))
* [exit]simplify:  Simplified to (sqrt (/ (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) 1))
* * * * [misc]progress:  [ 55 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (- (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (- (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (110 enodes)
* * [misc]simplify:  iters left: 3 (401 enodes)
* [exit]simplify:  Simplified to (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (* (* x 0.5) (- x)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (* (* x 0.5) (- x)) (+ (* x -2.0) 1.0)))
* [enter]simplify:  Simplifying (- (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (121 enodes)
* * [misc]simplify:  iters left: 1 (131 enodes)
* [exit]simplify:  Simplified to (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 56 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (- (/ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (/ (* (* 0.5 (* x x)) (* 0.5 (* x x))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (/ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (77 enodes)
* * [misc]simplify:  iters left: 3 (167 enodes)
* * [misc]simplify:  iters left: 2 (250 enodes)
* * [misc]simplify:  iters left: 1 (399 enodes)
* [exit]simplify:  Simplified to (/ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (/ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [enter]simplify:  Simplifying (/ (* (* 0.5 (* x x)) (* 0.5 (* x x))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (196 enodes)
* * [misc]simplify:  iters left: 2 (406 enodes)
* [exit]simplify:  Simplified to (/ (* (* 0.5 (* x x)) (* 0.5 (* x x))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (/ (* (* 0.5 (* x x)) (* 0.5 (* x x))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * * * [misc]progress:  [ 57 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (/ (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (/ (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (492 enodes)
* [exit]simplify:  Simplified to (* (/ (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (/ (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))))
* [exit]simplify:  Simplified to (* (/ (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (/ (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))))
* [enter]simplify:  Simplifying (/ (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (473 enodes)
* [exit]simplify:  Simplified to (/ (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (/ (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 58 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (/ (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (/ (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* * [misc]simplify:  iters left: 3 (476 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (/ (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (sqrt (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (/ (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (sqrt (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))))
* [enter]simplify:  Simplifying (/ (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (473 enodes)
* [exit]simplify:  Simplified to (/ (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (/ (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 59 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) 1) (/ (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (/ (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) 1)
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (358 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))))
* [enter]simplify:  Simplifying (/ (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (471 enodes)
* [exit]simplify:  Simplified to (/ (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (/ (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* * * * [misc]progress:  [ 60 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (/ (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (/ (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (475 enodes)
* [exit]simplify:  Simplified to (/ (sqrt (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x x) 0.5))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))))
* [exit]simplify:  Simplified to (/ (sqrt (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x x) 0.5))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))))
* [enter]simplify:  Simplifying (/ (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (473 enodes)
* [exit]simplify:  Simplified to (/ (sqrt (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (/ (sqrt (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 61 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (/ (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (/ (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (473 enodes)
* [exit]simplify:  Simplified to (/ (sqrt (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (/ (sqrt (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [enter]simplify:  Simplifying (/ (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (473 enodes)
* [exit]simplify:  Simplified to (/ (sqrt (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (/ (sqrt (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 62 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) 1) (/ (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (/ (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) 1)
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (109 enodes)
* * [misc]simplify:  iters left: 3 (346 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (sqrt (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [enter]simplify:  Simplifying (/ (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (471 enodes)
* [exit]simplify:  Simplified to (/ (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (/ (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* * * * [misc]progress:  [ 63 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ 1 (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (/ 1 (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (68 enodes)
* * [misc]simplify:  iters left: 2 (72 enodes)
* * [misc]simplify:  iters left: 1 (74 enodes)
* [exit]simplify:  Simplified to (/ (/ 1 (cbrt (- (+ 1.0 (* -2.0 x)) (* (* x x) 0.5)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* (* x x) 0.5))))
* [exit]simplify:  Simplified to (/ (/ 1 (cbrt (- (+ 1.0 (* -2.0 x)) (* (* x x) 0.5)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* (* x x) 0.5))))
* [enter]simplify:  Simplifying (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (/ (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (/ (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 64 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ 1 (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (/ 1 (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (65 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (71 enodes)
* [exit]simplify:  Simplified to (/ 1 (sqrt (- (+ 1.0 (* -2.0 x)) (* (* x x) 0.5))))
* [exit]simplify:  Simplified to (/ 1 (sqrt (- (+ 1.0 (* -2.0 x)) (* (* x x) 0.5))))
* [enter]simplify:  Simplifying (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (/ (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (sqrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (/ (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (sqrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 65 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ 1 1) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (/ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* [exit]simplify:  Simplified to (/ (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) 1)
* [exit]simplify:  Simplified to (/ (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) 1)
* * * * [misc]progress:  [ 66 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (/ (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (/ (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (87 enodes)
* * [misc]simplify:  iters left: 1 (89 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))))
* [exit]simplify:  Simplified to (/ (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))))
* [enter]simplify:  Simplifying (/ (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (85 enodes)
* * [misc]simplify:  iters left: 2 (140 enodes)
* * [misc]simplify:  iters left: 1 (174 enodes)
* [exit]simplify:  Simplified to (/ (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (/ (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 67 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (/ (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (/ (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (80 enodes)
* * [misc]simplify:  iters left: 2 (84 enodes)
* * [misc]simplify:  iters left: 1 (86 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (sqrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (/ (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (sqrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [enter]simplify:  Simplifying (/ (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (85 enodes)
* * [misc]simplify:  iters left: 2 (140 enodes)
* * [misc]simplify:  iters left: 1 (174 enodes)
* [exit]simplify:  Simplified to (/ (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (sqrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (/ (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (sqrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 68 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1) (/ (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (/ (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1)
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* [enter]simplify:  Simplifying (/ (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (148 enodes)
* * [misc]simplify:  iters left: 1 (259 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* * * * [misc]progress:  [ 69 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 70 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (* (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (/ 1 (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (/ 1 (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (64 enodes)
* * [misc]simplify:  iters left: 2 (68 enodes)
* * [misc]simplify:  iters left: 1 (70 enodes)
* [exit]simplify:  Simplified to (/ 1 (- (+ 1.0 (* -2.0 x)) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (/ 1 (- (+ 1.0 (* -2.0 x)) (* (* x x) 0.5)))
* * * * [misc]progress:  [ 71 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ 1 (/ (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (/ (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* [exit]simplify:  Simplified to (/ (/ (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))
* [exit]simplify:  Simplified to (/ (/ (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))
* * * * [misc]progress:  [ 72 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* [exit]simplify:  Simplified to (/ (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))))
* [exit]simplify:  Simplified to (/ (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))))
* * * * [misc]progress:  [ 73 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (/ (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (sqrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (/ (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (sqrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 74 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) 1) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) 1)
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (406 enodes)
* [exit]simplify:  Simplified to (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)))
* [exit]simplify:  Simplified to (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)))
* * * * [misc]progress:  [ 75 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (/ (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (/ (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (495 enodes)
* [exit]simplify:  Simplified to (/ (- (+ (* x -2.0) 1.0) (* x (* x 0.5))) (cbrt (* (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* x (* x 0.5))))))
* [exit]simplify:  Simplified to (/ (- (+ (* x -2.0) 1.0) (* x (* x 0.5))) (cbrt (* (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* x (* x 0.5))))))
* * * * [misc]progress:  [ 76 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (/ (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (/ (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (495 enodes)
* [exit]simplify:  Simplified to (/ (- (+ (* x -2.0) 1.0) (* x (* x 0.5))) (sqrt (* (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* x (* x 0.5))))))
* [exit]simplify:  Simplified to (/ (- (+ (* x -2.0) 1.0) (* x (* x 0.5))) (sqrt (* (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* x (* x 0.5))))))
* * * * [misc]progress:  [ 77 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ 1 (/ (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (/ (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* [exit]simplify:  Simplified to (/ (/ (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))
* [exit]simplify:  Simplified to (/ (/ (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))
* * * * [misc]progress:  [ 78 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (/ (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (/ (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (148 enodes)
* * [misc]simplify:  iters left: 1 (259 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* * * * [misc]progress:  [ 79 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (+ (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (186 enodes)
* [exit]simplify:  Simplified to (/ (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (- (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x 0.5) x) 3)))
* [exit]simplify:  Simplified to (/ (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (- (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x 0.5) x) 3)))
* * * * [misc]progress:  [ 80 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* * * * [misc]progress:  [ 81 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (pow (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) 3) (pow (* (* 0.5 (* x x)) (* 0.5 (* x x))) 3)) (* (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (* (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))) (+ (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (* (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (* (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (* (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))) (+ (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (* (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (318 enodes)
* [exit]simplify:  Simplified to (+ (* (pow (+ (* x -2.0) 1.0) (+ 3 1)) (- (+ (* x -2.0) 1.0) (* x (* x 0.5)))) (* (+ (* (* x (* x 0.5)) (* x (* x 0.5))) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (- (+ (* x -2.0) 1.0) (* x (* x 0.5))) (* (* x (* x 0.5)) (* x (* x 0.5))))))
* [exit]simplify:  Simplified to (+ (* (pow (+ (* x -2.0) 1.0) (+ 3 1)) (- (+ (* x -2.0) 1.0) (* x (* x 0.5)))) (* (+ (* (* x (* x 0.5)) (* x (* x 0.5))) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (- (+ (* x -2.0) 1.0) (* x (* x 0.5))) (* (* x (* x 0.5)) (* x (* x 0.5))))))
* * * * [misc]progress:  [ 82 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))) (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (* (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (174 enodes)
* [exit]simplify:  Simplified to (* (- (+ (* x -2.0) 1.0) (* x (* x 0.5))) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* x (* x 0.5)) (* x (* x 0.5)))))
* [exit]simplify:  Simplified to (* (- (+ (* x -2.0) 1.0) (* x (* x 0.5))) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* x (* x 0.5)) (* x (* x 0.5)))))
* * * * [misc]progress:  [ 83 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (log (/ (exp (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))) (exp (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (/ (exp (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))) (exp (* (* 0.5 (* x x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (99 enodes)
* * [misc]simplify:  iters left: 3 (280 enodes)
* [exit]simplify:  Simplified to (exp (* (+ (* (* 0.5 x) x) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* (* 0.5 x) x))))
* [exit]simplify:  Simplified to (exp (* (+ (* (* 0.5 x) x) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* (* 0.5 x) x))))
* * * * [misc]progress:  [ 84 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (pow (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) 1) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* * * * [misc]progress:  [ 85 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (exp (log (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (log (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (106 enodes)
* * [misc]simplify:  iters left: 3 (342 enodes)
* [exit]simplify:  Simplified to (log (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (log (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 86 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (log (exp (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (exp (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* * [misc]simplify:  iters left: 3 (426 enodes)
* [exit]simplify:  Simplified to (exp (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5))))
* [exit]simplify:  Simplified to (exp (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5))))
* * * * [misc]progress:  [ 87 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (341 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))))
* [enter]simplify:  Simplifying (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (337 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 88 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (cbrt (* (* (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (* (* (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* [exit]simplify:  Simplified to (pow (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5))) 3)
* [exit]simplify:  Simplified to (pow (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5))) 3)
* * * * [misc]progress:  [ 89 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (337 enodes)
* [exit]simplify:  Simplified to (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [enter]simplify:  Simplifying (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (337 enodes)
* [exit]simplify:  Simplified to (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 90 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (/ (- (pow (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) 3) (pow (* (* 0.5 (* x x)) (* 0.5 (* x x))) 3)) (+ (* (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))) (+ (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (* (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (- (pow (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) 3) (pow (* (* 0.5 (* x x)) (* 0.5 (* x x))) 3))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* [exit]simplify:  Simplified to (* (+ (pow (* 0.5 (* x x)) 3) (pow (+ (* x -2.0) 1.0) 3)) (- (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))
* [exit]simplify:  Simplified to (* (+ (pow (* 0.5 (* x x)) 3) (pow (+ (* x -2.0) 1.0) 3)) (- (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))
* [enter]simplify:  Simplifying (+ (* (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))) (+ (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (* (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (223 enodes)
* [exit]simplify:  Simplified to (+ (+ (pow (+ (* x -2.0) 1.0) (+ 3 1)) (pow (* (* 0.5 x) x) (+ 3 1))) (* (* (* (* 0.5 x) x) (+ (* x -2.0) 1.0)) (* (* (* 0.5 x) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (+ (+ (pow (+ (* x -2.0) 1.0) (+ 3 1)) (pow (* (* 0.5 x) x) (+ 3 1))) (* (* (* (* 0.5 x) x) (+ (* x -2.0) 1.0)) (* (* (* 0.5 x) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 91 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (- (* (* 0.5 (* x x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (162 enodes)
* * [misc]simplify:  iters left: 2 (254 enodes)
* * [misc]simplify:  iters left: 1 (291 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (- (* 0.5 0.5)))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (- (* 0.5 0.5)))
* * * * [misc]progress:  [ 92 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* 1 (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* * * * [misc]progress:  [ 93 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (/ (- (* (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))) (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (- (* (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))) (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (175 enodes)
* [exit]simplify:  Simplified to (- (pow (+ (* x -2.0) 1.0) (+ 3 1)) (pow (* (* 0.5 x) x) (+ 3 1)))
* [exit]simplify:  Simplified to (- (pow (+ (* x -2.0) 1.0) (+ 3 1)) (pow (* (* 0.5 x) x) (+ 3 1)))
* [enter]simplify:  Simplifying (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (186 enodes)
* * [misc]simplify:  iters left: 2 (363 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 94 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* [enter]simplify:  Simplifying (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (60 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (66 enodes)
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* * * * [misc]progress:  [ 95 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ 1.0 (* -2.0 x)) 1.0) (- (* (+ 1.0 (* -2.0 x)) (* -2.0 x)) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (- (* (+ 1.0 (* -2.0 x)) (* -2.0 x)) (* (* 0.5 (* x x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (207 enodes)
* * [misc]simplify:  iters left: 2 (399 enodes)
* [exit]simplify:  Simplified to (- (* (* x -2.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (- (* (* x -2.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (* (* x x) 0.5)))
* * * * [misc]progress:  [ 96 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* 1.0 (+ 1.0 (* -2.0 x))) (- (* (* -2.0 x) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (- (* (* -2.0 x) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (217 enodes)
* * [misc]simplify:  iters left: 2 (409 enodes)
* [exit]simplify:  Simplified to (- (* (+ 1.0 (* -2.0 x)) (* -2.0 x)) (* (* (* x x) 0.5) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (- (* (+ 1.0 (* -2.0 x)) (* -2.0 x)) (* (* (* x x) 0.5) (* (* x x) 0.5)))
* * * * [misc]progress:  [ 97 / 109 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (- (* (* 0.5 (* x x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (162 enodes)
* * [misc]simplify:  iters left: 2 (254 enodes)
* * [misc]simplify:  iters left: 1 (291 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (- (* 0.5 0.5)))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (- (* 0.5 0.5)))
* * * * [misc]progress:  [ 98 / 109 ] simplifiying candidate #<alt-event (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* 0.25 (pow x 4))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* 0.25 (pow x 4))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (235 enodes)
* * [misc]simplify:  iters left: 2 (476 enodes)
* [exit]simplify:  Simplified to (/ (- (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (pow x 4) 0.25)) (- (+ (* x -2.0) 1.0) (* (* 0.5 x) x)))
* * * * [misc]progress:  [ 99 / 109 ] simplifiying candidate #<alt-event (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* 0.25 (pow x 4))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* 0.25 (pow x 4))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (235 enodes)
* * [misc]simplify:  iters left: 2 (476 enodes)
* [exit]simplify:  Simplified to (/ (- (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (pow x 4) 0.25)) (- (+ (* x -2.0) 1.0) (* (* 0.5 x) x)))
* * * * [misc]progress:  [ 100 / 109 ] simplifiying candidate #<alt-event (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* 0.25 (pow x 4))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* 0.25 (pow x 4))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (235 enodes)
* * [misc]simplify:  iters left: 2 (476 enodes)
* [exit]simplify:  Simplified to (/ (- (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (pow x 4) 0.25)) (- (+ (* x -2.0) 1.0) (* (* 0.5 x) x)))
* * * * [misc]progress:  [ 101 / 109 ] simplifiying candidate #<alt-event (Î» (x) (/ (- (- (+ (* 4.0 (pow x 2)) 1.0) (* 4.0 x)) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (/ (- (- (+ (* 4.0 (pow x 2)) 1.0) (* 4.0 x)) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (350 enodes)
* [exit]simplify:  Simplified to (/ (- (+ (* (* x x) 4.0) (- 1.0 (* 4.0 x))) (* (* x (* 0.5 x)) (* x (* 0.5 x)))) (- (+ (* -2.0 x) 1.0) (* x (* 0.5 x))))
* * * * [misc]progress:  [ 102 / 109 ] simplifiying candidate #<alt-event (Î» (x) (/ (- (- (+ (* 4.0 (pow x 2)) 1.0) (* 4.0 x)) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (/ (- (- (+ (* 4.0 (pow x 2)) 1.0) (* 4.0 x)) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (350 enodes)
* [exit]simplify:  Simplified to (/ (- (+ (* (* x x) 4.0) (- 1.0 (* 4.0 x))) (* (* x (* 0.5 x)) (* x (* 0.5 x)))) (- (+ (* -2.0 x) 1.0) (* x (* 0.5 x))))
* * * * [misc]progress:  [ 103 / 109 ] simplifiying candidate #<alt-event (Î» (x) (/ (- (- (+ (* 4.0 (pow x 2)) 1.0) (* 4.0 x)) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (/ (- (- (+ (* 4.0 (pow x 2)) 1.0) (* 4.0 x)) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (350 enodes)
* [exit]simplify:  Simplified to (/ (- (+ (* (* x x) 4.0) (- 1.0 (* 4.0 x))) (* (* x (* 0.5 x)) (* x (* 0.5 x)))) (- (+ (* -2.0 x) 1.0) (* x (* 0.5 x))))
* * * * [misc]progress:  [ 104 / 109 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 0.5 x)) (- 1.0 (* 2.0 x)))
* * * * [misc]progress:  [ 105 / 109 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 0.5 x)) (- 1.0 (* 2.0 x)))
* * * * [misc]progress:  [ 106 / 109 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 0.5 x)) (- 1.0 (* 2.0 x)))
* * * * [misc]progress:  [ 107 / 109 ] simplifiying candidate #<alt-event (Î» (x) (/ (- (+ (* 4.0 (pow x 2)) 1.0) (* 4.0 x)) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (/ (- (+ (* 4.0 (pow x 2)) 1.0) (* 4.0 x)) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (129 enodes)
* * [misc]simplify:  iters left: 2 (184 enodes)
* * [misc]simplify:  iters left: 1 (260 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (* x x) 4.0) (- 1.0 (* 4.0 x))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * * * [misc]progress:  [ 108 / 109 ] simplifiying candidate #<alt-event (Î» (x) (/ (- (* 4.0 (pow x 2)) (+ (* 0.25 (pow x 4)) (* 4.0 x))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (/ (- (* 4.0 (pow x 2)) (+ (* 0.25 (pow x 4)) (* 4.0 x))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (147 enodes)
* * [misc]simplify:  iters left: 2 (240 enodes)
* * [misc]simplify:  iters left: 1 (438 enodes)
* [exit]simplify:  Simplified to (/ (- (* x (- (* 4.0 x) 4.0)) (* 0.25 (pow x 4))) (- (+ 1.0 (* -2.0 x)) (* x (* 0.5 x))))
* * * * [misc]progress:  [ 109 / 109 ] simplifiying candidate #<alt-event (Î» (x) (/ (- (* 4.0 (pow x 2)) (+ (* 0.25 (pow x 4)) (* 4.0 x))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (/ (- (* 4.0 (pow x 2)) (+ (* 0.25 (pow x 4)) (* 4.0 x))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (147 enodes)
* * [misc]simplify:  iters left: 2 (240 enodes)
* * [misc]simplify:  iters left: 1 (438 enodes)
* [exit]simplify:  Simplified to (/ (- (* x (- (* 4.0 x) 4.0)) (* 0.25 (pow x 4))) (- (+ 1.0 (* -2.0 x)) (* x (* 0.5 x))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (pow (* 0.5 (* x x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 (* x x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (+ (log 0.5) (* 2 (log x)))) into (* 3 (+ (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (+ (log 0.5) (* 2 (log x))))) into (exp (* 3 (+ (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 (* x x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (+ (log 0.5) (* 2 (log x)))) into (* 3 (+ (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (+ (log 0.5) (* 2 (log x))))) into (exp (* 3 (+ (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 3 (+ (log 0.5) (* 2 (log x))))) into (exp (* 3 (+ (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (+ (log 0.5) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.5 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.5 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.5 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.5 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.5 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.5 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.5 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.5 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.5 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.5 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.5 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.5 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.5 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.5 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 3 (+ (log 0.5) (* 2 (log x))))) into (exp (* 3 (+ (log 0.5) (* 2 (log x)))))
* [misc]approximate:  Taking taylor expansion of (pow (* 0.5 (* (/ 1 x) (/ 1 x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 (* (/ 1 x) (/ 1 x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 0.5) (* 2 (log x)))) into (* 3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 0.5) (* 2 (log x))))) into (exp (* 3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 (* (/ 1 x) (/ 1 x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 0.5) (* 2 (log x)))) into (* 3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 0.5) (* 2 (log x))))) into (exp (* 3 (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 0.5) (* 2 (log x))))) into (exp (* 3 (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log 0.5) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.5 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.5 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.5 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.5 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.5 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.5 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.5 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.5 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.5 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.5 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.5 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.5 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.5 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.5 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 0.5) (* 2 (log (/ 1 x)))))) into (exp (* 3 (- (log 0.5) (* 2 (log (/ 1 x))))))
* [misc]approximate:  Taking taylor expansion of (pow (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 0.5) (* 2 (log x)))) into (* 3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 0.5) (* 2 (log x))))) into (exp (* 3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 0.5) (* 2 (log x)))) into (* 3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 0.5) (* 2 (log x))))) into (exp (* 3 (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 0.5) (* 2 (log x))))) into (exp (* 3 (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log 0.5) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.5 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.5 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.5 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.5 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.5 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.5 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.5 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.5 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.5 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.5 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.5 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.5 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.5 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.5 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 0.5) (* 2 (log (/ 1 (- x))))))) into (exp (* 3 (- (log 0.5) (* 2 (log (/ -1 x))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (+ 1.0 (* -2.0 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (+ 1.0 (* -2.0 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 1.0 (* -2.0 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 1.0 (* -2.0 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.0 (* -2.0 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 3 (log 1.0)) into (* 3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 1.0))) into (pow 1.0 3)
* [misc]taylor:  Taking taylor expansion of (pow (+ 1.0 (* -2.0 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 1.0 (* -2.0 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 1.0 (* -2.0 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.0 (* -2.0 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 3 (log 1.0)) into (* 3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 1.0))) into (pow 1.0 3)
* [misc]backup-simplify:  Simplify (pow 1.0 3) into (pow 1.0 3)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 2.0)) 1)) (pow 1.0 1)))) 1) into -2.0
* [misc]backup-simplify:  Simplify (+ (* 3 -2.0) (* 0 (log 1.0))) into (- 6.0)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 1.0))) (+ (* (/ (pow (- 6.0) 1) 1)))) into (* -6.0 (pow 1.0 3))
* [misc]backup-simplify:  Simplify (* -6.0 (pow 1.0 3)) into (* -6.0 (pow 1.0 3))
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 2.0)) 2)) (pow 1.0 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1.0 1)))) 2) into (/ -2.0 (pow 1.0 2))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -2.0 (pow 1.0 2))) (+ (* 0 -2.0) (* 0 (log 1.0)))) into (- (* 6.0 (/ 1 (pow 1.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 1.0))) (+ (* (/ (pow (- 6.0) 2) 2)) (* (/ (pow (- (* 6.0 (/ 1 (pow 1.0 2)))) 1) 1)))) into (* (pow 1.0 3) (- 18.0 (* 6.0 (/ 1 (pow 1.0 2)))))
* [misc]backup-simplify:  Simplify (* (pow 1.0 3) (- 18.0 (* 6.0 (/ 1 (pow 1.0 2))))) into (* (pow 1.0 3) (- 18.0 (* 6.0 (/ 1 (pow 1.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (pow 1.0 3) (- 18.0 (* 6.0 (/ 1 (pow 1.0 2))))) (pow x 2)) (+ (* (* -6.0 (pow 1.0 3)) x) (pow 1.0 3))) into (- (+ (* 18.0 (pow x 2)) 1.0) (+ (* 6.0 (/ (pow x 2) (pow 1.0 2))) (* 6.0 x)))
* [misc]approximate:  Taking taylor expansion of (pow (+ 1.0 (* -2.0 (/ 1 x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (+ 1.0 (* -2.0 (/ 1 x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 1.0 (* -2.0 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 1.0 (* -2.0 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.0 (* -2.0 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (log (- 2.0)) into (log (- 2.0))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 2.0))) into (- (log (- 2.0)) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 2.0)) (log x))) into (* 3 (- (log (- 2.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 2.0)) (log x)))) into (exp (* 3 (- (log (- 2.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (+ 1.0 (* -2.0 (/ 1 x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 1.0 (* -2.0 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 1.0 (* -2.0 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.0 (* -2.0 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (log (- 2.0)) into (log (- 2.0))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 2.0))) into (- (log (- 2.0)) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 2.0)) (log x))) into (* 3 (- (log (- 2.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 2.0)) (log x)))) into (exp (* 3 (- (log (- 2.0)) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 2.0)) (log x)))) into (exp (* 3 (- (log (- 2.0)) (log x))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.0) 1)) (pow (- 2.0) 1)))) 1) into -0.5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 2.0))) into (- (log (- 2.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 -0.5) (* 0 (- (log (- 2.0)) (log x)))) into (- 1.5)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 2.0)) (log x)))) (+ (* (/ (pow (- 1.5) 1) 1)))) into (* -1.5 (exp (* 3 (- (log (- 2.0)) (log x)))))
* [misc]backup-simplify:  Simplify (* -1.5 (exp (* 3 (- (log (- 2.0)) (log x))))) into (* -1.5 (exp (* 3 (- (log (- 2.0)) (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.0) 2)) (pow (- 2.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 2.0) 1)))) 2) into (/ -0.5 (pow -2.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 2.0))) into (- (log (- 2.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -0.5 (pow -2.0 2))) (+ (* 0 -0.5) (* 0 (- (log (- 2.0)) (log x))))) into (- (* 1.5 (/ 1 (pow -2.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 2.0)) (log x)))) (+ (* (/ (pow (- 1.5) 2) 2)) (* (/ (pow (- (* 1.5 (/ 1 (pow -2.0 2)))) 1) 1)))) into (* (- 1.125 (* 1.5 (/ 1 (pow -2.0 2)))) (exp (* 3 (- (log (- 2.0)) (log x)))))
* [misc]backup-simplify:  Simplify (* (- 1.125 (* 1.5 (/ 1 (pow -2.0 2)))) (exp (* 3 (- (log (- 2.0)) (log x))))) into (* (- 1.125 (* 1.5 (/ 1 (pow -2.0 2)))) (exp (* 3 (- (log (- 2.0)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (* (- 1.125 (* 1.5 (/ 1 (pow -2.0 2)))) (exp (* 3 (- (log (- 2.0)) (log (/ 1 x)))))) (pow (/ 1 x) 2)) (+ (* (* -1.5 (exp (* 3 (- (log (- 2.0)) (log (/ 1 x)))))) (/ 1 x)) (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))))) into (- (+ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) (* 1.125 (/ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) (pow x 2)))) (+ (* 1.5 (/ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) (* (pow x 2) (pow -2.0 2)))) (* 1.5 (/ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) x))))
* [misc]approximate:  Taking taylor expansion of (pow (+ 1.0 (* -2.0 (/ 1 (- x)))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (+ 1.0 (* -2.0 (/ 1 (- x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 1.0 (* -2.0 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 1.0 (* -2.0 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.0 (* -2.0 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (log 2.0) into (log 2.0)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 2.0)) into (- (log 2.0) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log 2.0) (log x))) into (* 3 (- (log 2.0) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 2.0) (log x)))) into (exp (* 3 (- (log 2.0) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (+ 1.0 (* -2.0 (/ 1 (- x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 1.0 (* -2.0 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 1.0 (* -2.0 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.0 (* -2.0 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (log 2.0) into (log 2.0)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 2.0)) into (- (log 2.0) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log 2.0) (log x))) into (* 3 (- (log 2.0) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 2.0) (log x)))) into (exp (* 3 (- (log 2.0) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 2.0) (log x)))) into (exp (* 3 (- (log 2.0) (log x))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.0) 1)) (pow 2.0 1)))) 1) into 0.5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 2.0)) into (- (log 2.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0.5) (* 0 (- (log 2.0) (log x)))) into 1.5
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 2.0) (log x)))) (+ (* (/ (pow 1.5 1) 1)))) into (* 1.5 (exp (* 3 (- (log 2.0) (log x)))))
* [misc]backup-simplify:  Simplify (* 1.5 (exp (* 3 (- (log 2.0) (log x))))) into (* 1.5 (exp (* 3 (- (log 2.0) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.0) 2)) (pow 2.0 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 2.0 1)))) 2) into (/ -0.5 (pow 2.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 2.0)) into (- (log 2.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -0.5 (pow 2.0 2))) (+ (* 0 0.5) (* 0 (- (log 2.0) (log x))))) into (- (* 1.5 (/ 1 (pow 2.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 2.0) (log x)))) (+ (* (/ (pow 1.5 2) 2)) (* (/ (pow (- (* 1.5 (/ 1 (pow 2.0 2)))) 1) 1)))) into (* (exp (* 3 (- (log 2.0) (log x)))) (- 1.125 (* 1.5 (/ 1 (pow 2.0 2)))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 2.0) (log x)))) (- 1.125 (* 1.5 (/ 1 (pow 2.0 2))))) into (* (exp (* 3 (- (log 2.0) (log x)))) (- 1.125 (* 1.5 (/ 1 (pow 2.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 3 (- (log 2.0) (log (/ 1 (- x)))))) (- 1.125 (* 1.5 (/ 1 (pow 2.0 2))))) (pow (/ 1 (- x)) 2)) (+ (* (* 1.5 (exp (* 3 (- (log 2.0) (log (/ 1 (- x))))))) (/ 1 (- x))) (exp (* 3 (- (log 2.0) (log (/ 1 (- x)))))))) into (- (+ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) (* 1.125 (/ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) (pow x 2)))) (+ (* 1.5 (/ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) (* (pow 2.0 2) (pow x 2)))) (* 1.5 (/ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) x))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -2.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* x -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -2.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -2.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* x -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -2.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* 0 -2.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 -2.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* 1.0 1.0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 1.0 (- 2.0)) (* (- 2.0) 1.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -2.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -2.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.0 0) (+ (* (- 2.0) (- 2.0)) (* 0 1.0))) into 4.0
* [misc]backup-simplify:  Simplify 4.0 into 4.0
* [misc]backup-simplify:  Simplify (+ (* 4.0 (pow x 2)) (+ (* (- 4.0) x) 1.0)) into (- (+ (* 4.0 (pow x 2)) 1.0) (* 4.0 x))
* [misc]approximate:  Taking taylor expansion of (* (+ (* (/ 1 x) -2.0) 1.0) (+ (* (/ 1 x) -2.0) 1.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -2.0) 1.0) (+ (* (/ 1 x) -2.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -2.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -2.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -2.0) 1.0) (+ (* (/ 1 x) -2.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -2.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -2.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* 1 -2.0) into -2.0
* [misc]backup-simplify:  Simplify (+ -2.0 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (* 1 -2.0) into -2.0
* [misc]backup-simplify:  Simplify (+ -2.0 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (* (- 2.0) (- 2.0)) into 4.0
* [misc]backup-simplify:  Simplify 4.0 into 4.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -2.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -2.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ (* (- 2.0) 1.0) (* 1.0 (- 2.0))) into (- 4.0)
* [misc]backup-simplify:  Simplify (- 4.0) into (- 4.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -2.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -2.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2.0) 0) (+ (* 1.0 1.0) (* 0 (- 2.0)))) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* (- 4.0) (/ 1 (/ 1 x))) (* 4.0 (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 4.0 (pow x 2)) 1.0) (* 4.0 x))
* [misc]approximate:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -2.0) 1.0) (+ (* (/ 1 (- x)) -2.0) 1.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -2.0) 1.0) (+ (* (/ 1 (- x)) -2.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -2.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -2.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -2.0) 1.0) (+ (* (/ 1 (- x)) -2.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -2.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -2.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* -1 -2.0) into 2.0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (* -1 -2.0) into 2.0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (* 2.0 2.0) into 4.0
* [misc]backup-simplify:  Simplify 4.0 into 4.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -2.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -2.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ (* 2.0 1.0) (* 1.0 2.0)) into 4.0
* [misc]backup-simplify:  Simplify 4.0 into 4.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -2.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -2.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.0 0) (+ (* 1.0 1.0) (* 0 2.0))) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* 4.0 (/ 1 (/ 1 (- x)))) (* 4.0 (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 4.0 (pow x 2)) 1.0) (* 4.0 x))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 1.0 (* -2.0 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 1.0 (* -2.0 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 1.0 (* -2.0 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.0 (* -2.0 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 3 (log 1.0)) into (* 3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 1.0))) into (pow 1.0 3)
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 (* x x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (+ (log 0.5) (* 2 (log x)))) into (* 3 (+ (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (+ (log 0.5) (* 2 (log x))))) into (exp (* 3 (+ (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) in x
* [misc]taylor:  Taking taylor expansion of (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) 0.5) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (+ (* x -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -2.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) 0.5) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -2.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* x -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -2.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (pow 1.0 3) (exp (* 3 (+ (log 0.5) (* 2 (log x)))))) into (+ 1.0 (exp (* 3 (+ (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0.5) into 0
* [misc]backup-simplify:  Simplify (* 0 -2.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (- 1.0) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 1.0)) into (- 1.0)
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0.5) into 0
* [misc]backup-simplify:  Simplify (* (- 1.0) 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -2.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 -2.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* 1.0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (/ (+ 1.0 (exp (* 3 (+ (log 0.5) (* 2 (log x)))))) 1.0) into (* 1.0 (+ 1.0 (exp (* 3 (+ (log 0.5) (* 2 (log x)))))))
* [misc]taylor:  Taking taylor expansion of (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 1.0 (* -2.0 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 1.0 (* -2.0 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 1.0 (* -2.0 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.0 (* -2.0 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 3 (log 1.0)) into (* 3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 1.0))) into (pow 1.0 3)
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 (* x x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (+ (log 0.5) (* 2 (log x)))) into (* 3 (+ (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (+ (log 0.5) (* 2 (log x))))) into (exp (* 3 (+ (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) in x
* [misc]taylor:  Taking taylor expansion of (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) 0.5) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (+ (* x -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -2.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) 0.5) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -2.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* x -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -2.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (pow 1.0 3) (exp (* 3 (+ (log 0.5) (* 2 (log x)))))) into (+ 1.0 (exp (* 3 (+ (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0.5) into 0
* [misc]backup-simplify:  Simplify (* 0 -2.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (- 1.0) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 1.0)) into (- 1.0)
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0.5) into 0
* [misc]backup-simplify:  Simplify (* (- 1.0) 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -2.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 -2.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* 1.0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (/ (+ 1.0 (exp (* 3 (+ (log 0.5) (* 2 (log x)))))) 1.0) into (* 1.0 (+ 1.0 (exp (* 3 (+ (log 0.5) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (* 1.0 (+ 1.0 (exp (* 3 (+ (log 0.5) (* 2 (log x))))))) into (* 1.0 (+ 1.0 (exp (* 3 (+ (log 0.5) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 2.0)) 1)) (pow 1.0 1)))) 1) into -2.0
* [misc]backup-simplify:  Simplify (+ (* 3 -2.0) (* 0 (log 1.0))) into (- 6.0)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 1.0))) (+ (* (/ (pow (- 6.0) 1) 1)))) into (* -6.0 (pow 1.0 3))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (+ (log 0.5) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -6.0 (pow 1.0 3)) 0) into (- 6.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0.5)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0.5)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (- 2.0)) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (+ (* (- 1.0) 0) (* 2.0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 1.0 (- 2.0)) (* (- 2.0) 1.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 4.0)) into (- 4.0)
* [misc]backup-simplify:  Simplify (- (/ (- 6.0) 1.0) (+ (* (* 1.0 (+ 1.0 (exp (* 3 (+ (log 0.5) (* 2 (log x))))))) (/ (- 4.0) 1.0)))) into (- (* 4.0 (exp (* 3 (+ (log 0.5) (* 2 (log x)))))) 2.0)
* [misc]backup-simplify:  Simplify (- (* 4.0 (exp (* 3 (+ (log 0.5) (* 2 (log x)))))) 2.0) into (- (* 4.0 (exp (* 3 (+ (log 0.5) (* 2 (log x)))))) 2.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 2.0)) 2)) (pow 1.0 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1.0 1)))) 2) into (/ -2.0 (pow 1.0 2))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -2.0 (pow 1.0 2))) (+ (* 0 -2.0) (* 0 (log 1.0)))) into (- (* 6.0 (/ 1 (pow 1.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 1.0))) (+ (* (/ (pow (- 6.0) 2) 2)) (* (/ (pow (- (* 6.0 (/ 1 (pow 1.0 2)))) 1) 1)))) into (* (pow 1.0 3) (- 18.0 (* 6.0 (/ 1 (pow 1.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 1.0 3) (- 18.0 (* 6.0 (/ 1 (pow 1.0 2))))) 0) into (- 18.0 (* 6.0 (/ 1 (pow 1.0 2))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 0.5))) into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 0.5))) into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -2.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.5 0) into 0.5
* [misc]backup-simplify:  Simplify (+ (* (- 1.0) 0.5) (+ (* 2.0 0) (* 0.5 0))) into (- 0.5)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -2.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -2.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.0 0) (+ (* (- 2.0) (- 2.0)) (* 0 1.0))) into 4.0
* [misc]backup-simplify:  Simplify (+ (- 0.5) 4.0) into 3.5
* [misc]backup-simplify:  Simplify (- (/ (- 18.0 (* 6.0 (/ 1 (pow 1.0 2)))) 1.0) (+ (* (* 1.0 (+ 1.0 (exp (* 3 (+ (log 0.5) (* 2 (log x))))))) (/ 3.5 1.0)) (* (- (* 4.0 (exp (* 3 (+ (log 0.5) (* 2 (log x)))))) 2.0) (/ (- 4.0) 1.0)))) into (- (+ 6.5 (* 12.5 (exp (* 3 (+ (log 0.5) (* 2 (log x))))))) (* 6.0 (/ 1 (pow 1.0 2))))
* [misc]backup-simplify:  Simplify (- (+ 6.5 (* 12.5 (exp (* 3 (+ (log 0.5) (* 2 (log x))))))) (* 6.0 (/ 1 (pow 1.0 2)))) into (- (+ 6.5 (* 12.5 (exp (* 3 (+ (log 0.5) (* 2 (log x))))))) (* 6.0 (/ 1 (pow 1.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (+ 6.5 (* 12.5 (exp (* 3 (+ (log 0.5) (* 2 (log x))))))) (* 6.0 (/ 1 (pow 1.0 2)))) (pow x 2)) (+ (* (- (* 4.0 (exp (* 3 (+ (log 0.5) (* 2 (log x)))))) 2.0) x) (* 1.0 (+ 1.0 (exp (* 3 (+ (log 0.5) (* 2 (log x))))))))) into (- (+ (* 4.0 (* (exp (* 3 (+ (log 0.5) (* 2 (log x))))) x)) (+ (* 12.5 (* (exp (* 3 (+ (log 0.5) (* 2 (log x))))) (pow x 2))) (+ (* 6.5 (pow x 2)) (+ 1.0 (* 1.0 (exp (* 3 (+ (log 0.5) (* 2 (log x)))))))))) (+ (* 2.0 x) (* 6.0 (/ (pow x 2) (pow 1.0 2)))))
* [misc]approximate:  Taking taylor expansion of (/ (+ (pow (+ 1.0 (* -2.0 (/ 1 x))) 3) (pow (* 0.5 (* (/ 1 x) (/ 1 x))) 3)) (+ (* (- (* (* (/ 1 x) (/ 1 x)) 0.5) (+ (* (/ 1 x) -2.0) 1.0)) (* (* (/ 1 x) (/ 1 x)) 0.5)) (* (+ (* (/ 1 x) -2.0) 1.0) (+ (* (/ 1 x) -2.0) 1.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (/ (+ (pow (+ 1.0 (* -2.0 (/ 1 x))) 3) (pow (* 0.5 (* (/ 1 x) (/ 1 x))) 3)) (+ (* (- (* (* (/ 1 x) (/ 1 x)) 0.5) (+ (* (/ 1 x) -2.0) 1.0)) (* (* (/ 1 x) (/ 1 x)) 0.5)) (* (+ (* (/ 1 x) -2.0) 1.0) (+ (* (/ 1 x) -2.0) 1.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 1.0 (* -2.0 (/ 1 x))) 3) (pow (* 0.5 (* (/ 1 x) (/ 1 x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 1.0 (* -2.0 (/ 1 x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 1.0 (* -2.0 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 1.0 (* -2.0 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.0 (* -2.0 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (log (- 2.0)) into (log (- 2.0))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 2.0))) into (- (log (- 2.0)) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 2.0)) (log x))) into (* 3 (- (log (- 2.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 2.0)) (log x)))) into (exp (* 3 (- (log (- 2.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 (* (/ 1 x) (/ 1 x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 0.5) (* 2 (log x)))) into (* 3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 0.5) (* 2 (log x))))) into (exp (* 3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (+ (* (- (* (* (/ 1 x) (/ 1 x)) 0.5) (+ (* (/ 1 x) -2.0) 1.0)) (* (* (/ 1 x) (/ 1 x)) 0.5)) (* (+ (* (/ 1 x) -2.0) 1.0) (+ (* (/ 1 x) -2.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* (* (/ 1 x) (/ 1 x)) 0.5) (+ (* (/ 1 x) -2.0) 1.0)) (* (* (/ 1 x) (/ 1 x)) 0.5)) in x
* [misc]taylor:  Taking taylor expansion of (- (* (* (/ 1 x) (/ 1 x)) 0.5) (+ (* (/ 1 x) -2.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) 0.5) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -2.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) 0.5) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -2.0) 1.0) (+ (* (/ 1 x) -2.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -2.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -2.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (exp (* 3 (- (log (- 2.0)) (log x)))) (exp (* 3 (- (log 0.5) (* 2 (log x)))))) into (+ (exp (* 3 (- (log 0.5) (* 2 (log x))))) (exp (* 3 (- (log (- 2.0)) (log x)))))
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 0.5) into 0.5
* [misc]backup-simplify:  Simplify (+ 0.5 0) into 0.5
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 0.5) into 0.5
* [misc]backup-simplify:  Simplify (* 0.5 0.5) into 0.25
* [misc]backup-simplify:  Simplify (+ 0.25 0) into 0.25
* [misc]backup-simplify:  Simplify (/ (+ (exp (* 3 (- (log 0.5) (* 2 (log x))))) (exp (* 3 (- (log (- 2.0)) (log x))))) 0.25) into (* 4.0 (+ (exp (* 3 (- (log 0.5) (* 2 (log x))))) (exp (* 3 (- (log (- 2.0)) (log x))))))
* [misc]taylor:  Taking taylor expansion of (/ (+ (pow (+ 1.0 (* -2.0 (/ 1 x))) 3) (pow (* 0.5 (* (/ 1 x) (/ 1 x))) 3)) (+ (* (- (* (* (/ 1 x) (/ 1 x)) 0.5) (+ (* (/ 1 x) -2.0) 1.0)) (* (* (/ 1 x) (/ 1 x)) 0.5)) (* (+ (* (/ 1 x) -2.0) 1.0) (+ (* (/ 1 x) -2.0) 1.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 1.0 (* -2.0 (/ 1 x))) 3) (pow (* 0.5 (* (/ 1 x) (/ 1 x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 1.0 (* -2.0 (/ 1 x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 1.0 (* -2.0 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 1.0 (* -2.0 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.0 (* -2.0 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (log (- 2.0)) into (log (- 2.0))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 2.0))) into (- (log (- 2.0)) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 2.0)) (log x))) into (* 3 (- (log (- 2.0)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 2.0)) (log x)))) into (exp (* 3 (- (log (- 2.0)) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 (* (/ 1 x) (/ 1 x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 0.5) (* 2 (log x)))) into (* 3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 0.5) (* 2 (log x))))) into (exp (* 3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (+ (* (- (* (* (/ 1 x) (/ 1 x)) 0.5) (+ (* (/ 1 x) -2.0) 1.0)) (* (* (/ 1 x) (/ 1 x)) 0.5)) (* (+ (* (/ 1 x) -2.0) 1.0) (+ (* (/ 1 x) -2.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* (* (/ 1 x) (/ 1 x)) 0.5) (+ (* (/ 1 x) -2.0) 1.0)) (* (* (/ 1 x) (/ 1 x)) 0.5)) in x
* [misc]taylor:  Taking taylor expansion of (- (* (* (/ 1 x) (/ 1 x)) 0.5) (+ (* (/ 1 x) -2.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) 0.5) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -2.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) 0.5) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -2.0) 1.0) (+ (* (/ 1 x) -2.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -2.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -2.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (exp (* 3 (- (log (- 2.0)) (log x)))) (exp (* 3 (- (log 0.5) (* 2 (log x)))))) into (+ (exp (* 3 (- (log 0.5) (* 2 (log x))))) (exp (* 3 (- (log (- 2.0)) (log x)))))
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 0.5) into 0.5
* [misc]backup-simplify:  Simplify (+ 0.5 0) into 0.5
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 0.5) into 0.5
* [misc]backup-simplify:  Simplify (* 0.5 0.5) into 0.25
* [misc]backup-simplify:  Simplify (+ 0.25 0) into 0.25
* [misc]backup-simplify:  Simplify (/ (+ (exp (* 3 (- (log 0.5) (* 2 (log x))))) (exp (* 3 (- (log (- 2.0)) (log x))))) 0.25) into (* 4.0 (+ (exp (* 3 (- (log 0.5) (* 2 (log x))))) (exp (* 3 (- (log (- 2.0)) (log x))))))
* [misc]backup-simplify:  Simplify (* 4.0 (+ (exp (* 3 (- (log 0.5) (* 2 (log x))))) (exp (* 3 (- (log (- 2.0)) (log x)))))) into (* 4.0 (+ (exp (* 3 (- (log 0.5) (* 2 (log x))))) (exp (* 3 (- (log (- 2.0)) (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.0) 1)) (pow (- 2.0) 1)))) 1) into -0.5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 2.0))) into (- (log (- 2.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 -0.5) (* 0 (- (log (- 2.0)) (log x)))) into (- 1.5)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 2.0)) (log x)))) (+ (* (/ (pow (- 1.5) 1) 1)))) into (* -1.5 (exp (* 3 (- (log (- 2.0)) (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log 0.5) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 (exp (* 3 (- (log (- 2.0)) (log x))))) 0) into (- (* 1.5 (exp (* 3 (- (log (- 2.0)) (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 0.5)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 0.5)) into 0
* [misc]backup-simplify:  Simplify (* 1 -2.0) into -2.0
* [misc]backup-simplify:  Simplify (+ -2.0 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (- 2.0)) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 2.0 0.5)) into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (/ (- (* 1.5 (exp (* 3 (- (log (- 2.0)) (log x)))))) 0.25) (+ (* (* 4.0 (+ (exp (* 3 (- (log 0.5) (* 2 (log x))))) (exp (* 3 (- (log (- 2.0)) (log x)))))) (/ 1.0 0.25)))) into (- (+ (* 16.0 (exp (* 3 (- (log 0.5) (* 2 (log x)))))) (* 22.0 (exp (* 3 (- (log (- 2.0)) (log x)))))))
* [misc]backup-simplify:  Simplify (- (+ (* 16.0 (exp (* 3 (- (log 0.5) (* 2 (log x)))))) (* 22.0 (exp (* 3 (- (log (- 2.0)) (log x))))))) into (- (+ (* 16.0 (exp (* 3 (- (log 0.5) (* 2 (log x)))))) (* 22.0 (exp (* 3 (- (log (- 2.0)) (log x)))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.0) 2)) (pow (- 2.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 2.0) 1)))) 2) into (/ -0.5 (pow -2.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 2.0))) into (- (log (- 2.0)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -0.5 (pow -2.0 2))) (+ (* 0 -0.5) (* 0 (- (log (- 2.0)) (log x))))) into (- (* 1.5 (/ 1 (pow -2.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 2.0)) (log x)))) (+ (* (/ (pow (- 1.5) 2) 2)) (* (/ (pow (- (* 1.5 (/ 1 (pow -2.0 2)))) 1) 1)))) into (* (- 1.125 (* 1.5 (/ 1 (pow -2.0 2)))) (exp (* 3 (- (log (- 2.0)) (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1.125 (* 1.5 (/ 1 (pow -2.0 2)))) (exp (* 3 (- (log (- 2.0)) (log x))))) 0) into (- (* 1.125 (exp (* 3 (- (log (- 2.0)) (log x))))) (* 1.5 (/ (exp (* 3 (- (log (- 2.0)) (log x)))) (pow -2.0 2))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 0.5))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 0.5))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -2.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (- 1.0) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 1.0)) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 2.0 0) (* (- 1.0) 0.5))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* 1 -2.0) into -2.0
* [misc]backup-simplify:  Simplify (+ -2.0 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (* 1 -2.0) into -2.0
* [misc]backup-simplify:  Simplify (+ -2.0 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (* (- 2.0) (- 2.0)) into 4.0
* [misc]backup-simplify:  Simplify (+ (- 0.5) 4.0) into 3.5
* [misc]backup-simplify:  Simplify (- (/ (- (* 1.125 (exp (* 3 (- (log (- 2.0)) (log x))))) (* 1.5 (/ (exp (* 3 (- (log (- 2.0)) (log x)))) (pow -2.0 2)))) 0.25) (+ (* (* 4.0 (+ (exp (* 3 (- (log 0.5) (* 2 (log x))))) (exp (* 3 (- (log (- 2.0)) (log x)))))) (/ 3.5 0.25)) (* (- (+ (* 16.0 (exp (* 3 (- (log 0.5) (* 2 (log x)))))) (* 22.0 (exp (* 3 (- (log (- 2.0)) (log x))))))) (/ 1.0 0.25)))) into (- (+ (* 8.0 (exp (* 3 (- (log 0.5) (* 2 (log x)))))) (* 36.5 (exp (* 3 (- (log (- 2.0)) (log x)))))) (* 6.0 (/ (exp (* 3 (- (log (- 2.0)) (log x)))) (pow -2.0 2))))
* [misc]backup-simplify:  Simplify (- (+ (* 8.0 (exp (* 3 (- (log 0.5) (* 2 (log x)))))) (* 36.5 (exp (* 3 (- (log (- 2.0)) (log x)))))) (* 6.0 (/ (exp (* 3 (- (log (- 2.0)) (log x)))) (pow -2.0 2)))) into (- (+ (* 8.0 (exp (* 3 (- (log 0.5) (* 2 (log x)))))) (* 36.5 (exp (* 3 (- (log (- 2.0)) (log x)))))) (* 6.0 (/ (exp (* 3 (- (log (- 2.0)) (log x)))) (pow -2.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (+ (* 8.0 (exp (* 3 (- (log 0.5) (* 2 (log (/ 1 x))))))) (* 36.5 (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))))) (* 6.0 (/ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) (pow -2.0 2)))) (pow (/ 1 x) 6)) (+ (* (- (+ (* 16.0 (exp (* 3 (- (log 0.5) (* 2 (log (/ 1 x))))))) (* 22.0 (exp (* 3 (- (log (- 2.0)) (log (/ 1 x)))))))) (pow (/ 1 x) 5)) (* (* 4.0 (+ (exp (* 3 (- (log 0.5) (* 2 (log (/ 1 x)))))) (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))))) (pow (/ 1 x) 4)))) into (- (+ (* 36.5 (/ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) (pow x 6))) (+ (* 4.0 (/ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) (pow x 4))) (+ (* 4.0 (/ (exp (* 3 (- (log 0.5) (* 2 (log (/ 1 x)))))) (pow x 4))) (* 8.0 (/ (exp (* 3 (- (log 0.5) (* 2 (log (/ 1 x)))))) (pow x 6)))))) (+ (* 16.0 (/ (exp (* 3 (- (log 0.5) (* 2 (log (/ 1 x)))))) (pow x 5))) (+ (* 22.0 (/ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) (pow x 5))) (* 6.0 (/ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) (* (pow x 6) (pow -2.0 2)))))))
* [misc]approximate:  Taking taylor expansion of (/ (+ (pow (+ 1.0 (* -2.0 (/ 1 (- x)))) 3) (pow (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) 3)) (+ (* (- (* (* (/ 1 (- x)) (/ 1 (- x))) 0.5) (+ (* (/ 1 (- x)) -2.0) 1.0)) (* (* (/ 1 (- x)) (/ 1 (- x))) 0.5)) (* (+ (* (/ 1 (- x)) -2.0) 1.0) (+ (* (/ 1 (- x)) -2.0) 1.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (/ (+ (pow (+ 1.0 (* -2.0 (/ 1 (- x)))) 3) (pow (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) 3)) (+ (* (- (* (* (/ 1 (- x)) (/ 1 (- x))) 0.5) (+ (* (/ 1 (- x)) -2.0) 1.0)) (* (* (/ 1 (- x)) (/ 1 (- x))) 0.5)) (* (+ (* (/ 1 (- x)) -2.0) 1.0) (+ (* (/ 1 (- x)) -2.0) 1.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 1.0 (* -2.0 (/ 1 (- x)))) 3) (pow (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 1.0 (* -2.0 (/ 1 (- x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 1.0 (* -2.0 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 1.0 (* -2.0 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.0 (* -2.0 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (log 2.0) into (log 2.0)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 2.0)) into (- (log 2.0) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log 2.0) (log x))) into (* 3 (- (log 2.0) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 2.0) (log x)))) into (exp (* 3 (- (log 2.0) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 0.5) (* 2 (log x)))) into (* 3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 0.5) (* 2 (log x))))) into (exp (* 3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (+ (* (- (* (* (/ 1 (- x)) (/ 1 (- x))) 0.5) (+ (* (/ 1 (- x)) -2.0) 1.0)) (* (* (/ 1 (- x)) (/ 1 (- x))) 0.5)) (* (+ (* (/ 1 (- x)) -2.0) 1.0) (+ (* (/ 1 (- x)) -2.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* (* (/ 1 (- x)) (/ 1 (- x))) 0.5) (+ (* (/ 1 (- x)) -2.0) 1.0)) (* (* (/ 1 (- x)) (/ 1 (- x))) 0.5)) in x
* [misc]taylor:  Taking taylor expansion of (- (* (* (/ 1 (- x)) (/ 1 (- x))) 0.5) (+ (* (/ 1 (- x)) -2.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) 0.5) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -2.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) 0.5) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -2.0) 1.0) (+ (* (/ 1 (- x)) -2.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -2.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -2.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (exp (* 3 (- (log 2.0) (log x)))) (exp (* 3 (- (log 0.5) (* 2 (log x)))))) into (+ (exp (* 3 (- (log 2.0) (log x)))) (exp (* 3 (- (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 0.5) into 0.5
* [misc]backup-simplify:  Simplify (+ 0.5 0) into 0.5
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 0.5) into 0.5
* [misc]backup-simplify:  Simplify (* 0.5 0.5) into 0.25
* [misc]backup-simplify:  Simplify (+ 0.25 0) into 0.25
* [misc]backup-simplify:  Simplify (/ (+ (exp (* 3 (- (log 2.0) (log x)))) (exp (* 3 (- (log 0.5) (* 2 (log x)))))) 0.25) into (* 4.0 (+ (exp (* 3 (- (log 2.0) (log x)))) (exp (* 3 (- (log 0.5) (* 2 (log x)))))))
* [misc]taylor:  Taking taylor expansion of (/ (+ (pow (+ 1.0 (* -2.0 (/ 1 (- x)))) 3) (pow (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) 3)) (+ (* (- (* (* (/ 1 (- x)) (/ 1 (- x))) 0.5) (+ (* (/ 1 (- x)) -2.0) 1.0)) (* (* (/ 1 (- x)) (/ 1 (- x))) 0.5)) (* (+ (* (/ 1 (- x)) -2.0) 1.0) (+ (* (/ 1 (- x)) -2.0) 1.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 1.0 (* -2.0 (/ 1 (- x)))) 3) (pow (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 1.0 (* -2.0 (/ 1 (- x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 1.0 (* -2.0 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 1.0 (* -2.0 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.0 (* -2.0 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (log 2.0) into (log 2.0)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 2.0)) into (- (log 2.0) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log 2.0) (log x))) into (* 3 (- (log 2.0) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 2.0) (log x)))) into (exp (* 3 (- (log 2.0) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 0.5) (* 2 (log x)))) into (* 3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 0.5) (* 2 (log x))))) into (exp (* 3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (+ (* (- (* (* (/ 1 (- x)) (/ 1 (- x))) 0.5) (+ (* (/ 1 (- x)) -2.0) 1.0)) (* (* (/ 1 (- x)) (/ 1 (- x))) 0.5)) (* (+ (* (/ 1 (- x)) -2.0) 1.0) (+ (* (/ 1 (- x)) -2.0) 1.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (- (* (* (/ 1 (- x)) (/ 1 (- x))) 0.5) (+ (* (/ 1 (- x)) -2.0) 1.0)) (* (* (/ 1 (- x)) (/ 1 (- x))) 0.5)) in x
* [misc]taylor:  Taking taylor expansion of (- (* (* (/ 1 (- x)) (/ 1 (- x))) 0.5) (+ (* (/ 1 (- x)) -2.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) 0.5) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -2.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) 0.5) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -2.0) 1.0) (+ (* (/ 1 (- x)) -2.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -2.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -2.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -2.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (exp (* 3 (- (log 2.0) (log x)))) (exp (* 3 (- (log 0.5) (* 2 (log x)))))) into (+ (exp (* 3 (- (log 2.0) (log x)))) (exp (* 3 (- (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 0.5) into 0.5
* [misc]backup-simplify:  Simplify (+ 0.5 0) into 0.5
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 0.5) into 0.5
* [misc]backup-simplify:  Simplify (* 0.5 0.5) into 0.25
* [misc]backup-simplify:  Simplify (+ 0.25 0) into 0.25
* [misc]backup-simplify:  Simplify (/ (+ (exp (* 3 (- (log 2.0) (log x)))) (exp (* 3 (- (log 0.5) (* 2 (log x)))))) 0.25) into (* 4.0 (+ (exp (* 3 (- (log 2.0) (log x)))) (exp (* 3 (- (log 0.5) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (* 4.0 (+ (exp (* 3 (- (log 2.0) (log x)))) (exp (* 3 (- (log 0.5) (* 2 (log x))))))) into (* 4.0 (+ (exp (* 3 (- (log 2.0) (log x)))) (exp (* 3 (- (log 0.5) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.0) 1)) (pow 2.0 1)))) 1) into 0.5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 2.0)) into (- (log 2.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0.5) (* 0 (- (log 2.0) (log x)))) into 1.5
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 2.0) (log x)))) (+ (* (/ (pow 1.5 1) 1)))) into (* 1.5 (exp (* 3 (- (log 2.0) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log 0.5) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 (exp (* 3 (- (log 2.0) (log x))))) 0) into (* 1.5 (exp (* 3 (- (log 2.0) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 0.5)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 0.5)) into 0
* [misc]backup-simplify:  Simplify (* -1 -2.0) into 2.0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* (- 2.0) 0.5)) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ (- 1.0) 0) into (- 1.0)
* [misc]backup-simplify:  Simplify (- (/ (* 1.5 (exp (* 3 (- (log 2.0) (log x))))) 0.25) (+ (* (* 4.0 (+ (exp (* 3 (- (log 2.0) (log x)))) (exp (* 3 (- (log 0.5) (* 2 (log x))))))) (/ (- 1.0) 0.25)))) into (+ (* 22.0 (exp (* 3 (- (log 2.0) (log x))))) (* 16.0 (exp (* 3 (- (log 0.5) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (+ (* 22.0 (exp (* 3 (- (log 2.0) (log x))))) (* 16.0 (exp (* 3 (- (log 0.5) (* 2 (log x))))))) into (+ (* 22.0 (exp (* 3 (- (log 2.0) (log x))))) (* 16.0 (exp (* 3 (- (log 0.5) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.0) 2)) (pow 2.0 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 2.0 1)))) 2) into (/ -0.5 (pow 2.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 2.0)) into (- (log 2.0) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -0.5 (pow 2.0 2))) (+ (* 0 0.5) (* 0 (- (log 2.0) (log x))))) into (- (* 1.5 (/ 1 (pow 2.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 2.0) (log x)))) (+ (* (/ (pow 1.5 2) 2)) (* (/ (pow (- (* 1.5 (/ 1 (pow 2.0 2)))) 1) 1)))) into (* (exp (* 3 (- (log 2.0) (log x)))) (- 1.125 (* 1.5 (/ 1 (pow 2.0 2)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 2.0) (log x)))) (- 1.125 (* 1.5 (/ 1 (pow 2.0 2))))) 0) into (- (* 1.125 (exp (* 3 (- (log 2.0) (log x))))) (* 1.5 (/ (exp (* 3 (- (log 2.0) (log x)))) (pow 2.0 2))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 0.5))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 0.5))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -2.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (- 1.0) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 1.0)) into (- 1.0)
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* (- 2.0) 0) (* (- 1.0) 0.5))) into (- 0.5)
* [misc]backup-simplify:  Simplify (* -1 -2.0) into 2.0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (* -1 -2.0) into 2.0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (* 2.0 2.0) into 4.0
* [misc]backup-simplify:  Simplify (+ (- 0.5) 4.0) into 3.5
* [misc]backup-simplify:  Simplify (- (/ (- (* 1.125 (exp (* 3 (- (log 2.0) (log x))))) (* 1.5 (/ (exp (* 3 (- (log 2.0) (log x)))) (pow 2.0 2)))) 0.25) (+ (* (* 4.0 (+ (exp (* 3 (- (log 2.0) (log x)))) (exp (* 3 (- (log 0.5) (* 2 (log x))))))) (/ 3.5 0.25)) (* (+ (* 22.0 (exp (* 3 (- (log 2.0) (log x))))) (* 16.0 (exp (* 3 (- (log 0.5) (* 2 (log x))))))) (/ (- 1.0) 0.25)))) into (- (+ (* 36.5 (exp (* 3 (- (log 2.0) (log x))))) (* 8.0 (exp (* 3 (- (log 0.5) (* 2 (log x))))))) (* 6.0 (/ (exp (* 3 (- (log 2.0) (log x)))) (pow 2.0 2))))
* [misc]backup-simplify:  Simplify (- (+ (* 36.5 (exp (* 3 (- (log 2.0) (log x))))) (* 8.0 (exp (* 3 (- (log 0.5) (* 2 (log x))))))) (* 6.0 (/ (exp (* 3 (- (log 2.0) (log x)))) (pow 2.0 2)))) into (- (+ (* 36.5 (exp (* 3 (- (log 2.0) (log x))))) (* 8.0 (exp (* 3 (- (log 0.5) (* 2 (log x))))))) (* 6.0 (/ (exp (* 3 (- (log 2.0) (log x)))) (pow 2.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (+ (* 36.5 (exp (* 3 (- (log 2.0) (log (/ 1 (- x))))))) (* 8.0 (exp (* 3 (- (log 0.5) (* 2 (log (/ 1 (- x))))))))) (* 6.0 (/ (exp (* 3 (- (log 2.0) (log (/ 1 (- x)))))) (pow 2.0 2)))) (pow (/ 1 (- x)) 6)) (+ (* (+ (* 22.0 (exp (* 3 (- (log 2.0) (log (/ 1 (- x))))))) (* 16.0 (exp (* 3 (- (log 0.5) (* 2 (log (/ 1 (- x))))))))) (pow (/ 1 (- x)) 5)) (* (* 4.0 (+ (exp (* 3 (- (log 2.0) (log (/ 1 (- x)))))) (exp (* 3 (- (log 0.5) (* 2 (log (/ 1 (- x))))))))) (pow (/ 1 (- x)) 4)))) into (- (+ (* 4.0 (/ (exp (* 3 (- (log 0.5) (* 2 (log (/ -1 x)))))) (pow x 4))) (+ (* 4.0 (/ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) (pow x 4))) (+ (* 36.5 (/ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) (pow x 6))) (* 8.0 (/ (exp (* 3 (- (log 0.5) (* 2 (log (/ -1 x)))))) (pow x 6)))))) (+ (* 6.0 (/ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) (* (pow 2.0 2) (pow x 6)))) (+ (* 22.0 (/ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) (pow x 5))) (* 16.0 (/ (exp (* 3 (- (log 0.5) (* 2 (log (/ -1 x)))))) (pow x 5))))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (exp (* (log (* 0.5 (* x x))) 3))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (* (log (* 0.5 (* x x))) 3)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (53 enodes)
* * [misc]simplify:  iters left: 1 (56 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 3)) (* 3 (log 0.5)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 3)) (* 3 (log 0.5)))
* * * * [misc]progress:  [ 2 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (exp (* (log (* 0.5 (* x x))) 3))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (* (log (* 0.5 (* x x))) 3)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (53 enodes)
* * [misc]simplify:  iters left: 1 (56 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 3)) (* 3 (log 0.5)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 3)) (* 3 (log 0.5)))
* * * * [misc]progress:  [ 3 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) (* 1 3))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 4 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (* (pow 0.5 3) (pow (* x x) 3))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (pow 0.5 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow 0.5 3)
* [exit]simplify:  Simplified to (pow 0.5 3)
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 5 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* 0.5 (* x x)))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (* (* 0.5 (* x x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (90 enodes)
* [exit]simplify:  Simplified to (* (* 0.5 (* x x)) (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (* (* 0.5 (* x x)) (* 0.5 (* x x)))
* * * * [misc]progress:  [ 6 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (pow (* 0.5 (* x x)) 3) 1)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* * * * [misc]progress:  [ 7 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (exp (log (pow (* 0.5 (* x x)) 3)))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (log (pow (* 0.5 (* x x)) 3))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (234 enodes)
* [exit]simplify:  Simplified to (* (log (* 0.5 (* x x))) 3)
* [exit]simplify:  Simplified to (* (log (* 0.5 (* x x))) 3)
* * * * [misc]progress:  [ 8 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (log (exp (pow (* 0.5 (* x x)) 3)))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (exp (pow (* 0.5 (* x x)) 3))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (179 enodes)
* * [misc]simplify:  iters left: 2 (376 enodes)
* * [misc]simplify:  iters left: 1 (481 enodes)
* [exit]simplify:  Simplified to (pow (exp (pow 0.5 3)) (pow (* x x) 3))
* [exit]simplify:  Simplified to (pow (exp (pow 0.5 3)) (pow (* x x) 3))
* * * * [misc]progress:  [ 9 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (* (* (cbrt (pow (* 0.5 (* x x)) 3)) (cbrt (pow (* 0.5 (* x x)) 3))) (cbrt (pow (* 0.5 (* x x)) 3)))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* 0.5 (* x x)) 3)) (cbrt (pow (* 0.5 (* x x)) 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (120 enodes)
* * [misc]simplify:  iters left: 2 (274 enodes)
* * [misc]simplify:  iters left: 1 (421 enodes)
* [exit]simplify:  Simplified to (* (* 0.5 (* x x)) (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (* (* 0.5 (* x x)) (* 0.5 (* x x)))
* [enter]simplify:  Simplifying (cbrt (pow (* 0.5 (* x x)) 3))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (171 enodes)
* * [misc]simplify:  iters left: 2 (330 enodes)
* * [misc]simplify:  iters left: 1 (393 enodes)
* [exit]simplify:  Simplified to (* 0.5 (* x x))
* [exit]simplify:  Simplified to (* 0.5 (* x x))
* * * * [misc]progress:  [ 10 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (cbrt (* (* (pow (* 0.5 (* x x)) 3) (pow (* 0.5 (* x x)) 3)) (pow (* 0.5 (* x x)) 3)))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (* (* (pow (* 0.5 (* x x)) 3) (pow (* 0.5 (* x x)) 3)) (pow (* 0.5 (* x x)) 3))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (435 enodes)
* [exit]simplify:  Simplified to (pow (pow (* 0.5 (* x x)) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* 0.5 (* x x)) 3) 3)
* * * * [misc]progress:  [ 11 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (* (pow 0.5 3) (pow (* x x) 3))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (pow 0.5 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow 0.5 3)
* [exit]simplify:  Simplified to (pow 0.5 3)
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 12 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (* (* 0.5 (* x x)) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (* (* 0.5 (* x x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (90 enodes)
* [exit]simplify:  Simplified to (* (* 0.5 (* x x)) (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (* (* 0.5 (* x x)) (* 0.5 (* x x)))
* * * * [misc]progress:  [ 13 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* 0.5 (* x x)))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* * * * [misc]progress:  [ 14 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (* (sqrt (pow (* 0.5 (* x x)) 3)) (sqrt (pow (* 0.5 (* x x)) 3)))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (sqrt (pow (* 0.5 (* x x)) 3))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (150 enodes)
* * [misc]simplify:  iters left: 2 (295 enodes)
* * [misc]simplify:  iters left: 1 (461 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (* 0.5 (* x x)) 3))
* [exit]simplify:  Simplified to (sqrt (pow (* 0.5 (* x x)) 3))
* [enter]simplify:  Simplifying (sqrt (pow (* 0.5 (* x x)) 3))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (150 enodes)
* * [misc]simplify:  iters left: 2 (295 enodes)
* * [misc]simplify:  iters left: 1 (461 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (* 0.5 (* x x)) 3))
* [exit]simplify:  Simplified to (sqrt (pow (* 0.5 (* x x)) 3))
* * * * [misc]progress:  [ 15 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (* 1 (pow (* 0.5 (* x x)) 3))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* * * * [misc]progress:  [ 16 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (exp (* (log (+ 1.0 (* -2.0 x))) 3)) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (* (log (+ 1.0 (* -2.0 x))) 3)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* 3 (log (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (* 3 (log (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 17 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (exp (* (log (+ 1.0 (* -2.0 x))) 3)) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (* (log (+ 1.0 (* -2.0 x))) 3)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* 3 (log (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (* 3 (log (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 18 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) (* 1 3)) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 19 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (pow (* (cbrt (+ 1.0 (* -2.0 x))) (cbrt (+ 1.0 (* -2.0 x)))) 3) (pow (cbrt (+ 1.0 (* -2.0 x))) 3)) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (+ 1.0 (* -2.0 x))) (cbrt (+ 1.0 (* -2.0 x)))) 3)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (45 enodes)
* * [misc]simplify:  iters left: 2 (116 enodes)
* * [misc]simplify:  iters left: 1 (241 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))
* [enter]simplify:  Simplifying (pow (cbrt (+ 1.0 (* -2.0 x))) 3)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (+ (* x -2.0) 1.0)
* [exit]simplify:  Simplified to (+ (* x -2.0) 1.0)
* * * * [misc]progress:  [ 20 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (pow (sqrt (+ 1.0 (* -2.0 x))) 3) (pow (sqrt (+ 1.0 (* -2.0 x))) 3)) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (pow (sqrt (+ 1.0 (* -2.0 x))) 3)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (* (sqrt (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))
* [enter]simplify:  Simplifying (pow (sqrt (+ 1.0 (* -2.0 x))) 3)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (* (sqrt (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 21 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (pow 1 3) (pow (+ 1.0 (* -2.0 x)) 3)) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (pow 1 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (+ 1.0 (* -2.0 x)) 3)
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* * [misc]simplify:  iters left: 2 (98 enodes)
* * [misc]simplify:  iters left: 1 (348 enodes)
* [exit]simplify:  Simplified to (pow (+ (* x -2.0) 1.0) 3)
* [exit]simplify:  Simplified to (pow (+ (* x -2.0) 1.0) 3)
* * * * [misc]progress:  [ 22 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (+ 1.0 (* -2.0 x))) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (141 enodes)
* * [misc]simplify:  iters left: 1 (208 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 23 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (pow (+ 1.0 (* -2.0 x)) 3) 1) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* * * * [misc]progress:  [ 24 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (exp (log (pow (+ 1.0 (* -2.0 x)) 3))) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (log (pow (+ 1.0 (* -2.0 x)) 3))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (106 enodes)
* * [misc]simplify:  iters left: 2 (360 enodes)
* [exit]simplify:  Simplified to (* (log (+ (* x -2.0) 1.0)) 3)
* [exit]simplify:  Simplified to (* (log (+ (* x -2.0) 1.0)) 3)
* * * * [misc]progress:  [ 25 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (log (exp (pow (+ 1.0 (* -2.0 x)) 3))) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (exp (pow (+ 1.0 (* -2.0 x)) 3))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (124 enodes)
* * [misc]simplify:  iters left: 2 (452 enodes)
* [exit]simplify:  Simplified to (exp (pow (+ (* x -2.0) 1.0) 3))
* [exit]simplify:  Simplified to (exp (pow (+ (* x -2.0) 1.0) 3))
* * * * [misc]progress:  [ 26 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (* (cbrt (pow (+ 1.0 (* -2.0 x)) 3)) (cbrt (pow (+ 1.0 (* -2.0 x)) 3))) (cbrt (pow (+ 1.0 (* -2.0 x)) 3))) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (+ 1.0 (* -2.0 x)) 3)) (cbrt (pow (+ 1.0 (* -2.0 x)) 3)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (72 enodes)
* * [misc]simplify:  iters left: 2 (228 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))
* [enter]simplify:  Simplifying (cbrt (pow (+ 1.0 (* -2.0 x)) 3))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (139 enodes)
* * [misc]simplify:  iters left: 2 (471 enodes)
* [exit]simplify:  Simplified to (+ (* x -2.0) 1.0)
* [exit]simplify:  Simplified to (+ (* x -2.0) 1.0)
* * * * [misc]progress:  [ 27 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (cbrt (* (* (pow (+ 1.0 (* -2.0 x)) 3) (pow (+ 1.0 (* -2.0 x)) 3)) (pow (+ 1.0 (* -2.0 x)) 3))) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (* (* (pow (+ 1.0 (* -2.0 x)) 3) (pow (+ 1.0 (* -2.0 x)) 3)) (pow (+ 1.0 (* -2.0 x)) 3))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (299 enodes)
* [exit]simplify:  Simplified to (pow (pow (+ (* x -2.0) 1.0) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (+ (* x -2.0) 1.0) 3) 3)
* * * * [misc]progress:  [ 28 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (pow (* (cbrt (+ 1.0 (* -2.0 x))) (cbrt (+ 1.0 (* -2.0 x)))) 3) (pow (cbrt (+ 1.0 (* -2.0 x))) 3)) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (+ 1.0 (* -2.0 x))) (cbrt (+ 1.0 (* -2.0 x)))) 3)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (45 enodes)
* * [misc]simplify:  iters left: 2 (116 enodes)
* * [misc]simplify:  iters left: 1 (241 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))
* [enter]simplify:  Simplifying (pow (cbrt (+ 1.0 (* -2.0 x))) 3)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (+ (* x -2.0) 1.0)
* [exit]simplify:  Simplified to (+ (* x -2.0) 1.0)
* * * * [misc]progress:  [ 29 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (pow (sqrt (+ 1.0 (* -2.0 x))) 3) (pow (sqrt (+ 1.0 (* -2.0 x))) 3)) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (pow (sqrt (+ 1.0 (* -2.0 x))) 3)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (* (sqrt (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))
* [enter]simplify:  Simplifying (pow (sqrt (+ 1.0 (* -2.0 x))) 3)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (* (sqrt (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 30 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (pow 1 3) (pow (+ 1.0 (* -2.0 x)) 3)) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (pow 1 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (+ 1.0 (* -2.0 x)) 3)
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* * [misc]simplify:  iters left: 2 (98 enodes)
* * [misc]simplify:  iters left: 1 (348 enodes)
* [exit]simplify:  Simplified to (pow (+ (* x -2.0) 1.0) 3)
* [exit]simplify:  Simplified to (pow (+ (* x -2.0) 1.0) 3)
* * * * [misc]progress:  [ 31 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (/ (pow (+ (pow 1.0 3) (pow (* -2.0 x) 3)) 3) (pow (+ (* 1.0 1.0) (- (* (* -2.0 x) (* -2.0 x)) (* 1.0 (* -2.0 x)))) 3)) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (pow (+ (pow 1.0 3) (pow (* -2.0 x) 3)) 3)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (227 enodes)
* [exit]simplify:  Simplified to (pow (+ (pow 1.0 3) (pow (* -2.0 x) 3)) 3)
* [exit]simplify:  Simplified to (pow (+ (pow 1.0 3) (pow (* -2.0 x) 3)) 3)
* [enter]simplify:  Simplifying (pow (+ (* 1.0 1.0) (- (* (* -2.0 x) (* -2.0 x)) (* 1.0 (* -2.0 x)))) 3)
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (83 enodes)
* * [misc]simplify:  iters left: 3 (275 enodes)
* [exit]simplify:  Simplified to (pow (+ (* 1.0 1.0) (* (- (* -2.0 x) 1.0) (* -2.0 x))) 3)
* [exit]simplify:  Simplified to (pow (+ (* 1.0 1.0) (* (- (* -2.0 x) 1.0) (* -2.0 x))) 3)
* * * * [misc]progress:  [ 32 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (/ (pow (- (* 1.0 1.0) (* (* -2.0 x) (* -2.0 x))) 3) (pow (- 1.0 (* -2.0 x)) 3)) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (pow (- (* 1.0 1.0) (* (* -2.0 x) (* -2.0 x))) 3)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (315 enodes)
* [exit]simplify:  Simplified to (pow (* (- 1.0 (* -2.0 x)) (+ (* -2.0 x) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (* (- 1.0 (* -2.0 x)) (+ (* -2.0 x) 1.0)) 3)
* [enter]simplify:  Simplifying (pow (- 1.0 (* -2.0 x)) 3)
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (120 enodes)
* * [misc]simplify:  iters left: 1 (494 enodes)
* [exit]simplify:  Simplified to (pow (- 1.0 (* x -2.0)) 3)
* [exit]simplify:  Simplified to (pow (- 1.0 (* x -2.0)) 3)
* * * * [misc]progress:  [ 33 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ 1.0 (* -2.0 x)) (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (141 enodes)
* * [misc]simplify:  iters left: 1 (208 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 34 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (+ 1.0 (* -2.0 x))) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* * * * [misc]progress:  [ 35 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (sqrt (pow (+ 1.0 (* -2.0 x)) 3)) (sqrt (pow (+ 1.0 (* -2.0 x)) 3))) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (sqrt (pow (+ 1.0 (* -2.0 x)) 3))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (343 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (+ (* x -2.0) 1.0) 3))
* [exit]simplify:  Simplified to (sqrt (pow (+ (* x -2.0) 1.0) 3))
* [enter]simplify:  Simplifying (sqrt (pow (+ 1.0 (* -2.0 x)) 3))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (343 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (+ (* x -2.0) 1.0) 3))
* [exit]simplify:  Simplified to (sqrt (pow (+ (* x -2.0) 1.0) 3))
* * * * [misc]progress:  [ 36 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* 1 (pow (+ 1.0 (* -2.0 x)) 3)) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* * * * [misc]progress:  [ 37 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (pow (+ (* x -2.0) 1.0) (+ 1 1)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 38 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (pow (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) 1))))>
* [enter]simplify:  Simplifying (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (141 enodes)
* * [misc]simplify:  iters left: 1 (215 enodes)
* [exit]simplify:  Simplified to (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))
* [exit]simplify:  Simplified to (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))
* * * * [misc]progress:  [ 39 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (pow (+ (* x -2.0) 1.0) 2))))>
* * * * [misc]progress:  [ 40 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (pow (+ (* x -2.0) 1.0) (+ 1 1)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 41 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (pow (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) 1))))>
* * * * [misc]progress:  [ 42 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (exp (+ (log (+ (* x -2.0) 1.0)) (log (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (+ (log (+ (* x -2.0) 1.0)) (log (+ (* x -2.0) 1.0)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (+ (log (+ 1.0 (* x -2.0))) (log (+ 1.0 (* x -2.0))))
* [exit]simplify:  Simplified to (+ (log (+ 1.0 (* x -2.0))) (log (+ 1.0 (* x -2.0))))
* * * * [misc]progress:  [ 43 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (exp (log (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (log (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (91 enodes)
* * [misc]simplify:  iters left: 2 (136 enodes)
* * [misc]simplify:  iters left: 1 (194 enodes)
* [exit]simplify:  Simplified to (+ (log (+ 1.0 (* x -2.0))) (log (+ 1.0 (* x -2.0))))
* [exit]simplify:  Simplified to (+ (log (+ 1.0 (* x -2.0))) (log (+ 1.0 (* x -2.0))))
* * * * [misc]progress:  [ 44 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (log (exp (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (exp (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (134 enodes)
* * [misc]simplify:  iters left: 2 (275 enodes)
* * [misc]simplify:  iters left: 1 (464 enodes)
* [exit]simplify:  Simplified to (exp (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))
* [exit]simplify:  Simplified to (exp (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))
* * * * [misc]progress:  [ 45 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (cbrt (* (* (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0)) (* (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0)) (* (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (pow (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))) 3)
* [exit]simplify:  Simplified to (pow (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))) 3)
* * * * [misc]progress:  [ 46 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (* (cbrt (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (cbrt (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (cbrt (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (cbrt (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (139 enodes)
* * [misc]simplify:  iters left: 1 (205 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))) (cbrt (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))) (cbrt (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (138 enodes)
* * [misc]simplify:  iters left: 1 (197 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))
* [exit]simplify:  Simplified to (cbrt (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))
* * * * [misc]progress:  [ 47 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (cbrt (* (* (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* [exit]simplify:  Simplified to (* (pow (+ 1.0 (* x -2.0)) 3) (pow (+ 1.0 (* x -2.0)) 3))
* [exit]simplify:  Simplified to (* (pow (+ 1.0 (* x -2.0)) 3) (pow (+ 1.0 (* x -2.0)) 3))
* * * * [misc]progress:  [ 48 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (sqrt (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (sqrt (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (sqrt (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (139 enodes)
* * [misc]simplify:  iters left: 1 (205 enodes)
* [exit]simplify:  Simplified to (fabs (+ 1.0 (* x -2.0)))
* [exit]simplify:  Simplified to (fabs (+ 1.0 (* x -2.0)))
* [enter]simplify:  Simplifying (sqrt (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (139 enodes)
* * [misc]simplify:  iters left: 1 (205 enodes)
* [exit]simplify:  Simplified to (fabs (+ 1.0 (* x -2.0)))
* [exit]simplify:  Simplified to (fabs (+ 1.0 (* x -2.0)))
* * * * [misc]progress:  [ 49 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (/ (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (+ (pow (* x -2.0) 3) (pow 1.0 3))) (* (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))))))))>
* [enter]simplify:  Simplifying (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (+ (pow (* x -2.0) 3) (pow 1.0 3)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (83 enodes)
* * [misc]simplify:  iters left: 3 (315 enodes)
* [exit]simplify:  Simplified to (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (+ (pow (* x -2.0) 3) (pow 1.0 3)))
* [exit]simplify:  Simplified to (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (+ (pow (* x -2.0) 3) (pow 1.0 3)))
* [enter]simplify:  Simplifying (* (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (99 enodes)
* * [misc]simplify:  iters left: 3 (420 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x -2.0) (* x -2.0)) (* (- 1.0 (* x -2.0)) 1.0)) (+ (* (* x -2.0) (* x -2.0)) (* (- 1.0 (* x -2.0)) 1.0)))
* [exit]simplify:  Simplified to (* (+ (* (* x -2.0) (* x -2.0)) (* (- 1.0 (* x -2.0)) 1.0)) (+ (* (* x -2.0) (* x -2.0)) (* (- 1.0 (* x -2.0)) 1.0)))
* * * * [misc]progress:  [ 50 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (/ (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0))) (* (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))) (- (* x -2.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (264 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* x -2.0) 1.0) (- (* x -2.0) 1.0)) (+ (pow (* x -2.0) 3) (pow 1.0 3)))
* [exit]simplify:  Simplified to (* (* (+ (* x -2.0) 1.0) (- (* x -2.0) 1.0)) (+ (pow (* x -2.0) 3) (pow 1.0 3)))
* [enter]simplify:  Simplifying (* (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))) (- (* x -2.0) 1.0))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (216 enodes)
* [exit]simplify:  Simplified to (* (+ (* (- (* x -2.0) 1.0) (* x -2.0)) (* 1.0 1.0)) (- (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (* (+ (* (- (* x -2.0) 1.0) (* x -2.0)) (* 1.0 1.0)) (- (* x -2.0) 1.0))
* * * * [misc]progress:  [ 51 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (/ (* (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)) (+ (pow (* x -2.0) 3) (pow 1.0 3))) (* (- (* x -2.0) 1.0) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))))))))>
* [enter]simplify:  Simplifying (* (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)) (+ (pow (* x -2.0) 3) (pow 1.0 3)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* [exit]simplify:  Simplified to (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)))
* [exit]simplify:  Simplified to (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)))
* [enter]simplify:  Simplifying (* (- (* x -2.0) 1.0) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (109 enodes)
* * [misc]simplify:  iters left: 3 (369 enodes)
* [exit]simplify:  Simplified to (+ (* (* 1.0 1.0) (- (* x -2.0) 1.0)) (* (* (- (* x -2.0) 1.0) (- (* x -2.0) 1.0)) (* x -2.0)))
* [exit]simplify:  Simplified to (+ (* (* 1.0 1.0) (- (* x -2.0) 1.0)) (* (* (- (* x -2.0) 1.0) (- (* x -2.0) 1.0)) (* x -2.0)))
* * * * [misc]progress:  [ 52 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (/ (* (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)) (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0))) (* (- (* x -2.0) 1.0) (- (* x -2.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)) (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (141 enodes)
* [exit]simplify:  Simplified to (* (* (+ 1.0 (* x -2.0)) (- (* x -2.0) 1.0)) (* (+ 1.0 (* x -2.0)) (- (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (* (* (+ 1.0 (* x -2.0)) (- (* x -2.0) 1.0)) (* (+ 1.0 (* x -2.0)) (- (* x -2.0) 1.0)))
* [enter]simplify:  Simplifying (* (- (* x -2.0) 1.0) (- (* x -2.0) 1.0))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (112 enodes)
* * [misc]simplify:  iters left: 1 (206 enodes)
* [exit]simplify:  Simplified to (* (- (* x -2.0) 1.0) (- (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (* (- (* x -2.0) 1.0) (- (* x -2.0) 1.0))
* * * * [misc]progress:  [ 53 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* 1 (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))>
* * * * [misc]progress:  [ 54 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (* x -2.0)) (* (+ (* x -2.0) 1.0) 1.0)))))>
* [enter]simplify:  Simplifying (* (+ (* x -2.0) 1.0) (* x -2.0))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (75 enodes)
* * [misc]simplify:  iters left: 1 (77 enodes)
* [exit]simplify:  Simplified to (* (+ 1.0 (* x -2.0)) (* x -2.0))
* [exit]simplify:  Simplified to (* (+ 1.0 (* x -2.0)) (* x -2.0))
* [enter]simplify:  Simplifying (* (+ (* x -2.0) 1.0) 1.0)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* 1.0 (+ 1.0 (* x -2.0)))
* [exit]simplify:  Simplified to (* 1.0 (+ 1.0 (* x -2.0)))
* * * * [misc]progress:  [ 55 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (+ (* (* x -2.0) (+ (* x -2.0) 1.0)) (* 1.0 (+ (* x -2.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (* x -2.0) (+ (* x -2.0) 1.0))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (65 enodes)
* * [misc]simplify:  iters left: 2 (99 enodes)
* [exit]simplify:  Simplified to (* (+ 1.0 (* x -2.0)) (* x -2.0))
* [exit]simplify:  Simplified to (* (+ 1.0 (* x -2.0)) (* x -2.0))
* [enter]simplify:  Simplifying (* 1.0 (+ (* x -2.0) 1.0))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* [exit]simplify:  Simplified to (* 1.0 (+ (* -2.0 x) 1.0))
* [exit]simplify:  Simplified to (* 1.0 (+ (* -2.0 x) 1.0))
* * * * [misc]progress:  [ 56 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (* (+ (* x -2.0) 1.0) (* (cbrt (+ (* x -2.0) 1.0)) (cbrt (+ (* x -2.0) 1.0)))) (cbrt (+ (* x -2.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (+ (* x -2.0) 1.0) (* (cbrt (+ (* x -2.0) 1.0)) (cbrt (+ (* x -2.0) 1.0))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (55 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ 1.0 (* x -2.0))) (+ 1.0 (* x -2.0))) (cbrt (+ 1.0 (* x -2.0))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ 1.0 (* x -2.0))) (+ 1.0 (* x -2.0))) (cbrt (+ 1.0 (* x -2.0))))
* * * * [misc]progress:  [ 57 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (* (+ (* x -2.0) 1.0) (sqrt (+ (* x -2.0) 1.0))) (sqrt (+ (* x -2.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (+ (* x -2.0) 1.0) (sqrt (+ (* x -2.0) 1.0)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ 1.0 (* x -2.0))) (+ 1.0 (* x -2.0)))
* [exit]simplify:  Simplified to (* (sqrt (+ 1.0 (* x -2.0))) (+ 1.0 (* x -2.0)))
* * * * [misc]progress:  [ 58 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (* (+ (* x -2.0) 1.0) 1) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (* (+ (* x -2.0) 1.0) 1)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (31 enodes)
* [exit]simplify:  Simplified to (+ 1.0 (* x -2.0))
* [exit]simplify:  Simplified to (+ 1.0 (* x -2.0))
* * * * [misc]progress:  [ 59 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (* (cbrt (+ (* x -2.0) 1.0)) (cbrt (+ (* x -2.0) 1.0))) (* (cbrt (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ 1.0 (* x -2.0))) (+ 1.0 (* x -2.0)))
* [exit]simplify:  Simplified to (* (cbrt (+ 1.0 (* x -2.0))) (+ 1.0 (* x -2.0)))
* * * * [misc]progress:  [ 60 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (sqrt (+ (* x -2.0) 1.0)) (* (sqrt (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ 1.0 (* x -2.0))) (+ 1.0 (* x -2.0)))
* [exit]simplify:  Simplified to (* (sqrt (+ 1.0 (* x -2.0))) (+ 1.0 (* x -2.0)))
* * * * [misc]progress:  [ 61 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* 1 (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (141 enodes)
* * [misc]simplify:  iters left: 1 (215 enodes)
* [exit]simplify:  Simplified to (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))
* [exit]simplify:  Simplified to (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))
* * * * [misc]progress:  [ 62 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (/ (* (+ (* x -2.0) 1.0) (+ (pow (* x -2.0) 3) (pow 1.0 3))) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (* (+ (* x -2.0) 1.0) (+ (pow (* x -2.0) 3) (pow 1.0 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (367 enodes)
* [exit]simplify:  Simplified to (* (+ (pow 1.0 3) (pow (* x -2.0) 3)) (+ 1.0 (* x -2.0)))
* [exit]simplify:  Simplified to (* (+ (pow 1.0 3) (pow (* x -2.0) 3)) (+ 1.0 (* x -2.0)))
* * * * [misc]progress:  [ 63 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (/ (* (+ (* x -2.0) 1.0) (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0))) (- (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (* (+ (* x -2.0) 1.0) (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (146 enodes)
* [exit]simplify:  Simplified to (* (- (* x -2.0) 1.0) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))
* [exit]simplify:  Simplified to (* (- (* x -2.0) 1.0) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))
* * * * [misc]progress:  [ 64 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (/ (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (+ (* x -2.0) 1.0)) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (+ (* x -2.0) 1.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (285 enodes)
* [exit]simplify:  Simplified to (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 65 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (/ (* (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)) (+ (* x -2.0) 1.0)) (- (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (* (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)) (+ (* x -2.0) 1.0))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (262 enodes)
* [exit]simplify:  Simplified to (* (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))) (- (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (* (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))) (- (* x -2.0) 1.0))
* * * * [misc]progress:  [ 66 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* * * * [misc]progress:  [ 67 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (pow (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) 1))>
* * * * [misc]progress:  [ 68 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (exp (- (log (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (log (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (- (log (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (log (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (197 enodes)
* [exit]simplify:  Simplified to (- (log (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (log (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))))))
* [exit]simplify:  Simplified to (- (log (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (log (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))))))
* * * * [misc]progress:  [ 69 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (log (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (log (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))))
* [exit]simplify:  Simplified to (log (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))))
* * * * [misc]progress:  [ 70 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (exp (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (193 enodes)
* [exit]simplify:  Simplified to (exp (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))))
* [exit]simplify:  Simplified to (exp (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))))
* * * * [misc]progress:  [ 71 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (/ (* (* (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (* (* (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (/ (* (* (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (* (* (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (87 enodes)
* * [misc]simplify:  iters left: 4 (428 enodes)
* [exit]simplify:  Simplified to (pow (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) 3)
* [exit]simplify:  Simplified to (pow (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) 3)
* * * * [misc]progress:  [ 72 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))) (cbrt (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))) (cbrt (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))) (cbrt (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (* (cbrt (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))))) (cbrt (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))))))
* [exit]simplify:  Simplified to (* (cbrt (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))))) (cbrt (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))))))
* [enter]simplify:  Simplifying (cbrt (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (193 enodes)
* [exit]simplify:  Simplified to (cbrt (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))))
* [exit]simplify:  Simplified to (cbrt (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))))
* * * * [misc]progress:  [ 73 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (* (* (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (232 enodes)
* [exit]simplify:  Simplified to (pow (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))) 3)
* [exit]simplify:  Simplified to (pow (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))) 3)
* * * * [misc]progress:  [ 74 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))) (sqrt (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (sqrt (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (193 enodes)
* [exit]simplify:  Simplified to (sqrt (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))))
* [exit]simplify:  Simplified to (sqrt (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))))
* [enter]simplify:  Simplifying (sqrt (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (193 enodes)
* [exit]simplify:  Simplified to (sqrt (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))))
* [exit]simplify:  Simplified to (sqrt (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))))
* * * * [misc]progress:  [ 75 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (- (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))>
* [enter]simplify:  Simplifying (- (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (443 enodes)
* [exit]simplify:  Simplified to (- (* (pow (* x x) 3) (* (- 0.5) (* 0.5 0.5))) (pow (+ (* x -2.0) 1.0) 3))
* [exit]simplify:  Simplified to (- (* (pow (* x x) 3) (* (- 0.5) (* 0.5 0.5))) (pow (+ (* x -2.0) 1.0) 3))
* [enter]simplify:  Simplifying (- (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (407 enodes)
* [exit]simplify:  Simplified to (- (* (+ 1.0 (* x -2.0)) (- (- 1.0) (* x -2.0))) (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0)))))
* [exit]simplify:  Simplified to (- (* (+ 1.0 (* x -2.0)) (- (- 1.0) (* x -2.0))) (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0)))))
* * * * [misc]progress:  [ 76 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (* (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))) (/ (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (/ (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (* (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (215 enodes)
* [exit]simplify:  Simplified to (* (/ (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))) (/ (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))
* [exit]simplify:  Simplified to (* (/ (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))) (/ (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))
* [enter]simplify:  Simplifying (/ (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (/ (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))))))
* [exit]simplify:  Simplified to (/ (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))))))
* * * * [misc]progress:  [ 77 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))) (/ (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (/ (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (197 enodes)
* [exit]simplify:  Simplified to (/ (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3)))) (sqrt (+ (* (* (* 0.5 x) x) (- (* (* 0.5 x) x) (+ (* x -2.0) 1.0))) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (/ (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3)))) (sqrt (+ (* (* (* 0.5 x) x) (- (* (* 0.5 x) x) (+ (* x -2.0) 1.0))) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* [enter]simplify:  Simplifying (/ (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (/ (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))))))
* [exit]simplify:  Simplified to (/ (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))))))
* * * * [misc]progress:  [ 78 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) 1) (/ (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))>
* [enter]simplify:  Simplifying (/ (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) 1)
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (291 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))))
* [enter]simplify:  Simplifying (/ (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (193 enodes)
* [exit]simplify:  Simplified to (/ (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (/ (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 79 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (* (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))) (/ (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (/ (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (* (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (195 enodes)
* [exit]simplify:  Simplified to (/ (/ (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))) (cbrt (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* 0.5 x) x) (- (* (* 0.5 x) x) (+ (* x -2.0) 1.0)))))) (cbrt (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* 0.5 x) x) (- (* (* 0.5 x) x) (+ (* x -2.0) 1.0))))))
* [exit]simplify:  Simplified to (/ (/ (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))) (cbrt (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* 0.5 x) x) (- (* (* 0.5 x) x) (+ (* x -2.0) 1.0)))))) (cbrt (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* 0.5 x) x) (- (* (* 0.5 x) x) (+ (* x -2.0) 1.0))))))
* [enter]simplify:  Simplifying (/ (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))))))
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))))))
* * * * [misc]progress:  [ 80 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))) (/ (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (/ (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))))))
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))))))
* [enter]simplify:  Simplifying (/ (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))))))
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))))))
* * * * [misc]progress:  [ 81 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) 1) (/ (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))>
* [enter]simplify:  Simplifying (/ (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) 1)
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (279 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))
* [exit]simplify:  Simplified to (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))
* [enter]simplify:  Simplifying (/ (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (193 enodes)
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 82 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))) (/ (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (/ (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (270 enodes)
* [exit]simplify:  Simplified to (/ (- (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (* (cbrt (- (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (- (* (* x x) 0.5) (+ (* x -2.0) 1.0))))) (cbrt (- (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)))))))
* [exit]simplify:  Simplified to (/ (- (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (* (cbrt (- (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (- (* (* x x) 0.5) (+ (* x -2.0) 1.0))))) (cbrt (- (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)))))))
* [enter]simplify:  Simplifying (/ (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* * [misc]simplify:  iters left: 3 (351 enodes)
* [exit]simplify:  Simplified to (/ (+ (+ (* x -2.0) 1.0) (* x (* x 0.5))) (cbrt (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (- (* x (* x 0.5)) (+ (* x -2.0) 1.0)) (* x (* x 0.5))))))
* [exit]simplify:  Simplified to (/ (+ (+ (* x -2.0) 1.0) (* x (* x 0.5))) (cbrt (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (- (* x (* x 0.5)) (+ (* x -2.0) 1.0)) (* x (* x 0.5))))))
* * * * [misc]progress:  [ 83 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))) (/ (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (/ (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (268 enodes)
* [exit]simplify:  Simplified to (/ (- (* (* (* x 0.5) x) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (- (* (* (* x 0.5) x) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (- (* (* x 0.5) x) (+ (* x -2.0) 1.0))))))
* [exit]simplify:  Simplified to (/ (- (* (* (* x 0.5) x) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (- (* (* (* x 0.5) x) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (- (* (* x 0.5) x) (+ (* x -2.0) 1.0))))))
* [enter]simplify:  Simplifying (/ (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* * [misc]simplify:  iters left: 3 (351 enodes)
* [exit]simplify:  Simplified to (/ (+ (+ (* x -2.0) 1.0) (* x (* x 0.5))) (sqrt (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (- (* x (* x 0.5)) (+ (* x -2.0) 1.0)) (* x (* x 0.5))))))
* [exit]simplify:  Simplified to (/ (+ (+ (* x -2.0) 1.0) (* x (* x 0.5))) (sqrt (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (- (* x (* x 0.5)) (+ (* x -2.0) 1.0)) (* x (* x 0.5))))))
* * * * [misc]progress:  [ 84 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) 1) (/ (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))>
* [enter]simplify:  Simplifying (/ (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) 1)
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (+ (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* [enter]simplify:  Simplifying (/ (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (120 enodes)
* * [misc]simplify:  iters left: 3 (356 enodes)
* [exit]simplify:  Simplified to (/ (+ (+ (* x -2.0) 1.0) (* x (* x 0.5))) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (- (* x (* x 0.5)) (+ (* x -2.0) 1.0)) (* x (* x 0.5)))))
* [exit]simplify:  Simplified to (/ (+ (+ (* x -2.0) 1.0) (* x (* x 0.5))) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (- (* x (* x 0.5)) (+ (* x -2.0) 1.0)) (* x (* x 0.5)))))
* * * * [misc]progress:  [ 85 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ 1 (* (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (/ 1 (* (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (288 enodes)
* [exit]simplify:  Simplified to (/ (/ 1 (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (- (* (* x x) 0.5) (+ 1.0 (* -2.0 x))) (* (* x x) 0.5))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (- (* (* x x) 0.5) (+ 1.0 (* -2.0 x))) (* (* x x) 0.5)))))
* [exit]simplify:  Simplified to (/ (/ 1 (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (- (* (* x x) 0.5) (+ 1.0 (* -2.0 x))) (* (* x x) 0.5))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (- (* (* x x) 0.5) (+ 1.0 (* -2.0 x))) (* (* x x) 0.5)))))
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (193 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (cbrt (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (cbrt (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))))
* * * * [misc]progress:  [ 86 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ 1 (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (/ 1 (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (285 enodes)
* [exit]simplify:  Simplified to (/ 1 (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (- (* (* x x) 0.5) (+ 1.0 (* -2.0 x))) (* (* x x) 0.5)))))
* [exit]simplify:  Simplified to (/ 1 (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (- (* (* x x) 0.5) (+ 1.0 (* -2.0 x))) (* (* x x) 0.5)))))
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (193 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (sqrt (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (sqrt (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))))
* * * * [misc]progress:  [ 87 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ 1 1) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))>
* [enter]simplify:  Simplifying (/ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (190 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* (* 0.5 x) x) 3)) (+ (* (- (* (* 0.5 x) x) (+ 1.0 (* x -2.0))) (* (* 0.5 x) x)) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* (* 0.5 x) x) 3)) (+ (* (- (* (* 0.5 x) x) (+ 1.0 (* x -2.0))) (* (* 0.5 x) x)) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))))
* * * * [misc]progress:  [ 88 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ 1 (* (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (/ 1 (* (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (288 enodes)
* [exit]simplify:  Simplified to (/ (/ 1 (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (- (* (* x x) 0.5) (+ 1.0 (* -2.0 x))) (* (* x x) 0.5))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (- (* (* x x) 0.5) (+ 1.0 (* -2.0 x))) (* (* x x) 0.5)))))
* [exit]simplify:  Simplified to (/ (/ 1 (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (- (* (* x x) 0.5) (+ 1.0 (* -2.0 x))) (* (* x x) 0.5))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (- (* (* x x) 0.5) (+ 1.0 (* -2.0 x))) (* (* x x) 0.5)))))
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (193 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (cbrt (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (cbrt (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))))
* * * * [misc]progress:  [ 89 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ 1 (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (/ 1 (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (285 enodes)
* [exit]simplify:  Simplified to (/ 1 (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (- (* (* x x) 0.5) (+ 1.0 (* -2.0 x))) (* (* x x) 0.5)))))
* [exit]simplify:  Simplified to (/ 1 (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (- (* (* x x) 0.5) (+ 1.0 (* -2.0 x))) (* (* x x) 0.5)))))
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (193 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (sqrt (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (sqrt (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))))
* * * * [misc]progress:  [ 90 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ 1 1) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))>
* [enter]simplify:  Simplifying (/ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (190 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* (* 0.5 x) x) 3)) (+ (* (- (* (* 0.5 x) x) (+ 1.0 (* x -2.0))) (* (* 0.5 x) x)) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* (* 0.5 x) x) 3)) (+ (* (- (* (* 0.5 x) x) (+ 1.0 (* x -2.0))) (* (* 0.5 x) x)) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))))
* * * * [misc]progress:  [ 91 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))>
* * * * [misc]progress:  [ 92 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (/ 1 (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))>
* [enter]simplify:  Simplifying (/ 1 (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (286 enodes)
* [exit]simplify:  Simplified to (/ 1 (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (- (* (* x x) 0.5) (+ 1.0 (* -2.0 x))) (* (* x x) 0.5))))
* [exit]simplify:  Simplified to (/ 1 (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (- (* (* x x) 0.5) (+ 1.0 (* -2.0 x))) (* (* x x) 0.5))))
* * * * [misc]progress:  [ 93 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ 1 (/ (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))))>
* [enter]simplify:  Simplifying (/ (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (196 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (* (* x 0.5) x) (- (* (* x 0.5) x) (+ 1.0 (* x -2.0)))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))) (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* (* x 0.5) x) 3)))
* [exit]simplify:  Simplified to (/ (+ (* (* (* x 0.5) x) (- (* (* x 0.5) x) (+ 1.0 (* x -2.0)))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))) (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* (* x 0.5) x) 3)))
* * * * [misc]progress:  [ 94 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (* (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (* (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (196 enodes)
* [exit]simplify:  Simplified to (/ (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (cbrt (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))))) (cbrt (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))))
* [exit]simplify:  Simplified to (/ (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (cbrt (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))))) (cbrt (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))))
* * * * [misc]progress:  [ 95 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (193 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (sqrt (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (sqrt (+ (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))))))
* * * * [misc]progress:  [ 96 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) 1) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) 1)
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (279 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))
* * * * [misc]progress:  [ 97 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (/ (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))))>
* [enter]simplify:  Simplifying (/ (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (197 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0)))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))) (cbrt (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3))))
* [exit]simplify:  Simplified to (/ (+ (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0)))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))) (cbrt (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3))))
* * * * [misc]progress:  [ 98 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (/ (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))))>
* [enter]simplify:  Simplifying (/ (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (197 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0)))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))) (sqrt (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3))))
* [exit]simplify:  Simplified to (/ (+ (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0)))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))) (sqrt (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3))))
* * * * [misc]progress:  [ 99 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (/ (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (/ (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (403 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (* (* x 0.5) x) (- (* (* x 0.5) x) (+ 1.0 (* x -2.0)))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))) (+ (* (* x 0.5) x) (+ 1.0 (* x -2.0))))
* [exit]simplify:  Simplified to (/ (+ (* (* (* x 0.5) x) (- (* (* x 0.5) x) (+ 1.0 (* x -2.0)))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))) (+ (* (* x 0.5) x) (+ 1.0 (* x -2.0))))
* * * * [misc]progress:  [ 100 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ 1 (/ (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))))>
* [enter]simplify:  Simplifying (/ (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (196 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (* (* x 0.5) x) (- (* (* x 0.5) x) (+ 1.0 (* x -2.0)))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))) (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* (* x 0.5) x) 3)))
* [exit]simplify:  Simplified to (/ (+ (* (* (* x 0.5) x) (- (* (* x 0.5) x) (+ 1.0 (* x -2.0)))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))) (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* (* x 0.5) x) 3)))
* * * * [misc]progress:  [ 101 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ 1 (/ (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))))>
* [enter]simplify:  Simplifying (/ (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (196 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (* (* x 0.5) x) (- (* (* x 0.5) x) (+ 1.0 (* x -2.0)))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))) (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* (* x 0.5) x) 3)))
* [exit]simplify:  Simplified to (/ (+ (* (* (* x 0.5) x) (- (* (* x 0.5) x) (+ 1.0 (* x -2.0)))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))) (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* (* x 0.5) x) 3)))
* * * * [misc]progress:  [ 102 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (pow (* (* x x) 0.5) 3) (pow (+ (* x -2.0) 1.0) 3)) (* (* x x) 0.5)) (* (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))))) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (+ (pow (* x -2.0) 3) (pow 1.0 3)))))) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (* (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (pow (* (* x x) 0.5) 3) (pow (+ (* x -2.0) 1.0) 3)) (* (* x x) 0.5)) (* (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))))) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (+ (pow (* x -2.0) 3) (pow 1.0 3))))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (132 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3)) (+ (* (+ (* (* (* 0.5 x) x) (* (* 0.5 x) x)) (* (+ (* (* 0.5 x) x) (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))) (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (+ (pow (* x -2.0) 3) (pow 1.0 3)))) (* (* (- (pow (* (* 0.5 x) x) 3) (pow (+ (* x -2.0) 1.0) 3)) (* (* 0.5 x) x)) (* (+ (* (* x -2.0) (* x -2.0)) (* 1.0 (- 1.0 (* x -2.0)))) (+ (* (* x -2.0) (* x -2.0)) (* 1.0 (- 1.0 (* x -2.0))))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3)) (+ (* (+ (* (* (* 0.5 x) x) (* (* 0.5 x) x)) (* (+ (* (* 0.5 x) x) (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))) (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (+ (pow (* x -2.0) 3) (pow 1.0 3)))) (* (* (- (pow (* (* 0.5 x) x) 3) (pow (+ (* x -2.0) 1.0) 3)) (* (* 0.5 x) x)) (* (+ (* (* x -2.0) (* x -2.0)) (* 1.0 (- 1.0 (* x -2.0)))) (+ (* (* x -2.0) (* x -2.0)) (* 1.0 (- 1.0 (* x -2.0))))))))
* * * * [misc]progress:  [ 103 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (pow (* (* x x) 0.5) 3) (pow (+ (* x -2.0) 1.0) 3)) (* (* x x) 0.5)) (* (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))) (- (* x -2.0) 1.0))) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)))))) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (* (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))) (- (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (pow (* (* x x) 0.5) 3) (pow (+ (* x -2.0) 1.0) 3)) (* (* x x) 0.5)) (* (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))) (- (* x -2.0) 1.0))) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0))))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (129 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* x (* 0.5 x)) 3)) (+ (* (* (* (- (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (+ (pow (* x -2.0) 3) (pow 1.0 3))) (+ (* (* x (* 0.5 x)) (* x (* 0.5 x))) (* (+ (* x -2.0) 1.0) (+ (* x (* 0.5 x)) (+ (* x -2.0) 1.0))))) (* (- (pow (* x (* 0.5 x)) 3) (pow (+ (* x -2.0) 1.0) 3)) (* (* (* x (* 0.5 x)) (- (* x -2.0) 1.0)) (+ (* (* x -2.0) (* x -2.0)) (* (- 1.0 (* x -2.0)) 1.0))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* x (* 0.5 x)) 3)) (+ (* (* (* (- (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (+ (pow (* x -2.0) 3) (pow 1.0 3))) (+ (* (* x (* 0.5 x)) (* x (* 0.5 x))) (* (+ (* x -2.0) 1.0) (+ (* x (* 0.5 x)) (+ (* x -2.0) 1.0))))) (* (- (pow (* x (* 0.5 x)) 3) (pow (+ (* x -2.0) 1.0) 3)) (* (* (* x (* 0.5 x)) (- (* x -2.0) 1.0)) (+ (* (* x -2.0) (* x -2.0)) (* (- 1.0 (* x -2.0)) 1.0))))))
* * * * [misc]progress:  [ 104 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (pow (* (* x x) 0.5) 3) (pow (+ (* x -2.0) 1.0) 3)) (* (* x x) 0.5)) (* (- (* x -2.0) 1.0) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))))) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (* (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)) (+ (pow (* x -2.0) 3) (pow 1.0 3)))))) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (* (- (* x -2.0) 1.0) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (pow (* (* x x) 0.5) 3) (pow (+ (* x -2.0) 1.0) 3)) (* (* x x) 0.5)) (* (- (* x -2.0) 1.0) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))))) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (* (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)) (+ (pow (* x -2.0) 3) (pow 1.0 3))))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (141 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (* (+ (* x -2.0) 1.0) (- (* x -2.0) 1.0))) (+ (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0)))) (* (* (* (* 0.5 (* x x)) (- (* x -2.0) 1.0)) (+ (* (* x -2.0) (* x -2.0)) (* 1.0 (- 1.0 (* x -2.0))))) (- (pow (* 0.5 (* x x)) 3) (pow (+ (* x -2.0) 1.0) 3)))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (* (+ (* x -2.0) 1.0) (- (* x -2.0) 1.0))) (+ (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0)))) (* (* (* (* 0.5 (* x x)) (- (* x -2.0) 1.0)) (+ (* (* x -2.0) (* x -2.0)) (* 1.0 (- 1.0 (* x -2.0))))) (- (pow (* 0.5 (* x x)) 3) (pow (+ (* x -2.0) 1.0) 3)))))
* * * * [misc]progress:  [ 105 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (pow (* (* x x) 0.5) 3) (pow (+ (* x -2.0) 1.0) 3)) (* (* x x) 0.5)) (* (- (* x -2.0) 1.0) (- (* x -2.0) 1.0))) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (* (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)) (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)))))) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (* (- (* x -2.0) 1.0) (- (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (pow (* (* x x) 0.5) 3) (pow (+ (* x -2.0) 1.0) 3)) (* (* x x) 0.5)) (* (- (* x -2.0) 1.0) (- (* x -2.0) 1.0))) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (* (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)) (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (103 enodes)
* * [misc]simplify:  iters left: 4 (439 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 0.5 (* x x)) 3) (pow (+ (* x -2.0) 1.0) 3)) (+ (* (* (* (+ (* x -2.0) 1.0) (- (* x -2.0) 1.0)) (* (+ (* x -2.0) 1.0) (- (* x -2.0) 1.0))) (+ (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0)) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (* (* (* x (* 0.5 x)) (* (- (* x -2.0) 1.0) (- (* x -2.0) 1.0))) (- (pow (* 0.5 (* x x)) 3) (pow (+ (* x -2.0) 1.0) 3)))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 0.5 (* x x)) 3) (pow (+ (* x -2.0) 1.0) 3)) (+ (* (* (* (+ (* x -2.0) 1.0) (- (* x -2.0) 1.0)) (* (+ (* x -2.0) 1.0) (- (* x -2.0) 1.0))) (+ (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0)) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (* (* (* x (* 0.5 x)) (* (- (* x -2.0) 1.0) (- (* x -2.0) 1.0))) (- (pow (* 0.5 (* x x)) 3) (pow (+ (* x -2.0) 1.0) 3)))))
* * * * [misc]progress:  [ 106 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (pow (* (* x x) 0.5) 3) (pow (+ (* x -2.0) 1.0) 3)) (* (* x x) 0.5)) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0)))) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (* (+ (* x -2.0) 1.0) (+ (pow (* x -2.0) 3) (pow 1.0 3)))))) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (pow (* (* x x) 0.5) 3) (pow (+ (* x -2.0) 1.0) 3)) (* (* x x) 0.5)) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0)))) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (* (+ (* x -2.0) 1.0) (+ (pow (* x -2.0) 3) (pow 1.0 3))))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (130 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* 0.5 (* x x)) (* (- (pow (* 0.5 (* x x)) 3) (pow (+ (* x -2.0) 1.0) 3)) (+ (* (* x -2.0) (* x -2.0)) (* 1.0 (- 1.0 (* x -2.0)))))) (* (* (+ (* x -2.0) 1.0) (+ (pow 1.0 3) (pow (* x -2.0) 3))) (+ (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* 0.5 (* x x)) (* (- (pow (* 0.5 (* x x)) 3) (pow (+ (* x -2.0) 1.0) 3)) (+ (* (* x -2.0) (* x -2.0)) (* 1.0 (- 1.0 (* x -2.0)))))) (* (* (+ (* x -2.0) 1.0) (+ (pow 1.0 3) (pow (* x -2.0) 3))) (+ (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))))))
* * * * [misc]progress:  [ 107 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (pow (* (* x x) 0.5) 3) (pow (+ (* x -2.0) 1.0) 3)) (* (* x x) 0.5)) (- (* x -2.0) 1.0)) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (* (+ (* x -2.0) 1.0) (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)))))) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (- (* x -2.0) 1.0))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (pow (* (* x x) 0.5) 3) (pow (+ (* x -2.0) 1.0) 3)) (* (* x x) 0.5)) (- (* x -2.0) 1.0)) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (* (+ (* x -2.0) 1.0) (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0))))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (101 enodes)
* * [misc]simplify:  iters left: 4 (422 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 0.5 (* x x)) 3) (pow (+ (* x -2.0) 1.0) 3)) (+ (* (* (* (* 0.5 x) x) (- (* x -2.0) 1.0)) (- (pow (* 0.5 (* x x)) 3) (pow (+ (* x -2.0) 1.0) 3))) (* (+ (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ (* x -2.0) 1.0) (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)))) (* (* (+ (* x -2.0) 1.0) (- (* x -2.0) 1.0)) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 0.5 (* x x)) 3) (pow (+ (* x -2.0) 1.0) 3)) (+ (* (* (* (* 0.5 x) x) (- (* x -2.0) 1.0)) (- (pow (* 0.5 (* x x)) 3) (pow (+ (* x -2.0) 1.0) 3))) (* (+ (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ (* x -2.0) 1.0) (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)))) (* (* (+ (* x -2.0) 1.0) (- (* x -2.0) 1.0)) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 108 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (pow (* (* x x) 0.5) 3) (pow (+ (* x -2.0) 1.0) 3)) (* (* x x) 0.5)) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0)))) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (+ (* x -2.0) 1.0))))) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (pow (* (* x x) 0.5) 3) (pow (+ (* x -2.0) 1.0) 3)) (* (* x x) 0.5)) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0)))) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (130 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (* 0.5 (* x x)) (+ (* (* x -2.0) (* x -2.0)) (* 1.0 (- 1.0 (* x -2.0))))) (- (pow (* 0.5 (* x x)) 3) (pow (+ (* x -2.0) 1.0) 3))) (* (* (+ (* x -2.0) 1.0) (+ (pow 1.0 3) (pow (* x -2.0) 3))) (+ (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (* 0.5 (* x x)) (+ (* (* x -2.0) (* x -2.0)) (* 1.0 (- 1.0 (* x -2.0))))) (- (pow (* 0.5 (* x x)) 3) (pow (+ (* x -2.0) 1.0) 3))) (* (* (+ (* x -2.0) 1.0) (+ (pow 1.0 3) (pow (* x -2.0) 3))) (+ (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (+ (* x -2.0) 1.0))))))
* * * * [misc]progress:  [ 109 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (pow (* (* x x) 0.5) 3) (pow (+ (* x -2.0) 1.0) 3)) (* (* x x) 0.5)) (- (* x -2.0) 1.0)) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (* (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)) (+ (* x -2.0) 1.0))))) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (- (* x -2.0) 1.0))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (pow (* (* x x) 0.5) 3) (pow (+ (* x -2.0) 1.0) 3)) (* (* x x) 0.5)) (- (* x -2.0) 1.0)) (* (+ (* (* (* x x) 0.5) (* (* x x) 0.5)) (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x x) 0.5) (+ (* x -2.0) 1.0)))) (* (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (107 enodes)
* * [misc]simplify:  iters left: 4 (460 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 0.5 (* x x)) 3) (pow (+ (* x -2.0) 1.0) 3)) (+ (* (* (- (* x -2.0) 1.0) (* 0.5 (* x x))) (- (pow (* 0.5 (* x x)) 3) (pow (+ (* x -2.0) 1.0) 3))) (* (+ (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ (* x -2.0) 1.0) (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)))) (* (* (+ (* x -2.0) 1.0) (- (* x -2.0) 1.0)) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 0.5 (* x x)) 3) (pow (+ (* x -2.0) 1.0) 3)) (+ (* (* (- (* x -2.0) 1.0) (* 0.5 (* x x))) (- (pow (* 0.5 (* x x)) 3) (pow (+ (* x -2.0) 1.0) 3))) (* (+ (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ (* x -2.0) 1.0) (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)))) (* (* (+ (* x -2.0) 1.0) (- (* x -2.0) 1.0)) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 110 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (* x x) 0.5)) (* (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))))) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (+ (pow (* x -2.0) 3) (pow 1.0 3)))))) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (* x x) 0.5)) (* (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))))) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (+ (pow (* x -2.0) 3) (pow 1.0 3))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (113 enodes)
* * [misc]simplify:  iters left: 4 (492 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (+ (pow 1.0 3) (pow (* x -2.0) 3)) (+ (pow 1.0 3) (pow (* x -2.0) 3))) (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (* (* (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* 0.5 (* x x))) (* (- (* 1.0 1.0) (* (* x -2.0) (- 1.0 (* x -2.0)))) (- (* 1.0 1.0) (* (* x -2.0) (- 1.0 (* x -2.0))))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (+ (pow 1.0 3) (pow (* x -2.0) 3)) (+ (pow 1.0 3) (pow (* x -2.0) 3))) (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (* (* (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* 0.5 (* x x))) (* (- (* 1.0 1.0) (* (* x -2.0) (- 1.0 (* x -2.0)))) (- (* 1.0 1.0) (* (* x -2.0) (- 1.0 (* x -2.0))))))))
* * * * [misc]progress:  [ 111 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (* x x) 0.5)) (* (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))) (- (* x -2.0) 1.0))) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)))))) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))) (- (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (* x x) 0.5)) (* (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))) (- (* x -2.0) 1.0))) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0))))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (110 enodes)
* * [misc]simplify:  iters left: 4 (431 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (+ (* (* (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (* (- (* x -2.0) 1.0) (* 0.5 (* x x)))) (+ (* (* x -2.0) (- (* x -2.0) 1.0)) (* 1.0 1.0))) (* (+ (pow 1.0 3) (pow (* x -2.0) 3)) (* (- (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (+ (* (* (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (* (- (* x -2.0) 1.0) (* 0.5 (* x x)))) (+ (* (* x -2.0) (- (* x -2.0) 1.0)) (* 1.0 1.0))) (* (+ (pow 1.0 3) (pow (* x -2.0) 3)) (* (- (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))))
* * * * [misc]progress:  [ 112 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (* x x) 0.5)) (* (- (* x -2.0) 1.0) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))))) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)) (+ (pow (* x -2.0) 3) (pow 1.0 3)))))) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (- (* x -2.0) 1.0) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (* x x) 0.5)) (* (- (* x -2.0) 1.0) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))))) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)) (+ (pow (* x -2.0) 3) (pow 1.0 3))))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (122 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (* (+ (* x -2.0) 1.0) (- (* x -2.0) 1.0)) (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (+ (pow 1.0 3) (pow (* x -2.0) 3))) (* (+ (* (* x -2.0) (* x -2.0)) (* (- 1.0 (* x -2.0)) 1.0)) (* (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (* 0.5 (* x x)) (- (* x -2.0) 1.0))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (* (+ (* x -2.0) 1.0) (- (* x -2.0) 1.0)) (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (+ (pow 1.0 3) (pow (* x -2.0) 3))) (* (+ (* (* x -2.0) (* x -2.0)) (* (- 1.0 (* x -2.0)) 1.0)) (* (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (* 0.5 (* x x)) (- (* x -2.0) 1.0))))))
* * * * [misc]progress:  [ 113 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (* x x) 0.5)) (* (- (* x -2.0) 1.0) (- (* x -2.0) 1.0))) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)) (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)))))) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (- (* x -2.0) 1.0) (- (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (* x x) 0.5)) (* (- (* x -2.0) 1.0) (- (* x -2.0) 1.0))) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)) (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (84 enodes)
* * [misc]simplify:  iters left: 4 (345 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (* (- (* x -2.0) 1.0) (- (* x -2.0) 1.0)) (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (* (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (* 0.5 (* x x)))) (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (* (* (+ (* x -2.0) 1.0) (- (* x -2.0) 1.0)) (* (+ (* x -2.0) 1.0) (- (* x -2.0) 1.0))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (* (- (* x -2.0) 1.0) (- (* x -2.0) 1.0)) (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (* (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (* 0.5 (* x x)))) (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (* (* (+ (* x -2.0) 1.0) (- (* x -2.0) 1.0)) (* (+ (* x -2.0) 1.0) (- (* x -2.0) 1.0))))))
* * * * [misc]progress:  [ 114 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (* x x) 0.5)) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0)))) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (+ (* x -2.0) 1.0) (+ (pow (* x -2.0) 3) (pow 1.0 3)))))) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (* x x) 0.5)) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0)))) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (+ (* x -2.0) 1.0) (+ (pow (* x -2.0) 3) (pow 1.0 3))))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (111 enodes)
* * [misc]simplify:  iters left: 4 (477 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (+ (* (+ (pow 1.0 3) (pow (* x -2.0) 3)) (+ (* x -2.0) 1.0)) (* (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (+ (* (* x -2.0) (* x -2.0)) (* 1.0 (- 1.0 (* x -2.0))))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (+ (* (+ (pow 1.0 3) (pow (* x -2.0) 3)) (+ (* x -2.0) 1.0)) (* (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (+ (* (* x -2.0) (* x -2.0)) (* 1.0 (- 1.0 (* x -2.0))))))))
* * * * [misc]progress:  [ 115 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (* x x) 0.5)) (- (* x -2.0) 1.0)) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (+ (* x -2.0) 1.0) (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)))))) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (- (* x -2.0) 1.0))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (* x x) 0.5)) (- (* x -2.0) 1.0)) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (+ (* x -2.0) 1.0) (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (82 enodes)
* * [misc]simplify:  iters left: 4 (338 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (* (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (- (* x -2.0) 1.0))) (* (* (- (* x -2.0) 1.0) (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (* (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (* 0.5 (* x x))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (* (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (- (* x -2.0) 1.0))) (* (* (- (* x -2.0) 1.0) (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (* (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (* 0.5 (* x x))))))
* * * * [misc]progress:  [ 116 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (* x x) 0.5)) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0)))) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (+ (* x -2.0) 1.0))))) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (* x x) 0.5)) (+ (* (* x -2.0) (* x -2.0)) (- (* 1.0 1.0) (* (* x -2.0) 1.0)))) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (+ (pow (* x -2.0) 3) (pow 1.0 3)) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (111 enodes)
* * [misc]simplify:  iters left: 4 (469 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (+ (* (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (+ (* (* x -2.0) (* x -2.0)) (* 1.0 (- 1.0 (* x -2.0))))) (* (+ (pow 1.0 3) (pow (* x -2.0) 3)) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (+ (* (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (+ (* (* x -2.0) (* x -2.0)) (* 1.0 (- 1.0 (* x -2.0))))) (* (+ (pow 1.0 3) (pow (* x -2.0) 3)) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 117 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (* x x) 0.5)) (- (* x -2.0) 1.0)) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)) (+ (* x -2.0) 1.0))))) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (- (* x -2.0) 1.0))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (* (- (* (* (* x x) 0.5) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (* x x) 0.5)) (- (* x -2.0) 1.0)) (* (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (- (* (* x -2.0) (* x -2.0)) (* 1.0 1.0)) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (375 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (* (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (- (* x -2.0) 1.0))) (* (* (- (* x -2.0) 1.0) (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (* (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (* 0.5 (* x x))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (* (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (- (* x -2.0) 1.0))) (* (* (- (* x -2.0) 1.0) (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (* (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (* 0.5 (* x x))))))
* * * * [misc]progress:  [ 118 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (pow (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) 3) (pow (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) 3))) (+ (* (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5))) (- (* (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (* (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (pow (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) 3) (pow (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) 3)))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (230 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (pow (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) 3) (* (pow (+ 1.0 (* x -2.0)) 3) (pow (+ 1.0 (* x -2.0)) 3))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (pow (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) 3) (* (pow (+ 1.0 (* x -2.0)) 3) (pow (+ 1.0 (* x -2.0)) 3))))
* * * * [misc]progress:  [ 119 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (- (* (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5))) (* (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))) (- (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (- (* (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5))) (* (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (261 enodes)
* [exit]simplify:  Simplified to (/ (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))) (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))))) (- (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))))
* [exit]simplify:  Simplified to (/ (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0))) (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))))) (- (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))))
* * * * [misc]progress:  [ 120 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (pow (+ 1.0 (* -2.0 x)) 3) 3) (pow (pow (* 0.5 (* x x)) 3) 3)) (* (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (+ (* (pow (+ 1.0 (* -2.0 x)) 3) (pow (+ 1.0 (* -2.0 x)) 3)) (- (* (pow (* 0.5 (* x x)) 3) (pow (* 0.5 (* x x)) 3)) (* (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))))))>
* [enter]simplify:  Simplifying (* (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (+ (* (pow (+ 1.0 (* -2.0 x)) 3) (pow (+ 1.0 (* -2.0 x)) 3)) (- (* (pow (* 0.5 (* x x)) 3) (pow (* 0.5 (* x x)) 3)) (* (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (68 enodes)
* * [misc]simplify:  iters left: 4 (279 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0)))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))) (+ (* (- (pow (* 0.5 (* x x)) 3) (pow (+ 1.0 (* x -2.0)) 3)) (pow (* 0.5 (* x x)) 3)) (* (pow (+ 1.0 (* x -2.0)) 3) (pow (+ 1.0 (* x -2.0)) 3))))
* [exit]simplify:  Simplified to (* (+ (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0)))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))) (+ (* (- (pow (* 0.5 (* x x)) 3) (pow (+ 1.0 (* x -2.0)) 3)) (pow (* 0.5 (* x x)) 3)) (* (pow (+ 1.0 (* x -2.0)) 3) (pow (+ 1.0 (* x -2.0)) 3))))
* * * * [misc]progress:  [ 121 / 133 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (pow (+ 1.0 (* -2.0 x)) 3) (pow (+ 1.0 (* -2.0 x)) 3)) (* (pow (* 0.5 (* x x)) 3) (pow (* 0.5 (* x x)) 3))) (* (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (- (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))))>
* [enter]simplify:  Simplifying (* (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))) (- (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (223 enodes)
* [exit]simplify:  Simplified to (* (- (pow (+ 1.0 (* x -2.0)) 3) (pow (* (* x 0.5) x) 3)) (+ (* (* (* x 0.5) x) (- (* (* x 0.5) x) (+ 1.0 (* x -2.0)))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))))
* [exit]simplify:  Simplified to (* (- (pow (+ 1.0 (* x -2.0)) 3) (pow (* (* x 0.5) x) 3)) (+ (* (* (* x 0.5) x) (- (* (* x 0.5) x) (+ 1.0 (* x -2.0)))) (* (+ 1.0 (* x -2.0)) (+ 1.0 (* x -2.0)))))
* * * * [misc]progress:  [ 122 / 133 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (exp (* 3 (+ (log 0.5) (* 2 (log x)))))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (exp (* 3 (+ (log 0.5) (* 2 (log x)))))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* * [misc]simplify:  iters left: 3 (487 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 0.5 (* x x)) 3) (pow (+ (* x -2.0) 1.0) 3)) (+ (* (* 0.5 (* x x)) (- (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 123 / 133 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (exp (* 3 (- (log 0.5) (* 2 (log (/ 1 x))))))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (exp (* 3 (- (log 0.5) (* 2 (log (/ 1 x))))))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (/ (+ (exp (+ (* (* 3 2) (log x)) (* (log 0.5) 3))) (pow (+ (* x -2.0) 1.0) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 124 / 133 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (exp (* 3 (- (log 0.5) (* 2 (log (/ -1 x))))))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (exp (* 3 (- (log 0.5) (* 2 (log (/ -1 x))))))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (/ (+ (exp (+ (* (log (/ -1 x)) (* (- 2) 3)) (* (log 0.5) 3))) (pow (+ (* x -2.0) 1.0) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 125 / 133 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (- (+ (* 18.0 (pow x 2)) 1.0) (+ (* 6.0 (/ (pow x 2) (pow 1.0 2))) (* 6.0 x))) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (/ (+ (- (+ (* 18.0 (pow x 2)) 1.0) (+ (* 6.0 (/ (pow x 2) (pow 1.0 2))) (* 6.0 x))) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (243 enodes)
* [exit]simplify:  Simplified to (/ (- (+ (+ (* (* x x) 18.0) 1.0) (pow (* x (* 0.5 x)) 3)) (* (+ x (* (/ x 1.0) (/ x 1.0))) 6.0)) (+ (* (* x (* 0.5 x)) (- (* x (* 0.5 x)) (+ 1.0 (* -2.0 x)))) (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x)))))
* * * * [misc]progress:  [ 126 / 133 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (- (+ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) (* 1.125 (/ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) (pow x 2)))) (+ (* 1.5 (/ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) (* (pow x 2) (pow -2.0 2)))) (* 1.5 (/ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) x)))) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (/ (+ (- (+ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) (* 1.125 (/ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) (pow x 2)))) (+ (* 1.5 (/ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) (* (pow x 2) (pow -2.0 2)))) (* 1.5 (/ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) x)))) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (104 enodes)
* * [misc]simplify:  iters left: 4 (298 enodes)
* [exit]simplify:  Simplified to (/ (- (+ (+ (pow (exp 3) (+ (log (- 2.0)) (log x))) (pow (* x (* x 0.5)) 3)) (* (/ 1.125 (* x x)) (pow (exp 3) (+ (log (- 2.0)) (log x))))) (+ (* (/ 1.5 (* (* -2.0 x) (* -2.0 x))) (pow (exp 3) (+ (log (- 2.0)) (log x)))) (* (/ 1.5 x) (pow (exp 3) (+ (log (- 2.0)) (log x)))))) (+ (* (* x (* x 0.5)) (- (* x (* x 0.5)) (+ (* -2.0 x) 1.0))) (* (+ (* -2.0 x) 1.0) (+ (* -2.0 x) 1.0))))
* * * * [misc]progress:  [ 127 / 133 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (- (+ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) (* 1.125 (/ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) (pow x 2)))) (+ (* 1.5 (/ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) (* (pow 2.0 2) (pow x 2)))) (* 1.5 (/ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) x)))) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>
* [enter]simplify:  Simplifying (/ (+ (- (+ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) (* 1.125 (/ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) (pow x 2)))) (+ (* 1.5 (/ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) (* (pow 2.0 2) (pow x 2)))) (* 1.5 (/ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) x)))) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (101 enodes)
* * [misc]simplify:  iters left: 4 (296 enodes)
* [exit]simplify:  Simplified to (/ (- (+ (+ (pow (* (* x x) 0.5) 3) (pow (exp 3) (- (log 2.0) (log (/ -1 x))))) (* (/ 1.125 (* x x)) (pow (exp 3) (- (log 2.0) (log (/ -1 x)))))) (+ (* (/ 1.5 x) (pow (exp 3) (- (log 2.0) (log (/ -1 x))))) (* (/ 1.5 (* (* 2.0 2.0) (* x x))) (pow (exp 3) (- (log 2.0) (log (/ -1 x))))))) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 128 / 133 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (- (+ (* 4.0 (pow x 2)) 1.0) (* 4.0 x)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (- (+ (* 4.0 (pow x 2)) 1.0) (* 4.0 x))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (+ (* 4.0 (* x x)) (- 1.0 (* 4.0 x))) (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x)))))
* * * * [misc]progress:  [ 129 / 133 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (- (+ (* 4.0 (pow x 2)) 1.0) (* 4.0 x)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (- (+ (* 4.0 (pow x 2)) 1.0) (* 4.0 x))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (+ (* 4.0 (* x x)) (- 1.0 (* 4.0 x))) (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x)))))
* * * * [misc]progress:  [ 130 / 133 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (- (+ (* 4.0 (pow x 2)) 1.0) (* 4.0 x)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (- (+ (* 4.0 (pow x 2)) 1.0) (* 4.0 x))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ 1.0 (* x -2.0)) 3) (pow (* 0.5 (* x x)) 3)) (+ (+ (* 4.0 (* x x)) (- 1.0 (* 4.0 x))) (* (- (* 0.5 (* x x)) (+ 1.0 (* x -2.0))) (* 0.5 (* x x)))))
* * * * [misc]progress:  [ 131 / 133 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 4.0 (* (exp (* 3 (+ (log 0.5) (* 2 (log x))))) x)) (+ (* 12.5 (* (exp (* 3 (+ (log 0.5) (* 2 (log x))))) (pow x 2))) (+ (* 6.5 (pow x 2)) (+ 1.0 (* 1.0 (exp (* 3 (+ (log 0.5) (* 2 (log x)))))))))) (+ (* 2.0 x) (* 6.0 (/ (pow x 2) (pow 1.0 2))))))>
* [enter]simplify:  Simplifying (- (+ (* 4.0 (* (exp (* 3 (+ (log 0.5) (* 2 (log x))))) x)) (+ (* 12.5 (* (exp (* 3 (+ (log 0.5) (* 2 (log x))))) (pow x 2))) (+ (* 6.5 (pow x 2)) (+ 1.0 (* 1.0 (exp (* 3 (+ (log 0.5) (* 2 (log x)))))))))) (+ (* 2.0 x) (* 6.0 (/ (pow x 2) (pow 1.0 2)))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (77 enodes)
* * [misc]simplify:  iters left: 4 (205 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) 6.5) 1.0) (* (* (pow x (* 3 2)) (pow 0.5 3)) (+ 1.0 (* 12.5 (* x x))))) (- (* (* (* x 4.0) (pow 0.5 3)) (pow x (* 3 2))) (+ (* (* 6.0 (/ x 1.0)) (/ x 1.0)) (* x 2.0))))
* * * * [misc]progress:  [ 132 / 133 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 36.5 (/ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) (pow x 6))) (+ (* 4.0 (/ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) (pow x 4))) (+ (* 4.0 (/ (exp (* 3 (- (log 0.5) (* 2 (log (/ 1 x)))))) (pow x 4))) (* 8.0 (/ (exp (* 3 (- (log 0.5) (* 2 (log (/ 1 x)))))) (pow x 6)))))) (+ (* 16.0 (/ (exp (* 3 (- (log 0.5) (* 2 (log (/ 1 x)))))) (pow x 5))) (+ (* 22.0 (/ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) (pow x 5))) (* 6.0 (/ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) (* (pow x 6) (pow -2.0 2))))))))>
* [enter]simplify:  Simplifying (- (+ (* 36.5 (/ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) (pow x 6))) (+ (* 4.0 (/ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) (pow x 4))) (+ (* 4.0 (/ (exp (* 3 (- (log 0.5) (* 2 (log (/ 1 x)))))) (pow x 4))) (* 8.0 (/ (exp (* 3 (- (log 0.5) (* 2 (log (/ 1 x)))))) (pow x 6)))))) (+ (* 16.0 (/ (exp (* 3 (- (log 0.5) (* 2 (log (/ 1 x)))))) (pow x 5))) (+ (* 22.0 (/ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) (pow x 5))) (* 6.0 (/ (exp (* 3 (- (log (- 2.0)) (log (/ 1 x))))) (* (pow x 6) (pow -2.0 2)))))))
* * [misc]simplify:  iters left: 6 (53 enodes)
* * [misc]simplify:  iters left: 5 (110 enodes)
* * [misc]simplify:  iters left: 4 (258 enodes)
* [exit]simplify:  Simplified to (- (+ (+ (* (/ 4.0 (pow x 4)) (pow (exp 3) (+ (log (- 2.0)) (log x)))) (* (/ 4.0 (pow x 4)) (exp (+ (* (log x) (* 2 3)) (* (log 0.5) 3))))) (- (* (/ 8.0 (pow x 6)) (exp (+ (* (log x) (* 2 3)) (* (log 0.5) 3)))) (* (/ 16.0 (pow x 5)) (exp (+ (* (log x) (* 2 3)) (* (log 0.5) 3)))))) (- (+ (* (/ 22.0 (pow x 5)) (pow (exp 3) (+ (log (- 2.0)) (log x)))) (* (/ 6.0 (* (pow x 6) (* -2.0 -2.0))) (pow (exp 3) (+ (log (- 2.0)) (log x))))) (* (/ 36.5 (pow x 6)) (pow (exp 3) (+ (log (- 2.0)) (log x))))))
* * * * [misc]progress:  [ 133 / 133 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 4.0 (/ (exp (* 3 (- (log 0.5) (* 2 (log (/ -1 x)))))) (pow x 4))) (+ (* 4.0 (/ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) (pow x 4))) (+ (* 36.5 (/ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) (pow x 6))) (* 8.0 (/ (exp (* 3 (- (log 0.5) (* 2 (log (/ -1 x)))))) (pow x 6)))))) (+ (* 6.0 (/ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) (* (pow 2.0 2) (pow x 6)))) (+ (* 22.0 (/ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) (pow x 5))) (* 16.0 (/ (exp (* 3 (- (log 0.5) (* 2 (log (/ -1 x)))))) (pow x 5)))))))>
* [enter]simplify:  Simplifying (- (+ (* 4.0 (/ (exp (* 3 (- (log 0.5) (* 2 (log (/ -1 x)))))) (pow x 4))) (+ (* 4.0 (/ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) (pow x 4))) (+ (* 36.5 (/ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) (pow x 6))) (* 8.0 (/ (exp (* 3 (- (log 0.5) (* 2 (log (/ -1 x)))))) (pow x 6)))))) (+ (* 6.0 (/ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) (* (pow 2.0 2) (pow x 6)))) (+ (* 22.0 (/ (exp (* 3 (- (log 2.0) (log (/ -1 x))))) (pow x 5))) (* 16.0 (/ (exp (* 3 (- (log 0.5) (* 2 (log (/ -1 x)))))) (pow x 5))))))
* * [misc]simplify:  iters left: 6 (51 enodes)
* * [misc]simplify:  iters left: 5 (106 enodes)
* * [misc]simplify:  iters left: 4 (251 enodes)
* [exit]simplify:  Simplified to (- (- (+ (* (/ 8.0 (pow x 6)) (exp (+ (* (log (/ -1 x)) (* (- 2) 3)) (* (log 0.5) 3)))) (+ (* (/ 4.0 (pow x 4)) (pow (exp 3) (- (log 2.0) (log (/ -1 x))))) (* (/ 36.5 (pow x 6)) (pow (exp 3) (- (log 2.0) (log (/ -1 x))))))) (+ (* (/ 6.0 (* (* 2.0 2.0) (pow x 6))) (pow (exp 3) (- (log 2.0) (log (/ -1 x))))) (* (/ 22.0 (pow x 5)) (pow (exp 3) (- (log 2.0) (log (/ -1 x))))))) (- (* (/ 16.0 (pow x 5)) (exp (+ (* (log (/ -1 x)) (* (- 2) 3)) (* (log 0.5) 3)))) (* (/ 4.0 (pow x 4)) (exp (+ (* (log (/ -1 x)) (* (- 2) 3)) (* (log 0.5) 3))))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 1.0))) into (/ -1.0 (sqrt 1.0))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 1.0))) into (/ -1.0 (sqrt 1.0))
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 1.0))) into (/ -1.0 (sqrt 1.0))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 1.0))) into (/ -1.0 (sqrt 1.0))
* [misc]backup-simplify:  Simplify (* (sqrt 1.0) (sqrt 1.0)) into (pow (sqrt 1.0) 2)
* [misc]backup-simplify:  Simplify (pow (sqrt 1.0) 2) into (pow (sqrt 1.0) 2)
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.0) (/ -1.0 (sqrt 1.0))) (* (/ -1.0 (sqrt 1.0)) (sqrt 1.0))) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (/ (- 0.5 (pow (/ -1.0 (sqrt 1.0)) 2) (+)) (* 2 (sqrt 1.0))) into (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0)))
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (/ (- 0.5 (pow (/ -1.0 (sqrt 1.0)) 2) (+)) (* 2 (sqrt 1.0))) into (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0)))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.0) (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0)))) (+ (* (/ -1.0 (sqrt 1.0)) (/ -1.0 (sqrt 1.0))) (* (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0))) (sqrt 1.0)))) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0.5 (pow x 2)) (+ (* (- 2.0) x) (pow (sqrt 1.0) 2))) into (- (+ (* 0.5 (pow x 2)) (pow (sqrt 1.0) 2)) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 0.5))) into (/ -1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 0.5))) into (/ -1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 0.5))) into (/ -1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 0.5))) into (/ -1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (* (sqrt 0.5) (sqrt 0.5)) into (pow (sqrt 0.5) 2)
* [misc]backup-simplify:  Simplify (pow (sqrt 0.5) 2) into (pow (sqrt 0.5) 2)
* [misc]backup-simplify:  Simplify (+ (* (sqrt 0.5) (/ -1.0 (sqrt 0.5))) (* (/ -1.0 (sqrt 0.5)) (sqrt 0.5))) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ -1.0 (sqrt 0.5)) 2) (+)) (* 2 (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ -1.0 (sqrt 0.5)) 2) (+)) (* 2 (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 0.5) (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))) (+ (* (/ -1.0 (sqrt 0.5)) (/ -1.0 (sqrt 0.5))) (* (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) (sqrt 0.5)))) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* (- 2.0) (/ 1 (/ 1 x))) (* (pow (sqrt 0.5) 2) (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* (pow (sqrt 0.5) 2) (pow x 2)) 1.0) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ 2.0 (* 2 (sqrt 0.5))) into (/ 1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ 2.0 (* 2 (sqrt 0.5))) into (/ 1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ 2.0 (* 2 (sqrt 0.5))) into (/ 1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ 2.0 (* 2 (sqrt 0.5))) into (/ 1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (* (sqrt 0.5) (sqrt 0.5)) into (pow (sqrt 0.5) 2)
* [misc]backup-simplify:  Simplify (pow (sqrt 0.5) 2) into (pow (sqrt 0.5) 2)
* [misc]backup-simplify:  Simplify (+ (* (sqrt 0.5) (/ 1.0 (sqrt 0.5))) (* (/ 1.0 (sqrt 0.5)) (sqrt 0.5))) into 2.0
* [misc]backup-simplify:  Simplify 2.0 into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ 1.0 (sqrt 0.5)) 2) (+)) (* 2 (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ 1.0 (sqrt 0.5)) 2) (+)) (* 2 (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 0.5) (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))) (+ (* (/ 1.0 (sqrt 0.5)) (/ 1.0 (sqrt 0.5))) (* (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) (sqrt 0.5)))) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* 2.0 (/ 1 (/ 1 (- x)))) (* (pow (sqrt 0.5) 2) (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* (pow (sqrt 0.5) 2) (pow x 2)) 1.0) (* 2.0 x))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 1.0))) into (/ -1.0 (sqrt 1.0))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 1.0))) into (/ -1.0 (sqrt 1.0))
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (/ -1.0 (sqrt 1.0)) into (/ -1.0 (sqrt 1.0))
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (/ (- 0.5 (pow (/ -1.0 (sqrt 1.0)) 2) (+)) (* 2 (sqrt 1.0))) into (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0)))
* [misc]backup-simplify:  Simplify (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0))) into (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0)))
* [misc]backup-simplify:  Simplify (+ (* (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0))) (pow x 2)) (+ (* (/ -1.0 (sqrt 1.0)) x) (sqrt 1.0))) into (- (+ (* 0.25 (/ (pow x 2) (sqrt 1.0))) (sqrt 1.0)) (+ (* 0.5 (/ (pow x 2) (pow (sqrt 1.0) 3))) (* 1.0 (/ x (sqrt 1.0)))))
* [misc]approximate:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 0.5))) into (/ -1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 0.5))) into (/ -1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (/ -1.0 (sqrt 0.5)) into (/ -1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ -1.0 (sqrt 0.5)) 2) (+)) (* 2 (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (+ (* (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) (/ 1 x)) (+ (/ -1.0 (sqrt 0.5)) (* (sqrt 0.5) (/ 1 (/ 1 x))))) into (- (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)) (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))))
* [misc]approximate:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ 2.0 (* 2 (sqrt 0.5))) into (/ 1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ 2.0 (* 2 (sqrt 0.5))) into (/ 1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (/ 1.0 (sqrt 0.5)) into (/ 1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ 1.0 (sqrt 0.5)) 2) (+)) (* 2 (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (+ (* (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) (/ 1 (- x))) (+ (/ 1.0 (sqrt 0.5)) (* (sqrt 0.5) (/ 1 (/ 1 (- x)))))) into (- (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))) (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 1.0))) into (/ -1.0 (sqrt 1.0))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 1.0))) into (/ -1.0 (sqrt 1.0))
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (/ -1.0 (sqrt 1.0)) into (/ -1.0 (sqrt 1.0))
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (/ (- 0.5 (pow (/ -1.0 (sqrt 1.0)) 2) (+)) (* 2 (sqrt 1.0))) into (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0)))
* [misc]backup-simplify:  Simplify (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0))) into (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0)))
* [misc]backup-simplify:  Simplify (+ (* (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0))) (pow x 2)) (+ (* (/ -1.0 (sqrt 1.0)) x) (sqrt 1.0))) into (- (+ (* 0.25 (/ (pow x 2) (sqrt 1.0))) (sqrt 1.0)) (+ (* 0.5 (/ (pow x 2) (pow (sqrt 1.0) 3))) (* 1.0 (/ x (sqrt 1.0)))))
* [misc]approximate:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 0.5))) into (/ -1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 0.5))) into (/ -1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (/ -1.0 (sqrt 0.5)) into (/ -1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ -1.0 (sqrt 0.5)) 2) (+)) (* 2 (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (+ (* (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) (/ 1 x)) (+ (/ -1.0 (sqrt 0.5)) (* (sqrt 0.5) (/ 1 (/ 1 x))))) into (- (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)) (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))))
* [misc]approximate:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ 2.0 (* 2 (sqrt 0.5))) into (/ 1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ 2.0 (* 2 (sqrt 0.5))) into (/ 1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (/ 1.0 (sqrt 0.5)) into (/ 1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ 1.0 (sqrt 0.5)) 2) (+)) (* 2 (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (+ (* (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) (/ 1 (- x))) (+ (/ 1.0 (sqrt 0.5)) (* (sqrt 0.5) (/ 1 (/ 1 (- x)))))) into (- (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))) (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0.5 (pow x 2)) (+ (* (- 2.0) x) 1.0)) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* (- 2.0) (/ 1 (/ 1 x))) (* 0.5 (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify 2.0 into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* 2.0 (/ 1 (/ 1 (- x)))) (* 0.5 (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ 1/2 1/2)))>
* [enter]simplify:  Simplifying (+ 1/2 1/2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/2 1/2)
* [exit]simplify:  Simplified to (+ 1/2 1/2)
* * * * [misc]progress:  [ 2 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (pow (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ 1 1)))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 3 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 1/2))>
* [enter]simplify:  Simplifying (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (389 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 4 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) 1))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 5 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (pow (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 2))>
* * * * [misc]progress:  [ 6 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (pow (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ 1 1)))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 7 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) 1))>
* * * * [misc]progress:  [ 8 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (exp (+ (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (+ (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (+ (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (+ (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 9 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (log (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* [exit]simplify:  Simplified to (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 10 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (exp (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 11 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* * * * [misc]progress:  [ 12 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (cbrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 13 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* [exit]simplify:  Simplified to (pow (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)) 3)
* * * * [misc]progress:  [ 14 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (sqrt (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (389 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 15 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [enter]simplify:  Simplifying (sqrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 16 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))>
* * * * [misc]progress:  [ 17 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (* (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (83 enodes)
* * [misc]simplify:  iters left: 3 (271 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))
* [enter]simplify:  Simplifying (* (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (484 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (+ (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 18 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (* (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (164 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (- (+ (* x -2.0) 1.0) (* x (* 0.5 x))) (+ (* x (* 0.5 x)) (+ (* x -2.0) 1.0)))) (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* x (* 0.5 x)) 3))))
* [exit]simplify:  Simplified to (* (sqrt (* (- (+ (* x -2.0) 1.0) (* x (* 0.5 x))) (+ (* x (* 0.5 x)) (+ (* x -2.0) 1.0)))) (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* x (* 0.5 x)) 3))))
* [enter]simplify:  Simplifying (* (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (* (sqrt (- (+ (* x -2.0) 1.0) (* (* x x) 0.5))) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (sqrt (- (+ (* x -2.0) 1.0) (* (* x x) 0.5))) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 19 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (* (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (* (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (164 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (+ (pow (* (* x 0.5) x) 3) (pow (+ (* x -2.0) 1.0) 3))))
* [exit]simplify:  Simplified to (* (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (+ (pow (* (* x 0.5) x) 3) (pow (+ (* x -2.0) 1.0) 3))))
* [enter]simplify:  Simplifying (* (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (+ (* x -2.0) 1.0) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (* (* (* x 0.5) x) (* (* x 0.5) x)))) (sqrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (* (sqrt (+ (* (+ (* x -2.0) 1.0) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (* (* (* x 0.5) x) (* (* x 0.5) x)))) (sqrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 20 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (* (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (320 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [enter]simplify:  Simplifying (* (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* * [misc]simplify:  iters left: 1 (69 enodes)
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* * * * [misc]progress:  [ 21 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* * * * [misc]progress:  [ 22 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 23 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (fabs (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (fabs (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 24 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 25 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt 1)) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt 1))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* [exit]simplify:  Simplified to (* (sqrt 1) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt 1) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 26 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 27 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 1) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 1)
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 28 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 29 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (* (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (sqrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (sqrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 30 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 31 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt 1) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 32 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 33 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 34 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (299 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x 0.5) x) 3))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x 0.5) x) 3))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 35 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (355 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 36 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (284 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))) (sqrt (+ (* (* 0.5 x) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))) (sqrt (+ (* (* 0.5 x) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 37 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (357 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (* (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 38 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 39 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1/2)))>
* * * * [misc]progress:  [ 40 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (pow (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 1)))>
* * * * [misc]progress:  [ 41 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (exp (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 42 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (log (exp (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (exp (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (exp (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (exp (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 43 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [enter]simplify:  Simplifying (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 44 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (87 enodes)
* * [misc]simplify:  iters left: 2 (124 enodes)
* * [misc]simplify:  iters left: 1 (148 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 45 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 46 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 47 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (sqrt 1) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (sqrt 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (sqrt 1)
* [exit]simplify:  Simplified to (sqrt 1)
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 48 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (/ (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (267 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))
* [exit]simplify:  Simplified to (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))
* [enter]simplify:  Simplifying (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (483 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 49 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (/ (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (337 enodes)
* [exit]simplify:  Simplified to (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [enter]simplify:  Simplifying (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (65 enodes)
* * [misc]simplify:  iters left: 1 (67 enodes)
* [exit]simplify:  Simplified to (sqrt (- (+ (* x -2.0) 1.0) (* x (* x 0.5))))
* [exit]simplify:  Simplified to (sqrt (- (+ (* x -2.0) 1.0) (* x (* x 0.5))))
* * * * [misc]progress:  [ 50 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 51 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (fabs (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* * * * [misc]progress:  [ 52 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* 1 (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* * * * [misc]progress:  [ 53 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1/2) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 54 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 1) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 55 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (exp (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 56 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (log (exp (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (exp (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (exp (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (exp (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 57 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [enter]simplify:  Simplifying (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 58 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (87 enodes)
* * [misc]simplify:  iters left: 2 (124 enodes)
* * [misc]simplify:  iters left: 1 (148 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 59 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 60 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 61 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt 1) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (sqrt 1)
* [exit]simplify:  Simplified to (sqrt 1)
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 62 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (267 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))
* [exit]simplify:  Simplified to (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))
* [enter]simplify:  Simplifying (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (483 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 63 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (337 enodes)
* [exit]simplify:  Simplified to (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [enter]simplify:  Simplifying (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (65 enodes)
* * [misc]simplify:  iters left: 1 (67 enodes)
* [exit]simplify:  Simplified to (sqrt (- (+ (* x -2.0) 1.0) (* x (* x 0.5))))
* [exit]simplify:  Simplified to (sqrt (- (+ (* x -2.0) 1.0) (* x (* x 0.5))))
* * * * [misc]progress:  [ 64 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 65 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (fabs (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 66 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (* 1 (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 67 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (log (* (exp (+ 1.0 (* -2.0 x))) (exp (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (exp (+ 1.0 (* -2.0 x))) (exp (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (71 enodes)
* [exit]simplify:  Simplified to (exp (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (exp (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* * * * [misc]progress:  [ 68 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1))))>
* * * * [misc]progress:  [ 69 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (log (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (log (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 70 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (log (exp (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (exp (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 71 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 72 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (cbrt (* (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* * * * [misc]progress:  [ 73 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 74 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (272 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))
* [enter]simplify:  Simplifying (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* * [misc]simplify:  iters left: 3 (482 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 75 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (* 1 (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* * * * [misc]progress:  [ 76 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (336 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [enter]simplify:  Simplifying (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (60 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (66 enodes)
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* * * * [misc]progress:  [ 77 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ 1.0 (+ (* -2.0 x) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (+ (* -2.0 x) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (* (+ -2.0 (* 0.5 x)) x)
* [exit]simplify:  Simplified to (* (+ -2.0 (* 0.5 x)) x)
* * * * [misc]progress:  [ 78 / 90 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (* 0.5 (* x x)) (+ 1.0 (* -2.0 x))))))>
* * * * [misc]progress:  [ 79 / 90 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.5 (pow x 2)) (pow (sqrt 1.0) 2)) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 0.5 (pow x 2)) (pow (sqrt 1.0) 2)) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* * [misc]simplify:  iters left: 2 (91 enodes)
* * [misc]simplify:  iters left: 1 (125 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) 0.5) (- 1.0 (* 2.0 x)))
* * * * [misc]progress:  [ 80 / 90 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* (pow (sqrt 0.5) 2) (pow x 2)) 1.0) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* (pow (sqrt 0.5) 2) (pow x 2)) 1.0) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (58 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (110 enodes)
* [exit]simplify:  Simplified to (+ (- 1.0 (* 2.0 x)) (* (* x x) 0.5))
* * * * [misc]progress:  [ 81 / 90 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* (pow (sqrt 0.5) 2) (pow x 2)) 1.0) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* (pow (sqrt 0.5) 2) (pow x 2)) 1.0) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (58 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (110 enodes)
* [exit]simplify:  Simplified to (+ (- 1.0 (* 2.0 x)) (* (* x x) 0.5))
* * * * [misc]progress:  [ 82 / 90 ] simplifiying candidate #<alt-event (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (- (+ (* 0.25 (/ (pow x 2) (sqrt 1.0))) (sqrt 1.0)) (+ (* 0.5 (/ (pow x 2) (pow (sqrt 1.0) 3))) (* 1.0 (/ x (sqrt 1.0)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (- (+ (* 0.25 (/ (pow x 2) (sqrt 1.0))) (sqrt 1.0)) (+ (* 0.5 (/ (pow x 2) (pow (sqrt 1.0) 3))) (* 1.0 (/ x (sqrt 1.0))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (378 enodes)
* [exit]simplify:  Simplified to (* (+ (- (sqrt 1.0) (/ (* 1.0 x) (sqrt 1.0))) (* (/ (* x x) (sqrt 1.0)) (- 0.25 (/ 0.5 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 83 / 90 ] simplifiying candidate #<alt-event (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (- (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)) (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (- (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)) (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (282 enodes)
* [exit]simplify:  Simplified to (* (- (+ (* (sqrt 0.5) x) (/ (/ 0.5 x) (sqrt 0.5))) (+ (/ 1.0 (sqrt 0.5)) (/ (/ 1 x) (sqrt 0.5)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 84 / 90 ] simplifiying candidate #<alt-event (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (- (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))) (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (- (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))) (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (276 enodes)
* [exit]simplify:  Simplified to (* (+ (- (/ 1.0 (sqrt 0.5)) (* (sqrt 0.5) x)) (- (/ (/ 1 x) (sqrt 0.5)) (/ (/ 0.5 x) (sqrt 0.5)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 85 / 90 ] simplifiying candidate #<alt-event (Î» (x) (* (- (+ (* 0.25 (/ (pow x 2) (sqrt 1.0))) (sqrt 1.0)) (+ (* 0.5 (/ (pow x 2) (pow (sqrt 1.0) 3))) (* 1.0 (/ x (sqrt 1.0))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (- (+ (* 0.25 (/ (pow x 2) (sqrt 1.0))) (sqrt 1.0)) (+ (* 0.5 (/ (pow x 2) (pow (sqrt 1.0) 3))) (* 1.0 (/ x (sqrt 1.0))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (380 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* 0.5 (* x x)) (+ (* -2.0 x) 1.0))) (+ (* (- 0.25 (/ 0.5 1.0)) (/ (* x x) (sqrt 1.0))) (- (sqrt 1.0) (/ (* x 1.0) (sqrt 1.0)))))
* * * * [misc]progress:  [ 86 / 90 ] simplifiying candidate #<alt-event (Î» (x) (* (- (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)) (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (- (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)) (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (283 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* x (* x 0.5)) (+ (* -2.0 x) 1.0))) (+ (- (/ (/ 0.5 x) (sqrt 0.5)) (/ (/ 1 x) (sqrt 0.5))) (- (* (sqrt 0.5) x) (/ 1.0 (sqrt 0.5)))))
* * * * [misc]progress:  [ 87 / 90 ] simplifiying candidate #<alt-event (Î» (x) (* (- (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))) (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (- (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))) (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (277 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x x) 0.5) (+ 1.0 (* x -2.0)))) (- (+ (/ (/ 1 x) (sqrt 0.5)) (/ 1.0 (sqrt 0.5))) (+ (* (sqrt 0.5) x) (/ (/ 0.5 x) (sqrt 0.5)))))
* * * * [misc]progress:  [ 88 / 90 ] simplifiying candidate #<alt-event (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (95 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x 0.5) x) (- 1.0 (* 2.0 x)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 89 / 90 ] simplifiying candidate #<alt-event (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (95 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x 0.5) x) (- 1.0 (* 2.0 x)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 90 / 90 ] simplifiying candidate #<alt-event (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (95 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x 0.5) x) (- 1.0 (* 2.0 x)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))> #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))> #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))> #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) +nan.0)) , with alts (#<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))>)
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
