* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ 12.0 (* -48.0 (* x x))) (* 16.0 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (103 enodes)
* * [misc]simplify:  iters left: 1 (110 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 3 ] rewriting at (2 2 2)
* * * * [misc]progress:  [ 2 / 3 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 3 / 3 ] rewriting at (2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 3 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x -48.0) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (- 48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 48.0) (pow x 2)) into (* -48.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -48.0 (pow (/ 1 (/ 1 x)) 2)) into (* -48.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -48.0 (pow (/ 1 (/ 1 (- x))) 2)) into (* -48.0 (pow x 2))
* * * * [misc]progress:  [ 2 / 3 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x 4)) into (* 16.0 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (/ 16.0 (pow x 3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (/ 16.0 (pow (/ 1 x) 3)) (/ 1 (/ 1 x))) into (* 16.0 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (* -16.0 (exp (* 3 (- (log -1) (log (/ 1 (- x))))))) (/ 1 (/ 1 (- x)))) into (* 16.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x))
* * * * [misc]progress:  [ 3 / 3 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (- 48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 16.0 0) into 16.0
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 (pow x 4)) (* (- 48.0) (pow x 2))) into (- (* 16.0 (pow x 4)) (* 48.0 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (- 48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (/ 16.0 (pow x 3)) 0) into (* 16.0 (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (* 16.0 (/ 1 (pow x 3))) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 16.0 (pow (/ 1 x) 3)) (/ 1 (/ 1 x))) (* (- 48.0) (pow (/ 1 (/ 1 x)) 2))) into (- (* 16.0 (pow x 4)) (* 48.0 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (- 48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 (exp (* 3 (- (log -1) (log x))))) 0) into (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- (* 16.0 (exp (* 3 (- (log -1) (log x)))))) into (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 16.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 16.0 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (/ 1 (/ 1 (- x)))) (* (- 48.0) (pow (/ 1 (/ 1 (- x))) 2))) into (- (* 16.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 48.0 (pow x 2)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (pow (* (* x -48.0) x) 1))))>
* * * * [misc]progress:  [ 2 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (exp (log (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (log (* (* x -48.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* [exit]simplify:  Simplified to (log (* x (* x -48.0)))
* [exit]simplify:  Simplified to (log (* x (* x -48.0)))
* * * * [misc]progress:  [ 3 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (log (exp (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (exp (* (* x -48.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* [exit]simplify:  Simplified to (exp (* x (* x -48.0)))
* [exit]simplify:  Simplified to (exp (* x (* x -48.0)))
* * * * [misc]progress:  [ 4 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* (cbrt (* (* x -48.0) x)) (cbrt (* (* x -48.0) x))) (cbrt (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x -48.0) x)) (cbrt (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -48.0))) (cbrt (* x (* x -48.0))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -48.0))) (cbrt (* x (* x -48.0))))
* [enter]simplify:  Simplifying (cbrt (* (* x -48.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (* x (* x -48.0)))
* [exit]simplify:  Simplified to (cbrt (* x (* x -48.0)))
* * * * [misc]progress:  [ 5 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (cbrt (* (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* x -48.0) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (335 enodes)
* [exit]simplify:  Simplified to (pow (* x (* x -48.0)) 3)
* [exit]simplify:  Simplified to (pow (* x (* x -48.0)) 3)
* * * * [misc]progress:  [ 6 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (sqrt (* (* x -48.0) x)) (sqrt (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x -48.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x -48.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x -48.0)))
* [enter]simplify:  Simplifying (sqrt (* (* x -48.0) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x -48.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x -48.0)))
* * * * [misc]progress:  [ 7 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* 1 (* (* x -48.0) x)))))>
* * * * [misc]progress:  [ 8 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* -48.0 x)))))>
* [enter]simplify:  Simplifying (* -48.0 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* -48.0 x)
* [exit]simplify:  Simplified to (* -48.0 x)
* * * * [misc]progress:  [ 9 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* x (* x -48.0)))))>
* * * * [misc]progress:  [ 10 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (pow (* (* x 16.0) (pow x 3)) 1) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 11 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (exp (+ (log (* x 16.0)) (* (log x) 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ (log (* x 16.0)) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (25 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x 16.0)))
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x 16.0)))
* * * * [misc]progress:  [ 12 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (exp (+ (log (* x 16.0)) (log (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ (log (* x 16.0)) (log (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* * [misc]simplify:  iters left: 1 (56 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (* x 16.0)))
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (* x 16.0)))
* * * * [misc]progress:  [ 13 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (exp (log (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (log (* (* x 16.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (81 enodes)
* * [misc]simplify:  iters left: 1 (90 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x 16.0)))
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x 16.0)))
* * * * [misc]progress:  [ 14 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (log (exp (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (exp (* (* x 16.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* * [misc]simplify:  iters left: 1 (48 enodes)
* [exit]simplify:  Simplified to (exp (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (exp (* (pow x 3) (* x 16.0)))
* * * * [misc]progress:  [ 15 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (* (* x 16.0) (* x 16.0)) (* x 16.0)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* (* (* x 16.0) (* x 16.0)) (* x 16.0)) (* (* (pow x 3) (pow x 3)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (378 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (* x 16.0) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (* x 16.0) 3))
* * * * [misc]progress:  [ 16 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* (cbrt (* (* x 16.0) (pow x 3))) (cbrt (* (* x 16.0) (pow x 3)))) (cbrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x 16.0) (pow x 3))) (cbrt (* (* x 16.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x 16.0))) (cbrt (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x 16.0))) (cbrt (* (pow x 3) (* x 16.0))))
* [enter]simplify:  Simplifying (cbrt (* (* x 16.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (43 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x 16.0)))
* * * * [misc]progress:  [ 17 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (cbrt (* (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* x 16.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (287 enodes)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* x 16.0)) 3)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* x 16.0)) 3)
* * * * [misc]progress:  [ 18 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (sqrt (* (* x 16.0) (pow x 3))) (sqrt (* (* x 16.0) (pow x 3)))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (sqrt (* (* x 16.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (43 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 16.0)))
* [enter]simplify:  Simplifying (sqrt (* (* x 16.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (43 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 16.0)))
* * * * [misc]progress:  [ 19 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* 1 (* (* x 16.0) (pow x 3))) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 20 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* (* x 16.0) (* x x)) x) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* x 16.0) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x 16.0) (* x x))
* [exit]simplify:  Simplified to (* (* x 16.0) (* x x))
* * * * [misc]progress:  [ 21 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* (* x 16.0) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* x 16.0) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* * [misc]simplify:  iters left: 1 (89 enodes)
* [exit]simplify:  Simplified to (* (* x 16.0) (* x x))
* [exit]simplify:  Simplified to (* (* x 16.0) (* x x))
* * * * [misc]progress:  [ 22 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* (* x 16.0) x) (* x x)) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* x 16.0) x)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (* x (* x 16.0))
* [exit]simplify:  Simplified to (* x (* x 16.0))
* * * * [misc]progress:  [ 23 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* (* x 16.0) (sqrt (pow x 3))) (sqrt (pow x 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* x 16.0) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (* x 16.0) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (* x 16.0) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 24 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* (* x 16.0) 1) (pow x 3)) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* (* x 16.0) 1)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (19 enodes)
* [exit]simplify:  Simplified to (* x 16.0)
* [exit]simplify:  Simplified to (* x 16.0)
* * * * [misc]progress:  [ 25 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* x (* 16.0 (pow x 3))) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (* 16.0 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* 16.0 x) (* x x))
* [exit]simplify:  Simplified to (* (* 16.0 x) (* x x))
* * * * [misc]progress:  [ 26 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))>
* * * * [misc]progress:  [ 27 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (log (* (exp (* (* x 16.0) (pow x 3))) (exp (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (exp (* (* x 16.0) (pow x 3))) (exp (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (82 enodes)
* * [misc]simplify:  iters left: 2 (99 enodes)
* * [misc]simplify:  iters left: 1 (103 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (+ (* (* x 16.0) (* x x)) (* -48.0 x)))
* [exit]simplify:  Simplified to (pow (exp x) (+ (* (* x 16.0) (* x x)) (* -48.0 x)))
* * * * [misc]progress:  [ 28 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1)))>
* * * * [misc]progress:  [ 29 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (exp (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (146 enodes)
* [exit]simplify:  Simplified to (log (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* [exit]simplify:  Simplified to (log (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* * * * [misc]progress:  [ 30 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (log (exp (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (exp (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (134 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (+ (* x -48.0) (* (* x x) (* x 16.0))))
* [exit]simplify:  Simplified to (pow (exp x) (+ (* x -48.0) (* (* x x) (* x 16.0))))
* * * * [misc]progress:  [ 31 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [enter]simplify:  Simplifying (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* * * * [misc]progress:  [ 32 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (cbrt (* (* (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (* (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)) 3)
* * * * [misc]progress:  [ 33 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* [enter]simplify:  Simplifying (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* * * * [misc]progress:  [ 34 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (/ (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3)) (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))>
* [enter]simplify:  Simplifying (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (466 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3))
* [exit]simplify:  Simplified to (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3))
* [enter]simplify:  Simplifying (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (- (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* (* (* (* x x) (* x 16.0)) (* x x)) (- (* -48.0 x) (* (* x x) (* x 16.0)))))
* [exit]simplify:  Simplified to (- (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* (* (* (* x x) (* x 16.0)) (* x x)) (- (* -48.0 x) (* (* x x) (* x 16.0)))))
* * * * [misc]progress:  [ 35 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* 1 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))>
* * * * [misc]progress:  [ 36 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (/ (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x))) (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))>
* [enter]simplify:  Simplifying (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (322 enodes)
* [exit]simplify:  Simplified to (* (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x))) (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (* (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x))) (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))))
* [enter]simplify:  Simplifying (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (109 enodes)
* * [misc]simplify:  iters left: 1 (112 enodes)
* [exit]simplify:  Simplified to (- (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))
* [exit]simplify:  Simplified to (- (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))
* * * * [misc]progress:  [ 37 / 46 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (+ (* (* x -48.0) x) (* (* x 16.0) (pow x 3)))))>
* * * * [misc]progress:  [ 38 / 46 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* -48.0 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* -48.0 (pow x 2))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (137 enodes)
* * [misc]simplify:  iters left: 1 (188 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (+ (* (* 16.0 x) (pow x 3)) (* x (* -48.0 x))))
* * * * [misc]progress:  [ 39 / 46 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* -48.0 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* -48.0 (pow x 2))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (137 enodes)
* * [misc]simplify:  iters left: 1 (188 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (+ (* (* 16.0 x) (pow x 3)) (* x (* -48.0 x))))
* * * * [misc]progress:  [ 40 / 46 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* -48.0 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* -48.0 (pow x 2))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (137 enodes)
* * [misc]simplify:  iters left: 1 (188 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (+ (* (* 16.0 x) (pow x 3)) (* x (* -48.0 x))))
* * * * [misc]progress:  [ 41 / 46 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* 16.0 (pow x 4)) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* 16.0 (pow x 4)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* [exit]simplify:  Simplified to (+ (+ 12.0 (* 16.0 (pow x 4))) (* (* x -48.0) x))
* * * * [misc]progress:  [ 42 / 46 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* 16.0 (pow x 4)) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* 16.0 (pow x 4)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* [exit]simplify:  Simplified to (+ (+ 12.0 (* 16.0 (pow x 4))) (* (* x -48.0) x))
* * * * [misc]progress:  [ 43 / 46 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (+ (* 16.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* (* x -48.0) x))))>
* [enter]simplify:  Simplifying (+ 12.0 (+ (* 16.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (109 enodes)
* * [misc]simplify:  iters left: 2 (274 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (* 16.0 x)) (+ (* -48.0 (* x x)) 12.0))
* * * * [misc]progress:  [ 44 / 46 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (- (* 16.0 (pow x 4)) (* 48.0 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 12.0 (- (* 16.0 (pow x 4)) (* 48.0 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (63 enodes)
* * [misc]simplify:  iters left: 1 (74 enodes)
* [exit]simplify:  Simplified to (+ (- (* 16.0 (pow x 4)) (* x (* x 48.0))) 12.0)
* * * * [misc]progress:  [ 45 / 46 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (- (* 16.0 (pow x 4)) (* 48.0 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 12.0 (- (* 16.0 (pow x 4)) (* 48.0 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (63 enodes)
* * [misc]simplify:  iters left: 1 (74 enodes)
* [exit]simplify:  Simplified to (+ (- (* 16.0 (pow x 4)) (* x (* x 48.0))) 12.0)
* * * * [misc]progress:  [ 46 / 46 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (- (* 16.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 48.0 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 12.0 (- (* 16.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 48.0 (pow x 2))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (130 enodes)
* * [misc]simplify:  iters left: 2 (357 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 16.0) (pow x 3)) (- 12.0 (* x (* 48.0 x))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))) into (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))) into (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 48.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (* 2 (log x)) (log (- 48.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 16.0 0) into 16.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 16.0) 1)) (pow (- 48.0) 1)))) 2) into -0.3333333333333333
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0)))))) into (- 0.1111111111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.1111111111111111) 1) 1)))) into (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) into (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 48.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 16.0) 1)) (pow (- 48.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 48.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.1111111111111111) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 48.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 16.0) 1)) (pow (- 48.0) 3))) (* -3 (/ (* 1 (pow (* 2 16.0) 2)) (pow (- 48.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 48.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 48.0) 1)))) 24) into (/ -128.0 (pow -48.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -128.0 (pow -48.0 2))) (+ (* 0 0) (+ (* 0 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0)))))))) into (- (* 42.666666666666664 (/ 1 (pow -48.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.1111111111111111) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.1111111111111111) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ 1 (pow -48.0 2)))) 1) 1)))) into (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) into (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow x 4)) (+ (* (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow x 2)) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) into (- (+ (* 0.006172839506172839 (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (+ (* 0.1111111111111111 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (* 42.666666666666664 (/ (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow -48.0 2)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (/ 16.0 (pow x 3)) 0) into (* 16.0 (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* 16.0 (/ 1 (pow x 3)))) 1)) (pow (- 48.0) 1)))) 1) into (/ -0.3333333333333333 (pow x 3))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.3333333333333333 (pow x 3))) (* 0 (- (log (- 48.0)) (* 2 (log x))))) into (- (* 0.1111111111111111 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (- (* 0.1111111111111111 (/ 1 (pow x 3)))) 1) 1)))) into (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))
* [misc]backup-simplify:  Simplify (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3))) into (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* 16.0 (/ 1 (pow x 3)))) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 48.0) 1)))) 2) into (/ -128.0 (* (pow -48.0 2) (pow x 6)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -128.0 (* (pow -48.0 2) (pow x 6)))) (+ (* 0 (/ -0.3333333333333333 (pow x 3))) (* 0 (- (log (- 48.0)) (* 2 (log x)))))) into (- (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (- (* 0.1111111111111111 (/ 1 (pow x 3)))) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))) 1) 1)))) into (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6)))))) into (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (- (* 0.006172839506172839 (/ 1 (pow (/ 1 x) 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow (/ 1 x) 6)))))) (pow (/ 1 x) 2)) (+ (* (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow (/ 1 x) 3))) (/ 1 x)) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))))) into (- (+ (* 0.006172839506172839 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.1111111111111111 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 (exp (* 3 (- (log -1) (log x))))) 0) into (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) 1)) (pow (- 48.0) 1)))) 1) into (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))) (* 0 (- (log (- 48.0)) (* 2 (log x))))) into (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x))))) 1) 1)))) into (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))) into (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 48.0) 1)))) 2) into (* -128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* -128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (+ (* 0 (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))) (* 0 (- (log (- 48.0)) (* 2 (log x)))))) into (- (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x))))) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) 1) 1)))) into (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))) into (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x)))))))) (pow (/ 1 (- x)) 2)) (+ (* (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x))))))))) (/ 1 (- x))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x))))))))) into (- (+ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (* 0.006172839506172839 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (* 0.1111111111111111 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))) into (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))) into (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 48.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (* 2 (log x)) (log (- 48.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 16.0 0) into 16.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 16.0) 1)) (pow (- 48.0) 1)))) 2) into -0.3333333333333333
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0)))))) into (- 0.1111111111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.1111111111111111) 1) 1)))) into (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) into (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 48.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 16.0) 1)) (pow (- 48.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 48.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.1111111111111111) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 48.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 16.0) 1)) (pow (- 48.0) 3))) (* -3 (/ (* 1 (pow (* 2 16.0) 2)) (pow (- 48.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 48.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 48.0) 1)))) 24) into (/ -128.0 (pow -48.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -128.0 (pow -48.0 2))) (+ (* 0 0) (+ (* 0 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0)))))))) into (- (* 42.666666666666664 (/ 1 (pow -48.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.1111111111111111) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.1111111111111111) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ 1 (pow -48.0 2)))) 1) 1)))) into (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) into (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow x 4)) (+ (* (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow x 2)) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) into (- (+ (* 0.006172839506172839 (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (+ (* 0.1111111111111111 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (* 42.666666666666664 (/ (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow -48.0 2)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (/ 16.0 (pow x 3)) 0) into (* 16.0 (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* 16.0 (/ 1 (pow x 3)))) 1)) (pow (- 48.0) 1)))) 1) into (/ -0.3333333333333333 (pow x 3))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.3333333333333333 (pow x 3))) (* 0 (- (log (- 48.0)) (* 2 (log x))))) into (- (* 0.1111111111111111 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (- (* 0.1111111111111111 (/ 1 (pow x 3)))) 1) 1)))) into (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))
* [misc]backup-simplify:  Simplify (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3))) into (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* 16.0 (/ 1 (pow x 3)))) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 48.0) 1)))) 2) into (/ -128.0 (* (pow -48.0 2) (pow x 6)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -128.0 (* (pow -48.0 2) (pow x 6)))) (+ (* 0 (/ -0.3333333333333333 (pow x 3))) (* 0 (- (log (- 48.0)) (* 2 (log x)))))) into (- (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (- (* 0.1111111111111111 (/ 1 (pow x 3)))) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))) 1) 1)))) into (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6)))))) into (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (- (* 0.006172839506172839 (/ 1 (pow (/ 1 x) 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow (/ 1 x) 6)))))) (pow (/ 1 x) 2)) (+ (* (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow (/ 1 x) 3))) (/ 1 x)) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))))) into (- (+ (* 0.006172839506172839 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.1111111111111111 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 (exp (* 3 (- (log -1) (log x))))) 0) into (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) 1)) (pow (- 48.0) 1)))) 1) into (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))) (* 0 (- (log (- 48.0)) (* 2 (log x))))) into (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x))))) 1) 1)))) into (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))) into (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 48.0) 1)))) 2) into (* -128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* -128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (+ (* 0 (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))) (* 0 (- (log (- 48.0)) (* 2 (log x)))))) into (- (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x))))) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) 1) 1)))) into (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))) into (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x)))))))) (pow (/ 1 (- x)) 2)) (+ (* (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x))))))))) (/ 1 (- x))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x))))))))) into (- (+ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (* 0.006172839506172839 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (* 0.1111111111111111 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))) into (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))) into (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 48.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (* 2 (log x)) (log (- 48.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 16.0 0) into 16.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 16.0) 1)) (pow (- 48.0) 1)))) 2) into -0.3333333333333333
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0)))))) into (- 0.1111111111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.1111111111111111) 1) 1)))) into (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) into (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 48.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 16.0) 1)) (pow (- 48.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 48.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.1111111111111111) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 48.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 16.0) 1)) (pow (- 48.0) 3))) (* -3 (/ (* 1 (pow (* 2 16.0) 2)) (pow (- 48.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 48.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 48.0) 1)))) 24) into (/ -128.0 (pow -48.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -128.0 (pow -48.0 2))) (+ (* 0 0) (+ (* 0 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0)))))))) into (- (* 42.666666666666664 (/ 1 (pow -48.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.1111111111111111) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.1111111111111111) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ 1 (pow -48.0 2)))) 1) 1)))) into (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) into (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow x 4)) (+ (* (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow x 2)) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) into (- (+ (* 0.006172839506172839 (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (+ (* 0.1111111111111111 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (* 42.666666666666664 (/ (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow -48.0 2)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (/ 16.0 (pow x 3)) 0) into (* 16.0 (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* 16.0 (/ 1 (pow x 3)))) 1)) (pow (- 48.0) 1)))) 1) into (/ -0.3333333333333333 (pow x 3))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.3333333333333333 (pow x 3))) (* 0 (- (log (- 48.0)) (* 2 (log x))))) into (- (* 0.1111111111111111 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (- (* 0.1111111111111111 (/ 1 (pow x 3)))) 1) 1)))) into (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))
* [misc]backup-simplify:  Simplify (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3))) into (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* 16.0 (/ 1 (pow x 3)))) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 48.0) 1)))) 2) into (/ -128.0 (* (pow -48.0 2) (pow x 6)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -128.0 (* (pow -48.0 2) (pow x 6)))) (+ (* 0 (/ -0.3333333333333333 (pow x 3))) (* 0 (- (log (- 48.0)) (* 2 (log x)))))) into (- (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (- (* 0.1111111111111111 (/ 1 (pow x 3)))) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))) 1) 1)))) into (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6)))))) into (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (- (* 0.006172839506172839 (/ 1 (pow (/ 1 x) 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow (/ 1 x) 6)))))) (pow (/ 1 x) 2)) (+ (* (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow (/ 1 x) 3))) (/ 1 x)) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))))) into (- (+ (* 0.006172839506172839 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.1111111111111111 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 (exp (* 3 (- (log -1) (log x))))) 0) into (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) 1)) (pow (- 48.0) 1)))) 1) into (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))) (* 0 (- (log (- 48.0)) (* 2 (log x))))) into (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x))))) 1) 1)))) into (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))) into (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 48.0) 1)))) 2) into (* -128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* -128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (+ (* 0 (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))) (* 0 (- (log (- 48.0)) (* 2 (log x)))))) into (- (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x))))) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) 1) 1)))) into (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))) into (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x)))))))) (pow (/ 1 (- x)) 2)) (+ (* (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x))))))))) (/ 1 (- x))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x))))))))) into (- (+ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (* 0.006172839506172839 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (* 0.1111111111111111 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))) into (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))) into (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))) into (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))) into (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) into (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2) into (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2)
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 48.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (* 2 (log x)) (log (- 48.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 48.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (* 2 (log x)) (log (- 48.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 0) (* 0 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 16.0 0) into 16.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 16.0) 1)) (pow (- 48.0) 1)))) 2) into -0.3333333333333333
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0)))))) into (- 0.1111111111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.1111111111111111) 1) 1)))) into (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 16.0 0) into 16.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 16.0) 1)) (pow (- 48.0) 1)))) 2) into -0.3333333333333333
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0)))))) into (- 0.1111111111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.1111111111111111) 1) 1)))) into (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (+ (* 0 0) (* (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))))) into (- (* 0.2222222222222222 (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2)))
* [misc]backup-simplify:  Simplify (- (* 0.2222222222222222 (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2))) into (- (* 0.2222222222222222 (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2)))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 48.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 16.0) 1)) (pow (- 48.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 48.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.1111111111111111) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 48.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 16.0) 1)) (pow (- 48.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 48.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.1111111111111111) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 0) (+ (* 0 (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (+ (* (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) 0) (* 0 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 48.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 16.0) 1)) (pow (- 48.0) 3))) (* -3 (/ (* 1 (pow (* 2 16.0) 2)) (pow (- 48.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 48.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 48.0) 1)))) 24) into (/ -128.0 (pow -48.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -128.0 (pow -48.0 2))) (+ (* 0 0) (+ (* 0 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0)))))))) into (- (* 42.666666666666664 (/ 1 (pow -48.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.1111111111111111) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.1111111111111111) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ 1 (pow -48.0 2)))) 1) 1)))) into (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 48.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 16.0) 1)) (pow (- 48.0) 3))) (* -3 (/ (* 1 (pow (* 2 16.0) 2)) (pow (- 48.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 48.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 48.0) 1)))) 24) into (/ -128.0 (pow -48.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -128.0 (pow -48.0 2))) (+ (* 0 0) (+ (* 0 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0)))))))) into (- (* 42.666666666666664 (/ 1 (pow -48.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.1111111111111111) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.1111111111111111) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ 1 (pow -48.0 2)))) 1) 1)))) into (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (+ (* 0 0) (+ (* (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (+ (* 0 0) (* (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))))))) into (- (* 0.024691358024691357 (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2)) (* 85.33333333333333 (/ (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2) (pow -48.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.024691358024691357 (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2)) (* 85.33333333333333 (/ (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2) (pow -48.0 2)))) into (- (* 0.024691358024691357 (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2)) (* 85.33333333333333 (/ (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2) (pow -48.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.024691358024691357 (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2)) (* 85.33333333333333 (/ (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2) (pow -48.0 2)))) (pow x 4)) (+ (* (- (* 0.2222222222222222 (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2))) (pow x 2)) (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2))) into (- (+ (* 0.024691358024691357 (* (pow x 4) (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2))) (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2)) (+ (* 85.33333333333333 (/ (* (pow x 4) (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2)) (pow -48.0 2))) (* 0.2222222222222222 (* (pow x 2) (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2)))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))) into (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2) into (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (/ 16.0 (pow x 3)) 0) into (* 16.0 (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* 16.0 (/ 1 (pow x 3)))) 1)) (pow (- 48.0) 1)))) 1) into (/ -0.3333333333333333 (pow x 3))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.3333333333333333 (pow x 3))) (* 0 (- (log (- 48.0)) (* 2 (log x))))) into (- (* 0.1111111111111111 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (- (* 0.1111111111111111 (/ 1 (pow x 3)))) 1) 1)))) into (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (/ 16.0 (pow x 3)) 0) into (* 16.0 (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* 16.0 (/ 1 (pow x 3)))) 1)) (pow (- 48.0) 1)))) 1) into (/ -0.3333333333333333 (pow x 3))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.3333333333333333 (pow x 3))) (* 0 (- (log (- 48.0)) (* 2 (log x))))) into (- (* 0.1111111111111111 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (- (* 0.1111111111111111 (/ 1 (pow x 3)))) 1) 1)))) into (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))) (* (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))) into (- (* 0.2222222222222222 (/ (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2) (pow x 3))))
* [misc]backup-simplify:  Simplify (- (* 0.2222222222222222 (/ (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2) (pow x 3)))) into (- (* 0.2222222222222222 (/ (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2) (pow x 3))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* 16.0 (/ 1 (pow x 3)))) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 48.0) 1)))) 2) into (/ -128.0 (* (pow -48.0 2) (pow x 6)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -128.0 (* (pow -48.0 2) (pow x 6)))) (+ (* 0 (/ -0.3333333333333333 (pow x 3))) (* 0 (- (log (- 48.0)) (* 2 (log x)))))) into (- (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (- (* 0.1111111111111111 (/ 1 (pow x 3)))) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))) 1) 1)))) into (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* 16.0 (/ 1 (pow x 3)))) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 48.0) 1)))) 2) into (/ -128.0 (* (pow -48.0 2) (pow x 6)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -128.0 (* (pow -48.0 2) (pow x 6)))) (+ (* 0 (/ -0.3333333333333333 (pow x 3))) (* 0 (- (log (- 48.0)) (* 2 (log x)))))) into (- (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (- (* 0.1111111111111111 (/ 1 (pow x 3)))) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))) 1) 1)))) into (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))))) (+ (* (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3))) (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))) (* (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6)))))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))))) into (- (* 0.024691358024691357 (/ (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2) (pow x 6))) (* 85.33333333333333 (/ (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2) (* (pow -48.0 2) (pow x 6)))))
* [misc]backup-simplify:  Simplify (- (* 0.024691358024691357 (/ (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2) (pow x 6))) (* 85.33333333333333 (/ (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2) (* (pow -48.0 2) (pow x 6))))) into (- (* 0.024691358024691357 (/ (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2) (pow x 6))) (* 85.33333333333333 (/ (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2) (* (pow -48.0 2) (pow x 6)))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.024691358024691357 (/ (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) 2) (pow (/ 1 x) 6))) (* 85.33333333333333 (/ (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) 2) (* (pow -48.0 2) (pow (/ 1 x) 6))))) (pow (/ 1 x) 2)) (+ (* (- (* 0.2222222222222222 (/ (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) 2) (pow (/ 1 x) 3)))) (/ 1 x)) (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) 2))) into (- (+ (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) 2) (* 0.024691358024691357 (* (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) 2) (pow x 4)))) (+ (* 85.33333333333333 (/ (* (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) 2) (pow x 4)) (pow -48.0 2))) (* 0.2222222222222222 (* (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) 2) (pow x 2)))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))) into (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2) into (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 (exp (* 3 (- (log -1) (log x))))) 0) into (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) 1)) (pow (- 48.0) 1)))) 1) into (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))) (* 0 (- (log (- 48.0)) (* 2 (log x))))) into (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x))))) 1) 1)))) into (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 (exp (* 3 (- (log -1) (log x))))) 0) into (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) 1)) (pow (- 48.0) 1)))) 1) into (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))) (* 0 (- (log (- 48.0)) (* 2 (log x))))) into (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x))))) 1) 1)))) into (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))))) (* (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))) into (* 0.2222222222222222 (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (* 0.2222222222222222 (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2))) into (* 0.2222222222222222 (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 48.0) 1)))) 2) into (* -128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* -128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (+ (* 0 (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))) (* 0 (- (log (- 48.0)) (* 2 (log x)))))) into (- (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x))))) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) 1) 1)))) into (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 48.0) 1)))) 2) into (* -128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* -128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (+ (* 0 (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))) (* 0 (- (log (- 48.0)) (* 2 (log x)))))) into (- (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x))))) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) 1) 1)))) into (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))) (+ (* (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))) (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))))) (* (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))))) into (- (* 0.024691358024691357 (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2))) (* 85.33333333333333 (/ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2)) (pow -48.0 2))))
* [misc]backup-simplify:  Simplify (- (* 0.024691358024691357 (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2))) (* 85.33333333333333 (/ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2)) (pow -48.0 2)))) into (- (* 0.024691358024691357 (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2))) (* 85.33333333333333 (/ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) 2)) (pow -48.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.024691358024691357 (* (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x))))))) 2))) (* 85.33333333333333 (/ (* (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x))))))) 2)) (pow -48.0 2)))) (pow (/ 1 (- x)) 2)) (+ (* (* 0.2222222222222222 (* (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x))))))) 2))) (/ 1 (- x))) (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x))))))) 2))) into (- (+ (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) 2) (* 0.024691358024691357 (/ (* (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) 2) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 0.2222222222222222 (/ (* (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) 2) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x)) (* 85.33333333333333 (/ (* (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) 2) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2))))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3))))>
* * * * [misc]progress:  [ 2 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (pow (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) 1))))>
* * * * [misc]progress:  [ 3 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (exp (log (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))))>
* [enter]simplify:  Simplifying (log (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (log (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (log (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 4 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (log (exp (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))))>
* [enter]simplify:  Simplifying (exp (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (exp (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 5 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))))>
* [enter]simplify:  Simplifying (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (175 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 6 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (* (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))))>
* [enter]simplify:  Simplifying (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [enter]simplify:  Simplifying (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 7 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (* (cbrt 1) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))>
* [enter]simplify:  Simplifying (cbrt 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (cbrt 1)
* [exit]simplify:  Simplified to (cbrt 1)
* [enter]simplify:  Simplifying (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* * * * [misc]progress:  [ 8 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (/ (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3))) (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))))>
* [enter]simplify:  Simplifying (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (448 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3)))
* [exit]simplify:  Simplified to (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3)))
* [enter]simplify:  Simplifying (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* (* (* x 16.0) (* (* x x) (* x x))) (- (* -48.0 x) (* (* x x) (* x 16.0))))))
* [exit]simplify:  Simplified to (cbrt (- (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* (* (* x 16.0) (* (* x x) (* x x))) (- (* -48.0 x) (* (* x x) (* x 16.0))))))
* * * * [misc]progress:  [ 9 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (/ (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x)))) (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))>
* [enter]simplify:  Simplifying (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (334 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))) (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))) (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x)))))
* [enter]simplify:  Simplifying (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (102 enodes)
* * [misc]simplify:  iters left: 1 (107 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* * * * [misc]progress:  [ 10 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (* (* (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (175 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 11 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (67 enodes)
* * [misc]simplify:  iters left: 2 (114 enodes)
* * [misc]simplify:  iters left: 1 (185 enodes)
* [exit]simplify:  Simplified to (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))
* * * * [misc]progress:  [ 12 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (* (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [enter]simplify:  Simplifying (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 13 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (* 1 (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))>
* * * * [misc]progress:  [ 14 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3)) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* * * * [misc]progress:  [ 15 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (pow (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) 1)) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* * * * [misc]progress:  [ 16 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (exp (log (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (log (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (log (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (log (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 17 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (log (exp (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (exp (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (exp (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 18 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (175 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 19 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (* (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [enter]simplify:  Simplifying (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 20 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (* (cbrt 1) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (cbrt 1)
* [exit]simplify:  Simplified to (cbrt 1)
* [enter]simplify:  Simplifying (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* * * * [misc]progress:  [ 21 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (/ (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3))) (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (448 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3)))
* [exit]simplify:  Simplified to (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3)))
* [enter]simplify:  Simplifying (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* (* (* x 16.0) (* (* x x) (* x x))) (- (* -48.0 x) (* (* x x) (* x 16.0))))))
* [exit]simplify:  Simplified to (cbrt (- (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* (* (* x 16.0) (* (* x x) (* x x))) (- (* -48.0 x) (* (* x x) (* x 16.0))))))
* * * * [misc]progress:  [ 22 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (/ (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x)))) (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (334 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))) (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))) (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x)))))
* [enter]simplify:  Simplifying (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (102 enodes)
* * [misc]simplify:  iters left: 1 (107 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* * * * [misc]progress:  [ 23 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (* (* (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (175 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 24 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (67 enodes)
* * [misc]simplify:  iters left: 2 (114 enodes)
* * [misc]simplify:  iters left: 1 (185 enodes)
* [exit]simplify:  Simplified to (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))
* * * * [misc]progress:  [ 25 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (* (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [enter]simplify:  Simplifying (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 26 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (* 1 (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* * * * [misc]progress:  [ 27 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* * * * [misc]progress:  [ 28 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (pow (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) 1) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* * * * [misc]progress:  [ 29 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (exp (log (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (log (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (log (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (log (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 30 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (log (exp (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (exp (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (exp (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 31 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (175 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 32 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [enter]simplify:  Simplifying (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 33 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt 1) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (cbrt 1)
* [exit]simplify:  Simplified to (cbrt 1)
* [enter]simplify:  Simplifying (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* * * * [misc]progress:  [ 34 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (/ (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3))) (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (448 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3)))
* [exit]simplify:  Simplified to (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3)))
* [enter]simplify:  Simplifying (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* (* (* x 16.0) (* (* x x) (* x x))) (- (* -48.0 x) (* (* x x) (* x 16.0))))))
* [exit]simplify:  Simplified to (cbrt (- (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* (* (* x 16.0) (* (* x x) (* x x))) (- (* -48.0 x) (* (* x x) (* x 16.0))))))
* * * * [misc]progress:  [ 35 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (/ (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x)))) (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (334 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))) (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))) (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x)))))
* [enter]simplify:  Simplifying (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (102 enodes)
* * [misc]simplify:  iters left: 1 (107 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* * * * [misc]progress:  [ 36 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (* (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (175 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 37 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (67 enodes)
* * [misc]simplify:  iters left: 2 (114 enodes)
* * [misc]simplify:  iters left: 1 (185 enodes)
* [exit]simplify:  Simplified to (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))
* * * * [misc]progress:  [ 38 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [enter]simplify:  Simplifying (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 39 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* 1 (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* * * * [misc]progress:  [ 40 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) (+ 1/3 1/3)) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (+ 1/3 1/3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* * * * [misc]progress:  [ 41 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (pow (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (+ 1 1)) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 42 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (pow (* (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) 1/3) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (323 enodes)
* [exit]simplify:  Simplified to (* (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)) (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* [exit]simplify:  Simplified to (* (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)) (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* * * * [misc]progress:  [ 43 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (pow (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) 1) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 44 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (pow (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) 2) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* * * * [misc]progress:  [ 45 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (pow (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (+ 1 1)) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 46 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (pow (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) 1) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* * * * [misc]progress:  [ 47 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (exp (+ (log (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (log (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (log (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (175 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))) (log (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))) (log (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* * * * [misc]progress:  [ 48 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (exp (log (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* * [misc]simplify:  iters left: 2 (113 enodes)
* * [misc]simplify:  iters left: 1 (192 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* (* x x) -48.0) (* (pow x 3) (* x 16.0))))) (log (cbrt (+ (* (* x x) -48.0) (* (pow x 3) (* x 16.0))))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* (* x x) -48.0) (* (pow x 3) (* x 16.0))))) (log (cbrt (+ (* (* x x) -48.0) (* (pow x 3) (* x 16.0))))))
* * * * [misc]progress:  [ 49 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (log (exp (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* * [misc]simplify:  iters left: 2 (113 enodes)
* * [misc]simplify:  iters left: 1 (192 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))) (cbrt (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0))))))
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))) (cbrt (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0))))))
* * * * [misc]progress:  [ 50 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (cbrt (* (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (323 enodes)
* [exit]simplify:  Simplified to (* (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)) (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* [exit]simplify:  Simplified to (* (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)) (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* * * * [misc]progress:  [ 51 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* * [misc]simplify:  iters left: 2 (113 enodes)
* * [misc]simplify:  iters left: 1 (180 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))))) (cbrt (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))))) (cbrt (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (175 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* * * * [misc]progress:  [ 52 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (cbrt (* (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (86 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x x) -48.0) (* (pow x 3) (* x 16.0))) (+ (* (* x x) -48.0) (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (* (+ (* (* x x) -48.0) (* (pow x 3) (* x 16.0))) (+ (* (* x x) -48.0) (* (pow x 3) (* x 16.0))))
* * * * [misc]progress:  [ 53 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (sqrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (sqrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* * [misc]simplify:  iters left: 2 (113 enodes)
* * [misc]simplify:  iters left: 1 (180 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* * [misc]simplify:  iters left: 2 (113 enodes)
* * [misc]simplify:  iters left: 1 (180 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 54 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (/ (* (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3))) (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3)))) (* (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3))) (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (459 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3))) (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3))) (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* (* (* (* x x) (* x 16.0)) (* x x)) (- (* -48.0 x) (* (* x x) (* x 16.0)))))) (cbrt (- (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* (* (* (* x x) (* x 16.0)) (* x x)) (- (* -48.0 x) (* (* x x) (* x 16.0)))))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* (* (* (* x x) (* x 16.0)) (* x x)) (- (* -48.0 x) (* (* x x) (* x 16.0)))))) (cbrt (- (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* (* (* (* x x) (* x 16.0)) (* x x)) (- (* -48.0 x) (* (* x x) (* x 16.0)))))))
* * * * [misc]progress:  [ 55 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (/ (* (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3))) (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x))))) (* (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3))) (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (172 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))) (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x))))) (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))) (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x))))) (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* (* (* x x) (* (* x x) (* x 16.0))) (- (* -48.0 x) (* (* x x) (* x 16.0)))))) (cbrt (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* (* (* x x) (* (* x x) (* x 16.0))) (- (* -48.0 x) (* (* x x) (* x 16.0)))))) (cbrt (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x)))))
* * * * [misc]progress:  [ 56 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (/ (* (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x)))) (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3)))) (* (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x)))) (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (172 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* x (* -48.0 x)) 3) (pow (* (pow x 3) (* x 16.0)) 3))) (cbrt (* (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))) (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* x (* -48.0 x)) 3) (pow (* (pow x 3) (* x 16.0)) 3))) (cbrt (* (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))) (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x))))))
* [enter]simplify:  Simplifying (* (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x x) (* (* x x) (* x 16.0))) (- (* x -48.0) (* (* x x) (* x 16.0)))))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x x) (* (* x x) (* x 16.0))) (- (* x -48.0) (* (* x x) (* x 16.0)))))))
* * * * [misc]progress:  [ 57 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (/ (* (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x)))) (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x))))) (* (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x)))) (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (323 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x))) (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))))) (cbrt (* (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x))) (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x))) (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))))) (cbrt (* (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x))) (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))))))
* [enter]simplify:  Simplifying (* (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (85 enodes)
* * [misc]simplify:  iters left: 2 (112 enodes)
* * [misc]simplify:  iters left: 1 (115 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (- (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (- (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 58 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* 1 (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* * * * [misc]progress:  [ 59 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (67 enodes)
* * [misc]simplify:  iters left: 2 (114 enodes)
* * [misc]simplify:  iters left: 1 (180 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))))
* * * * [misc]progress:  [ 60 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (67 enodes)
* * [misc]simplify:  iters left: 2 (114 enodes)
* * [misc]simplify:  iters left: 1 (180 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))))
* * * * [misc]progress:  [ 61 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt 1)) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt 1))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (64 enodes)
* * [misc]simplify:  iters left: 2 (105 enodes)
* * [misc]simplify:  iters left: 1 (172 enodes)
* [exit]simplify:  Simplified to (* (cbrt 1) (cbrt (+ (* (* x x) -48.0) (* (pow x 3) (* x 16.0)))))
* [exit]simplify:  Simplified to (* (cbrt 1) (cbrt (+ (* (* x x) -48.0) (* (pow x 3) (* x 16.0)))))
* * * * [misc]progress:  [ 62 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (* (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (* (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* * [misc]simplify:  iters left: 2 (112 enodes)
* * [misc]simplify:  iters left: 1 (178 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))) (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))))
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))) (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))))
* * * * [misc]progress:  [ 63 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* * [misc]simplify:  iters left: 2 (113 enodes)
* * [misc]simplify:  iters left: 1 (180 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0))))) (cbrt (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0))))) (cbrt (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))))
* * * * [misc]progress:  [ 64 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) 1) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) 1)
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (68 enodes)
* * [misc]simplify:  iters left: 2 (113 enodes)
* * [misc]simplify:  iters left: 1 (180 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0))))
* * * * [misc]progress:  [ 65 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (* (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* * [misc]simplify:  iters left: 2 (113 enodes)
* * [misc]simplify:  iters left: 1 (180 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0))))) (cbrt (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0))))) (cbrt (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))))
* * * * [misc]progress:  [ 66 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (* (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (67 enodes)
* * [misc]simplify:  iters left: 2 (114 enodes)
* * [misc]simplify:  iters left: 1 (180 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))))
* * * * [misc]progress:  [ 67 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt 1) (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 68 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (* (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* * [misc]simplify:  iters left: 2 (113 enodes)
* * [misc]simplify:  iters left: 1 (180 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0))))) (cbrt (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0))))) (cbrt (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))))
* * * * [misc]progress:  [ 69 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (* (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* * [misc]simplify:  iters left: 2 (113 enodes)
* * [misc]simplify:  iters left: 1 (180 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0))))) (cbrt (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0))))) (cbrt (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))))
* * * * [misc]progress:  [ 70 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* 1 (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 71 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (/ (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3)))) (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (128 enodes)
* * [misc]simplify:  iters left: 3 (487 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* (* x -48.0) x) 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* (* x -48.0) x) 3))))
* * * * [misc]progress:  [ 72 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (/ (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x))))) (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (110 enodes)
* * [misc]simplify:  iters left: 3 (343 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (- (* (* (pow x 3) (* x 16.0)) (* (pow x 3) (* x 16.0))) (* (* (* x -48.0) x) (* (* x -48.0) x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (- (* (* (pow x 3) (* x 16.0)) (* (pow x 3) (* x 16.0))) (* (* (* x -48.0) x) (* (* x -48.0) x)))))
* * * * [misc]progress:  [ 73 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (/ (* (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (465 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3))) (cbrt (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3))) (cbrt (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0)))))
* * * * [misc]progress:  [ 74 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (/ (* (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (320 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))) (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x))))) (cbrt (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0)))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))) (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x))))) (cbrt (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0)))))
* * * * [misc]progress:  [ 75 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* * * * [misc]progress:  [ 76 / 87 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (- (+ (* 0.006172839506172839 (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (+ (* 0.1111111111111111 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (* 42.666666666666664 (/ (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow -48.0 2))))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (- (+ (* 0.006172839506172839 (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (+ (* 0.1111111111111111 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (* 42.666666666666664 (/ (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow -48.0 2)))))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (220 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (* (- (+ (* (* (pow (- 48.0) 1/3) (pow x (* 1/3 2))) (- (* (pow x 4) 0.006172839506172839) (* 0.1111111111111111 (* x x)))) (* (pow (- 48.0) 1/3) (pow x (* 1/3 2)))) (* (* 42.666666666666664 (/ (pow x 4) (* -48.0 -48.0))) (* (pow (- 48.0) 1/3) (pow x (* 1/3 2))))) (* (cbrt (+ (* -48.0 (* x x)) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* -48.0 (* x x)) (* (* 16.0 x) (pow x 3)))))))
* * * * [misc]progress:  [ 77 / 87 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (- (+ (* 0.006172839506172839 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.1111111111111111 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2))))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (- (+ (* 0.006172839506172839 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.1111111111111111 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2)))))))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (91 enodes)
* * [misc]simplify:  iters left: 4 (222 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (* (- (+ (* (pow (exp 1/3) (+ (* 2 (log x)) (log (- 48.0)))) (- (* (pow x 4) 0.006172839506172839) (* x (* x 0.1111111111111111)))) (pow (exp 1/3) (+ (* 2 (log x)) (log (- 48.0))))) (/ (* (pow (exp 1/3) (+ (* 2 (log x)) (log (- 48.0)))) (* (pow x 4) 42.666666666666664)) (* -48.0 -48.0))) (* (cbrt (+ (* -48.0 (* x x)) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* -48.0 (* x x)) (* (* 16.0 x) (pow x 3)))))))
* * * * [misc]progress:  [ 78 / 87 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (- (+ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (* 0.006172839506172839 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (* 0.1111111111111111 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x)))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (- (+ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (* 0.006172839506172839 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (* 0.1111111111111111 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x))))))
* * [misc]simplify:  iters left: 6 (49 enodes)
* * [misc]simplify:  iters left: 5 (111 enodes)
* * [misc]simplify:  iters left: 4 (322 enodes)
* [exit]simplify:  Simplified to (+ (+ 12.0 (* (exp (+ (* 1/3 (log (- 48.0))) (* (* 1/3 (- 2)) (log (/ -1 x))))) (* (cbrt (+ (* -48.0 (* x x)) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* -48.0 (* x x)) (* (* 16.0 x) (pow x 3))))))) (* (- (* (* (/ (exp (* (+ 0 (log x)) (+ 3 3))) (* x x)) (exp (+ (* 1/3 (log (- 48.0))) (* (* 1/3 (- 2)) (log (/ -1 x)))))) (- 0.006172839506172839 (/ (/ 42.666666666666664 -48.0) -48.0))) (* (/ 0.1111111111111111 x) (exp (+ (+ (* 1/3 (log (- 48.0))) (* (* 1/3 (- 2)) (log (/ -1 x)))) (* (+ 0 (log x)) 3))))) (* (cbrt (+ (* -48.0 (* x x)) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* -48.0 (* x x)) (* (* 16.0 x) (pow x 3)))))))
* * * * [misc]progress:  [ 79 / 87 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (- (+ (* 0.006172839506172839 (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (+ (* 0.1111111111111111 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (* 42.666666666666664 (/ (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow -48.0 2)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (- (+ (* 0.006172839506172839 (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (+ (* 0.1111111111111111 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (* 42.666666666666664 (/ (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow -48.0 2)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (87 enodes)
* * [misc]simplify:  iters left: 4 (207 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (* (+ (- (* (* (pow x (* 2 1/3)) (pow (- 48.0) 1/3)) (- (* 0.006172839506172839 (pow x 4)) (* 0.1111111111111111 (* x x)))) (* (* 42.666666666666664 (/ (pow x 4) (* -48.0 -48.0))) (* (pow x (* 2 1/3)) (pow (- 48.0) 1/3)))) (* (pow x (* 2 1/3)) (pow (- 48.0) 1/3))) (* (cbrt (+ (* x (* -48.0 x)) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* x (* -48.0 x)) (* (* 16.0 x) (pow x 3)))))))
* * * * [misc]progress:  [ 80 / 87 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (- (+ (* 0.006172839506172839 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.1111111111111111 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (- (+ (* 0.006172839506172839 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.1111111111111111 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (209 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (* (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3))))) (- (+ (* (pow (exp 1/3) (+ (* (log x) 2) (log (- 48.0)))) (- (* (pow x 4) 0.006172839506172839) (* 0.1111111111111111 (* x x)))) (pow (exp 1/3) (+ (* (log x) 2) (log (- 48.0))))) (* (* 42.666666666666664 (/ (pow x 4) -48.0)) (/ (pow (exp 1/3) (+ (* (log x) 2) (log (- 48.0)))) -48.0)))))
* * * * [misc]progress:  [ 81 / 87 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (- (+ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (* 0.006172839506172839 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (* 0.1111111111111111 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (- (+ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (* 0.006172839506172839 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (* 0.1111111111111111 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (49 enodes)
* * [misc]simplify:  iters left: 5 (110 enodes)
* * [misc]simplify:  iters left: 4 (309 enodes)
* [exit]simplify:  Simplified to (+ (* (- (+ (exp (+ (* (log (- 48.0)) 1/3) (* (log (/ -1 x)) (* (- 2) 1/3)))) (* (/ (exp (+ (* (log (- 48.0)) 1/3) (* (log (/ -1 x)) (* (- 2) 1/3)))) (/ (* x x) (exp (* (+ 0 (log x)) (+ 3 3))))) (- 0.006172839506172839 (/ 42.666666666666664 (* -48.0 -48.0))))) (* (/ 0.1111111111111111 x) (exp (+ (* (log (- 48.0)) 1/3) (+ (* (log (/ -1 x)) (* (- 2) 1/3)) (* 3 (+ 0 (log x)))))))) (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))))) 12.0)
* * * * [misc]progress:  [ 82 / 87 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (* (- (+ (* 0.006172839506172839 (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (+ (* 0.1111111111111111 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (* 42.666666666666664 (/ (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow -48.0 2))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (* (- (+ (* 0.006172839506172839 (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (+ (* 0.1111111111111111 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (* 42.666666666666664 (/ (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow -48.0 2))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (89 enodes)
* * [misc]simplify:  iters left: 4 (208 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (* (* (cbrt (+ (* (* -48.0 x) x) (* (* x 16.0) (pow x 3)))) (cbrt (+ (* (* -48.0 x) x) (* (* x 16.0) (pow x 3))))) (+ (- (* (* (pow x (* 2 1/3)) (pow (- 48.0) 1/3)) (- (* 0.006172839506172839 (pow x 4)) (* (* 0.1111111111111111 x) x))) (* (* 42.666666666666664 (/ (pow x 4) (* -48.0 -48.0))) (* (pow x (* 2 1/3)) (pow (- 48.0) 1/3)))) (* (pow x (* 2 1/3)) (pow (- 48.0) 1/3)))))
* * * * [misc]progress:  [ 83 / 87 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (* (- (+ (* 0.006172839506172839 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.1111111111111111 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (* (- (+ (* 0.006172839506172839 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.1111111111111111 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (92 enodes)
* * [misc]simplify:  iters left: 4 (210 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (* (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))) (- (+ (* (pow (exp 1/3) (+ (log (- 48.0)) (* (log x) 2))) (- (* (pow x 4) 0.006172839506172839) (* x (* x 0.1111111111111111)))) (pow (exp 1/3) (+ (log (- 48.0)) (* (log x) 2)))) (/ 42.666666666666664 (/ (/ (* -48.0 -48.0) (pow x 4)) (pow (exp 1/3) (+ (log (- 48.0)) (* (log x) 2))))))))
* * * * [misc]progress:  [ 84 / 87 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (* (- (+ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (* 0.006172839506172839 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (* 0.1111111111111111 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (* (- (+ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (* 0.006172839506172839 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (* 0.1111111111111111 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (49 enodes)
* * [misc]simplify:  iters left: 5 (113 enodes)
* * [misc]simplify:  iters left: 4 (311 enodes)
* [exit]simplify:  Simplified to (+ (* (- (+ (exp (+ (* (log (/ -1 x)) (* (- 2) 1/3)) (* 1/3 (log (- 48.0))))) (* (/ (exp (+ (* (log (/ -1 x)) (* (- 2) 1/3)) (* 1/3 (log (- 48.0))))) (/ (* x x) (exp (* (+ 0 (log x)) (+ 3 3))))) (- 0.006172839506172839 (/ 42.666666666666664 (* -48.0 -48.0))))) (* (/ 0.1111111111111111 x) (exp (+ (+ (* 3 (+ 0 (log x))) (* 1/3 (log (- 48.0)))) (* (log (/ -1 x)) (* (- 2) 1/3)))))) (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* -48.0 (* x x)))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* -48.0 (* x x)))))) 12.0)
* * * * [misc]progress:  [ 85 / 87 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (- (+ (* 0.024691358024691357 (* (pow x 4) (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2))) (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2)) (+ (* 85.33333333333333 (/ (* (pow x 4) (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2)) (pow -48.0 2))) (* 0.2222222222222222 (* (pow x 2) (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (- (+ (* 0.024691358024691357 (* (pow x 4) (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2))) (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2)) (+ (* 85.33333333333333 (/ (* (pow x 4) (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2)) (pow -48.0 2))) (* 0.2222222222222222 (* (pow x 2) (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) 2))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (225 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* -48.0 x) x))) (- (* (* (* (pow x (* 2 1/3)) (pow (- 48.0) 1/3)) (* (pow x (* 2 1/3)) (pow (- 48.0) 1/3))) (- (+ 1 (* 0.024691358024691357 (pow x 4))) (* x (* 0.2222222222222222 x)))) (* (/ (* (pow x 4) 85.33333333333333) (* -48.0 -48.0)) (* (* (pow x (* 2 1/3)) (pow (- 48.0) 1/3)) (* (pow x (* 2 1/3)) (pow (- 48.0) 1/3)))))))
* * * * [misc]progress:  [ 86 / 87 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (- (+ (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) 2) (* 0.024691358024691357 (* (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) 2) (pow x 4)))) (+ (* 85.33333333333333 (/ (* (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) 2) (pow x 4)) (pow -48.0 2))) (* 0.2222222222222222 (* (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) 2) (pow x 2))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (- (+ (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) 2) (* 0.024691358024691357 (* (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) 2) (pow x 4)))) (+ (* 85.33333333333333 (/ (* (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) 2) (pow x 4)) (pow -48.0 2))) (* 0.2222222222222222 (* (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) 2) (pow x 2))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (221 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (* (- (+ (exp (* (+ (log (- 48.0)) (* (log x) 2)) (+ 1/3 1/3))) (* (exp (* (+ (log (- 48.0)) (* (log x) 2)) (+ 1/3 1/3))) (- (* 0.024691358024691357 (pow x 4)) (* 0.2222222222222222 (* x x))))) (* (/ (exp (* (+ (log (- 48.0)) (* (log x) 2)) (+ 1/3 1/3))) -48.0) (* (/ (pow x 4) -48.0) 85.33333333333333))) (cbrt (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))))))
* * * * [misc]progress:  [ 87 / 87 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (- (+ (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) 2) (* 0.024691358024691357 (/ (* (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) 2) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 0.2222222222222222 (/ (* (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) 2) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x)) (* 85.33333333333333 (/ (* (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) 2) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (- (+ (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) 2) (* 0.024691358024691357 (/ (* (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) 2) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 0.2222222222222222 (/ (* (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) 2) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x)) (* 85.33333333333333 (/ (* (pow (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) 2) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (49 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (317 enodes)
* [exit]simplify:  Simplified to (+ (+ 12.0 (* (exp (* (- (log (- 48.0)) (* (log (/ -1 x)) 2)) (+ 1/3 1/3))) (cbrt (+ (* (* 16.0 x) (pow x 3)) (* -48.0 (* x x)))))) (* (- (* (/ (exp (* (- (log (- 48.0)) (* (log (/ -1 x)) 2)) (+ 1/3 1/3))) (/ (* x x) (exp (* (+ 0 (log x)) (+ 3 3))))) (- 0.024691358024691357 (/ 85.33333333333333 (* -48.0 -48.0)))) (* (/ 0.2222222222222222 x) (exp (+ (* 3 (+ 0 (log x))) (* (- (log (- 48.0)) (* (log (/ -1 x)) 2)) (+ 1/3 1/3)))))) (cbrt (+ (* (* 16.0 x) (pow x 3)) (* -48.0 (* x x))))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1 2 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 1 2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 1 1 2 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))) into (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))) into (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 48.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (* 2 (log x)) (log (- 48.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 16.0 0) into 16.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 16.0) 1)) (pow (- 48.0) 1)))) 2) into -0.3333333333333333
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0)))))) into (- 0.1111111111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.1111111111111111) 1) 1)))) into (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) into (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 48.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 16.0) 1)) (pow (- 48.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 48.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.1111111111111111) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 48.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 16.0) 1)) (pow (- 48.0) 3))) (* -3 (/ (* 1 (pow (* 2 16.0) 2)) (pow (- 48.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 48.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 48.0) 1)))) 24) into (/ -128.0 (pow -48.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -128.0 (pow -48.0 2))) (+ (* 0 0) (+ (* 0 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0)))))))) into (- (* 42.666666666666664 (/ 1 (pow -48.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.1111111111111111) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.1111111111111111) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ 1 (pow -48.0 2)))) 1) 1)))) into (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) into (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow x 4)) (+ (* (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow x 2)) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) into (- (+ (* 0.006172839506172839 (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (+ (* 0.1111111111111111 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (* 42.666666666666664 (/ (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow -48.0 2)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (/ 16.0 (pow x 3)) 0) into (* 16.0 (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* 16.0 (/ 1 (pow x 3)))) 1)) (pow (- 48.0) 1)))) 1) into (/ -0.3333333333333333 (pow x 3))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.3333333333333333 (pow x 3))) (* 0 (- (log (- 48.0)) (* 2 (log x))))) into (- (* 0.1111111111111111 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (- (* 0.1111111111111111 (/ 1 (pow x 3)))) 1) 1)))) into (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))
* [misc]backup-simplify:  Simplify (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3))) into (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* 16.0 (/ 1 (pow x 3)))) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 48.0) 1)))) 2) into (/ -128.0 (* (pow -48.0 2) (pow x 6)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -128.0 (* (pow -48.0 2) (pow x 6)))) (+ (* 0 (/ -0.3333333333333333 (pow x 3))) (* 0 (- (log (- 48.0)) (* 2 (log x)))))) into (- (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (- (* 0.1111111111111111 (/ 1 (pow x 3)))) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))) 1) 1)))) into (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6)))))) into (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (- (* 0.006172839506172839 (/ 1 (pow (/ 1 x) 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow (/ 1 x) 6)))))) (pow (/ 1 x) 2)) (+ (* (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow (/ 1 x) 3))) (/ 1 x)) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))))) into (- (+ (* 0.006172839506172839 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.1111111111111111 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 (exp (* 3 (- (log -1) (log x))))) 0) into (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) 1)) (pow (- 48.0) 1)))) 1) into (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))) (* 0 (- (log (- 48.0)) (* 2 (log x))))) into (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x))))) 1) 1)))) into (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))) into (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 48.0) 1)))) 2) into (* -128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* -128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (+ (* 0 (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))) (* 0 (- (log (- 48.0)) (* 2 (log x)))))) into (- (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x))))) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) 1) 1)))) into (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))) into (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x)))))))) (pow (/ 1 (- x)) 2)) (+ (* (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x))))))))) (/ 1 (- x))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x))))))))) into (- (+ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (* 0.006172839506172839 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (* 0.1111111111111111 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1 2 1 2)
* [misc]approximate:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))) into (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))) into (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 48.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (* 2 (log x)) (log (- 48.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 16.0 0) into 16.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 16.0) 1)) (pow (- 48.0) 1)))) 2) into -0.3333333333333333
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0)))))) into (- 0.1111111111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.1111111111111111) 1) 1)))) into (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) into (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 48.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 16.0) 1)) (pow (- 48.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 48.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.1111111111111111) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 48.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 16.0) 1)) (pow (- 48.0) 3))) (* -3 (/ (* 1 (pow (* 2 16.0) 2)) (pow (- 48.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 48.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 48.0) 1)))) 24) into (/ -128.0 (pow -48.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -128.0 (pow -48.0 2))) (+ (* 0 0) (+ (* 0 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0)))))))) into (- (* 42.666666666666664 (/ 1 (pow -48.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.1111111111111111) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.1111111111111111) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ 1 (pow -48.0 2)))) 1) 1)))) into (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) into (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow x 4)) (+ (* (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow x 2)) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) into (- (+ (* 0.006172839506172839 (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (+ (* 0.1111111111111111 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (* 42.666666666666664 (/ (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow -48.0 2)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (/ 16.0 (pow x 3)) 0) into (* 16.0 (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* 16.0 (/ 1 (pow x 3)))) 1)) (pow (- 48.0) 1)))) 1) into (/ -0.3333333333333333 (pow x 3))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.3333333333333333 (pow x 3))) (* 0 (- (log (- 48.0)) (* 2 (log x))))) into (- (* 0.1111111111111111 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (- (* 0.1111111111111111 (/ 1 (pow x 3)))) 1) 1)))) into (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))
* [misc]backup-simplify:  Simplify (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3))) into (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* 16.0 (/ 1 (pow x 3)))) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 48.0) 1)))) 2) into (/ -128.0 (* (pow -48.0 2) (pow x 6)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -128.0 (* (pow -48.0 2) (pow x 6)))) (+ (* 0 (/ -0.3333333333333333 (pow x 3))) (* 0 (- (log (- 48.0)) (* 2 (log x)))))) into (- (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (- (* 0.1111111111111111 (/ 1 (pow x 3)))) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))) 1) 1)))) into (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6)))))) into (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (- (* 0.006172839506172839 (/ 1 (pow (/ 1 x) 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow (/ 1 x) 6)))))) (pow (/ 1 x) 2)) (+ (* (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow (/ 1 x) 3))) (/ 1 x)) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))))) into (- (+ (* 0.006172839506172839 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.1111111111111111 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 (exp (* 3 (- (log -1) (log x))))) 0) into (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) 1)) (pow (- 48.0) 1)))) 1) into (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))) (* 0 (- (log (- 48.0)) (* 2 (log x))))) into (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x))))) 1) 1)))) into (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))) into (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 48.0) 1)))) 2) into (* -128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* -128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (+ (* 0 (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))) (* 0 (- (log (- 48.0)) (* 2 (log x)))))) into (- (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x))))) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) 1) 1)))) into (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))) into (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x)))))))) (pow (/ 1 (- x)) 2)) (+ (* (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x))))))))) (/ 1 (- x))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x))))))))) into (- (+ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (* 0.006172839506172839 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (* 0.1111111111111111 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 1 2 1 1)
* [misc]approximate:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))) into (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))) into (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 48.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (* 2 (log x)) (log (- 48.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 16.0 0) into 16.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 16.0) 1)) (pow (- 48.0) 1)))) 2) into -0.3333333333333333
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0)))))) into (- 0.1111111111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.1111111111111111) 1) 1)))) into (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) into (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 48.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 16.0) 1)) (pow (- 48.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 48.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.1111111111111111) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 48.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 16.0) 1)) (pow (- 48.0) 3))) (* -3 (/ (* 1 (pow (* 2 16.0) 2)) (pow (- 48.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 48.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 48.0) 1)))) 24) into (/ -128.0 (pow -48.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -128.0 (pow -48.0 2))) (+ (* 0 0) (+ (* 0 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0)))))))) into (- (* 42.666666666666664 (/ 1 (pow -48.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.1111111111111111) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.1111111111111111) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ 1 (pow -48.0 2)))) 1) 1)))) into (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) into (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow x 4)) (+ (* (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow x 2)) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) into (- (+ (* 0.006172839506172839 (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (+ (* 0.1111111111111111 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (* 42.666666666666664 (/ (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow -48.0 2)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (/ 16.0 (pow x 3)) 0) into (* 16.0 (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* 16.0 (/ 1 (pow x 3)))) 1)) (pow (- 48.0) 1)))) 1) into (/ -0.3333333333333333 (pow x 3))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.3333333333333333 (pow x 3))) (* 0 (- (log (- 48.0)) (* 2 (log x))))) into (- (* 0.1111111111111111 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (- (* 0.1111111111111111 (/ 1 (pow x 3)))) 1) 1)))) into (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))
* [misc]backup-simplify:  Simplify (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3))) into (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* 16.0 (/ 1 (pow x 3)))) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 48.0) 1)))) 2) into (/ -128.0 (* (pow -48.0 2) (pow x 6)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -128.0 (* (pow -48.0 2) (pow x 6)))) (+ (* 0 (/ -0.3333333333333333 (pow x 3))) (* 0 (- (log (- 48.0)) (* 2 (log x)))))) into (- (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (- (* 0.1111111111111111 (/ 1 (pow x 3)))) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))) 1) 1)))) into (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6)))))) into (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (- (* 0.006172839506172839 (/ 1 (pow (/ 1 x) 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow (/ 1 x) 6)))))) (pow (/ 1 x) 2)) (+ (* (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow (/ 1 x) 3))) (/ 1 x)) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))))) into (- (+ (* 0.006172839506172839 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.1111111111111111 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 (exp (* 3 (- (log -1) (log x))))) 0) into (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) 1)) (pow (- 48.0) 1)))) 1) into (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))) (* 0 (- (log (- 48.0)) (* 2 (log x))))) into (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x))))) 1) 1)))) into (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))) into (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 48.0) 1)))) 2) into (* -128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* -128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (+ (* 0 (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))) (* 0 (- (log (- 48.0)) (* 2 (log x)))))) into (- (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x))))) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) 1) 1)))) into (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))) into (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x)))))))) (pow (/ 1 (- x)) 2)) (+ (* (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x))))))))) (/ 1 (- x))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x))))))))) into (- (+ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (* 0.006172839506172839 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (* 0.1111111111111111 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 1 1 2 1 2)
* [misc]approximate:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))) into (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 16.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 16.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -48.0) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -48.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -48.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 48.0) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 1) (* 0 0))) into (- 48.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 48.0)) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))) into (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))
* [misc]backup-simplify:  Simplify (* 0 16.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -48.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 48.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (* 2 (log x)) (log (- 48.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 16.0)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 16.0 1)) into 16.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 16.0 0) into 16.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 16.0) 1)) (pow (- 48.0) 1)))) 2) into -0.3333333333333333
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0)))))) into (- 0.1111111111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.1111111111111111) 1) 1)))) into (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) into (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 16.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 48.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 16.0) 1)) (pow (- 48.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 48.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.1111111111111111) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 16.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 16.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -48.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 48.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 48.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 16.0) 1)) (pow (- 48.0) 3))) (* -3 (/ (* 1 (pow (* 2 16.0) 2)) (pow (- 48.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 48.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 48.0) 1)))) 24) into (/ -128.0 (pow -48.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 48.0))) into (+ (* 2 (log x)) (log (- 48.0)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -128.0 (pow -48.0 2))) (+ (* 0 0) (+ (* 0 -0.3333333333333333) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 48.0)))))))) into (- (* 42.666666666666664 (/ 1 (pow -48.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.1111111111111111) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.1111111111111111) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ 1 (pow -48.0 2)))) 1) 1)))) into (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) into (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- 0.006172839506172839 (* 42.666666666666664 (/ 1 (pow -48.0 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow x 4)) (+ (* (* -0.1111111111111111 (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow x 2)) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) into (- (+ (* 0.006172839506172839 (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (+ (* 0.1111111111111111 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (* 42.666666666666664 (/ (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow -48.0 2)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) (* (* (/ 1 x) -48.0) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 16.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -48.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -48.0) into -48.0
* [misc]backup-simplify:  Simplify (* -48.0 1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* 1 16.0) into 16.0
* [misc]backup-simplify:  Simplify (* 16.0 (pow x -3)) into (/ 16.0 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (/ 16.0 (pow x 3)) 0) into (* 16.0 (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* 16.0 (/ 1 (pow x 3)))) 1)) (pow (- 48.0) 1)))) 1) into (/ -0.3333333333333333 (pow x 3))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.3333333333333333 (pow x 3))) (* 0 (- (log (- 48.0)) (* 2 (log x))))) into (- (* 0.1111111111111111 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (- (* 0.1111111111111111 (/ 1 (pow x 3)))) 1) 1)))) into (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))
* [misc]backup-simplify:  Simplify (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3))) into (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (pow x 3)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 16.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -48.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* 16.0 (/ 1 (pow x 3)))) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 48.0) 1)))) 2) into (/ -128.0 (* (pow -48.0 2) (pow x 6)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -128.0 (* (pow -48.0 2) (pow x 6)))) (+ (* 0 (/ -0.3333333333333333 (pow x 3))) (* 0 (- (log (- 48.0)) (* 2 (log x)))))) into (- (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (- (* 0.1111111111111111 (/ 1 (pow x 3)))) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))) 1) 1)))) into (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6)))))) into (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (- (* 0.006172839506172839 (/ 1 (pow x 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow x 6))))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (- (* 0.006172839506172839 (/ 1 (pow (/ 1 x) 6))) (* 42.666666666666664 (/ 1 (* (pow -48.0 2) (pow (/ 1 x) 6)))))) (pow (/ 1 x) 2)) (+ (* (* -0.1111111111111111 (/ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow (/ 1 x) 3))) (/ 1 x)) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))))) into (- (+ (* 0.006172839506172839 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.1111111111111111 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -48.0) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 16.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 16.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 16.0 in x
* [misc]backup-simplify:  Simplify 16.0 into 16.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -48.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -48.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -48.0 in x
* [misc]backup-simplify:  Simplify -48.0 into -48.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -48.0) into 48.0
* [misc]backup-simplify:  Simplify (* 48.0 -1) into -48.0
* [misc]backup-simplify:  Simplify (+ 0 -48.0) into (- 48.0)
* [misc]backup-simplify:  Simplify (log (- 48.0)) into (log (- 48.0))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 48.0)) (* 2 (log x)))) into (* 1/3 (- (log (- 48.0)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) into (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* -1 16.0) into -16.0
* [misc]backup-simplify:  Simplify (* -16.0 (exp (* 3 (- (log -1) (log x))))) into (* -16.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -48.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 (exp (* 3 (- (log -1) (log x))))) 0) into (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) 1)) (pow (- 48.0) 1)))) 1) into (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))) (* 0 (- (log (- 48.0)) (* 2 (log x))))) into (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x))))) 1) 1)))) into (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))) into (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log x)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 16.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -16.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -48.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 48.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* 16.0 (exp (* 3 (- (log -1) (log x))))))) 2)) (pow (- 48.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 48.0) 1)))) 2) into (* -128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 48.0))) into (- (log (- 48.0)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* -128.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (+ (* 0 (* 0.3333333333333333 (exp (* 3 (- (log -1) (log x)))))) (* 0 (- (log (- 48.0)) (* 2 (log x)))))) into (- (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))) (+ (* (/ (pow (* 0.1111111111111111 (exp (* 3 (- (log -1) (log x))))) 2) 2)) (* (/ (pow (- (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) 1) 1)))) into (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x)))))) into (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log x)))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- (* 0.006172839506172839 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2)) (* 42.666666666666664 (/ (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) (pow -48.0 2)))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x)))))))) (pow (/ 1 (- x)) 2)) (+ (* (* 0.1111111111111111 (* (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x))))))))) (/ 1 (- x))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 (- x))))))))) into (- (+ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (* 0.006172839506172839 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (* 0.1111111111111111 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3))))>
* * * * [misc]progress:  [ 2 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (pow (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) 1))))>
* * * * [misc]progress:  [ 3 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (exp (log (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))))>
* [enter]simplify:  Simplifying (log (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (log (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (log (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 4 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (log (exp (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))))>
* [enter]simplify:  Simplifying (exp (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (exp (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 5 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))))>
* [enter]simplify:  Simplifying (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (175 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 6 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (* (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))))>
* [enter]simplify:  Simplifying (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [enter]simplify:  Simplifying (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 7 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (* (cbrt 1) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))>
* [enter]simplify:  Simplifying (cbrt 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (cbrt 1)
* [exit]simplify:  Simplified to (cbrt 1)
* [enter]simplify:  Simplifying (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* * * * [misc]progress:  [ 8 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (/ (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3))) (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))))>
* [enter]simplify:  Simplifying (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (448 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3)))
* [exit]simplify:  Simplified to (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3)))
* [enter]simplify:  Simplifying (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* (* (* x 16.0) (* (* x x) (* x x))) (- (* -48.0 x) (* (* x x) (* x 16.0))))))
* [exit]simplify:  Simplified to (cbrt (- (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* (* (* x 16.0) (* (* x x) (* x x))) (- (* -48.0 x) (* (* x x) (* x 16.0))))))
* * * * [misc]progress:  [ 9 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (/ (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x)))) (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))>
* [enter]simplify:  Simplifying (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (334 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))) (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))) (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x)))))
* [enter]simplify:  Simplifying (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (102 enodes)
* * [misc]simplify:  iters left: 1 (107 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* * * * [misc]progress:  [ 10 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (* (* (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (175 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 11 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (67 enodes)
* * [misc]simplify:  iters left: 2 (114 enodes)
* * [misc]simplify:  iters left: 1 (185 enodes)
* [exit]simplify:  Simplified to (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))
* * * * [misc]progress:  [ 12 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (* (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [enter]simplify:  Simplifying (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 13 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (* 1 (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))>
* * * * [misc]progress:  [ 14 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* * * * [misc]progress:  [ 15 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (pow (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) 1)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* * * * [misc]progress:  [ 16 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (exp (log (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (log (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (log (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (log (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 17 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (log (exp (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (exp (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (exp (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 18 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (175 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 19 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (* (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [enter]simplify:  Simplifying (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 20 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (* (cbrt 1) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (cbrt 1)
* [exit]simplify:  Simplified to (cbrt 1)
* [enter]simplify:  Simplifying (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* * * * [misc]progress:  [ 21 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (/ (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3))) (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (448 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3)))
* [exit]simplify:  Simplified to (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3)))
* [enter]simplify:  Simplifying (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* (* (* x 16.0) (* (* x x) (* x x))) (- (* -48.0 x) (* (* x x) (* x 16.0))))))
* [exit]simplify:  Simplified to (cbrt (- (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* (* (* x 16.0) (* (* x x) (* x x))) (- (* -48.0 x) (* (* x x) (* x 16.0))))))
* * * * [misc]progress:  [ 22 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (/ (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x)))) (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (334 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))) (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))) (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x)))))
* [enter]simplify:  Simplifying (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (102 enodes)
* * [misc]simplify:  iters left: 1 (107 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* * * * [misc]progress:  [ 23 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (* (* (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (175 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 24 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (67 enodes)
* * [misc]simplify:  iters left: 2 (114 enodes)
* * [misc]simplify:  iters left: 1 (185 enodes)
* [exit]simplify:  Simplified to (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))
* * * * [misc]progress:  [ 25 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (* (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [enter]simplify:  Simplifying (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 26 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (* 1 (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* * * * [misc]progress:  [ 27 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* * * * [misc]progress:  [ 28 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (pow (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) 1) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* * * * [misc]progress:  [ 29 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (exp (log (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (log (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (log (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (log (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 30 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (log (exp (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (exp (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (exp (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 31 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (175 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 32 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (* (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [enter]simplify:  Simplifying (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 33 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (* (cbrt 1) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (cbrt 1)
* [exit]simplify:  Simplified to (cbrt 1)
* [enter]simplify:  Simplifying (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* * * * [misc]progress:  [ 34 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (/ (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3))) (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (448 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3)))
* [exit]simplify:  Simplified to (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3)))
* [enter]simplify:  Simplifying (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* (* (* x 16.0) (* (* x x) (* x x))) (- (* -48.0 x) (* (* x x) (* x 16.0))))))
* [exit]simplify:  Simplified to (cbrt (- (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* (* (* x 16.0) (* (* x x) (* x x))) (- (* -48.0 x) (* (* x x) (* x 16.0))))))
* * * * [misc]progress:  [ 35 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (/ (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x)))) (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (334 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))) (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))) (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x)))))
* [enter]simplify:  Simplifying (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (102 enodes)
* * [misc]simplify:  iters left: 1 (107 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* * * * [misc]progress:  [ 36 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (* (* (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (175 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 37 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (67 enodes)
* * [misc]simplify:  iters left: 2 (114 enodes)
* * [misc]simplify:  iters left: 1 (185 enodes)
* [exit]simplify:  Simplified to (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))
* * * * [misc]progress:  [ 38 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (* (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [enter]simplify:  Simplifying (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 39 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (* 1 (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* * * * [misc]progress:  [ 40 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (pow (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)) 1/3)))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* * * * [misc]progress:  [ 41 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (pow (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) 1)))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* * * * [misc]progress:  [ 42 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (exp (log (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (log (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (log (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (log (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 43 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (log (exp (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (exp (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (exp (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 44 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (175 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))) (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 45 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (* (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [enter]simplify:  Simplifying (cbrt (sqrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 46 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (* (cbrt 1) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (cbrt 1)
* [exit]simplify:  Simplified to (cbrt 1)
* [enter]simplify:  Simplifying (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* * * * [misc]progress:  [ 47 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (/ (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3))) (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt (+ (pow (* (* x 16.0) (pow x 3)) 3) (pow (* (* x -48.0) x) 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (448 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3)))
* [exit]simplify:  Simplified to (cbrt (+ (pow (* (pow x 3) (* x 16.0)) 3) (pow (* x (* -48.0 x)) 3)))
* [enter]simplify:  Simplifying (cbrt (+ (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (- (* (* (* x -48.0) x) (* (* x -48.0) x)) (* (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* (* (* x 16.0) (* (* x x) (* x x))) (- (* -48.0 x) (* (* x x) (* x 16.0))))))
* [exit]simplify:  Simplified to (cbrt (- (* (* x (* -48.0 x)) (* x (* -48.0 x))) (* (* (* x 16.0) (* (* x x) (* x x))) (- (* -48.0 x) (* (* x x) (* x 16.0))))))
* * * * [misc]progress:  [ 48 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (/ (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x)))) (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (cbrt (- (* (* (* x 16.0) (pow x 3)) (* (* x 16.0) (pow x 3))) (* (* (* x -48.0) x) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (334 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))) (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* x (* -48.0 x)) (* (pow x 3) (* x 16.0))) (- (* (pow x 3) (* x 16.0)) (* x (* -48.0 x)))))
* [enter]simplify:  Simplifying (cbrt (- (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (102 enodes)
* * [misc]simplify:  iters left: 1 (107 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 3) (* x 16.0)) (* (* x x) -48.0)))
* * * * [misc]progress:  [ 49 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (* (* (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (175 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))) (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (cbrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 50 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (67 enodes)
* * [misc]simplify:  iters left: 2 (114 enodes)
* * [misc]simplify:  iters left: 1 (185 enodes)
* [exit]simplify:  Simplified to (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))
* [exit]simplify:  Simplified to (+ (* (* x -48.0) x) (* (pow x 3) (* x 16.0)))
* * * * [misc]progress:  [ 51 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (* (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))) (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [enter]simplify:  Simplifying (sqrt (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))))
* * * * [misc]progress:  [ 52 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (* 1 (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* * * * [misc]progress:  [ 53 / 64 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (- (+ (* 0.006172839506172839 (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (+ (* 0.1111111111111111 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (* 42.666666666666664 (/ (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow -48.0 2))))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (- (+ (* 0.006172839506172839 (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (+ (* 0.1111111111111111 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (* 42.666666666666664 (/ (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow -48.0 2)))))))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (92 enodes)
* * [misc]simplify:  iters left: 4 (231 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (* (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3))))) (+ (* (pow x (* 1/3 2)) (pow (- 48.0) 1/3)) (- (* (* (pow x (* 1/3 2)) (pow (- 48.0) 1/3)) (- (* 0.006172839506172839 (pow x 4)) (* (* x 0.1111111111111111) x))) (* (/ (* 42.666666666666664 (pow x 4)) (* -48.0 -48.0)) (* (pow x (* 1/3 2)) (pow (- 48.0) 1/3)))))))
* * * * [misc]progress:  [ 54 / 64 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (- (+ (* 0.006172839506172839 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.1111111111111111 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2))))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (- (+ (* 0.006172839506172839 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.1111111111111111 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2)))))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (95 enodes)
* * [misc]simplify:  iters left: 4 (233 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (* (* (cbrt (+ (* x (* -48.0 x)) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* x (* -48.0 x)) (* (* 16.0 x) (pow x 3))))) (- (+ (* (pow (exp 1/3) (+ (* (log x) 2) (log (- 48.0)))) (- (* 0.006172839506172839 (pow x 4)) (* (* x x) 0.1111111111111111))) (pow (exp 1/3) (+ (* (log x) 2) (log (- 48.0))))) (* (* 42.666666666666664 (/ (pow x 4) -48.0)) (/ (pow (exp 1/3) (+ (* (log x) 2) (log (- 48.0)))) -48.0)))))
* * * * [misc]progress:  [ 55 / 64 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (- (+ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (* 0.006172839506172839 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (* 0.1111111111111111 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x)))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (- (+ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (* 0.006172839506172839 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (* 0.1111111111111111 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x))))))
* * [misc]simplify:  iters left: 6 (52 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* * [misc]simplify:  iters left: 4 (333 enodes)
* [exit]simplify:  Simplified to (+ (+ 12.0 (* (* (cbrt (+ (* x (* -48.0 x)) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* x (* -48.0 x)) (* (* 16.0 x) (pow x 3))))) (exp (+ (* (log (/ -1 x)) (* (- 2) 1/3)) (* 1/3 (log (- 48.0))))))) (* (* (cbrt (+ (* x (* -48.0 x)) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* x (* -48.0 x)) (* (* 16.0 x) (pow x 3))))) (- (* (/ (exp (+ (* (log (/ -1 x)) (* (- 2) 1/3)) (* 1/3 (log (- 48.0))))) (/ (* x x) (exp (* (+ 0 (log x)) (+ 3 3))))) (- 0.006172839506172839 (/ 42.666666666666664 (* -48.0 -48.0)))) (* (/ 0.1111111111111111 x) (exp (+ (+ (* (log (/ -1 x)) (* (- 2) 1/3)) (* 1/3 (log (- 48.0)))) (* (+ 0 (log x)) 3)))))))
* * * * [misc]progress:  [ 56 / 64 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (- (+ (* 0.006172839506172839 (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (+ (* 0.1111111111111111 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (* 42.666666666666664 (/ (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow -48.0 2)))))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (- (+ (* 0.006172839506172839 (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (+ (* 0.1111111111111111 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (* 42.666666666666664 (/ (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow -48.0 2)))))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (97 enodes)
* * [misc]simplify:  iters left: 4 (229 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* -48.0 (* x x)) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* -48.0 (* x x)) (* (* 16.0 x) (pow x 3)))))) (cbrt (* (cbrt (+ (* -48.0 (* x x)) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* -48.0 (* x x)) (* (* 16.0 x) (pow x 3))))))) (cbrt (+ (* -48.0 (* x x)) (* (* 16.0 x) (pow x 3))))) (cbrt (* (cbrt (+ (* -48.0 (* x x)) (* (* 16.0 x) (pow x 3)))) (- (+ (* (pow (- 48.0) 1/3) (pow x (* 2 1/3))) (* (* (pow (- 48.0) 1/3) (pow x (* 2 1/3))) (- (* 0.006172839506172839 (pow x 4)) (* (* 0.1111111111111111 x) x)))) (* (/ (* 42.666666666666664 (pow x 4)) (* -48.0 -48.0)) (* (pow (- 48.0) 1/3) (pow x (* 2 1/3)))))))))
* * * * [misc]progress:  [ 57 / 64 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (- (+ (* 0.006172839506172839 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.1111111111111111 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2)))))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (- (+ (* 0.006172839506172839 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.1111111111111111 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2)))))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (48 enodes)
* * [misc]simplify:  iters left: 5 (100 enodes)
* * [misc]simplify:  iters left: 4 (231 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (* (- (+ (pow (exp 1/3) (+ (log (- 48.0)) (* 2 (log x)))) (* (pow (exp 1/3) (+ (log (- 48.0)) (* 2 (log x)))) (- (* (pow x 4) 0.006172839506172839) (* (* 0.1111111111111111 x) x)))) (/ (* (pow (exp 1/3) (+ (log (- 48.0)) (* 2 (log x)))) (* 42.666666666666664 (pow x 4))) (* -48.0 -48.0))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))))) (* (* (cbrt (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))))) (cbrt (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3))))))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))))) 12.0)
* * * * [misc]progress:  [ 58 / 64 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (- (+ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (* 0.006172839506172839 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (* 0.1111111111111111 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x))))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (- (+ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (* 0.006172839506172839 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (* 0.1111111111111111 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x))))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (54 enodes)
* * [misc]simplify:  iters left: 5 (120 enodes)
* * [misc]simplify:  iters left: 4 (331 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (* (cbrt (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (+ (exp (+ (* (log (/ -1 x)) (* (- 2) 1/3)) (* 1/3 (log (- 48.0))))) (- (* (* (exp (+ (* (log (/ -1 x)) (* (- 2) 1/3)) (* 1/3 (log (- 48.0))))) (/ (exp (* (+ 0 (log x)) (+ 3 3))) (* x x))) (- 0.006172839506172839 (/ 42.666666666666664 (* -48.0 -48.0)))) (* (/ 0.1111111111111111 x) (exp (+ (+ (* (+ 0 (log x)) 3) (* 1/3 (log (- 48.0)))) (* (log (/ -1 x)) (* (- 2) 1/3))))))))) (* (* (cbrt (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))))) (cbrt (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3))))))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))))))
* * * * [misc]progress:  [ 59 / 64 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (- (+ (* 0.006172839506172839 (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (+ (* 0.1111111111111111 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (* 42.666666666666664 (/ (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow -48.0 2))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (- (+ (* 0.006172839506172839 (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (+ (* 0.1111111111111111 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (* 42.666666666666664 (/ (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow -48.0 2))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (97 enodes)
* * [misc]simplify:  iters left: 4 (229 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* -48.0 (* x x)) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* -48.0 (* x x)) (* (* 16.0 x) (pow x 3)))))) (cbrt (* (cbrt (+ (* -48.0 (* x x)) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* -48.0 (* x x)) (* (* 16.0 x) (pow x 3))))))) (cbrt (+ (* -48.0 (* x x)) (* (* 16.0 x) (pow x 3))))) (cbrt (* (cbrt (+ (* -48.0 (* x x)) (* (* 16.0 x) (pow x 3)))) (- (+ (* (pow (- 48.0) 1/3) (pow x (* 2 1/3))) (* (* (pow (- 48.0) 1/3) (pow x (* 2 1/3))) (- (* 0.006172839506172839 (pow x 4)) (* (* 0.1111111111111111 x) x)))) (* (/ (* 42.666666666666664 (pow x 4)) (* -48.0 -48.0)) (* (pow (- 48.0) 1/3) (pow x (* 2 1/3)))))))))
* * * * [misc]progress:  [ 60 / 64 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (- (+ (* 0.006172839506172839 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.1111111111111111 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (- (+ (* 0.006172839506172839 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.1111111111111111 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (48 enodes)
* * [misc]simplify:  iters left: 5 (100 enodes)
* * [misc]simplify:  iters left: 4 (231 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (* (- (+ (pow (exp 1/3) (+ (log (- 48.0)) (* 2 (log x)))) (* (pow (exp 1/3) (+ (log (- 48.0)) (* 2 (log x)))) (- (* (pow x 4) 0.006172839506172839) (* (* 0.1111111111111111 x) x)))) (/ (* (pow (exp 1/3) (+ (log (- 48.0)) (* 2 (log x)))) (* 42.666666666666664 (pow x 4))) (* -48.0 -48.0))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))))) (* (* (cbrt (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))))) (cbrt (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3))))))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))))) 12.0)
* * * * [misc]progress:  [ 61 / 64 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (- (+ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (* 0.006172839506172839 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (* 0.1111111111111111 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (- (+ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (* 0.006172839506172839 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (* 0.1111111111111111 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x)))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (54 enodes)
* * [misc]simplify:  iters left: 5 (120 enodes)
* * [misc]simplify:  iters left: 4 (331 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (* (cbrt (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (+ (exp (+ (* (log (/ -1 x)) (* (- 2) 1/3)) (* 1/3 (log (- 48.0))))) (- (* (* (exp (+ (* (log (/ -1 x)) (* (- 2) 1/3)) (* 1/3 (log (- 48.0))))) (/ (exp (* (+ 0 (log x)) (+ 3 3))) (* x x))) (- 0.006172839506172839 (/ 42.666666666666664 (* -48.0 -48.0)))) (* (/ 0.1111111111111111 x) (exp (+ (+ (* (+ 0 (log x)) 3) (* 1/3 (log (- 48.0)))) (* (log (/ -1 x)) (* (- 2) 1/3))))))))) (* (* (cbrt (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))))) (cbrt (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3))))))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))))))
* * * * [misc]progress:  [ 62 / 64 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (- (+ (* 0.006172839506172839 (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (+ (* 0.1111111111111111 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (* 42.666666666666664 (/ (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow -48.0 2)))))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (- (+ (* 0.006172839506172839 (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (+ (* 0.1111111111111111 (* (pow x 2) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0))))))) (* 42.666666666666664 (/ (* (pow x 4) (exp (* 1/3 (+ (* 2 (log x)) (log (- 48.0)))))) (pow -48.0 2)))))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (97 enodes)
* * [misc]simplify:  iters left: 4 (228 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (* (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (* (cbrt (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))))) (cbrt (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))))))) (cbrt (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (+ (- (* (* (pow (- 48.0) 1/3) (pow x (* 2 1/3))) (- (* 0.006172839506172839 (pow x 4)) (* x (* x 0.1111111111111111)))) (* (/ (* 42.666666666666664 (pow x 4)) (* -48.0 -48.0)) (* (pow (- 48.0) 1/3) (pow x (* 2 1/3))))) (* (pow (- 48.0) 1/3) (pow x (* 2 1/3))))))))
* * * * [misc]progress:  [ 63 / 64 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (- (+ (* 0.006172839506172839 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.1111111111111111 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2)))))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (- (+ (* 0.006172839506172839 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x))))))) (+ (* 0.1111111111111111 (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ 1 x)))))) (pow x 4)) (pow -48.0 2)))))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (48 enodes)
* * [misc]simplify:  iters left: 5 (99 enodes)
* * [misc]simplify:  iters left: 4 (228 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (cbrt (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))))) (cbrt (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3))))))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3))))) (cbrt (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (- (+ (pow (exp 1/3) (+ (log (- 48.0)) (* (log x) 2))) (* (pow (exp 1/3) (+ (log (- 48.0)) (* (log x) 2))) (- (* (pow x 4) 0.006172839506172839) (* (* 0.1111111111111111 x) x)))) (* (/ (pow (exp 1/3) (+ (log (- 48.0)) (* (log x) 2))) -48.0) (* (/ (pow x 4) -48.0) 42.666666666666664)))))) 12.0)
* * * * [misc]progress:  [ 64 / 64 ] simplifiying candidate #<alt-event (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (- (+ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (* 0.006172839506172839 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (* 0.1111111111111111 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x))))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>
* [enter]simplify:  Simplifying (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (- (+ (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (* 0.006172839506172839 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (pow x 2)))) (+ (* 42.666666666666664 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (pow -48.0 2) (pow x 2)))) (* 0.1111111111111111 (/ (* (exp (* 1/3 (- (log (- 48.0)) (* 2 (log (/ -1 x)))))) (exp (* 3 (- (log -1) (log (/ -1 x)))))) x))))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))
* * [misc]simplify:  iters left: 6 (54 enodes)
* * [misc]simplify:  iters left: 5 (120 enodes)
* * [misc]simplify:  iters left: 4 (330 enodes)
* [exit]simplify:  Simplified to (+ 12.0 (* (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (* (cbrt (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))))) (cbrt (* (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3)))))))) (cbrt (* (- (+ (exp (+ (* (log (/ -1 x)) (* (- 2) 1/3)) (* 1/3 (log (- 48.0))))) (* (/ (exp (+ (* (log (/ -1 x)) (* (- 2) 1/3)) (* 1/3 (log (- 48.0))))) (/ (* x x) (exp (* (+ 0 (log x)) (+ 3 3))))) (- 0.006172839506172839 (/ 42.666666666666664 (* -48.0 -48.0))))) (* (/ 0.1111111111111111 x) (exp (+ (+ (* (log (/ -1 x)) (* (- 2) 1/3)) (* 1/3 (log (- 48.0)))) (* 3 (+ 0 (log x))))))) (cbrt (+ (* (* x x) -48.0) (* (* 16.0 x) (pow x 3))))))))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))> #<alt-delta (Î» (x) (+ 12.0 (* (* (* (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (* (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x)))))) (cbrt (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ 12.0 (* -48.0 (* x x))) (* 16.0 (* (* (* x x) x) x))) +nan.0)) , with alts (#<alt-delta (Î» (x) (+ 12.0 (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))))>)
* [enter]simplify:  Simplifying (+ (* (* x 16.0) (pow x 3)) (* (* x -48.0) x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))
* [exit]simplify:  Simplified to (+ (* (pow x 3) (* x 16.0)) (* (* x -48.0) x))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
