* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 2 ] rewriting at (2 2)
* * * * [misc]progress:  [ 2 / 2 ] rewriting at (2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 2 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* 0.5 (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.5 (pow x 2)) into (* 0.5 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.5 (pow (/ 1 (/ 1 x)) 2)) into (* 0.5 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.5 (pow (/ 1 (/ 1 (- x))) 2)) into (* 0.5 (pow x 2))
* * * * [misc]progress:  [ 2 / 2 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0.5 (pow x 2)) (+ (* (- 2.0) x) 1.0)) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* (- 2.0) (/ 1 (/ 1 x))) (* 0.5 (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify 2.0 into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* 2.0 (/ 1 (/ 1 (- x)))) (* 0.5 (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (pow (* 0.5 (* x x)) 1)))>
* * * * [misc]progress:  [ 2 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (exp (log (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (log (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (log (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (log (* 0.5 (* x x)))
* * * * [misc]progress:  [ 3 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (log (exp (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (exp (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp 0.5) (* x x))
* [exit]simplify:  Simplified to (pow (exp 0.5) (* x x))
* * * * [misc]progress:  [ 4 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* [enter]simplify:  Simplifying (cbrt (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* 0.5 (* x x)))
* * * * [misc]progress:  [ 5 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (cbrt (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (127 enodes)
* * [misc]simplify:  iters left: 2 (270 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* 0.5 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* 0.5 (* x x)) 3)
* * * * [misc]progress:  [ 6 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (sqrt (* 0.5 (* x x))) (sqrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* * * * [misc]progress:  [ 7 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 1 (* 0.5 (* x x)))))>
* * * * [misc]progress:  [ 8 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* 0.5 x) x)))>
* [enter]simplify:  Simplifying (* 0.5 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 0.5 x)
* [exit]simplify:  Simplified to (* 0.5 x)
* * * * [misc]progress:  [ 9 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* x x) 0.5)))>
* * * * [misc]progress:  [ 10 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (+ 1.0 (* -2.0 x))) (exp (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (exp (+ 1.0 (* -2.0 x))) (exp (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (71 enodes)
* [exit]simplify:  Simplified to (exp (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (exp (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* * * * [misc]progress:  [ 11 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1))>
* * * * [misc]progress:  [ 12 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (log (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (log (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 13 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (exp (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 14 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 15 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* * * * [misc]progress:  [ 16 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 17 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (272 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))
* [enter]simplify:  Simplifying (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* * [misc]simplify:  iters left: 3 (482 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 18 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* * * * [misc]progress:  [ 19 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (336 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [enter]simplify:  Simplifying (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (60 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (66 enodes)
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* * * * [misc]progress:  [ 20 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (+ (* -2.0 x) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (+ (* -2.0 x) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (* (+ -2.0 (* 0.5 x)) x)
* [exit]simplify:  Simplified to (* (+ -2.0 (* 0.5 x)) x)
* * * * [misc]progress:  [ 21 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 0.5 (* x x)) (+ 1.0 (* -2.0 x))))>
* * * * [misc]progress:  [ 22 / 27 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (* 0.5 (* x x)))
* * * * [misc]progress:  [ 23 / 27 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (* 0.5 (* x x)))
* * * * [misc]progress:  [ 24 / 27 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (* 0.5 (* x x)))
* * * * [misc]progress:  [ 25 / 27 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 0.5 x)) (- 1.0 (* 2.0 x)))
* * * * [misc]progress:  [ 26 / 27 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 0.5 x)) (- 1.0 (* 2.0 x)))
* * * * [misc]progress:  [ 27 / 27 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 0.5 x)) (- 1.0 (* 2.0 x)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 1 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 2 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.0)) into (* 1/3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.0))) into (pow 1.0 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.0)) into (* 1/3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.0))) into (pow 1.0 1/3)
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.0)) into (* 1/3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.0))) into (pow 1.0 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.0)) into (* 1/3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.0))) into (pow 1.0 1/3)
* [misc]backup-simplify:  Simplify (* (pow 1.0 1/3) (pow 1.0 1/3)) into (pow (pow 1.0 2) 1/3)
* [misc]backup-simplify:  Simplify (pow (pow 1.0 2) 1/3) into (pow (pow 1.0 2) 1/3)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 2.0)) 1)) (pow 1.0 1)))) 1) into -2.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -2.0) (* 0 (log 1.0))) into (- 0.6666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.0))) (+ (* (/ (pow (- 0.6666666666666666) 1) 1)))) into (* -0.6666666666666666 (pow 1.0 1/3))
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 2.0)) 1)) (pow 1.0 1)))) 1) into -2.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -2.0) (* 0 (log 1.0))) into (- 0.6666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.0))) (+ (* (/ (pow (- 0.6666666666666666) 1) 1)))) into (* -0.6666666666666666 (pow 1.0 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.0 1/3) (* -0.6666666666666666 (pow 1.0 1/3))) (* (* -0.6666666666666666 (pow 1.0 1/3)) (pow 1.0 1/3))) into (- (* 1.3333333333333333 (pow (pow 1.0 2) 1/3)))
* [misc]backup-simplify:  Simplify (- (* 1.3333333333333333 (pow (pow 1.0 2) 1/3))) into (- (* 1.3333333333333333 (pow (pow 1.0 2) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 2.0)) 2)) (pow 1.0 2))) (* 1 (/ (* 1 (pow (* 2 0.5) 1)) (pow 1.0 1)))) 2) into (* 1/2 (- 1.0 (* 4.0 (/ 1 (pow 1.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 1.0 (* 4.0 (/ 1 (pow 1.0 2)))))) (+ (* 0 -2.0) (* 0 (log 1.0)))) into (- 0.16666666666666666 (* 0.6666666666666666 (/ 1 (pow 1.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.0))) (+ (* (/ (pow (- 0.6666666666666666) 2) 2)) (* (/ (pow (- 0.16666666666666666 (* 0.6666666666666666 (/ 1 (pow 1.0 2)))) 1) 1)))) into (* (pow 1.0 1/3) (- 0.38888888888888884 (* 0.6666666666666666 (/ 1 (pow 1.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 2.0)) 2)) (pow 1.0 2))) (* 1 (/ (* 1 (pow (* 2 0.5) 1)) (pow 1.0 1)))) 2) into (* 1/2 (- 1.0 (* 4.0 (/ 1 (pow 1.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 1.0 (* 4.0 (/ 1 (pow 1.0 2)))))) (+ (* 0 -2.0) (* 0 (log 1.0)))) into (- 0.16666666666666666 (* 0.6666666666666666 (/ 1 (pow 1.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.0))) (+ (* (/ (pow (- 0.6666666666666666) 2) 2)) (* (/ (pow (- 0.16666666666666666 (* 0.6666666666666666 (/ 1 (pow 1.0 2)))) 1) 1)))) into (* (pow 1.0 1/3) (- 0.38888888888888884 (* 0.6666666666666666 (/ 1 (pow 1.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.0 1/3) (* (pow 1.0 1/3) (- 0.38888888888888884 (* 0.6666666666666666 (/ 1 (pow 1.0 2)))))) (+ (* (* -0.6666666666666666 (pow 1.0 1/3)) (* -0.6666666666666666 (pow 1.0 1/3))) (* (* (pow 1.0 1/3) (- 0.38888888888888884 (* 0.6666666666666666 (/ 1 (pow 1.0 2))))) (pow 1.0 1/3)))) into (- (* 1.222222222222222 (pow (pow 1.0 2) 1/3)) (* 1.3333333333333333 (pow (/ 1 (pow 1.0 4)) 1/3)))
* [misc]backup-simplify:  Simplify (- (* 1.222222222222222 (pow (pow 1.0 2) 1/3)) (* 1.3333333333333333 (pow (/ 1 (pow 1.0 4)) 1/3))) into (- (* 1.222222222222222 (pow (pow 1.0 2) 1/3)) (* 1.3333333333333333 (pow (/ 1 (pow 1.0 4)) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* (- (* 1.222222222222222 (pow (pow 1.0 2) 1/3)) (* 1.3333333333333333 (pow (/ 1 (pow 1.0 4)) 1/3))) (pow x 2)) (+ (* (- (* 1.3333333333333333 (pow (pow 1.0 2) 1/3))) x) (pow (pow 1.0 2) 1/3))) into (- (+ (* 1.222222222222222 (* (pow (pow 1.0 2) 1/3) (pow x 2))) (pow (pow 1.0 2) 1/3)) (+ (* 1.3333333333333333 (* (pow (/ 1 (pow 1.0 4)) 1/3) (pow x 2))) (* 1.3333333333333333 (* (pow (pow 1.0 2) 1/3) x))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))) into (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2) into (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 2.0)) 1)) (pow 0.5 1)))) 1) into -4.0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -4.0) (* 0 (- (log 0.5) (* 2 (log x))))) into (- 1.3333333333333333)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow (- 1.3333333333333333) 1) 1)))) into (* -1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 2.0)) 1)) (pow 0.5 1)))) 1) into -4.0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -4.0) (* 0 (- (log 0.5) (* 2 (log x))))) into (- 1.3333333333333333)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow (- 1.3333333333333333) 1) 1)))) into (* -1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (* -1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) (* (* -1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))) (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) into (- (* 2.6666666666666665 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (* 2.6666666666666665 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2))) into (- (* 2.6666666666666665 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 2.0)) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 1.0) 1)) (pow 0.5 1)))) 2) into (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))) (+ (* 0 -4.0) (* 0 (- (log 0.5) (* 2 (log x)))))) into (- 0.6666666666666666 (* 0.6666666666666666 (/ 1 (pow 0.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow (- 1.3333333333333333) 2) 2)) (* (/ (pow (- 0.6666666666666666 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) 1) 1)))) into (* (- 1.5555555555555554 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 2.0)) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 1.0) 1)) (pow 0.5 1)))) 2) into (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))) (+ (* 0 -4.0) (* 0 (- (log 0.5) (* 2 (log x)))))) into (- 0.6666666666666666 (* 0.6666666666666666 (/ 1 (pow 0.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow (- 1.3333333333333333) 2) 2)) (* (/ (pow (- 0.6666666666666666 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) 1) 1)))) into (* (- 1.5555555555555554 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (* (- 1.5555555555555554 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) (+ (* (* -1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))) (* -1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) (* (* (- 1.5555555555555554 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))) (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))))) into (- (* 4.888888888888888 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)) (* 1.3333333333333333 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2) (pow 0.5 2))))
* [misc]backup-simplify:  Simplify (- (* 4.888888888888888 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)) (* 1.3333333333333333 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2) (pow 0.5 2)))) into (- (* 4.888888888888888 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)) (* 1.3333333333333333 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2) (pow 0.5 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 4.888888888888888 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 2)) (* 1.3333333333333333 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 2) (pow 0.5 2)))) (pow (/ 1 x) 2)) (+ (* (- (* 2.6666666666666665 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 2))) (/ 1 x)) (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 2))) into (- (+ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 2) (* 4.888888888888888 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 2) (pow x 2)))) (+ (* 2.6666666666666665 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 2) x)) (* 1.3333333333333333 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 2) (* (pow 0.5 2) (pow x 2))))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))) into (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2) into (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 2.0) 1)) (pow 0.5 1)))) 1) into 4.0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 4.0) (* 0 (- (log 0.5) (* 2 (log x))))) into 1.3333333333333333
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 1.3333333333333333 1) 1)))) into (* 1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 2.0) 1)) (pow 0.5 1)))) 1) into 4.0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 4.0) (* 0 (- (log 0.5) (* 2 (log x))))) into 1.3333333333333333
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 1.3333333333333333 1) 1)))) into (* 1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (* 1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) (* (* 1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))) (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) into (* 2.6666666666666665 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2))
* [misc]backup-simplify:  Simplify (* 2.6666666666666665 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)) into (* 2.6666666666666665 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 2.0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 1.0) 1)) (pow 0.5 1)))) 2) into (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))) (+ (* 0 4.0) (* 0 (- (log 0.5) (* 2 (log x)))))) into (- 0.6666666666666666 (* 0.6666666666666666 (/ 1 (pow 0.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 1.3333333333333333 2) 2)) (* (/ (pow (- 0.6666666666666666 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) 1) 1)))) into (* (- 1.5555555555555554 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 2.0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 1.0) 1)) (pow 0.5 1)))) 2) into (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))) (+ (* 0 4.0) (* 0 (- (log 0.5) (* 2 (log x)))))) into (- 0.6666666666666666 (* 0.6666666666666666 (/ 1 (pow 0.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 1.3333333333333333 2) 2)) (* (/ (pow (- 0.6666666666666666 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) 1) 1)))) into (* (- 1.5555555555555554 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (* (- 1.5555555555555554 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) (+ (* (* 1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))) (* 1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) (* (* (- 1.5555555555555554 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))) (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))))) into (- (* 4.888888888888888 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)) (* 1.3333333333333333 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2) (pow 0.5 2))))
* [misc]backup-simplify:  Simplify (- (* 4.888888888888888 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)) (* 1.3333333333333333 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2) (pow 0.5 2)))) into (- (* 4.888888888888888 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)) (* 1.3333333333333333 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2) (pow 0.5 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 4.888888888888888 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 (- x))))))) 2)) (* 1.3333333333333333 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 (- x))))))) 2) (pow 0.5 2)))) (pow (/ 1 (- x)) 2)) (+ (* (* 2.6666666666666665 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 (- x))))))) 2)) (/ 1 (- x))) (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 (- x))))))) 2))) into (- (+ (* 4.888888888888888 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 2) (pow x 2))) (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 2)) (+ (* 1.3333333333333333 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 2) (* (pow 0.5 2) (pow x 2)))) (* 2.6666666666666665 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 2) x))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.0)) into (* 1/3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.0))) into (pow 1.0 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.0)) into (* 1/3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.0))) into (pow 1.0 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.0)) into (* 1/3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.0))) into (pow 1.0 1/3)
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.0)) into (* 1/3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.0))) into (pow 1.0 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.0)) into (* 1/3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.0))) into (pow 1.0 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.0)) into (* 1/3 (log 1.0))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.0))) into (pow 1.0 1/3)
* [misc]backup-simplify:  Simplify (* (pow 1.0 1/3) (pow 1.0 1/3)) into (pow (pow 1.0 2) 1/3)
* [misc]backup-simplify:  Simplify (* (pow (pow 1.0 2) 1/3) (pow 1.0 1/3)) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 2.0)) 1)) (pow 1.0 1)))) 1) into -2.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -2.0) (* 0 (log 1.0))) into (- 0.6666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.0))) (+ (* (/ (pow (- 0.6666666666666666) 1) 1)))) into (* -0.6666666666666666 (pow 1.0 1/3))
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 2.0)) 1)) (pow 1.0 1)))) 1) into -2.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -2.0) (* 0 (log 1.0))) into (- 0.6666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.0))) (+ (* (/ (pow (- 0.6666666666666666) 1) 1)))) into (* -0.6666666666666666 (pow 1.0 1/3))
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 2.0)) 1)) (pow 1.0 1)))) 1) into -2.0
* [misc]backup-simplify:  Simplify (+ (* 1/3 -2.0) (* 0 (log 1.0))) into (- 0.6666666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.0))) (+ (* (/ (pow (- 0.6666666666666666) 1) 1)))) into (* -0.6666666666666666 (pow 1.0 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.0 1/3) (* -0.6666666666666666 (pow 1.0 1/3))) (* (* -0.6666666666666666 (pow 1.0 1/3)) (pow 1.0 1/3))) into (- (* 1.3333333333333333 (pow (pow 1.0 2) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* (pow (pow 1.0 2) 1/3) (* -0.6666666666666666 (pow 1.0 1/3))) (* (- (* 1.3333333333333333 (pow (pow 1.0 2) 1/3))) (pow 1.0 1/3))) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 2.0)) 2)) (pow 1.0 2))) (* 1 (/ (* 1 (pow (* 2 0.5) 1)) (pow 1.0 1)))) 2) into (* 1/2 (- 1.0 (* 4.0 (/ 1 (pow 1.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 1.0 (* 4.0 (/ 1 (pow 1.0 2)))))) (+ (* 0 -2.0) (* 0 (log 1.0)))) into (- 0.16666666666666666 (* 0.6666666666666666 (/ 1 (pow 1.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.0))) (+ (* (/ (pow (- 0.6666666666666666) 2) 2)) (* (/ (pow (- 0.16666666666666666 (* 0.6666666666666666 (/ 1 (pow 1.0 2)))) 1) 1)))) into (* (pow 1.0 1/3) (- 0.38888888888888884 (* 0.6666666666666666 (/ 1 (pow 1.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 2.0)) 2)) (pow 1.0 2))) (* 1 (/ (* 1 (pow (* 2 0.5) 1)) (pow 1.0 1)))) 2) into (* 1/2 (- 1.0 (* 4.0 (/ 1 (pow 1.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 1.0 (* 4.0 (/ 1 (pow 1.0 2)))))) (+ (* 0 -2.0) (* 0 (log 1.0)))) into (- 0.16666666666666666 (* 0.6666666666666666 (/ 1 (pow 1.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.0))) (+ (* (/ (pow (- 0.6666666666666666) 2) 2)) (* (/ (pow (- 0.16666666666666666 (* 0.6666666666666666 (/ 1 (pow 1.0 2)))) 1) 1)))) into (* (pow 1.0 1/3) (- 0.38888888888888884 (* 0.6666666666666666 (/ 1 (pow 1.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 2.0)) 2)) (pow 1.0 2))) (* 1 (/ (* 1 (pow (* 2 0.5) 1)) (pow 1.0 1)))) 2) into (* 1/2 (- 1.0 (* 4.0 (/ 1 (pow 1.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 1.0 (* 4.0 (/ 1 (pow 1.0 2)))))) (+ (* 0 -2.0) (* 0 (log 1.0)))) into (- 0.16666666666666666 (* 0.6666666666666666 (/ 1 (pow 1.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.0))) (+ (* (/ (pow (- 0.6666666666666666) 2) 2)) (* (/ (pow (- 0.16666666666666666 (* 0.6666666666666666 (/ 1 (pow 1.0 2)))) 1) 1)))) into (* (pow 1.0 1/3) (- 0.38888888888888884 (* 0.6666666666666666 (/ 1 (pow 1.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.0 1/3) (* (pow 1.0 1/3) (- 0.38888888888888884 (* 0.6666666666666666 (/ 1 (pow 1.0 2)))))) (+ (* (* -0.6666666666666666 (pow 1.0 1/3)) (* -0.6666666666666666 (pow 1.0 1/3))) (* (* (pow 1.0 1/3) (- 0.38888888888888884 (* 0.6666666666666666 (/ 1 (pow 1.0 2))))) (pow 1.0 1/3)))) into (- (* 1.222222222222222 (pow (pow 1.0 2) 1/3)) (* 1.3333333333333333 (pow (/ 1 (pow 1.0 4)) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* (pow (pow 1.0 2) 1/3) (* (pow 1.0 1/3) (- 0.38888888888888884 (* 0.6666666666666666 (/ 1 (pow 1.0 2)))))) (+ (* (- (* 1.3333333333333333 (pow (pow 1.0 2) 1/3))) (* -0.6666666666666666 (pow 1.0 1/3))) (* (- (* 1.222222222222222 (pow (pow 1.0 2) 1/3)) (* 1.3333333333333333 (pow (/ 1 (pow 1.0 4)) 1/3))) (pow 1.0 1/3)))) into (- 2.5 (+ (* 0.6666666666666666 (/ 1 (pow 1.0 2))) (* 1.3333333333333333 1.0)))
* [misc]backup-simplify:  Simplify (- 2.5 (+ (* 0.6666666666666666 (/ 1 (pow 1.0 2))) (* 1.3333333333333333 1.0))) into (- 1.1666666666666667 (* 0.6666666666666666 (/ 1 (pow 1.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- 1.1666666666666667 (* 0.6666666666666666 (/ 1 (pow 1.0 2)))) (pow x 2)) (+ (* (- 2.0) x) 1.0)) into (- (+ (* 1.1666666666666667 (pow x 2)) 1.0) (+ (* 0.6666666666666666 (/ (pow x 2) (pow 1.0 2))) (* 2.0 x)))
* [misc]approximate:  Taking taylor expansion of (* (* (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))) into (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2) (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))) into (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3) into (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 2.0)) 1)) (pow 0.5 1)))) 1) into -4.0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -4.0) (* 0 (- (log 0.5) (* 2 (log x))))) into (- 1.3333333333333333)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow (- 1.3333333333333333) 1) 1)))) into (* -1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 2.0)) 1)) (pow 0.5 1)))) 1) into -4.0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -4.0) (* 0 (- (log 0.5) (* 2 (log x))))) into (- 1.3333333333333333)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow (- 1.3333333333333333) 1) 1)))) into (* -1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 2.0)) 1)) (pow 0.5 1)))) 1) into -4.0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -4.0) (* 0 (- (log 0.5) (* 2 (log x))))) into (- 1.3333333333333333)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow (- 1.3333333333333333) 1) 1)))) into (* -1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (* -1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) (* (* -1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))) (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) into (- (* 2.6666666666666665 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2) (* -1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) (* (- (* 2.6666666666666665 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2))) (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) into (- (* 4.0 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3)))
* [misc]backup-simplify:  Simplify (- (* 4.0 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3))) into (- (* 4.0 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 2.0)) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 1.0) 1)) (pow 0.5 1)))) 2) into (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))) (+ (* 0 -4.0) (* 0 (- (log 0.5) (* 2 (log x)))))) into (- 0.6666666666666666 (* 0.6666666666666666 (/ 1 (pow 0.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow (- 1.3333333333333333) 2) 2)) (* (/ (pow (- 0.6666666666666666 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) 1) 1)))) into (* (- 1.5555555555555554 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 2.0)) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 1.0) 1)) (pow 0.5 1)))) 2) into (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))) (+ (* 0 -4.0) (* 0 (- (log 0.5) (* 2 (log x)))))) into (- 0.6666666666666666 (* 0.6666666666666666 (/ 1 (pow 0.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow (- 1.3333333333333333) 2) 2)) (* (/ (pow (- 0.6666666666666666 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) 1) 1)))) into (* (- 1.5555555555555554 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 2.0)) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 1.0) 1)) (pow 0.5 1)))) 2) into (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))) (+ (* 0 -4.0) (* 0 (- (log 0.5) (* 2 (log x)))))) into (- 0.6666666666666666 (* 0.6666666666666666 (/ 1 (pow 0.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow (- 1.3333333333333333) 2) 2)) (* (/ (pow (- 0.6666666666666666 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) 1) 1)))) into (* (- 1.5555555555555554 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (* (- 1.5555555555555554 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) (+ (* (* -1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))) (* -1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) (* (* (- 1.5555555555555554 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))) (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))))) into (- (* 4.888888888888888 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)) (* 1.3333333333333333 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2) (pow 0.5 2))))
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2) (* (- 1.5555555555555554 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) (+ (* (- (* 2.6666666666666665 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2))) (* -1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) (* (- (* 4.888888888888888 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)) (* 1.3333333333333333 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2) (pow 0.5 2)))) (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))))) into (- (* 9.999999999999998 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3)) (* 2.0 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3) (pow 0.5 2))))
* [misc]backup-simplify:  Simplify (- (* 9.999999999999998 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3)) (* 2.0 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3) (pow 0.5 2)))) into (- (* 9.999999999999998 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3)) (* 2.0 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3) (pow 0.5 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 9.999999999999998 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 3)) (* 2.0 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 3) (pow 0.5 2)))) (pow (/ 1 x) 2)) (+ (* (- (* 4.0 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 3))) (/ 1 x)) (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 3))) into (- (+ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 3) (* 9.999999999999998 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 3) (pow x 2)))) (+ (* 2.0 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 3) (* (pow 0.5 2) (pow x 2)))) (* 4.0 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 3) x))))
* [misc]approximate:  Taking taylor expansion of (* (* (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))) into (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2) (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))) into (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3) into (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 2.0) 1)) (pow 0.5 1)))) 1) into 4.0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 4.0) (* 0 (- (log 0.5) (* 2 (log x))))) into 1.3333333333333333
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 1.3333333333333333 1) 1)))) into (* 1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 2.0) 1)) (pow 0.5 1)))) 1) into 4.0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 4.0) (* 0 (- (log 0.5) (* 2 (log x))))) into 1.3333333333333333
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 1.3333333333333333 1) 1)))) into (* 1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 2.0) 1)) (pow 0.5 1)))) 1) into 4.0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 4.0) (* 0 (- (log 0.5) (* 2 (log x))))) into 1.3333333333333333
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 1.3333333333333333 1) 1)))) into (* 1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (* 1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) (* (* 1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))) (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) into (* 2.6666666666666665 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2))
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2) (* 1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) (* (* 2.6666666666666665 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)) (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) into (* 4.0 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3))
* [misc]backup-simplify:  Simplify (* 4.0 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3)) into (* 4.0 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 2.0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 1.0) 1)) (pow 0.5 1)))) 2) into (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))) (+ (* 0 4.0) (* 0 (- (log 0.5) (* 2 (log x)))))) into (- 0.6666666666666666 (* 0.6666666666666666 (/ 1 (pow 0.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 1.3333333333333333 2) 2)) (* (/ (pow (- 0.6666666666666666 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) 1) 1)))) into (* (- 1.5555555555555554 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 2.0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 1.0) 1)) (pow 0.5 1)))) 2) into (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))) (+ (* 0 4.0) (* 0 (- (log 0.5) (* 2 (log x)))))) into (- 0.6666666666666666 (* 0.6666666666666666 (/ 1 (pow 0.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 1.3333333333333333 2) 2)) (* (/ (pow (- 0.6666666666666666 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) 1) 1)))) into (* (- 1.5555555555555554 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 2.0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 1.0) 1)) (pow 0.5 1)))) 2) into (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))) (+ (* 0 4.0) (* 0 (- (log 0.5) (* 2 (log x)))))) into (- 0.6666666666666666 (* 0.6666666666666666 (/ 1 (pow 0.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 1.3333333333333333 2) 2)) (* (/ (pow (- 0.6666666666666666 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) 1) 1)))) into (* (- 1.5555555555555554 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (* (- 1.5555555555555554 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) (+ (* (* 1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))) (* 1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) (* (* (- 1.5555555555555554 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))) (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))))) into (- (* 4.888888888888888 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)) (* 1.3333333333333333 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2) (pow 0.5 2))))
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2) (* (- 1.5555555555555554 (* 0.6666666666666666 (/ 1 (pow 0.5 2)))) (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) (+ (* (* 2.6666666666666665 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)) (* 1.3333333333333333 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) (* (- (* 4.888888888888888 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)) (* 1.3333333333333333 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2) (pow 0.5 2)))) (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))))) into (- (* 9.999999999999998 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3)) (* 2.0 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3) (pow 0.5 2))))
* [misc]backup-simplify:  Simplify (- (* 9.999999999999998 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3)) (* 2.0 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3) (pow 0.5 2)))) into (- (* 9.999999999999998 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3)) (* 2.0 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 3) (pow 0.5 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 9.999999999999998 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 (- x))))))) 3)) (* 2.0 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 (- x))))))) 3) (pow 0.5 2)))) (pow (/ 1 (- x)) 2)) (+ (* (* 4.0 (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 (- x))))))) 3)) (/ 1 (- x))) (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 (- x))))))) 3))) into (- (+ (* 9.999999999999998 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 3) (pow x 2))) (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 3)) (+ (* 2.0 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 3) (* (pow 0.5 2) (pow x 2)))) (* 4.0 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 3) x))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (* 0.5 (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.5 (pow x 2)) into (* 0.5 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.5 (pow (/ 1 (/ 1 x)) 2)) into (* 0.5 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.5 (pow (/ 1 (/ 1 (- x))) 2)) into (* 0.5 (pow x 2))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 2 1 2)
* [misc]approximate:  Taking taylor expansion of (* 0.5 (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.5 (pow x 2)) into (* 0.5 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.5 (pow (/ 1 (/ 1 x)) 2)) into (* 0.5 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.5 (pow (/ 1 (/ 1 (- x))) 2)) into (* 0.5 (pow x 2))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ 1/3 1/3)) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (+ 1/3 1/3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* * * * [misc]progress:  [ 2 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ 1 1)) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 3 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 1/3) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (389 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 4 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) 1) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 5 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 2) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 6 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ 1 1)) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 7 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) 1) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 8 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (exp (+ (log (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (log (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (log (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 9 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (exp (log (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 10 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (log (exp (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 11 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (389 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 12 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))) (cbrt (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))) (cbrt (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 13 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (* (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (60 enodes)
* * [misc]simplify:  iters left: 2 (137 enodes)
* * [misc]simplify:  iters left: 1 (460 enodes)
* [exit]simplify:  Simplified to (* (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)) (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (* (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)) (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 14 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 15 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (* (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (273 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (485 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 16 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (* (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (164 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* x -2.0) 1.0) (* x (* 0.5 x))) (+ (* x (* 0.5 x)) (+ (* x -2.0) 1.0)))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* x (* 0.5 x)) 3))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* x -2.0) 1.0) (* x (* 0.5 x))) (+ (* x (* 0.5 x)) (+ (* x -2.0) 1.0)))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* x (* 0.5 x)) 3))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x x) 0.5))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x x) 0.5))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 17 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (164 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (cbrt (+ (pow (* (* x 0.5) x) 3) (pow (+ (* x -2.0) 1.0) 3))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (cbrt (+ (pow (* (* x 0.5) x) 3) (pow (+ (* x -2.0) 1.0) 3))))
* [enter]simplify:  Simplifying (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* x -2.0) 1.0) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (* (* (* x 0.5) x) (* (* x 0.5) x)))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* x -2.0) 1.0) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (* (* (* x 0.5) x) (* (* x 0.5) x)))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 18 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (341 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))))
* [enter]simplify:  Simplifying (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (68 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 19 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* 1 (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 20 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 21 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 22 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt 1)) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt 1))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* [exit]simplify:  Simplified to (* (cbrt 1) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt 1) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 23 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (cbrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (cbrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 24 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 25 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 1) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 1)
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 26 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (* (cbrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 27 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 28 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt 1) (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 29 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (* (cbrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 30 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 31 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* 1 (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 32 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (299 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x 0.5) x) 3))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x 0.5) x) 3))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 33 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (355 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 34 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (284 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))) (cbrt (+ (* (* 0.5 x) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))) (cbrt (+ (* (* 0.5 x) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 35 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (357 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (cbrt (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (cbrt (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 36 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 37 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1/3 1/3) 1/3)))>
* [enter]simplify:  Simplifying (+ (+ 1/3 1/3) 1/3)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* [exit]simplify:  Simplified to (+ (+ 1/3 1/3) 1/3)
* [exit]simplify:  Simplified to (+ (+ 1/3 1/3) 1/3)
* * * * [misc]progress:  [ 38 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1 1) 1)))>
* [enter]simplify:  Simplifying (+ (+ 1 1) 1)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* * * * [misc]progress:  [ 39 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ 2 1)))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 40 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1 1) 1)))>
* [enter]simplify:  Simplifying (+ (+ 1 1) 1)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* * * * [misc]progress:  [ 41 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 1/3))>
* [enter]simplify:  Simplifying (* (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* * * * [misc]progress:  [ 42 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) 1))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 43 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) 1))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 44 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 3))>
* * * * [misc]progress:  [ 45 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1 1) 1)))>
* [enter]simplify:  Simplifying (+ (+ 1 1) 1)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* * * * [misc]progress:  [ 46 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ 2 1)))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 47 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1 1) 1)))>
* [enter]simplify:  Simplifying (+ (+ 1 1) 1)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* * * * [misc]progress:  [ 48 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) 1))>
* * * * [misc]progress:  [ 49 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (exp (+ (+ (log (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (log (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (log (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (log (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (log (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))) (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))) (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 50 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (exp (+ (log (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (log (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (+ (log (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (log (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))) (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))) (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 51 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (log (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 52 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (exp (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (56 enodes)
* * [misc]simplify:  iters left: 1 (77 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 53 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* * * * [misc]progress:  [ 54 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 55 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (cbrt (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* * [misc]simplify:  iters left: 1 (47 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 56 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (85 enodes)
* * [misc]simplify:  iters left: 2 (238 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* * * * [misc]progress:  [ 57 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [enter]simplify:  Simplifying (sqrt (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 58 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (* (* (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (277 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (486 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) 0.5) (- (* (* x x) 0.5) (+ (* x -2.0) 1.0))) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (+ (* (* (* x x) 0.5) (- (* (* x x) 0.5) (+ (* x -2.0) 1.0))) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 59 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (* (* (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* 0.5 (* x x))))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))))
* [exit]simplify:  Simplified to (* (* (cbrt (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* 0.5 (* x x))))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))))
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (172 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x (* x 0.5)) (* x (* x 0.5))) (* (+ (* x -2.0) 1.0) (- (+ (* x -2.0) 1.0) (* x (* x 0.5)))))) (* (cbrt (+ (* (* x (* x 0.5)) (* x (* x 0.5))) (* (+ (* x -2.0) 1.0) (- (+ (* x -2.0) 1.0) (* x (* x 0.5)))))) (cbrt (- (+ (* x -2.0) 1.0) (* x (* x 0.5))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x (* x 0.5)) (* x (* x 0.5))) (* (+ (* x -2.0) 1.0) (- (+ (* x -2.0) 1.0) (* x (* x 0.5)))))) (* (cbrt (+ (* (* x (* x 0.5)) (* x (* x 0.5))) (* (+ (* x -2.0) 1.0) (- (+ (* x -2.0) 1.0) (* x (* x 0.5)))))) (cbrt (- (+ (* x -2.0) 1.0) (* x (* x 0.5))))))
* * * * [misc]progress:  [ 60 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (* (* (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* 0.5 (* x x))))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))))
* [exit]simplify:  Simplified to (* (* (cbrt (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* 0.5 (* x x))))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))))
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (173 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x (* x 0.5)) (* x (* x 0.5))) (* (+ (* x -2.0) 1.0) (- (+ (* x -2.0) 1.0) (* x (* x 0.5)))))) (* (cbrt (- (+ (* x -2.0) 1.0) (* x (* x 0.5)))) (cbrt (+ (* (* x (* x 0.5)) (* x (* x 0.5))) (* (+ (* x -2.0) 1.0) (- (+ (* x -2.0) 1.0) (* x (* x 0.5))))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x (* x 0.5)) (* x (* x 0.5))) (* (+ (* x -2.0) 1.0) (- (+ (* x -2.0) 1.0) (* x (* x 0.5)))))) (* (cbrt (- (+ (* x -2.0) 1.0) (* x (* x 0.5)))) (cbrt (+ (* (* x (* x 0.5)) (* x (* x 0.5))) (* (+ (* x -2.0) 1.0) (- (+ (* x -2.0) 1.0) (* x (* x 0.5))))))))
* * * * [misc]progress:  [ 61 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (* (* (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* 0.5 (* x x))))) (* (cbrt (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* 0.5 (* x x))))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* 0.5 (* x x))))) (* (cbrt (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* 0.5 (* x x))))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))))
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (172 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x (* x 0.5)) (- (* x (* x 0.5)) (+ (* x -2.0) 1.0))) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (* (cbrt (- (+ (* x -2.0) 1.0) (* x (* x 0.5)))) (cbrt (- (+ (* x -2.0) 1.0) (* x (* x 0.5))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x (* x 0.5)) (- (* x (* x 0.5)) (+ (* x -2.0) 1.0))) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (* (cbrt (- (+ (* x -2.0) 1.0) (* x (* x 0.5)))) (cbrt (- (+ (* x -2.0) 1.0) (* x (* x 0.5))))))
* * * * [misc]progress:  [ 62 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (* (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (* (cbrt (+ (pow (* (* x 0.5) x) 3) (pow (+ (* x -2.0) 1.0) 3))) (cbrt (+ (pow (* (* x 0.5) x) 3) (pow (+ (* x -2.0) 1.0) 3)))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (* (cbrt (+ (pow (* (* x 0.5) x) 3) (pow (+ (* x -2.0) 1.0) 3))) (cbrt (+ (pow (* (* x 0.5) x) 3) (pow (+ (* x -2.0) 1.0) 3)))))
* [enter]simplify:  Simplifying (* (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (172 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (* (cbrt (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)))) (cbrt (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x))))))
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (* (cbrt (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)))) (cbrt (+ (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x))))))
* * * * [misc]progress:  [ 63 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (* (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (* (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (cbrt (+ (pow (* (* x 0.5) x) 3) (pow (+ (* x -2.0) 1.0) 3)))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (* (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (cbrt (+ (pow (* (* x 0.5) x) 3) (pow (+ (* x -2.0) 1.0) 3)))))
* [enter]simplify:  Simplifying (* (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (173 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (* (* x 0.5) x) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (- (* (* x 0.5) x) (+ (* x -2.0) 1.0))))) (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (* (* x 0.5) x) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (- (* (* x 0.5) x) (+ (* x -2.0) 1.0))))) (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))))
* * * * [misc]progress:  [ 64 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (* (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x 0.5) x) 3))) (* (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x 0.5) x) 3))) (* (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))))
* [enter]simplify:  Simplifying (* (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (172 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (cbrt (+ (* (* (* x 0.5) x) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))))
* [exit]simplify:  Simplified to (* (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (cbrt (+ (* (* (* x 0.5) x) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))))
* * * * [misc]progress:  [ 65 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (* (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (344 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [enter]simplify:  Simplifying (* (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* * [misc]simplify:  iters left: 2 (70 enodes)
* * [misc]simplify:  iters left: 1 (72 enodes)
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* * * * [misc]progress:  [ 66 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (* (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (294 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x 0.5) x) 3))) (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x 0.5) x) 3))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x 0.5) x) 3))) (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x 0.5) x) 3))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (485 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 67 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (* (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x 0.5) x) 3))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x 0.5) x) 3))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x x) 0.5))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x x) 0.5))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 68 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x 0.5) x) (* (* x 0.5) x)))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x 0.5) x) 3))))
* [exit]simplify:  Simplified to (* (* (cbrt (- (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x 0.5) x) (* (* x 0.5) x)))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x 0.5) x) 3))))
* [enter]simplify:  Simplifying (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* x -2.0) 1.0) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (* (* (* x 0.5) x) (* (* x 0.5) x)))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* x -2.0) 1.0) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (* (* (* x 0.5) x) (* (* x 0.5) x)))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 69 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (365 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x 0.5) x) (* (* x 0.5) x)))) (* (cbrt (- (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x 0.5) x) (* (* x 0.5) x)))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x 0.5) x) (* (* x 0.5) x)))) (* (cbrt (- (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x 0.5) x) (* (* x 0.5) x)))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [enter]simplify:  Simplifying (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (68 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 70 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (* (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (305 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))) (cbrt (+ (* (* 0.5 x) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))) (cbrt (+ (* (* 0.5 x) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (485 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 71 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (* (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)))) (cbrt (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* 0.5 (* x x))))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)))) (cbrt (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* 0.5 (* x x))))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x x) 0.5))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x x) 0.5))) (cbrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 72 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (cbrt (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x x) 0.5) 3))))
* [exit]simplify:  Simplified to (* (* (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (cbrt (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x x) 0.5) 3))))
* [enter]simplify:  Simplifying (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* x -2.0) 1.0) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (* (* (* x 0.5) x) (* (* x 0.5) x)))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* x -2.0) 1.0) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (* (* (* x 0.5) x) (* (* x 0.5) x)))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 73 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (364 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5))))) (cbrt (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5))))
* [exit]simplify:  Simplified to (* (* (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5))))) (cbrt (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5))))
* [enter]simplify:  Simplifying (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (68 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (cbrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 74 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* * * * [misc]progress:  [ 75 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))) (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))) (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 76 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 77 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt 1)) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt 1))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* [exit]simplify:  Simplified to (* (cbrt 1) (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (cbrt 1) (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 78 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (cbrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (cbrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (56 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (* (cbrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (* (cbrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 79 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 80 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) 1) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) 1)
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 81 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 82 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (301 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (pow (* (* x 0.5) x) 3) (pow (+ (* x -2.0) 1.0) 3))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (pow (* (* x 0.5) x) 3) (pow (+ (* x -2.0) 1.0) 3))))
* * * * [misc]progress:  [ 83 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (362 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (- (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x 0.5) x) (* (* x 0.5) x)))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (- (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x 0.5) x) (* (* x 0.5) x)))))
* * * * [misc]progress:  [ 84 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (296 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* 0.5 x) x) (+ (* x -2.0) 1.0))) (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* 0.5 x) x) (+ (* x -2.0) 1.0))) (* (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3)))))
* * * * [misc]progress:  [ 85 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* 0.5 (* x x))))) (* (cbrt (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* 0.5 (* x x))))) (* (cbrt (+ (* 0.5 (* x x)) (+ (* x -2.0) 1.0))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))))
* * * * [misc]progress:  [ 86 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) 0.5) 3) (pow (+ (* x -2.0) 1.0) 3))) (* (cbrt (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5))) (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (* x x) 0.5) 3) (pow (+ (* x -2.0) 1.0) 3))) (* (cbrt (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5))) (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5))))))
* * * * [misc]progress:  [ 87 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (364 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5))))) (cbrt (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5))))
* [exit]simplify:  Simplified to (* (* (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (cbrt (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5))))) (cbrt (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5))))
* * * * [misc]progress:  [ 88 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (303 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x 0.5) x) 3))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x 0.5) x) 3))))
* * * * [misc]progress:  [ 89 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (363 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (- (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x 0.5) x) (* (* x 0.5) x)))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (- (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)) (* (* (* x 0.5) x) (* (* x 0.5) x)))))
* * * * [misc]progress:  [ 90 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (288 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* 0.5 x) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* 0.5 x) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* 0.5 x) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* 0.5 x) x) (+ (* x -2.0) 1.0)))) (cbrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))))
* * * * [misc]progress:  [ 91 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (362 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (* (cbrt (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5))) (cbrt (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))) (* (cbrt (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5))) (cbrt (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))))
* * * * [misc]progress:  [ 92 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* * * * [misc]progress:  [ 93 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (pow (* 0.5 (* x x)) 1)))))>
* * * * [misc]progress:  [ 94 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (exp (log (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (log (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (log (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (log (* 0.5 (* x x)))
* * * * [misc]progress:  [ 95 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (log (exp (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (exp (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp 0.5) (* x x))
* [exit]simplify:  Simplified to (pow (exp 0.5) (* x x))
* * * * [misc]progress:  [ 96 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* [enter]simplify:  Simplifying (cbrt (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* 0.5 (* x x)))
* * * * [misc]progress:  [ 97 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (cbrt (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (127 enodes)
* * [misc]simplify:  iters left: 2 (270 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* 0.5 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* 0.5 (* x x)) 3)
* * * * [misc]progress:  [ 98 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* (sqrt (* 0.5 (* x x))) (sqrt (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* * * * [misc]progress:  [ 99 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 1 (* 0.5 (* x x)))))))>
* * * * [misc]progress:  [ 100 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* (* 0.5 x) x)))))>
* [enter]simplify:  Simplifying (* 0.5 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 0.5 x)
* [exit]simplify:  Simplified to (* 0.5 x)
* * * * [misc]progress:  [ 101 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* (* x x) 0.5)))))>
* * * * [misc]progress:  [ 102 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (pow (* 0.5 (* x x)) 1)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 103 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (exp (log (* 0.5 (* x x))))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (log (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (log (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (log (* 0.5 (* x x)))
* * * * [misc]progress:  [ 104 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (log (exp (* 0.5 (* x x))))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (exp (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp 0.5) (* x x))
* [exit]simplify:  Simplified to (pow (exp 0.5) (* x x))
* * * * [misc]progress:  [ 105 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* [enter]simplify:  Simplifying (cbrt (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* 0.5 (* x x)))
* * * * [misc]progress:  [ 106 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (cbrt (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* 0.5 (* x x))))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (127 enodes)
* * [misc]simplify:  iters left: 2 (270 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* 0.5 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* 0.5 (* x x)) 3)
* * * * [misc]progress:  [ 107 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* (sqrt (* 0.5 (* x x))) (sqrt (* 0.5 (* x x))))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* * * * [misc]progress:  [ 108 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 1 (* 0.5 (* x x)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 109 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* (* 0.5 x) x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* 0.5 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 0.5 x)
* [exit]simplify:  Simplified to (* 0.5 x)
* * * * [misc]progress:  [ 110 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* (* x x) 0.5)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 111 / 122 ] simplifiying candidate #<alt-event (Î» (x) (* (- (+ (* 1.222222222222222 (* (pow (pow 1.0 2) 1/3) (pow x 2))) (pow (pow 1.0 2) 1/3)) (+ (* 1.3333333333333333 (* (pow (/ 1 (pow 1.0 4)) 1/3) (pow x 2))) (* 1.3333333333333333 (* (pow (pow 1.0 2) 1/3) x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (- (+ (* 1.222222222222222 (* (pow (pow 1.0 2) 1/3) (pow x 2))) (pow (pow 1.0 2) 1/3)) (+ (* 1.3333333333333333 (* (pow (/ 1 (pow 1.0 4)) 1/3) (pow x 2))) (* 1.3333333333333333 (* (pow (pow 1.0 2) 1/3) x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (68 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (339 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ 1.0 (* x -2.0)) (* (* 0.5 x) x))) (- (cbrt (* 1.0 1.0)) (+ (* (cbrt (/ 1 (pow 1.0 4))) (* 1.3333333333333333 (* x x))) (* (* x (cbrt (* 1.0 1.0))) (- 1.3333333333333333 (* 1.222222222222222 x))))))
* * * * [misc]progress:  [ 112 / 122 ] simplifiying candidate #<alt-event (Î» (x) (* (- (+ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 2) (* 4.888888888888888 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 2) (pow x 2)))) (+ (* 2.6666666666666665 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 2) x)) (* 1.3333333333333333 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 2) (* (pow 0.5 2) (pow x 2)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (- (+ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 2) (* 4.888888888888888 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 2) (pow x 2)))) (+ (* 2.6666666666666665 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 2) x)) (* 1.3333333333333333 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 2) (* (pow 0.5 2) (pow x 2)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (* (- (* (/ (exp (* (+ (* 2 (log x)) (log 0.5)) (+ 1/3 1/3))) (* x x)) (- 4.888888888888888 (/ (/ 1.3333333333333333 0.5) 0.5))) (- (* (/ 2.6666666666666665 x) (exp (* (+ (* 2 (log x)) (log 0.5)) (+ 1/3 1/3)))) (exp (* (+ (* 2 (log x)) (log 0.5)) (+ 1/3 1/3))))) (cbrt (+ (+ 1.0 (* x -2.0)) (* x (* x 0.5)))))
* * * * [misc]progress:  [ 113 / 122 ] simplifiying candidate #<alt-event (Î» (x) (* (- (+ (* 4.888888888888888 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 2) (pow x 2))) (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 2)) (+ (* 1.3333333333333333 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 2) (* (pow 0.5 2) (pow x 2)))) (* 2.6666666666666665 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 2) x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (- (+ (* 4.888888888888888 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 2) (pow x 2))) (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 2)) (+ (* 1.3333333333333333 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 2) (* (pow 0.5 2) (pow x 2)))) (* 2.6666666666666665 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 2) x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (77 enodes)
* * [misc]simplify:  iters left: 4 (197 enodes)
* [exit]simplify:  Simplified to (* (- (+ (exp (* (- (log 0.5) (* (log (/ -1 x)) 2)) (+ 1/3 1/3))) (* (/ 4.888888888888888 (* x x)) (exp (* (- (log 0.5) (* (log (/ -1 x)) 2)) (+ 1/3 1/3))))) (+ (* (/ 2.6666666666666665 x) (exp (* (- (log 0.5) (* (log (/ -1 x)) 2)) (+ 1/3 1/3)))) (* (/ 1.3333333333333333 (* (* x x) (* 0.5 0.5))) (exp (* (- (log 0.5) (* (log (/ -1 x)) 2)) (+ 1/3 1/3)))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* (* x x) 0.5))))
* * * * [misc]progress:  [ 114 / 122 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 1.1666666666666667 (pow x 2)) 1.0) (+ (* 0.6666666666666666 (/ (pow x 2) (pow 1.0 2))) (* 2.0 x))))>
* [enter]simplify:  Simplifying (- (+ (* 1.1666666666666667 (pow x 2)) 1.0) (+ (* 0.6666666666666666 (/ (pow x 2) (pow 1.0 2))) (* 2.0 x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (72 enodes)
* * [misc]simplify:  iters left: 3 (170 enodes)
* * [misc]simplify:  iters left: 2 (366 enodes)
* [exit]simplify:  Simplified to (- (+ (- 1.0 (* x 2.0)) (* x (* 1.1666666666666667 x))) (/ 0.6666666666666666 (* (/ 1.0 x) (/ 1.0 x))))
* * * * [misc]progress:  [ 115 / 122 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 3) (* 9.999999999999998 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 3) (pow x 2)))) (+ (* 2.0 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 3) (* (pow 0.5 2) (pow x 2)))) (* 4.0 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 3) x)))))>
* [enter]simplify:  Simplifying (- (+ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 3) (* 9.999999999999998 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 3) (pow x 2)))) (+ (* 2.0 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 3) (* (pow 0.5 2) (pow x 2)))) (* 4.0 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 3) x))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* [exit]simplify:  Simplified to (- (* (/ (pow (exp (+ (* (* 1/3 2) (log x)) (* 1/3 (log 0.5)))) 3) (* x x)) (- 9.999999999999998 (/ 2.0 (* 0.5 0.5)))) (- (* (/ 4.0 x) (pow (exp (+ (* (* 1/3 2) (log x)) (* 1/3 (log 0.5)))) 3)) (pow (exp (+ (* (* 1/3 2) (log x)) (* 1/3 (log 0.5)))) 3)))
* * * * [misc]progress:  [ 116 / 122 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 9.999999999999998 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 3) (pow x 2))) (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 3)) (+ (* 2.0 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 3) (* (pow 0.5 2) (pow x 2)))) (* 4.0 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 3) x)))))>
* [enter]simplify:  Simplifying (- (+ (* 9.999999999999998 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 3) (pow x 2))) (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 3)) (+ (* 2.0 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 3) (* (pow 0.5 2) (pow x 2)))) (* 4.0 (/ (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 3) x))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (185 enodes)
* [exit]simplify:  Simplified to (- (+ (pow (exp (+ (* (* 1/3 (- 2)) (log (/ -1 x))) (* (log 0.5) 1/3))) 3) (* (/ 9.999999999999998 (* x x)) (pow (exp (+ (* (* 1/3 (- 2)) (log (/ -1 x))) (* (log 0.5) 1/3))) 3))) (+ (* (/ 4.0 x) (pow (exp (+ (* (* 1/3 (- 2)) (log (/ -1 x))) (* (log 0.5) 1/3))) 3)) (* (/ 2.0 (* (* x x) (* 0.5 0.5))) (pow (exp (+ (* (* 1/3 (- 2)) (log (/ -1 x))) (* (log 0.5) 1/3))) 3))))
* * * * [misc]progress:  [ 117 / 122 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (58 enodes)
* * [misc]simplify:  iters left: 1 (61 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 118 / 122 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (58 enodes)
* * [misc]simplify:  iters left: 1 (61 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 119 / 122 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (58 enodes)
* * [misc]simplify:  iters left: 1 (61 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 120 / 122 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (58 enodes)
* * [misc]simplify:  iters left: 1 (60 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 121 / 122 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (58 enodes)
* * [misc]simplify:  iters left: 1 (60 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 122 / 122 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (58 enodes)
* * [misc]simplify:  iters left: 1 (60 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 1.0))) into (/ -1.0 (sqrt 1.0))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 1.0))) into (/ -1.0 (sqrt 1.0))
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 1.0))) into (/ -1.0 (sqrt 1.0))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 1.0))) into (/ -1.0 (sqrt 1.0))
* [misc]backup-simplify:  Simplify (* (sqrt 1.0) (sqrt 1.0)) into (pow (sqrt 1.0) 2)
* [misc]backup-simplify:  Simplify (pow (sqrt 1.0) 2) into (pow (sqrt 1.0) 2)
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.0) (/ -1.0 (sqrt 1.0))) (* (/ -1.0 (sqrt 1.0)) (sqrt 1.0))) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (/ (- 0.5 (pow (/ -1.0 (sqrt 1.0)) 2) (+)) (* 2 (sqrt 1.0))) into (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0)))
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (/ (- 0.5 (pow (/ -1.0 (sqrt 1.0)) 2) (+)) (* 2 (sqrt 1.0))) into (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0)))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.0) (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0)))) (+ (* (/ -1.0 (sqrt 1.0)) (/ -1.0 (sqrt 1.0))) (* (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0))) (sqrt 1.0)))) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0.5 (pow x 2)) (+ (* (- 2.0) x) (pow (sqrt 1.0) 2))) into (- (+ (* 0.5 (pow x 2)) (pow (sqrt 1.0) 2)) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 0.5))) into (/ -1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 0.5))) into (/ -1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 0.5))) into (/ -1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 0.5))) into (/ -1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (* (sqrt 0.5) (sqrt 0.5)) into (pow (sqrt 0.5) 2)
* [misc]backup-simplify:  Simplify (pow (sqrt 0.5) 2) into (pow (sqrt 0.5) 2)
* [misc]backup-simplify:  Simplify (+ (* (sqrt 0.5) (/ -1.0 (sqrt 0.5))) (* (/ -1.0 (sqrt 0.5)) (sqrt 0.5))) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ -1.0 (sqrt 0.5)) 2) (+)) (* 2 (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ -1.0 (sqrt 0.5)) 2) (+)) (* 2 (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 0.5) (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))) (+ (* (/ -1.0 (sqrt 0.5)) (/ -1.0 (sqrt 0.5))) (* (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) (sqrt 0.5)))) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* (- 2.0) (/ 1 (/ 1 x))) (* (pow (sqrt 0.5) 2) (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* (pow (sqrt 0.5) 2) (pow x 2)) 1.0) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ 2.0 (* 2 (sqrt 0.5))) into (/ 1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ 2.0 (* 2 (sqrt 0.5))) into (/ 1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ 2.0 (* 2 (sqrt 0.5))) into (/ 1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ 2.0 (* 2 (sqrt 0.5))) into (/ 1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (* (sqrt 0.5) (sqrt 0.5)) into (pow (sqrt 0.5) 2)
* [misc]backup-simplify:  Simplify (pow (sqrt 0.5) 2) into (pow (sqrt 0.5) 2)
* [misc]backup-simplify:  Simplify (+ (* (sqrt 0.5) (/ 1.0 (sqrt 0.5))) (* (/ 1.0 (sqrt 0.5)) (sqrt 0.5))) into 2.0
* [misc]backup-simplify:  Simplify 2.0 into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ 1.0 (sqrt 0.5)) 2) (+)) (* 2 (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ 1.0 (sqrt 0.5)) 2) (+)) (* 2 (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 0.5) (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))) (+ (* (/ 1.0 (sqrt 0.5)) (/ 1.0 (sqrt 0.5))) (* (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) (sqrt 0.5)))) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* 2.0 (/ 1 (/ 1 (- x)))) (* (pow (sqrt 0.5) 2) (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* (pow (sqrt 0.5) 2) (pow x 2)) 1.0) (* 2.0 x))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 1.0))) into (/ -1.0 (sqrt 1.0))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 1.0))) into (/ -1.0 (sqrt 1.0))
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (/ -1.0 (sqrt 1.0)) into (/ -1.0 (sqrt 1.0))
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (/ (- 0.5 (pow (/ -1.0 (sqrt 1.0)) 2) (+)) (* 2 (sqrt 1.0))) into (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0)))
* [misc]backup-simplify:  Simplify (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0))) into (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0)))
* [misc]backup-simplify:  Simplify (+ (* (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0))) (pow x 2)) (+ (* (/ -1.0 (sqrt 1.0)) x) (sqrt 1.0))) into (- (+ (* 0.25 (/ (pow x 2) (sqrt 1.0))) (sqrt 1.0)) (+ (* 0.5 (/ (pow x 2) (pow (sqrt 1.0) 3))) (* 1.0 (/ x (sqrt 1.0)))))
* [misc]approximate:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 0.5))) into (/ -1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 0.5))) into (/ -1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (/ -1.0 (sqrt 0.5)) into (/ -1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ -1.0 (sqrt 0.5)) 2) (+)) (* 2 (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (+ (* (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) (/ 1 x)) (+ (/ -1.0 (sqrt 0.5)) (* (sqrt 0.5) (/ 1 (/ 1 x))))) into (- (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)) (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))))
* [misc]approximate:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ 2.0 (* 2 (sqrt 0.5))) into (/ 1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ 2.0 (* 2 (sqrt 0.5))) into (/ 1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (/ 1.0 (sqrt 0.5)) into (/ 1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ 1.0 (sqrt 0.5)) 2) (+)) (* 2 (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (+ (* (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) (/ 1 (- x))) (+ (/ 1.0 (sqrt 0.5)) (* (sqrt 0.5) (/ 1 (/ 1 (- x)))))) into (- (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))) (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 1.0))) into (/ -1.0 (sqrt 1.0))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 1.0))) into (/ -1.0 (sqrt 1.0))
* [misc]backup-simplify:  Simplify (sqrt 1.0) into (sqrt 1.0)
* [misc]backup-simplify:  Simplify (/ -1.0 (sqrt 1.0)) into (/ -1.0 (sqrt 1.0))
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (/ (- 0.5 (pow (/ -1.0 (sqrt 1.0)) 2) (+)) (* 2 (sqrt 1.0))) into (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0)))
* [misc]backup-simplify:  Simplify (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0))) into (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0)))
* [misc]backup-simplify:  Simplify (+ (* (* 1/2 (/ (- 0.5 (* 1.0 (/ 1 (pow (sqrt 1.0) 2)))) (sqrt 1.0))) (pow x 2)) (+ (* (/ -1.0 (sqrt 1.0)) x) (sqrt 1.0))) into (- (+ (* 0.25 (/ (pow x 2) (sqrt 1.0))) (sqrt 1.0)) (+ (* 0.5 (/ (pow x 2) (pow (sqrt 1.0) 3))) (* 1.0 (/ x (sqrt 1.0)))))
* [misc]approximate:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 0.5))) into (/ -1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (- 2.0) (* 2 (sqrt 0.5))) into (/ -1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (/ -1.0 (sqrt 0.5)) into (/ -1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ -1.0 (sqrt 0.5)) 2) (+)) (* 2 (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (+ (* (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) (/ 1 x)) (+ (/ -1.0 (sqrt 0.5)) (* (sqrt 0.5) (/ 1 (/ 1 x))))) into (- (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)) (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))))
* [misc]approximate:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ 2.0 (* 2 (sqrt 0.5))) into (/ 1.0 (sqrt 0.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ 2.0 (* 2 (sqrt 0.5))) into (/ 1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (sqrt 0.5) into (sqrt 0.5)
* [misc]backup-simplify:  Simplify (/ 1.0 (sqrt 0.5)) into (/ 1.0 (sqrt 0.5))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (- 1.0 (pow (/ 1.0 (sqrt 0.5)) 2) (+)) (* 2 (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) into (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5)))
* [misc]backup-simplify:  Simplify (+ (* (* 1/2 (/ (- 1.0 (* 1.0 (/ 1 (pow (sqrt 0.5) 2)))) (sqrt 0.5))) (/ 1 (- x))) (+ (/ 1.0 (sqrt 0.5)) (* (sqrt 0.5) (/ 1 (/ 1 (- x)))))) into (- (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))) (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (* 0.5 (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.5 (pow x 2)) into (* 0.5 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.5 (pow (/ 1 (/ 1 x)) 2)) into (* 0.5 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.5 (pow (/ 1 (/ 1 (- x))) 2)) into (* 0.5 (pow x 2))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ 1/2 1/2)))>
* [enter]simplify:  Simplifying (+ 1/2 1/2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/2 1/2)
* [exit]simplify:  Simplified to (+ 1/2 1/2)
* * * * [misc]progress:  [ 2 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (pow (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ 1 1)))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 3 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 1/2))>
* [enter]simplify:  Simplifying (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (389 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 4 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) 1))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 5 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (pow (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 2))>
* * * * [misc]progress:  [ 6 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (pow (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ 1 1)))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 7 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) 1))>
* * * * [misc]progress:  [ 8 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (exp (+ (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (+ (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (+ (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (+ (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 9 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (log (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* [exit]simplify:  Simplified to (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 10 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (exp (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 11 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* * * * [misc]progress:  [ 12 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (cbrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 13 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* [exit]simplify:  Simplified to (pow (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)) 3)
* * * * [misc]progress:  [ 14 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (sqrt (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (389 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 15 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [enter]simplify:  Simplifying (sqrt (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 16 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))>
* * * * [misc]progress:  [ 17 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (* (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (83 enodes)
* * [misc]simplify:  iters left: 3 (271 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))
* [enter]simplify:  Simplifying (* (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (484 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (+ (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 18 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (* (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (164 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (- (+ (* x -2.0) 1.0) (* x (* 0.5 x))) (+ (* x (* 0.5 x)) (+ (* x -2.0) 1.0)))) (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* x (* 0.5 x)) 3))))
* [exit]simplify:  Simplified to (* (sqrt (* (- (+ (* x -2.0) 1.0) (* x (* 0.5 x))) (+ (* x (* 0.5 x)) (+ (* x -2.0) 1.0)))) (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* x (* 0.5 x)) 3))))
* [enter]simplify:  Simplifying (* (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (* (sqrt (- (+ (* x -2.0) 1.0) (* (* x x) 0.5))) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (sqrt (- (+ (* x -2.0) 1.0) (* (* x x) 0.5))) (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 19 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (* (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (* (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (164 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (+ (pow (* (* x 0.5) x) 3) (pow (+ (* x -2.0) 1.0) 3))))
* [exit]simplify:  Simplified to (* (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (+ (pow (* (* x 0.5) x) 3) (pow (+ (* x -2.0) 1.0) 3))))
* [enter]simplify:  Simplifying (* (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (+ (* x -2.0) 1.0) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (* (* (* x 0.5) x) (* (* x 0.5) x)))) (sqrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (* (sqrt (+ (* (+ (* x -2.0) 1.0) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))) (* (* (* x 0.5) x) (* (* x 0.5) x)))) (sqrt (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 20 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (* (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (320 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [enter]simplify:  Simplifying (* (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* * [misc]simplify:  iters left: 1 (69 enodes)
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* * * * [misc]progress:  [ 21 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* * * * [misc]progress:  [ 22 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 23 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (fabs (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (fabs (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 24 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 25 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt 1)) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt 1))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* [exit]simplify:  Simplified to (* (sqrt 1) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt 1) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 26 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 27 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 1) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 1)
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 28 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 29 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (* (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (sqrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (sqrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 30 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 31 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt 1) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 32 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 33 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 34 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (299 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x 0.5) x) 3))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* x 0.5) x) 3))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 35 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (355 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 36 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (284 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))) (sqrt (+ (* (* 0.5 x) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))) (sqrt (+ (* (* 0.5 x) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 37 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (357 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (* (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x)))) (sqrt (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* * * * [misc]progress:  [ 38 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 39 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1/2)))>
* * * * [misc]progress:  [ 40 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (pow (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 1)))>
* * * * [misc]progress:  [ 41 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (exp (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 42 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (log (exp (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (exp (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (exp (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (exp (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 43 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [enter]simplify:  Simplifying (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 44 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (87 enodes)
* * [misc]simplify:  iters left: 2 (124 enodes)
* * [misc]simplify:  iters left: 1 (148 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 45 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 46 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 47 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (sqrt 1) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (sqrt 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (sqrt 1)
* [exit]simplify:  Simplified to (sqrt 1)
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 48 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (/ (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (267 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))
* [exit]simplify:  Simplified to (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))
* [enter]simplify:  Simplifying (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (483 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 49 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (/ (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (337 enodes)
* [exit]simplify:  Simplified to (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [enter]simplify:  Simplifying (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (65 enodes)
* * [misc]simplify:  iters left: 1 (67 enodes)
* [exit]simplify:  Simplified to (sqrt (- (+ (* x -2.0) 1.0) (* x (* x 0.5))))
* [exit]simplify:  Simplified to (sqrt (- (+ (* x -2.0) 1.0) (* x (* x 0.5))))
* * * * [misc]progress:  [ 50 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 51 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (fabs (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* * * * [misc]progress:  [ 52 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (* 1 (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* * * * [misc]progress:  [ 53 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1/2) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 54 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 1) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 55 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (exp (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 56 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (log (exp (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (exp (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (exp (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (exp (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 57 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [enter]simplify:  Simplifying (cbrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 58 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (87 enodes)
* * [misc]simplify:  iters left: 2 (124 enodes)
* * [misc]simplify:  iters left: 1 (148 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 59 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (sqrt (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 60 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 61 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt 1) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (sqrt 1)
* [exit]simplify:  Simplified to (sqrt 1)
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 62 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (267 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))
* [exit]simplify:  Simplified to (sqrt (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))
* [enter]simplify:  Simplifying (sqrt (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (483 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 63 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (337 enodes)
* [exit]simplify:  Simplified to (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (sqrt (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [enter]simplify:  Simplifying (sqrt (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (65 enodes)
* * [misc]simplify:  iters left: 1 (67 enodes)
* [exit]simplify:  Simplified to (sqrt (- (+ (* x -2.0) 1.0) (* x (* x 0.5))))
* [exit]simplify:  Simplified to (sqrt (- (+ (* x -2.0) 1.0) (* x (* x 0.5))))
* * * * [misc]progress:  [ 64 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (sqrt (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 65 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (fabs (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 66 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (* 1 (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 67 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (pow (* 0.5 (* x x)) 1)))))>
* * * * [misc]progress:  [ 68 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (exp (log (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (log (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (log (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (log (* 0.5 (* x x)))
* * * * [misc]progress:  [ 69 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (log (exp (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (exp (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp 0.5) (* x x))
* [exit]simplify:  Simplified to (pow (exp 0.5) (* x x))
* * * * [misc]progress:  [ 70 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* [enter]simplify:  Simplifying (cbrt (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* 0.5 (* x x)))
* * * * [misc]progress:  [ 71 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (cbrt (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (127 enodes)
* * [misc]simplify:  iters left: 2 (270 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* 0.5 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* 0.5 (* x x)) 3)
* * * * [misc]progress:  [ 72 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* (sqrt (* 0.5 (* x x))) (sqrt (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* * * * [misc]progress:  [ 73 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 1 (* 0.5 (* x x)))))))>
* * * * [misc]progress:  [ 74 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* (* 0.5 x) x)))))>
* [enter]simplify:  Simplifying (* 0.5 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 0.5 x)
* [exit]simplify:  Simplified to (* 0.5 x)
* * * * [misc]progress:  [ 75 / 87 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* (* x x) 0.5)))))>
* * * * [misc]progress:  [ 76 / 87 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.5 (pow x 2)) (pow (sqrt 1.0) 2)) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 0.5 (pow x 2)) (pow (sqrt 1.0) 2)) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* * [misc]simplify:  iters left: 2 (91 enodes)
* * [misc]simplify:  iters left: 1 (125 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) 0.5) (- 1.0 (* 2.0 x)))
* * * * [misc]progress:  [ 77 / 87 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* (pow (sqrt 0.5) 2) (pow x 2)) 1.0) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* (pow (sqrt 0.5) 2) (pow x 2)) 1.0) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (58 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (110 enodes)
* [exit]simplify:  Simplified to (+ (- 1.0 (* 2.0 x)) (* (* x x) 0.5))
* * * * [misc]progress:  [ 78 / 87 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* (pow (sqrt 0.5) 2) (pow x 2)) 1.0) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* (pow (sqrt 0.5) 2) (pow x 2)) 1.0) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (58 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (110 enodes)
* [exit]simplify:  Simplified to (+ (- 1.0 (* 2.0 x)) (* (* x x) 0.5))
* * * * [misc]progress:  [ 79 / 87 ] simplifiying candidate #<alt-event (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (- (+ (* 0.25 (/ (pow x 2) (sqrt 1.0))) (sqrt 1.0)) (+ (* 0.5 (/ (pow x 2) (pow (sqrt 1.0) 3))) (* 1.0 (/ x (sqrt 1.0)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (- (+ (* 0.25 (/ (pow x 2) (sqrt 1.0))) (sqrt 1.0)) (+ (* 0.5 (/ (pow x 2) (pow (sqrt 1.0) 3))) (* 1.0 (/ x (sqrt 1.0))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (378 enodes)
* [exit]simplify:  Simplified to (* (+ (- (sqrt 1.0) (/ (* 1.0 x) (sqrt 1.0))) (* (/ (* x x) (sqrt 1.0)) (- 0.25 (/ 0.5 1.0)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 80 / 87 ] simplifiying candidate #<alt-event (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (- (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)) (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (- (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)) (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (282 enodes)
* [exit]simplify:  Simplified to (* (- (+ (* (sqrt 0.5) x) (/ (/ 0.5 x) (sqrt 0.5))) (+ (/ 1.0 (sqrt 0.5)) (/ (/ 1 x) (sqrt 0.5)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 81 / 87 ] simplifiying candidate #<alt-event (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (- (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))) (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (- (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))) (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (276 enodes)
* [exit]simplify:  Simplified to (* (+ (- (/ 1.0 (sqrt 0.5)) (* (sqrt 0.5) x)) (- (/ (/ 1 x) (sqrt 0.5)) (/ (/ 0.5 x) (sqrt 0.5)))) (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 82 / 87 ] simplifiying candidate #<alt-event (Î» (x) (* (- (+ (* 0.25 (/ (pow x 2) (sqrt 1.0))) (sqrt 1.0)) (+ (* 0.5 (/ (pow x 2) (pow (sqrt 1.0) 3))) (* 1.0 (/ x (sqrt 1.0))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (- (+ (* 0.25 (/ (pow x 2) (sqrt 1.0))) (sqrt 1.0)) (+ (* 0.5 (/ (pow x 2) (pow (sqrt 1.0) 3))) (* 1.0 (/ x (sqrt 1.0))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (380 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* 0.5 (* x x)) (+ (* -2.0 x) 1.0))) (+ (* (- 0.25 (/ 0.5 1.0)) (/ (* x x) (sqrt 1.0))) (- (sqrt 1.0) (/ (* x 1.0) (sqrt 1.0)))))
* * * * [misc]progress:  [ 83 / 87 ] simplifiying candidate #<alt-event (Î» (x) (* (- (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)) (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (- (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x)) (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x))))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (283 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* x (* x 0.5)) (+ (* -2.0 x) 1.0))) (+ (- (/ (/ 0.5 x) (sqrt 0.5)) (/ (/ 1 x) (sqrt 0.5))) (- (* (sqrt 0.5) x) (/ 1.0 (sqrt 0.5)))))
* * * * [misc]progress:  [ 84 / 87 ] simplifiying candidate #<alt-event (Î» (x) (* (- (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))) (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (- (+ (* 1.0 (/ 1 (sqrt 0.5))) (* 0.5 (/ 1 (* (pow (sqrt 0.5) 3) x)))) (+ (* 0.5 (/ 1 (* (sqrt 0.5) x))) (* (sqrt 0.5) x))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (277 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x x) 0.5) (+ 1.0 (* x -2.0)))) (- (+ (/ (/ 1 x) (sqrt 0.5)) (/ 1.0 (sqrt 0.5))) (+ (* (sqrt 0.5) x) (/ (/ 0.5 x) (sqrt 0.5)))))
* * * * [misc]progress:  [ 85 / 87 ] simplifiying candidate #<alt-event (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 86 / 87 ] simplifiying candidate #<alt-event (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 87 / 87 ] simplifiying candidate #<alt-event (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))> #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))> #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) +nan.0)) , with alts (#<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))>)
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
