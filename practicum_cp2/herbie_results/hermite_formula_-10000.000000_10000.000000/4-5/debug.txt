* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Setting MPFR precision to 832
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (130 enodes)
* * [misc]simplify:  iters left: 2 (232 enodes)
* * [misc]simplify:  iters left: 1 (377 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* x x) (* x 32.0))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 2 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 2 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -160.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 160.0)
* [misc]backup-simplify:  Simplify (- 160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 160.0) (pow x 3)) into (* -160.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -160.0 (pow (/ 1 (/ 1 x)) 3)) into (* -160.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify 160.0 into 160.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 160.0 (pow (/ 1 (/ 1 (- x))) 3)) into (* -160.0 (pow x 3))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (* x x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify -1 into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (pow (/ 1 (/ 1 (- x))) 3)) into (pow x 3)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify -1 into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (pow (/ 1 (/ 1 (- x))) 3)) into (pow x 3)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* (* x x) x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (pow (* -160.0 (* (* x x) x)) 1)) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 2 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (exp (log (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (log (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (* -160.0 x)))
* [exit]simplify:  Simplified to (log (* (* x x) (* -160.0 x)))
* * * * [misc]progress:  [ 3 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (log (exp (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (exp (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* * * * [misc]progress:  [ 4 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* (cbrt (* -160.0 (* (* x x) x))) (cbrt (* -160.0 (* (* x x) x)))) (cbrt (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* -160.0 (* (* x x) x))) (cbrt (* -160.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* -160.0 x) (* x x))) (cbrt (* (* -160.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* -160.0 x) (* x x))) (cbrt (* (* -160.0 x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* -160.0 x) (* x x)))
* * * * [misc]progress:  [ 5 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (cbrt (* (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))) (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (* (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))) (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (210 enodes)
* [exit]simplify:  Simplified to (pow (* (* -160.0 x) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (* -160.0 x) (* x x)) 3)
* * * * [misc]progress:  [ 6 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (sqrt (* -160.0 (* (* x x) x))) (sqrt (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (sqrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* * * * [misc]progress:  [ 7 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* 1 (* -160.0 (* (* x x) x)))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 8 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* -160.0 (* x x)) x)) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (* -160.0 (* x x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* -160.0 (* x x))
* [exit]simplify:  Simplified to (* -160.0 (* x x))
* * * * [misc]progress:  [ 9 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* (* x x) x) -160.0)) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 10 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 3) x) x))))>
* * * * [misc]progress:  [ 11 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x (+ 2 1)) x) x))))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 12 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow (* (* x x) x) 1) x) x))))>
* * * * [misc]progress:  [ 13 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (exp (log (* (* x x) x))) x) x))))>
* [enter]simplify:  Simplifying (log (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 14 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (log (exp (* (* x x) x))) x) x))))>
* [enter]simplify:  Simplifying (exp (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (exp (pow x 3))
* [exit]simplify:  Simplified to (exp (pow x 3))
* * * * [misc]progress:  [ 15 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x))) (cbrt (* (* x x) x))) x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* [enter]simplify:  Simplifying (cbrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 16 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))) x) x))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 17 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (sqrt (* (* x x) x)) (sqrt (* (* x x) x))) x) x))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 18 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* 1 (* (* x x) x)) x) x))))>
* * * * [misc]progress:  [ 19 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* x (* x x)) x) x))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 20 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* x (* x x)) x) x))))>
* * * * [misc]progress:  [ 21 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 22 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x (+ 2 1)))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 23 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow (* (* x x) x) 1))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 24 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (exp (log (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (log (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 25 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (log (exp (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (exp (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (exp (pow x 3))
* [exit]simplify:  Simplified to (exp (pow x 3))
* * * * [misc]progress:  [ 26 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x))) (cbrt (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* [enter]simplify:  Simplifying (cbrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 27 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (cbrt (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 28 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (sqrt (* (* x x) x)) (sqrt (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 29 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* 1 (* (* x x) x)))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 30 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* x (* x x)))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 31 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* x (* x x)))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 32 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* [enter]simplify:  Simplifying (+ 3 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 3)
* [exit]simplify:  Simplified to (+ 1 3)
* * * * [misc]progress:  [ 33 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x (+ (+ 2 1) 1)) x))))>
* [enter]simplify:  Simplifying (+ (+ 2 1) 1)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ 1 (+ 1 2))
* [exit]simplify:  Simplified to (+ 1 (+ 1 2))
* * * * [misc]progress:  [ 34 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (* (* (* x x) x) x) 1) x))))>
* * * * [misc]progress:  [ 35 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (exp (log (* (* (* x x) x) x))) x))))>
* [enter]simplify:  Simplifying (log (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 1 3))
* [exit]simplify:  Simplified to (* (log x) (+ 1 3))
* * * * [misc]progress:  [ 36 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (log (exp (* (* (* x x) x) x))) x))))>
* [enter]simplify:  Simplifying (exp (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 37 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (cbrt (* (* (* x x) x) x)) (cbrt (* (* (* x x) x) x))) (cbrt (* (* (* x x) x) x))) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (* x x) x) x)) (cbrt (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 38 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (cbrt (* (* (* (* (* x x) x) x) (* (* (* x x) x) x)) (* (* (* x x) x) x))) x))))>
* [enter]simplify:  Simplifying (* (* (* (* (* x x) x) x) (* (* (* x x) x) x)) (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (82 enodes)
* * [misc]simplify:  iters left: 2 (96 enodes)
* * [misc]simplify:  iters left: 1 (102 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 39 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (sqrt (* (* (* x x) x) x)) (sqrt (* (* (* x x) x) x))) x))))>
* [enter]simplify:  Simplifying (sqrt (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 40 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* 1 (* (* (* x x) x) x)) x))))>
* * * * [misc]progress:  [ 41 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* x x) (* x x)) x))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 42 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* x (* (* x x) x)) x))))>
* * * * [misc]progress:  [ 43 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x 32.0)) (* x x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 44 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x 32.0)) (* x x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 45 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x 32.0)) (* x x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 46 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 3) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 3) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (225 enodes)
* * [misc]simplify:  iters left: 1 (293 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 32.0) (* (* x x) (* x x))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 47 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 3) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 3) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (225 enodes)
* * [misc]simplify:  iters left: 1 (293 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 32.0) (* (* x x) (* x x))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 48 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 3) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 3) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (225 enodes)
* * [misc]simplify:  iters left: 1 (293 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 32.0) (* (* x x) (* x x))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 49 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x 32.0)) (* x x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 50 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x 32.0)) (* x x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 51 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x 32.0)) (* x x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 52 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x 4) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x 4) x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (120 enodes)
* * [misc]simplify:  iters left: 1 (121 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 4) (* x 32.0)) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 53 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x 4) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x 4) x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (120 enodes)
* * [misc]simplify:  iters left: 1 (121 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 4) (* x 32.0)) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 54 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x 4) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x 4) x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (120 enodes)
* * [misc]simplify:  iters left: 1 (121 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 4) (* x 32.0)) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 2 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -160.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 160.0)
* [misc]backup-simplify:  Simplify (- 160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 160.0) (pow x 3)) into (* -160.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -160.0 (pow (/ 1 (/ 1 x)) 3)) into (* -160.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify 160.0 into 160.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 160.0 (pow (/ 1 (/ 1 (- x))) 3)) into (* -160.0 (pow x 3))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify -1 into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (pow (/ 1 (/ 1 (- x))) 3)) into (pow x 3)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (pow x (+ 3 1)) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) x) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) x) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (pow x 4) 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 1) (* 0 0)) into (pow x 4)
* [misc]backup-simplify:  Simplify (pow x 4) into (pow x 4)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (pow x 4) x) into (pow x 5)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -4) 1) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (/ 1 (pow x 4)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (/ 1 (pow (/ 1 x) 4)) (/ 1 (/ 1 x))) into (pow x 5)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) -1) into (* -1 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* -1 (exp (* 4 (- (log -1) (log x))))) into (* -1 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (* -1 (exp (* 4 (- (log -1) (log (/ 1 (- x))))))) (/ 1 (/ 1 (- x)))) into (* (exp (* 4 (- (log -1) (log (/ -1 x))))) x)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* 32.0 (* (pow x (+ 3 1)) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 32.0 (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) x) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) x) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (pow x 4) 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 1) (* 0 0)) into (pow x 4)
* [misc]backup-simplify:  Simplify (+ (* 32.0 (pow x 4)) (* 0 0)) into (* 32.0 (pow x 4))
* [misc]backup-simplify:  Simplify (* 32.0 (pow x 4)) into (* 32.0 (pow x 4))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 (pow x 4)) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 (pow x 4)) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (pow x 4)) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (pow x 4)) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (pow x 4)) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (pow x 4)) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (* 32.0 (pow x 4)) x) into (* 32.0 (pow x 5))
* [misc]approximate:  Taking taylor expansion of (* 32.0 (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 32.0 (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -4) 1) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 32.0 (/ 1 (pow x 4))) into (/ 32.0 (pow x 4))
* [misc]backup-simplify:  Simplify (/ 32.0 (pow x 4)) into (/ 32.0 (pow x 4))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (* 0 (/ 1 (pow x 4)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 4)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 4)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 4))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (/ 32.0 (pow (/ 1 x) 4)) (/ 1 (/ 1 x))) into (* 32.0 (pow x 5))
* [misc]approximate:  Taking taylor expansion of (* 32.0 (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 32.0 (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) -1) into (* -1 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* 32.0 (* -1 (exp (* 4 (- (log -1) (log x)))))) into (* -32.0 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* -32.0 (exp (* 4 (- (log -1) (log x))))) into (* -32.0 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (* 0 (* -1 (exp (* 4 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (* 0 (* -1 (exp (* 4 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* -1 (exp (* 4 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* -1 (exp (* 4 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* -1 (exp (* 4 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* -1 (exp (* 4 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (* -32.0 (exp (* 4 (- (log -1) (log (/ 1 (- x))))))) (/ 1 (/ 1 (- x)))) into (* 32.0 (* (exp (* 4 (- (log -1) (log (/ -1 x))))) x))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (pow (* -160.0 (* (* x x) x)) 1)) (* 32.0 (* (pow x (+ 3 1)) x))))>
* * * * [misc]progress:  [ 2 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (exp (log (* -160.0 (* (* x x) x))))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* [enter]simplify:  Simplifying (log (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (* -160.0 x)))
* [exit]simplify:  Simplified to (log (* (* x x) (* -160.0 x)))
* * * * [misc]progress:  [ 3 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (log (exp (* -160.0 (* (* x x) x))))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* [enter]simplify:  Simplifying (exp (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* * * * [misc]progress:  [ 4 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* (cbrt (* -160.0 (* (* x x) x))) (cbrt (* -160.0 (* (* x x) x)))) (cbrt (* -160.0 (* (* x x) x))))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* -160.0 (* (* x x) x))) (cbrt (* -160.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* -160.0 x) (* x x))) (cbrt (* (* -160.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* -160.0 x) (* x x))) (cbrt (* (* -160.0 x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* -160.0 x) (* x x)))
* * * * [misc]progress:  [ 5 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (cbrt (* (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))) (* -160.0 (* (* x x) x))))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* [enter]simplify:  Simplifying (* (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))) (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (210 enodes)
* [exit]simplify:  Simplified to (pow (* (* -160.0 x) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (* -160.0 x) (* x x)) 3)
* * * * [misc]progress:  [ 6 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (sqrt (* -160.0 (* (* x x) x))) (sqrt (* -160.0 (* (* x x) x))))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* [enter]simplify:  Simplifying (sqrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* * * * [misc]progress:  [ 7 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* 1 (* -160.0 (* (* x x) x)))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* * * * [misc]progress:  [ 8 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* -160.0 (* x x)) x)) (* 32.0 (* (pow x (+ 3 1)) x))))>
* [enter]simplify:  Simplifying (* -160.0 (* x x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* -160.0 (* x x))
* [exit]simplify:  Simplified to (* -160.0 (* x x))
* * * * [misc]progress:  [ 9 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* (* x x) x) -160.0)) (* 32.0 (* (pow x (+ 3 1)) x))))>
* * * * [misc]progress:  [ 10 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* * * * [misc]progress:  [ 11 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x (+ 2 1)))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 12 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow (* (* x x) x) 1))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* * * * [misc]progress:  [ 13 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (exp (log (* (* x x) x))))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* [enter]simplify:  Simplifying (log (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 14 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (log (exp (* (* x x) x))))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* [enter]simplify:  Simplifying (exp (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (exp (pow x 3))
* [exit]simplify:  Simplified to (exp (pow x 3))
* * * * [misc]progress:  [ 15 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x))) (cbrt (* (* x x) x))))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* [enter]simplify:  Simplifying (cbrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 16 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (cbrt (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 17 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (sqrt (* (* x x) x)) (sqrt (* (* x x) x))))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 18 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* 1 (* (* x x) x)))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* * * * [misc]progress:  [ 19 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* x (* x x)))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 20 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* x (* x x)))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* * * * [misc]progress:  [ 21 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (+ (+ 3 1) 1)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ 1 (+ 1 3))
* [exit]simplify:  Simplified to (+ 1 (+ 1 3))
* * * * [misc]progress:  [ 22 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow (* (pow x (+ 3 1)) x) 1))))>
* * * * [misc]progress:  [ 23 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (exp (log (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (log (* (pow x (+ 3 1)) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* * [misc]simplify:  iters left: 1 (83 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (* (log x) 3))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (* (log x) 3))
* * * * [misc]progress:  [ 24 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (exp (* (pow x (+ 3 1)) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* [exit]simplify:  Simplified to (exp (* x (pow x (+ 3 1))))
* [exit]simplify:  Simplified to (exp (* x (pow x (+ 3 1))))
* * * * [misc]progress:  [ 25 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (pow x (+ 3 1)))) (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (* (cbrt (* x (pow x (+ 3 1)))) (cbrt (* x (pow x (+ 3 1)))))
* [enter]simplify:  Simplifying (cbrt (* (pow x (+ 3 1)) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* [exit]simplify:  Simplified to (cbrt (* x (pow x (+ 3 1))))
* [exit]simplify:  Simplified to (cbrt (* x (pow x (+ 3 1))))
* * * * [misc]progress:  [ 26 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (cbrt (* (* (* (pow x (+ 3 1)) x) (* (pow x (+ 3 1)) x)) (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (* (* (* (pow x (+ 3 1)) x) (* (pow x (+ 3 1)) x)) (* (pow x (+ 3 1)) x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (70 enodes)
* * [misc]simplify:  iters left: 2 (107 enodes)
* * [misc]simplify:  iters left: 1 (119 enodes)
* [exit]simplify:  Simplified to (pow (* x (pow x (+ 3 1))) 3)
* [exit]simplify:  Simplified to (pow (* x (pow x (+ 3 1))) 3)
* * * * [misc]progress:  [ 27 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (sqrt (* (pow x (+ 3 1)) x)) (sqrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (pow x (+ 3 1)) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (pow x (+ 3 1))))
* [exit]simplify:  Simplified to (sqrt (* x (pow x (+ 3 1))))
* [enter]simplify:  Simplifying (sqrt (* (pow x (+ 3 1)) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (pow x (+ 3 1))))
* [exit]simplify:  Simplified to (sqrt (* x (pow x (+ 3 1))))
* * * * [misc]progress:  [ 28 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* 1 (* (pow x (+ 3 1)) x)))))>
* * * * [misc]progress:  [ 29 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x 3) (* (pow x 1) x)))))>
* [enter]simplify:  Simplifying (* (pow x 1) x)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 30 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (pow x (+ 3 1))) (cbrt (pow x (+ 3 1)))) (* (cbrt (pow x (+ 3 1))) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow x (+ 3 1))) x)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow x (+ 3 1))) x)
* [exit]simplify:  Simplified to (* (cbrt (pow x (+ 3 1))) x)
* * * * [misc]progress:  [ 31 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (sqrt (pow x (+ 3 1))) (* (sqrt (pow x (+ 3 1))) x)))))>
* [enter]simplify:  Simplifying (* (sqrt (pow x (+ 3 1))) x)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow x (+ 3 1))) x)
* [exit]simplify:  Simplified to (* (sqrt (pow x (+ 3 1))) x)
* * * * [misc]progress:  [ 32 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* 1 (* (pow x (+ 3 1)) x)))))>
* [enter]simplify:  Simplifying (* (pow x (+ 3 1)) x)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* * [misc]simplify:  iters left: 2 (16 enodes)
* [exit]simplify:  Simplified to (* x (pow x (+ 3 1)))
* [exit]simplify:  Simplified to (* x (pow x (+ 3 1)))
* * * * [misc]progress:  [ 33 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* x (pow x (+ 3 1))))))>
* * * * [misc]progress:  [ 34 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (pow (* 32.0 (* (pow x (+ 3 1)) x)) 1)))>
* * * * [misc]progress:  [ 35 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (exp (log (* 32.0 (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (log (* 32.0 (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (71 enodes)
* * [misc]simplify:  iters left: 1 (103 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 1 3) (log x)) (log (* 32.0 x)))
* [exit]simplify:  Simplified to (+ (* (+ 1 3) (log x)) (log (* 32.0 x)))
* * * * [misc]progress:  [ 36 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (log (exp (* 32.0 (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (exp (* 32.0 (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* [exit]simplify:  Simplified to (exp (* (pow x (+ 1 3)) (* 32.0 x)))
* [exit]simplify:  Simplified to (exp (* (pow x (+ 1 3)) (* 32.0 x)))
* * * * [misc]progress:  [ 37 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* (* (cbrt (* 32.0 (* (pow x (+ 3 1)) x))) (cbrt (* 32.0 (* (pow x (+ 3 1)) x)))) (cbrt (* 32.0 (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* 32.0 (* (pow x (+ 3 1)) x))) (cbrt (* 32.0 (* (pow x (+ 3 1)) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* 32.0 x) (pow x (+ 1 3)))) (cbrt (* (* 32.0 x) (pow x (+ 1 3)))))
* [exit]simplify:  Simplified to (* (cbrt (* (* 32.0 x) (pow x (+ 1 3)))) (cbrt (* (* 32.0 x) (pow x (+ 1 3)))))
* [enter]simplify:  Simplifying (cbrt (* 32.0 (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x (+ 1 3)) (* 32.0 x)))
* [exit]simplify:  Simplified to (cbrt (* (pow x (+ 1 3)) (* 32.0 x)))
* * * * [misc]progress:  [ 38 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (cbrt (* (* (* 32.0 (* (pow x (+ 3 1)) x)) (* 32.0 (* (pow x (+ 3 1)) x))) (* 32.0 (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (* (* (* 32.0 (* (pow x (+ 3 1)) x)) (* 32.0 (* (pow x (+ 3 1)) x))) (* 32.0 (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (217 enodes)
* [exit]simplify:  Simplified to (pow (* (pow x (+ 1 3)) (* 32.0 x)) 3)
* [exit]simplify:  Simplified to (pow (* (pow x (+ 1 3)) (* 32.0 x)) 3)
* * * * [misc]progress:  [ 39 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* (sqrt (* 32.0 (* (pow x (+ 3 1)) x))) (sqrt (* 32.0 (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (sqrt (* 32.0 (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x (+ 1 3)) (* 32.0 x)))
* [exit]simplify:  Simplified to (sqrt (* (pow x (+ 1 3)) (* 32.0 x)))
* [enter]simplify:  Simplifying (sqrt (* 32.0 (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x (+ 1 3)) (* 32.0 x)))
* [exit]simplify:  Simplified to (sqrt (* (pow x (+ 1 3)) (* 32.0 x)))
* * * * [misc]progress:  [ 40 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 1 (* 32.0 (* (pow x (+ 3 1)) x)))))>
* * * * [misc]progress:  [ 41 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* (* 32.0 (pow x (+ 3 1))) x)))>
* [enter]simplify:  Simplifying (* 32.0 (pow x (+ 3 1)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (pow x (+ 1 3)) 32.0)
* [exit]simplify:  Simplified to (* (pow x (+ 1 3)) 32.0)
* * * * [misc]progress:  [ 42 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* (* (pow x (+ 3 1)) x) 32.0)))>
* * * * [misc]progress:  [ 43 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (85 enodes)
* * [misc]simplify:  iters left: 2 (137 enodes)
* * [misc]simplify:  iters left: 1 (173 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 32.0) (pow x (+ 1 3))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 44 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (85 enodes)
* * [misc]simplify:  iters left: 2 (137 enodes)
* * [misc]simplify:  iters left: 1 (173 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 32.0) (pow x (+ 1 3))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 45 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (85 enodes)
* * [misc]simplify:  iters left: 2 (137 enodes)
* * [misc]simplify:  iters left: 1 (173 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 32.0) (pow x (+ 1 3))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 46 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (85 enodes)
* * [misc]simplify:  iters left: 2 (137 enodes)
* * [misc]simplify:  iters left: 1 (173 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 32.0) (pow x (+ 1 3))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 47 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (85 enodes)
* * [misc]simplify:  iters left: 2 (137 enodes)
* * [misc]simplify:  iters left: 1 (173 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 32.0) (pow x (+ 1 3))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 48 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (85 enodes)
* * [misc]simplify:  iters left: 2 (137 enodes)
* * [misc]simplify:  iters left: 1 (173 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 32.0) (pow x (+ 1 3))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 49 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (53 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 5) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 50 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (53 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 5) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 51 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (exp (* 4 (- (log -1) (log (/ -1 x))))) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (exp (* 4 (- (log -1) (log (/ -1 x))))) x)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (205 enodes)
* * [misc]simplify:  iters left: 1 (364 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* -160.0 x) (* x x)) (* (pow x 4) (* x 32.0))) (* 120.0 x))
* * * * [misc]progress:  [ 52 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (53 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 5) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 53 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (53 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 5) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 54 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (exp (* 4 (- (log -1) (log (/ -1 x))))) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (exp (* 4 (- (log -1) (log (/ -1 x))))) x)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (205 enodes)
* * [misc]simplify:  iters left: 1 (364 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* -160.0 x) (* x x)) (* (pow x 4) (* x 32.0))) (* 120.0 x))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 2 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 2 2)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow x (+ 3 1)) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow x (+ 3 1)) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow x (+ 3 1)) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow x (+ 3 1)) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) x) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (pow x 4) 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 1) (* 0 0)) into (pow x 4)
* [misc]backup-simplify:  Simplify (log (pow x 4)) into (log (pow x 4))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log x) (log (pow x 4)))) into (* 1/3 (+ (log x) (log (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log x) (log (pow x 4))))) into (exp (* 1/3 (+ (log x) (log (pow x 4)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow x (+ 3 1)) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow x (+ 3 1)) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow x (+ 3 1)) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) x) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (pow x 4) 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 1) (* 0 0)) into (pow x 4)
* [misc]backup-simplify:  Simplify (log (pow x 4)) into (log (pow x 4))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log x) (log (pow x 4)))) into (* 1/3 (+ (log x) (log (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log x) (log (pow x 4))))) into (exp (* 1/3 (+ (log x) (log (pow x 4)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log x) (log (pow x 4))))) into (exp (* 1/3 (+ (log x) (log (pow x 4)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x 4) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log x) (log (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x 4) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x 4) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x 4) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x 4) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x 4) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x 4) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x 4) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow x 4) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow x 4) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow x 4) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow x 4) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x 4) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow x 4) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow x 4) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow x 4) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow x 4) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow x 4) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow x 4) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x 4) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow x 4) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow x 4) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow x 4) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log x) (log (pow x 4))))) into (exp (* 1/3 (+ (log x) (log (pow x 4)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -4) 1) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 4))) into (log (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 1 (pow x 4))) (log x))) into (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) into (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -4) 1) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 4))) into (log (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 1 (pow x 4))) (log x))) into (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) into (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) into (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (/ 1 (pow x 4))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 1 (pow x 4)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 1 (pow x 4)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ 1 (pow x 4)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (/ 1 (pow x 4)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (/ 1 (pow x 4)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (/ 1 (pow x 4)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (/ 1 (pow x 4)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (/ 1 (pow x 4)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (/ 1 (pow x 4)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow (/ 1 x) 4))) (log (/ 1 x))))) into (exp (* 1/3 (- (log (pow x 4)) (log (/ 1 x)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) -1) into (* -1 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -1 (exp (* 4 (- (log -1) (log x)))))) into (log (* -1 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))) into (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) -1) into (* -1 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -1 (exp (* 4 (- (log -1) (log x)))))) into (log (* -1 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))) into (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ 1 (- x)))))))) (log (/ 1 (- x)))))) into (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x)))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow x (+ 3 1)) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow x (+ 3 1)) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow x (+ 3 1)) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow x (+ 3 1)) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) x) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (pow x 4) 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 1) (* 0 0)) into (pow x 4)
* [misc]backup-simplify:  Simplify (log (pow x 4)) into (log (pow x 4))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log x) (log (pow x 4)))) into (* 1/3 (+ (log x) (log (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log x) (log (pow x 4))))) into (exp (* 1/3 (+ (log x) (log (pow x 4)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow x (+ 3 1)) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow x (+ 3 1)) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow x (+ 3 1)) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) x) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (pow x 4) 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 1) (* 0 0)) into (pow x 4)
* [misc]backup-simplify:  Simplify (log (pow x 4)) into (log (pow x 4))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log x) (log (pow x 4)))) into (* 1/3 (+ (log x) (log (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log x) (log (pow x 4))))) into (exp (* 1/3 (+ (log x) (log (pow x 4)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log x) (log (pow x 4))))) into (exp (* 1/3 (+ (log x) (log (pow x 4)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x 4) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log x) (log (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x 4) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x 4) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x 4) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x 4) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x 4) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x 4) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x 4) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow x 4) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow x 4) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow x 4) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow x 4) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x 4) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow x 4) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow x 4) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow x 4) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow x 4) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow x 4) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow x 4) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x 4) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow x 4) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow x 4) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow x 4) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log x) (log (pow x 4))))) into (exp (* 1/3 (+ (log x) (log (pow x 4)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -4) 1) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 4))) into (log (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 1 (pow x 4))) (log x))) into (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) into (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -4) 1) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 4))) into (log (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 1 (pow x 4))) (log x))) into (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) into (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) into (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (/ 1 (pow x 4))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 1 (pow x 4)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 1 (pow x 4)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ 1 (pow x 4)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (/ 1 (pow x 4)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (/ 1 (pow x 4)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (/ 1 (pow x 4)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (/ 1 (pow x 4)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (/ 1 (pow x 4)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (/ 1 (pow x 4)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow (/ 1 x) 4))) (log (/ 1 x))))) into (exp (* 1/3 (- (log (pow x 4)) (log (/ 1 x)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) -1) into (* -1 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -1 (exp (* 4 (- (log -1) (log x)))))) into (log (* -1 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))) into (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) -1) into (* -1 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -1 (exp (* 4 (- (log -1) (log x)))))) into (log (* -1 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))) into (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ 1 (- x)))))))) (log (/ 1 (- x)))))) into (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x)))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow x (+ 3 1)) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow x (+ 3 1)) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow x (+ 3 1)) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow x (+ 3 1)) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) x) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (pow x 4) 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 1) (* 0 0)) into (pow x 4)
* [misc]backup-simplify:  Simplify (log (pow x 4)) into (log (pow x 4))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log x) (log (pow x 4)))) into (* 1/3 (+ (log x) (log (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log x) (log (pow x 4))))) into (exp (* 1/3 (+ (log x) (log (pow x 4)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow x (+ 3 1)) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow x (+ 3 1)) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow x (+ 3 1)) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) x) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (pow x 4) 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 1) (* 0 0)) into (pow x 4)
* [misc]backup-simplify:  Simplify (log (pow x 4)) into (log (pow x 4))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log x) (log (pow x 4)))) into (* 1/3 (+ (log x) (log (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log x) (log (pow x 4))))) into (exp (* 1/3 (+ (log x) (log (pow x 4)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log x) (log (pow x 4))))) into (exp (* 1/3 (+ (log x) (log (pow x 4)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x 4) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log x) (log (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x 4) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x 4) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x 4) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x 4) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x 4) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x 4) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x 4) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow x 4) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow x 4) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow x 4) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow x 4) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x 4) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow x 4) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow x 4) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow x 4) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow x 4) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow x 4) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow x 4) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x 4) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow x 4) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow x 4) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow x 4) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log x) (log (pow x 4))))) into (exp (* 1/3 (+ (log x) (log (pow x 4)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -4) 1) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 4))) into (log (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 1 (pow x 4))) (log x))) into (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) into (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -4) 1) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 4))) into (log (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 1 (pow x 4))) (log x))) into (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) into (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) into (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (/ 1 (pow x 4))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 1 (pow x 4)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 1 (pow x 4)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ 1 (pow x 4)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (/ 1 (pow x 4)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (/ 1 (pow x 4)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (/ 1 (pow x 4)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (/ 1 (pow x 4)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (/ 1 (pow x 4)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (/ 1 (pow x 4)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow (/ 1 x) 4))) (log (/ 1 x))))) into (exp (* 1/3 (- (log (pow x 4)) (log (/ 1 x)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) -1) into (* -1 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -1 (exp (* 4 (- (log -1) (log x)))))) into (log (* -1 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))) into (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) -1) into (* -1 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -1 (exp (* 4 (- (log -1) (log x)))))) into (log (* -1 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))) into (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ 1 (- x)))))))) (log (/ 1 (- x)))))) into (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x)))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -160.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 160.0)
* [misc]backup-simplify:  Simplify (- 160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 160.0) (pow x 3)) into (* -160.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -160.0 (pow (/ 1 (/ 1 x)) 3)) into (* -160.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify 160.0 into 160.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 160.0 (pow (/ 1 (/ 1 (- x))) 3)) into (* -160.0 (pow x 3))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (pow (* (pow x (+ 3 1)) x) 1/3)))))>
* * * * [misc]progress:  [ 2 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (pow (cbrt (* (pow x (+ 3 1)) x)) 1)))))>
* * * * [misc]progress:  [ 3 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (exp (log (cbrt (* (pow x (+ 3 1)) x))))))))>
* [enter]simplify:  Simplifying (log (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (log (cbrt (* x (pow x (+ 3 1)))))
* * * * [misc]progress:  [ 4 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (log (exp (cbrt (* (pow x (+ 3 1)) x))))))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (exp (cbrt (* x (pow x (+ 3 1)))))
* * * * [misc]progress:  [ 5 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (* (cbrt (pow x (+ 3 1))) (cbrt x))))))>
* [enter]simplify:  Simplifying (cbrt (pow x (+ 3 1)))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* [exit]simplify:  Simplified to (cbrt (pow x (+ 3 1)))
* [exit]simplify:  Simplified to (cbrt (pow x (+ 3 1)))
* [enter]simplify:  Simplifying (cbrt x)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (cbrt x)
* [exit]simplify:  Simplified to (cbrt x)
* * * * [misc]progress:  [ 6 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (* (* (cbrt (cbrt (* (pow x (+ 3 1)) x))) (cbrt (cbrt (* (pow x (+ 3 1)) x)))) (cbrt (cbrt (* (pow x (+ 3 1)) x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (pow x (+ 3 1)) x))) (cbrt (cbrt (* (pow x (+ 3 1)) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* x (pow x (+ 3 1))))) (cbrt (cbrt (* x (pow x (+ 3 1))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* x (pow x (+ 3 1))))) (cbrt (cbrt (* x (pow x (+ 3 1))))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* x (pow x (+ 3 1)))))
* * * * [misc]progress:  [ 7 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* [exit]simplify:  Simplified to (* x (pow x (+ 3 1)))
* [exit]simplify:  Simplified to (* x (pow x (+ 3 1)))
* * * * [misc]progress:  [ 8 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (* (sqrt (cbrt (* (pow x (+ 3 1)) x))) (sqrt (cbrt (* (pow x (+ 3 1)) x))))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* x (pow x (+ 3 1)))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* x (pow x (+ 3 1)))))
* * * * [misc]progress:  [ 9 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (* 1 (cbrt (* (pow x (+ 3 1)) x)))))))>
* * * * [misc]progress:  [ 10 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (* (pow x (+ 3 1)) x) 1/3)) (cbrt (* (pow x (+ 3 1)) x))))))>
* * * * [misc]progress:  [ 11 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt (* (pow x (+ 3 1)) x)) 1)) (cbrt (* (pow x (+ 3 1)) x))))))>
* * * * [misc]progress:  [ 12 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (exp (log (cbrt (* (pow x (+ 3 1)) x))))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (log (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (log (cbrt (* x (pow x (+ 3 1)))))
* * * * [misc]progress:  [ 13 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (log (exp (cbrt (* (pow x (+ 3 1)) x))))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (exp (cbrt (* x (pow x (+ 3 1)))))
* * * * [misc]progress:  [ 14 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (* (cbrt (pow x (+ 3 1))) (cbrt x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (cbrt (pow x (+ 3 1)))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* [exit]simplify:  Simplified to (cbrt (pow x (+ 3 1)))
* [exit]simplify:  Simplified to (cbrt (pow x (+ 3 1)))
* [enter]simplify:  Simplifying (cbrt x)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (cbrt x)
* [exit]simplify:  Simplified to (cbrt x)
* * * * [misc]progress:  [ 15 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (* (* (cbrt (cbrt (* (pow x (+ 3 1)) x))) (cbrt (cbrt (* (pow x (+ 3 1)) x)))) (cbrt (cbrt (* (pow x (+ 3 1)) x))))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (pow x (+ 3 1)) x))) (cbrt (cbrt (* (pow x (+ 3 1)) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* x (pow x (+ 3 1))))) (cbrt (cbrt (* x (pow x (+ 3 1))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* x (pow x (+ 3 1))))) (cbrt (cbrt (* x (pow x (+ 3 1))))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* x (pow x (+ 3 1)))))
* * * * [misc]progress:  [ 16 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* [exit]simplify:  Simplified to (* x (pow x (+ 3 1)))
* [exit]simplify:  Simplified to (* x (pow x (+ 3 1)))
* * * * [misc]progress:  [ 17 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (* (sqrt (cbrt (* (pow x (+ 3 1)) x))) (sqrt (cbrt (* (pow x (+ 3 1)) x))))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* x (pow x (+ 3 1)))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* x (pow x (+ 3 1)))))
* * * * [misc]progress:  [ 18 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (* 1 (cbrt (* (pow x (+ 3 1)) x)))) (cbrt (* (pow x (+ 3 1)) x))))))>
* * * * [misc]progress:  [ 19 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow (* (pow x (+ 3 1)) x) 1/3) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* * * * [misc]progress:  [ 20 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow (cbrt (* (pow x (+ 3 1)) x)) 1) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* * * * [misc]progress:  [ 21 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (exp (log (cbrt (* (pow x (+ 3 1)) x)))) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (log (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (log (cbrt (* x (pow x (+ 3 1)))))
* * * * [misc]progress:  [ 22 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (log (exp (cbrt (* (pow x (+ 3 1)) x)))) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (exp (cbrt (* x (pow x (+ 3 1)))))
* * * * [misc]progress:  [ 23 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (cbrt (pow x (+ 3 1))) (cbrt x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (cbrt (pow x (+ 3 1)))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* [exit]simplify:  Simplified to (cbrt (pow x (+ 3 1)))
* [exit]simplify:  Simplified to (cbrt (pow x (+ 3 1)))
* [enter]simplify:  Simplifying (cbrt x)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (cbrt x)
* [exit]simplify:  Simplified to (cbrt x)
* * * * [misc]progress:  [ 24 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* (cbrt (cbrt (* (pow x (+ 3 1)) x))) (cbrt (cbrt (* (pow x (+ 3 1)) x)))) (cbrt (cbrt (* (pow x (+ 3 1)) x)))) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (pow x (+ 3 1)) x))) (cbrt (cbrt (* (pow x (+ 3 1)) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* x (pow x (+ 3 1))))) (cbrt (cbrt (* x (pow x (+ 3 1))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* x (pow x (+ 3 1))))) (cbrt (cbrt (* x (pow x (+ 3 1))))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* x (pow x (+ 3 1)))))
* * * * [misc]progress:  [ 25 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x)))) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* [exit]simplify:  Simplified to (* x (pow x (+ 3 1)))
* [exit]simplify:  Simplified to (* x (pow x (+ 3 1)))
* * * * [misc]progress:  [ 26 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (sqrt (cbrt (* (pow x (+ 3 1)) x))) (sqrt (cbrt (* (pow x (+ 3 1)) x)))) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* x (pow x (+ 3 1)))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* x (pow x (+ 3 1)))))
* * * * [misc]progress:  [ 27 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* 1 (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* * * * [misc]progress:  [ 28 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (pow (* -160.0 (* (* x x) x)) 1)) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* * * * [misc]progress:  [ 29 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (exp (log (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (log (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (* -160.0 x)))
* [exit]simplify:  Simplified to (log (* (* x x) (* -160.0 x)))
* * * * [misc]progress:  [ 30 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (log (exp (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (exp (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* * * * [misc]progress:  [ 31 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* (cbrt (* -160.0 (* (* x x) x))) (cbrt (* -160.0 (* (* x x) x)))) (cbrt (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* -160.0 (* (* x x) x))) (cbrt (* -160.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* -160.0 x) (* x x))) (cbrt (* (* -160.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* -160.0 x) (* x x))) (cbrt (* (* -160.0 x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* -160.0 x) (* x x)))
* * * * [misc]progress:  [ 32 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (cbrt (* (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))) (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (* (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))) (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (210 enodes)
* [exit]simplify:  Simplified to (pow (* (* -160.0 x) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (* -160.0 x) (* x x)) 3)
* * * * [misc]progress:  [ 33 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (sqrt (* -160.0 (* (* x x) x))) (sqrt (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (sqrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* * * * [misc]progress:  [ 34 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* 1 (* -160.0 (* (* x x) x)))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* * * * [misc]progress:  [ 35 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* -160.0 (* x x)) x)) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (* -160.0 (* x x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* -160.0 (* x x))
* [exit]simplify:  Simplified to (* -160.0 (* x x))
* * * * [misc]progress:  [ 36 / 48 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* (* x x) x) -160.0)) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* * * * [misc]progress:  [ 37 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (exp (* 1/3 (+ (log x) (log (pow x 4)))))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (exp (* 1/3 (+ (log x) (log (pow x 4))))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (167 enodes)
* * [misc]simplify:  iters left: 2 (262 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 38 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (exp (* 1/3 (- (log (pow x 4)) (log (/ 1 x)))))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (exp (* 1/3 (- (log (pow x 4)) (log (/ 1 x))))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (157 enodes)
* * [misc]simplify:  iters left: 2 (262 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (pow x (+ (+ 3 1) 1))) 32.0) (* (pow (cbrt x) (+ 4 1)) (cbrt (pow x (+ (+ 3 1) 1))))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 39 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x)))))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x))))))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (130 enodes)
* * [misc]simplify:  iters left: 3 (227 enodes)
* * [misc]simplify:  iters left: 2 (492 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* (cbrt (pow x (+ (+ 3 1) 1))) (cbrt (* (pow x 4) x))) (* (cbrt (pow x (+ (+ 3 1) 1))) 32.0)))
* * * * [misc]progress:  [ 40 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (exp (* 1/3 (+ (log x) (log (pow x 4)))))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (exp (* 1/3 (+ (log x) (log (pow x 4)))))) (cbrt (* (pow x (+ 3 1)) x)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (161 enodes)
* * [misc]simplify:  iters left: 2 (239 enodes)
* * [misc]simplify:  iters left: 1 (325 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (* 32.0 (pow (cbrt x) (+ 4 1)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 41 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (exp (* 1/3 (- (log (pow x 4)) (log (/ 1 x)))))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (exp (* 1/3 (- (log (pow x 4)) (log (/ 1 x)))))) (cbrt (* (pow x (+ 3 1)) x)))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (154 enodes)
* * [misc]simplify:  iters left: 2 (260 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (pow x (+ (+ 3 1) 1))) 32.0) (* (cbrt (pow x (+ (+ 3 1) 1))) (pow (cbrt x) (+ 1 4)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 42 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x)))))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x)))))) (cbrt (* (pow x (+ 3 1)) x)))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (224 enodes)
* * [misc]simplify:  iters left: 2 (478 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* (* (cbrt (* x (pow x 4))) 32.0) (cbrt (pow x (+ (+ 3 1) 1)))) (cbrt (pow x (+ (+ 3 1) 1)))))
* * * * [misc]progress:  [ 43 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (166 enodes)
* * [misc]simplify:  iters left: 2 (251 enodes)
* * [misc]simplify:  iters left: 1 (330 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (pow x (+ 1 (+ 1 3)))) (* (cbrt (pow x (+ 1 (+ 1 3)))) (* (pow (cbrt x) (+ 4 1)) 32.0))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 44 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (exp (* 1/3 (- (log (pow x 4)) (log (/ 1 x))))) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (exp (* 1/3 (- (log (pow x 4)) (log (/ 1 x))))) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x)))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (106 enodes)
* * [misc]simplify:  iters left: 3 (160 enodes)
* * [misc]simplify:  iters left: 2 (261 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (pow x (+ 3 (+ 1 1)))) (* (cbrt (pow x (+ 3 (+ 1 1)))) (* 32.0 (pow (cbrt x) (+ 4 1))))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 45 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x))))) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x))))) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x)))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* * [misc]simplify:  iters left: 3 (227 enodes)
* * [misc]simplify:  iters left: 2 (476 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* 32.0 (cbrt (* x (pow x 4)))) (* (cbrt (pow x (+ (+ 3 1) 1))) (cbrt (pow x (+ (+ 3 1) 1))))))
* * * * [misc]progress:  [ 46 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (80 enodes)
* * [misc]simplify:  iters left: 2 (95 enodes)
* * [misc]simplify:  iters left: 1 (115 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* -160.0 x) (* x x)) (* 120.0 x)) (* (* x 32.0) (pow x (+ 1 3))))
* * * * [misc]progress:  [ 47 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (80 enodes)
* * [misc]simplify:  iters left: 2 (95 enodes)
* * [misc]simplify:  iters left: 1 (115 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* -160.0 x) (* x x)) (* 120.0 x)) (* (* x 32.0) (pow x (+ 1 3))))
* * * * [misc]progress:  [ 48 / 48 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (80 enodes)
* * [misc]simplify:  iters left: 2 (95 enodes)
* * [misc]simplify:  iters left: 1 (115 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* -160.0 x) (* x x)) (* 120.0 x)) (* (* x 32.0) (pow x (+ 1 3))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2 1)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow x (+ 3 1)) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow x (+ 3 1)) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow x (+ 3 1)) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow x (+ 3 1)) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) x) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (pow x 4) 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 1) (* 0 0)) into (pow x 4)
* [misc]backup-simplify:  Simplify (log (pow x 4)) into (log (pow x 4))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log x) (log (pow x 4)))) into (* 1/3 (+ (log x) (log (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log x) (log (pow x 4))))) into (exp (* 1/3 (+ (log x) (log (pow x 4)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow x (+ 3 1)) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow x (+ 3 1)) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow x (+ 3 1)) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) x) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (pow x 4) 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 1) (* 0 0)) into (pow x 4)
* [misc]backup-simplify:  Simplify (log (pow x 4)) into (log (pow x 4))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log x) (log (pow x 4)))) into (* 1/3 (+ (log x) (log (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log x) (log (pow x 4))))) into (exp (* 1/3 (+ (log x) (log (pow x 4)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log x) (log (pow x 4))))) into (exp (* 1/3 (+ (log x) (log (pow x 4)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x 4) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log x) (log (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x 4) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x 4) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x 4) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x 4) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x 4) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x 4) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x 4) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow x 4) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow x 4) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow x 4) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow x 4) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x 4) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow x 4) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow x 4) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow x 4) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow x 4) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow x 4) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow x 4) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x 4) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow x 4) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow x 4) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow x 4) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log x) (log (pow x 4))))) into (exp (* 1/3 (+ (log x) (log (pow x 4)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -4) 1) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 4))) into (log (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 1 (pow x 4))) (log x))) into (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) into (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -4) 1) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 4))) into (log (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 1 (pow x 4))) (log x))) into (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) into (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) into (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (/ 1 (pow x 4))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 1 (pow x 4)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 1 (pow x 4)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ 1 (pow x 4)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (/ 1 (pow x 4)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (/ 1 (pow x 4)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (/ 1 (pow x 4)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (/ 1 (pow x 4)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (/ 1 (pow x 4)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (/ 1 (pow x 4)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow (/ 1 x) 4))) (log (/ 1 x))))) into (exp (* 1/3 (- (log (pow x 4)) (log (/ 1 x)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) -1) into (* -1 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -1 (exp (* 4 (- (log -1) (log x)))))) into (log (* -1 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))) into (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) -1) into (* -1 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -1 (exp (* 4 (- (log -1) (log x)))))) into (log (* -1 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))) into (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ 1 (- x)))))))) (log (/ 1 (- x)))))) into (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x)))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow x (+ 3 1)) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow x (+ 3 1)) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow x (+ 3 1)) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow x (+ 3 1)) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) x) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (pow x 4) 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 1) (* 0 0)) into (pow x 4)
* [misc]backup-simplify:  Simplify (log (pow x 4)) into (log (pow x 4))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log x) (log (pow x 4)))) into (* 1/3 (+ (log x) (log (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log x) (log (pow x 4))))) into (exp (* 1/3 (+ (log x) (log (pow x 4)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow x (+ 3 1)) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow x (+ 3 1)) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow x (+ 3 1)) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) x) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (pow x 4) 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 1) (* 0 0)) into (pow x 4)
* [misc]backup-simplify:  Simplify (log (pow x 4)) into (log (pow x 4))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log x) (log (pow x 4)))) into (* 1/3 (+ (log x) (log (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log x) (log (pow x 4))))) into (exp (* 1/3 (+ (log x) (log (pow x 4)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log x) (log (pow x 4))))) into (exp (* 1/3 (+ (log x) (log (pow x 4)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x 4) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log x) (log (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x 4) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x 4) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x 4) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x 4) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x 4) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x 4) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x 4) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow x 4) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow x 4) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow x 4) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow x 4) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x 4) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow x 4) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow x 4) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow x 4) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow x 4) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow x 4) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow x 4) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x 4) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow x 4) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow x 4) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow x 4) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log x) (log (pow x 4))))) into (exp (* 1/3 (+ (log x) (log (pow x 4)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -4) 1) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 4))) into (log (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 1 (pow x 4))) (log x))) into (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) into (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -4) 1) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 4))) into (log (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 1 (pow x 4))) (log x))) into (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) into (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) into (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (/ 1 (pow x 4))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 1 (pow x 4)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 1 (pow x 4)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ 1 (pow x 4)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (/ 1 (pow x 4)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (/ 1 (pow x 4)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (/ 1 (pow x 4)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (/ 1 (pow x 4)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (/ 1 (pow x 4)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (/ 1 (pow x 4)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow (/ 1 x) 4))) (log (/ 1 x))))) into (exp (* 1/3 (- (log (pow x 4)) (log (/ 1 x)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) -1) into (* -1 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -1 (exp (* 4 (- (log -1) (log x)))))) into (log (* -1 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))) into (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) -1) into (* -1 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -1 (exp (* 4 (- (log -1) (log x)))))) into (log (* -1 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))) into (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ 1 (- x)))))))) (log (/ 1 (- x)))))) into (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x)))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (pow (cbrt x) (+ 1 4)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (cbrt x) (+ 1 4)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 4) (log (cbrt x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 4) (log (cbrt x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 4) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (cbrt x)) in x
* [misc]taylor:  Taking taylor expansion of (cbrt x) in x
* [misc]taylor:  Rewrote expression to (pow x 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log x)) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 1/3 (log x)) into (* 1/3 (log x))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log x))) into (pow x 1/3)
* [misc]backup-simplify:  Simplify (log (pow x 1/3)) into (log (pow x 1/3))
* [misc]backup-simplify:  Simplify (+ 1 4) into 5
* [misc]backup-simplify:  Simplify (* 5 (log (pow x 1/3))) into (* 5 (log (pow x 1/3)))
* [misc]backup-simplify:  Simplify (exp (* 5 (log (pow x 1/3)))) into (pow (pow x 1/3) 5)
* [misc]taylor:  Taking taylor expansion of (pow (cbrt x) (+ 1 4)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 4) (log (cbrt x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 4) (log (cbrt x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 4) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (cbrt x)) in x
* [misc]taylor:  Taking taylor expansion of (cbrt x) in x
* [misc]taylor:  Rewrote expression to (pow x 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log x)) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 1/3 (log x)) into (* 1/3 (log x))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log x))) into (pow x 1/3)
* [misc]backup-simplify:  Simplify (log (pow x 1/3)) into (log (pow x 1/3))
* [misc]backup-simplify:  Simplify (+ 1 4) into 5
* [misc]backup-simplify:  Simplify (* 5 (log (pow x 1/3))) into (* 5 (log (pow x 1/3)))
* [misc]backup-simplify:  Simplify (exp (* 5 (log (pow x 1/3)))) into (pow (pow x 1/3) 5)
* [misc]backup-simplify:  Simplify (pow (pow x 1/3) 5) into (pow (pow x 1/3) 5)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x 1/3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5 0) (* 0 (log (pow x 1/3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log (pow x 1/3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x 1/3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x 1/3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (* 0 (log (pow x 1/3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log (pow x 1/3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x 1/3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x 1/3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x 1/3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x 1/3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log (pow x 1/3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x 1/3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x 1/3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x 1/3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x 1/3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x 1/3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x 1/3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log (pow x 1/3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow x 1/3) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow x 1/3) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow x 1/3) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow x 1/3) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x 1/3) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow x 1/3) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow x 1/3) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x 1/3)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log (pow x 1/3)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow x 1/3) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow x 1/3) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow x 1/3) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow x 1/3) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow x 1/3) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x 1/3) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow x 1/3) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow x 1/3) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow x 1/3) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow x 1/3) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow x 1/3) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x 1/3))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log (pow x 1/3)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (pow x 1/3) 5) into (pow (pow x 1/3) 5)
* [misc]approximate:  Taking taylor expansion of (pow (cbrt (/ 1 x)) (+ 1 4)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (cbrt (/ 1 x)) (+ 1 4)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 4) (log (cbrt (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 4) (log (cbrt (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 4) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (cbrt (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (/ 1 x)) in x
* [misc]taylor:  Rewrote expression to (pow (/ 1 x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log x))) into (* -1/3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -1/3 (log x))) into (pow x -1/3)
* [misc]backup-simplify:  Simplify (log (pow x -1/3)) into (log (pow x -1/3))
* [misc]backup-simplify:  Simplify (+ 1 4) into 5
* [misc]backup-simplify:  Simplify (* 5 (log (pow x -1/3))) into (* 5 (log (pow x -1/3)))
* [misc]backup-simplify:  Simplify (exp (* 5 (log (pow x -1/3)))) into (pow (pow x -1/3) 5)
* [misc]taylor:  Taking taylor expansion of (pow (cbrt (/ 1 x)) (+ 1 4)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 4) (log (cbrt (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 4) (log (cbrt (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 4) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (cbrt (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (/ 1 x)) in x
* [misc]taylor:  Rewrote expression to (pow (/ 1 x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log x))) into (* -1/3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -1/3 (log x))) into (pow x -1/3)
* [misc]backup-simplify:  Simplify (log (pow x -1/3)) into (log (pow x -1/3))
* [misc]backup-simplify:  Simplify (+ 1 4) into 5
* [misc]backup-simplify:  Simplify (* 5 (log (pow x -1/3))) into (* 5 (log (pow x -1/3)))
* [misc]backup-simplify:  Simplify (exp (* 5 (log (pow x -1/3)))) into (pow (pow x -1/3) 5)
* [misc]backup-simplify:  Simplify (pow (pow x -1/3) 5) into (pow (pow x -1/3) 5)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1/3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -1/3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5 0) (* 0 (log (pow x -1/3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log (pow x -1/3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1/3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -1/3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -1/3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (* 0 (log (pow x -1/3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log (pow x -1/3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1/3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -1/3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -1/3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -1/3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -1/3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log (pow x -1/3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1/3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -1/3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -1/3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -1/3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -1/3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -1/3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -1/3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log (pow x -1/3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1/3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow x -1/3) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow x -1/3) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow x -1/3) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow x -1/3) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x -1/3) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow x -1/3) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow x -1/3) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -1/3)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log (pow x -1/3)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1/3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow x -1/3) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow x -1/3) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow x -1/3) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow x -1/3) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow x -1/3) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x -1/3) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow x -1/3) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow x -1/3) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow x -1/3) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow x -1/3) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow x -1/3) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -1/3))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log (pow x -1/3)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (pow (/ 1 x) -1/3) 5) into (pow (pow (/ 1 x) -1/3) 5)
* [misc]approximate:  Taking taylor expansion of (pow (cbrt (/ 1 (- x))) (+ 1 4)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (cbrt (/ 1 (- x))) (+ 1 4)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 4) (log (cbrt (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 4) (log (cbrt (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 4) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (cbrt (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (/ 1 (- x))) in x
* [misc]taylor:  Rewrote expression to (pow (/ 1 (- x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -1) (log x))) into (* 1/3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -1) (log x)))) into (exp (* 1/3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log -1) (log x))))) into (* 1/3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (+ 1 4) into 5
* [misc]backup-simplify:  Simplify (* 5 (* 1/3 (- (log -1) (log x)))) into (* 5/3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 5/3 (- (log -1) (log x)))) into (exp (* 5/3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (cbrt (/ 1 (- x))) (+ 1 4)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 4) (log (cbrt (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 4) (log (cbrt (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 4) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (cbrt (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (/ 1 (- x))) in x
* [misc]taylor:  Rewrote expression to (pow (/ 1 (- x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -1) (log x))) into (* 1/3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -1) (log x)))) into (exp (* 1/3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 1/3 (- (log -1) (log x))))) into (* 1/3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (+ 1 4) into 5
* [misc]backup-simplify:  Simplify (* 5 (* 1/3 (- (log -1) (log x)))) into (* 5/3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 5/3 (- (log -1) (log x)))) into (exp (* 5/3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 5/3 (- (log -1) (log x)))) into (exp (* 5/3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 1/3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5 0) (* 0 (* 1/3 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 1/3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 1/3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (* 0 (* 1/3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 1/3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 1/3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 1/3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 1/3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 1/3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 1/3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 1/3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 1/3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (* 1/3 (- (log -1) (log x)))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (* 1/3 (- (log -1) (log x)))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (* 1/3 (- (log -1) (log x)))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log -1) (log x)))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (* 1/3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 1/3 (- (log -1) (log x)))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 1/3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (* 1/3 (- (log -1) (log x)))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (* 1/3 (- (log -1) (log x)))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (* 1/3 (- (log -1) (log x)))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log -1) (log x)))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (* 1/3 (- (log -1) (log x)))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 1/3 (- (log -1) (log x)))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (* 1/3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (* 1/3 (- (log -1) (log x)))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (* 1/3 (- (log -1) (log x)))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 1/3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (* 1/3 (- (log -1) (log x)))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 1/3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 5/3 (- (log -1) (log (/ 1 (- x)))))) into (exp (* 5/3 (- (log -1) (log (/ -1 x)))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* (pow x (+ 3 1)) x)) 32.0) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (pow x (+ 3 1)) x)) 32.0) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow x (+ 3 1)) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow x (+ 3 1)) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow x (+ 3 1)) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) x) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (pow x 4) 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 1) (* 0 0)) into (pow x 4)
* [misc]backup-simplify:  Simplify (log (pow x 4)) into (log (pow x 4))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log x) (log (pow x 4)))) into (* 1/3 (+ (log x) (log (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log x) (log (pow x 4))))) into (exp (* 1/3 (+ (log x) (log (pow x 4)))))
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (pow x (+ 3 1)) x)) 32.0) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow x (+ 3 1)) x) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow x (+ 3 1)) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow x (+ 3 1)) x))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x (+ 3 1)) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) x) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (pow x 4) 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 1) (* 0 0)) into (pow x 4)
* [misc]backup-simplify:  Simplify (log (pow x 4)) into (log (pow x 4))
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log x) (log (pow x 4)))) into (* 1/3 (+ (log x) (log (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log x) (log (pow x 4))))) into (exp (* 1/3 (+ (log x) (log (pow x 4)))))
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) 32.0) into (* 32.0 (exp (* 1/3 (+ (log x) (log (pow x 4))))))
* [misc]backup-simplify:  Simplify (* 32.0 (exp (* 1/3 (+ (log x) (log (pow x 4)))))) into (* 32.0 (exp (* 1/3 (+ (log x) (log (pow x 4))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x 4) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log x) (log (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) 0) (* 0 32.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x 4) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x 4) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) 0) (+ (* 0 0) (* 0 32.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x 4) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x 4) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x 4) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x 4) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x 4) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow x 4) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow x 4) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow x 4) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow x 4) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x 4) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow x 4) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow x 4) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow x 4) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow x 4) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow x 4) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow x 4) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x 4) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow x 4) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow x 4) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow x 4) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) (log (pow x 4))) into (+ (log x) (log (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log x) (log (pow x 4)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 32.0 (exp (* 1/3 (+ (log x) (log (pow x 4)))))) into (* 32.0 (exp (* 1/3 (+ (log x) (log (pow x 4))))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) 32.0) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) 32.0) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -4) 1) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 4))) into (log (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 1 (pow x 4))) (log x))) into (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) into (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x))))
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) 32.0) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) (+ 3 1)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -4) 1) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 4))) into (log (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 1 (pow x 4))) (log x))) into (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) into (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x))))
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) 32.0) into (* 32.0 (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))))
* [misc]backup-simplify:  Simplify (* 32.0 (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x))))) into (* 32.0 (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (/ 1 (pow x 4))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) 0) (* 0 32.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) 0) (+ (* 0 0) (* 0 32.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 1 (pow x 4)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 1 (pow x 4)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ 1 (pow x 4)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (/ 1 (pow x 4)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (/ 1 (pow x 4)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (/ 1 (pow x 4)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (/ 1 (pow x 4)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (/ 1 (pow x 4)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (/ 1 (pow x 4)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (/ 1 (pow x 4)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (/ 1 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (/ 1 (pow x 4)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 1 (pow x 4)))) into (- (log (/ 1 (pow x 4))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 4))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (/ 1 (pow x 4))) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 32.0 (exp (* 1/3 (- (log (/ 1 (pow (/ 1 x) 4))) (log (/ 1 x)))))) into (* 32.0 (exp (* 1/3 (- (log (pow x 4)) (log (/ 1 x))))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) 32.0) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) 32.0) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) -1) into (* -1 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -1 (exp (* 4 (- (log -1) (log x)))))) into (log (* -1 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))) into (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) 32.0) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) -1) into (* -1 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -1 (exp (* 4 (- (log -1) (log x)))))) into (log (* -1 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))) into (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) 32.0) into (* 32.0 (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))))
* [misc]backup-simplify:  Simplify (* 32.0 (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))) into (* 32.0 (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) 0) (* 0 32.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) 0) (+ (* 0 0) (* 0 32.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* -1 (exp (* 4 (- (log -1) (log x))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -1 (exp (* 4 (- (log -1) (log x))))))) into (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log x)))))) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 32.0 (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ 1 (- x)))))))) (log (/ 1 (- x))))))) into (* 32.0 (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x))))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (pow (* (pow x (+ 3 1)) x) 1/3) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* * * * [misc]progress:  [ 2 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (pow (cbrt (* (pow x (+ 3 1)) x)) 1) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* * * * [misc]progress:  [ 3 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (exp (log (cbrt (* (pow x (+ 3 1)) x)))) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (log (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (log (cbrt (* x (pow x (+ 3 1)))))
* * * * [misc]progress:  [ 4 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (log (exp (cbrt (* (pow x (+ 3 1)) x)))) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (exp (cbrt (* x (pow x (+ 3 1)))))
* * * * [misc]progress:  [ 5 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (* (cbrt (pow x (+ 3 1))) (cbrt x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (cbrt (pow x (+ 3 1)))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* [exit]simplify:  Simplified to (cbrt (pow x (+ 3 1)))
* [exit]simplify:  Simplified to (cbrt (pow x (+ 3 1)))
* [enter]simplify:  Simplifying (cbrt x)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (cbrt x)
* [exit]simplify:  Simplified to (cbrt x)
* * * * [misc]progress:  [ 6 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (* (* (cbrt (cbrt (* (pow x (+ 3 1)) x))) (cbrt (cbrt (* (pow x (+ 3 1)) x)))) (cbrt (cbrt (* (pow x (+ 3 1)) x)))) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (pow x (+ 3 1)) x))) (cbrt (cbrt (* (pow x (+ 3 1)) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* x (pow x (+ 3 1))))) (cbrt (cbrt (* x (pow x (+ 3 1))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* x (pow x (+ 3 1))))) (cbrt (cbrt (* x (pow x (+ 3 1))))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* x (pow x (+ 3 1)))))
* * * * [misc]progress:  [ 7 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (cbrt (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x)))) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* [exit]simplify:  Simplified to (* x (pow x (+ 3 1)))
* [exit]simplify:  Simplified to (* x (pow x (+ 3 1)))
* * * * [misc]progress:  [ 8 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (* (sqrt (cbrt (* (pow x (+ 3 1)) x))) (sqrt (cbrt (* (pow x (+ 3 1)) x)))) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* x (pow x (+ 3 1)))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* x (pow x (+ 3 1)))))
* * * * [misc]progress:  [ 9 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (* 1 (cbrt (* (pow x (+ 3 1)) x))) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* * * * [misc]progress:  [ 10 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow (* (pow x (+ 3 1)) x) 1/3) (pow (cbrt x) (+ 1 4))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* * * * [misc]progress:  [ 11 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (pow (cbrt (* (pow x (+ 3 1)) x)) 1) (pow (cbrt x) (+ 1 4))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* * * * [misc]progress:  [ 12 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (exp (log (cbrt (* (pow x (+ 3 1)) x)))) (pow (cbrt x) (+ 1 4))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (log (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (log (cbrt (* x (pow x (+ 3 1)))))
* * * * [misc]progress:  [ 13 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (log (exp (cbrt (* (pow x (+ 3 1)) x)))) (pow (cbrt x) (+ 1 4))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (exp (cbrt (* x (pow x (+ 3 1)))))
* * * * [misc]progress:  [ 14 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (* (cbrt (pow x (+ 3 1))) (cbrt x)) (pow (cbrt x) (+ 1 4))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (cbrt (pow x (+ 3 1)))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* [exit]simplify:  Simplified to (cbrt (pow x (+ 3 1)))
* [exit]simplify:  Simplified to (cbrt (pow x (+ 3 1)))
* [enter]simplify:  Simplifying (cbrt x)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (cbrt x)
* [exit]simplify:  Simplified to (cbrt x)
* * * * [misc]progress:  [ 15 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (* (* (cbrt (cbrt (* (pow x (+ 3 1)) x))) (cbrt (cbrt (* (pow x (+ 3 1)) x)))) (cbrt (cbrt (* (pow x (+ 3 1)) x)))) (pow (cbrt x) (+ 1 4))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (pow x (+ 3 1)) x))) (cbrt (cbrt (* (pow x (+ 3 1)) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* x (pow x (+ 3 1))))) (cbrt (cbrt (* x (pow x (+ 3 1))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* x (pow x (+ 3 1))))) (cbrt (cbrt (* x (pow x (+ 3 1))))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* x (pow x (+ 3 1)))))
* * * * [misc]progress:  [ 16 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x)))) (pow (cbrt x) (+ 1 4))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (pow x (+ 3 1)) x))) (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* [exit]simplify:  Simplified to (* x (pow x (+ 3 1)))
* [exit]simplify:  Simplified to (* x (pow x (+ 3 1)))
* * * * [misc]progress:  [ 17 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (* (sqrt (cbrt (* (pow x (+ 3 1)) x))) (sqrt (cbrt (* (pow x (+ 3 1)) x)))) (pow (cbrt x) (+ 1 4))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* x (pow x (+ 3 1)))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow x (+ 3 1)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* x (pow x (+ 3 1)))))
* * * * [misc]progress:  [ 18 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (* 1 (cbrt (* (pow x (+ 3 1)) x))) (pow (cbrt x) (+ 1 4))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* * * * [misc]progress:  [ 19 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (exp (* (log (cbrt x)) (+ 1 4)))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (* (log (cbrt x)) (+ 1 4))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (60 enodes)
* [exit]simplify:  Simplified to (* (+ 4 1) (log (cbrt x)))
* [exit]simplify:  Simplified to (* (+ 4 1) (log (cbrt x)))
* * * * [misc]progress:  [ 20 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (exp (* (log (cbrt x)) (+ 1 4)))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (* (log (cbrt x)) (+ 1 4))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (60 enodes)
* [exit]simplify:  Simplified to (* (+ 4 1) (log (cbrt x)))
* [exit]simplify:  Simplified to (* (+ 4 1) (log (cbrt x)))
* * * * [misc]progress:  [ 21 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow x (* 1/3 (+ 1 4)))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (* 1/3 (+ 1 4))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (+ 1/3 (* 1/3 4))
* [exit]simplify:  Simplified to (+ 1/3 (* 1/3 4))
* * * * [misc]progress:  [ 22 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (* 1 (+ 1 4)))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (* 1 (+ 1 4))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (+ 4 1)
* [exit]simplify:  Simplified to (+ 4 1)
* * * * [misc]progress:  [ 23 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (pow (cbrt x) (* (cbrt (+ 1 4)) (cbrt (+ 1 4)))) (cbrt (+ 1 4)))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (pow (cbrt x) (* (cbrt (+ 1 4)) (cbrt (+ 1 4))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (pow (cbrt x) (* (cbrt (+ 4 1)) (cbrt (+ 4 1))))
* [exit]simplify:  Simplified to (pow (cbrt x) (* (cbrt (+ 4 1)) (cbrt (+ 4 1))))
* * * * [misc]progress:  [ 24 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (pow (cbrt x) (sqrt (+ 1 4))) (sqrt (+ 1 4)))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (pow (cbrt x) (sqrt (+ 1 4)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (pow (cbrt x) (sqrt (+ 4 1)))
* [exit]simplify:  Simplified to (pow (cbrt x) (sqrt (+ 4 1)))
* * * * [misc]progress:  [ 25 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (pow (cbrt x) 1) (+ 1 4))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (pow (cbrt x) 1)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (cbrt x)
* [exit]simplify:  Simplified to (cbrt x)
* * * * [misc]progress:  [ 26 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (* (pow (cbrt x) 1) (pow (cbrt x) 4))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (pow (cbrt x) 1)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (cbrt x)
* [exit]simplify:  Simplified to (cbrt x)
* [enter]simplify:  Simplifying (pow (cbrt x) 4)
* * [misc]simplify:  iters left: 2 (4 enodes)
* [exit]simplify:  Simplified to (pow (cbrt x) 4)
* [exit]simplify:  Simplified to (pow (cbrt x) 4)
* * * * [misc]progress:  [ 27 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (* (pow (* (cbrt (cbrt x)) (cbrt (cbrt x))) (+ 1 4)) (pow (cbrt (cbrt x)) (+ 1 4)))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (cbrt x)) (cbrt (cbrt x))) (+ 1 4))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (cbrt x)) (cbrt (cbrt x))) (+ 1 4))
* [exit]simplify:  Simplified to (pow (* (cbrt (cbrt x)) (cbrt (cbrt x))) (+ 1 4))
* [enter]simplify:  Simplifying (pow (cbrt (cbrt x)) (+ 1 4))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (cbrt x)) (+ 1 4))
* [exit]simplify:  Simplified to (pow (cbrt (cbrt x)) (+ 1 4))
* * * * [misc]progress:  [ 28 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (* (pow (sqrt (cbrt x)) (+ 1 4)) (pow (sqrt (cbrt x)) (+ 1 4)))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (pow (sqrt (cbrt x)) (+ 1 4))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (cbrt x)) (+ 1 4))
* [exit]simplify:  Simplified to (pow (sqrt (cbrt x)) (+ 1 4))
* [enter]simplify:  Simplifying (pow (sqrt (cbrt x)) (+ 1 4))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (cbrt x)) (+ 1 4))
* [exit]simplify:  Simplified to (pow (sqrt (cbrt x)) (+ 1 4))
* * * * [misc]progress:  [ 29 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (* (pow 1 (+ 1 4)) (pow (cbrt x) (+ 1 4)))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (pow 1 (+ 1 4))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (cbrt x) (+ 1 4))
* * [misc]simplify:  iters left: 3 (6 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (pow (cbrt x) (+ 4 1))
* [exit]simplify:  Simplified to (pow (cbrt x) (+ 4 1))
* * * * [misc]progress:  [ 30 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (pow (cbrt x) (+ 1 4)) 1)) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* * * * [misc]progress:  [ 31 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (exp (log (pow (cbrt x) (+ 1 4))))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (log (pow (cbrt x) (+ 1 4)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (+ 4 1) (log (cbrt x)))
* [exit]simplify:  Simplified to (* (+ 4 1) (log (cbrt x)))
* * * * [misc]progress:  [ 32 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (log (exp (pow (cbrt x) (+ 1 4))))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (exp (pow (cbrt x) (+ 1 4)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (exp (pow (cbrt x) (+ 4 1)))
* [exit]simplify:  Simplified to (exp (pow (cbrt x) (+ 4 1)))
* * * * [misc]progress:  [ 33 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (* (* (cbrt (pow (cbrt x) (+ 1 4))) (cbrt (pow (cbrt x) (+ 1 4)))) (cbrt (pow (cbrt x) (+ 1 4))))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (cbrt x) (+ 1 4))) (cbrt (pow (cbrt x) (+ 1 4))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (cbrt x) (+ 4 1))) (cbrt (pow (cbrt x) (+ 4 1))))
* [exit]simplify:  Simplified to (* (cbrt (pow (cbrt x) (+ 4 1))) (cbrt (pow (cbrt x) (+ 4 1))))
* [enter]simplify:  Simplifying (cbrt (pow (cbrt x) (+ 1 4)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (cbrt x) (+ 4 1)))
* [exit]simplify:  Simplified to (cbrt (pow (cbrt x) (+ 4 1)))
* * * * [misc]progress:  [ 34 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (cbrt (* (* (pow (cbrt x) (+ 1 4)) (pow (cbrt x) (+ 1 4))) (pow (cbrt x) (+ 1 4))))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (* (* (pow (cbrt x) (+ 1 4)) (pow (cbrt x) (+ 1 4))) (pow (cbrt x) (+ 1 4)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* [exit]simplify:  Simplified to (pow (pow (cbrt x) (+ 4 1)) 3)
* [exit]simplify:  Simplified to (pow (pow (cbrt x) (+ 4 1)) 3)
* * * * [misc]progress:  [ 35 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (* (sqrt (pow (cbrt x) (+ 1 4))) (sqrt (pow (cbrt x) (+ 1 4))))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (sqrt (pow (cbrt x) (+ 1 4)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (cbrt x) (+ 4 1)))
* [exit]simplify:  Simplified to (sqrt (pow (cbrt x) (+ 4 1)))
* [enter]simplify:  Simplifying (sqrt (pow (cbrt x) (+ 1 4)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (cbrt x) (+ 4 1)))
* [exit]simplify:  Simplified to (sqrt (pow (cbrt x) (+ 4 1)))
* * * * [misc]progress:  [ 36 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (* 1 (pow (cbrt x) (+ 1 4)))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* * * * [misc]progress:  [ 37 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (pow (* (cbrt (* (pow x (+ 3 1)) x)) 32.0) 1)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* * * * [misc]progress:  [ 38 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (exp (log (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (log (* (cbrt (* (pow x (+ 3 1)) x)) 32.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (log (* 32.0 (cbrt (* x (pow x (+ 3 1))))))
* [exit]simplify:  Simplified to (log (* 32.0 (cbrt (* x (pow x (+ 3 1))))))
* * * * [misc]progress:  [ 39 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (log (exp (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (* (pow x (+ 3 1)) x)) 32.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (exp (* 32.0 (cbrt (* x (pow x (+ 3 1))))))
* [exit]simplify:  Simplified to (exp (* 32.0 (cbrt (* x (pow x (+ 3 1))))))
* * * * [misc]progress:  [ 40 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (* (cbrt (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (cbrt (* (cbrt (* (pow x (+ 3 1)) x)) 32.0))) (cbrt (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (cbrt (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* 32.0 (cbrt (* x (pow x (+ 3 1)))))) (cbrt (* 32.0 (cbrt (* x (pow x (+ 3 1)))))))
* [exit]simplify:  Simplified to (* (cbrt (* 32.0 (cbrt (* x (pow x (+ 3 1)))))) (cbrt (* 32.0 (cbrt (* x (pow x (+ 3 1)))))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (* (pow x (+ 3 1)) x)) 32.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* [exit]simplify:  Simplified to (cbrt (* 32.0 (cbrt (* x (pow x (+ 3 1))))))
* [exit]simplify:  Simplified to (cbrt (* 32.0 (cbrt (* x (pow x (+ 3 1))))))
* * * * [misc]progress:  [ 41 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (cbrt (* (* (* (cbrt (* (pow x (+ 3 1)) x)) 32.0) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (* (pow x (+ 3 1)) x)) 32.0) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (70 enodes)
* * [misc]simplify:  iters left: 2 (100 enodes)
* * [misc]simplify:  iters left: 1 (115 enodes)
* [exit]simplify:  Simplified to (* (pow x (+ 3 1)) (* (* 32.0 x) (* 32.0 32.0)))
* [exit]simplify:  Simplified to (* (pow x (+ 3 1)) (* (* 32.0 x) (* 32.0 32.0)))
* * * * [misc]progress:  [ 42 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (sqrt (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (sqrt (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (* (pow x (+ 3 1)) x)) 32.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* [exit]simplify:  Simplified to (sqrt (* 32.0 (cbrt (* x (pow x (+ 3 1))))))
* [exit]simplify:  Simplified to (sqrt (* 32.0 (cbrt (* x (pow x (+ 3 1))))))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (* (pow x (+ 3 1)) x)) 32.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* [exit]simplify:  Simplified to (sqrt (* 32.0 (cbrt (* x (pow x (+ 3 1))))))
* [exit]simplify:  Simplified to (sqrt (* 32.0 (cbrt (* x (pow x (+ 3 1))))))
* * * * [misc]progress:  [ 43 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* 1 (* (cbrt (* (pow x (+ 3 1)) x)) 32.0))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* * * * [misc]progress:  [ 44 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (cbrt (pow x (+ 3 1))) (* (cbrt x) 32.0))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (* (cbrt x) 32.0)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (5 enodes)
* [exit]simplify:  Simplified to (* 32.0 (cbrt x))
* [exit]simplify:  Simplified to (* 32.0 (cbrt x))
* * * * [misc]progress:  [ 45 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (* (cbrt (cbrt (* (pow x (+ 3 1)) x))) (cbrt (cbrt (* (pow x (+ 3 1)) x)))) (* (cbrt (cbrt (* (pow x (+ 3 1)) x))) 32.0))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (pow x (+ 3 1)) x))) 32.0)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* x (pow x (+ 3 1))))) 32.0)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* x (pow x (+ 3 1))))) 32.0)
* * * * [misc]progress:  [ 46 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (sqrt (cbrt (* (pow x (+ 3 1)) x))) (* (sqrt (cbrt (* (pow x (+ 3 1)) x))) 32.0))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (* (pow x (+ 3 1)) x))) 32.0)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* x (pow x (+ 3 1))))) 32.0)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* x (pow x (+ 3 1))))) 32.0)
* * * * [misc]progress:  [ 47 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* 1 (* (cbrt (* (pow x (+ 3 1)) x)) 32.0))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* [exit]simplify:  Simplified to (* 32.0 (cbrt (* x (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (* 32.0 (cbrt (* x (pow x (+ 3 1)))))
* * * * [misc]progress:  [ 48 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* 32.0 (cbrt (* (pow x (+ 3 1)) x)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* * * * [misc]progress:  [ 49 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (202 enodes)
* * [misc]simplify:  iters left: 2 (336 enodes)
* * [misc]simplify:  iters left: 1 (469 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (* x (pow x (+ 3 1)))) (* (* 32.0 (pow (cbrt x) (+ 4 1))) (pow (cbrt x) (+ 4 1)))) (+ (* (* x x) (* x -160.0)) (* x 120.0)))
* * * * [misc]progress:  [ 50 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (exp (* 1/3 (- (log (pow x 4)) (log (/ 1 x))))) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (exp (* 1/3 (- (log (pow x 4)) (log (/ 1 x))))) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* * [misc]simplify:  iters left: 3 (186 enodes)
* * [misc]simplify:  iters left: 2 (314 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (* x (pow x (+ 3 1)))) (* (* (pow (cbrt x) (+ 4 1)) 32.0) (pow (cbrt x) (+ 4 1)))) (+ (* (* x x) (* x -160.0)) (* x 120.0)))
* * * * [misc]progress:  [ 51 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x))))) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x))))) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (257 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* x -160.0))) (* (cbrt (* x (pow x (+ 3 1)))) (* (* (pow (cbrt x) (+ 4 1)) 32.0) (pow (exp 1/3) (* (+ 4 1) (log x))))))
* * * * [misc]progress:  [ 52 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (pow (cbrt x) (+ 1 4))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (+ (* (* (exp (* 1/3 (+ (log x) (log (pow x 4))))) (pow (cbrt x) (+ 1 4))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (200 enodes)
* * [misc]simplify:  iters left: 2 (330 enodes)
* * [misc]simplify:  iters left: 1 (466 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow (cbrt x) (+ 1 4)) (* (pow (cbrt x) (+ 1 4)) 32.0)) (cbrt (pow x (+ (+ 1 1) 3)))) (+ (* (* x x) (* -160.0 x)) (* 120.0 x)))
* * * * [misc]progress:  [ 53 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (* (exp (* 1/3 (- (log (pow x 4)) (log (/ 1 x))))) (pow (cbrt x) (+ 1 4))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (+ (* (* (exp (* 1/3 (- (log (pow x 4)) (log (/ 1 x))))) (pow (cbrt x) (+ 1 4))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* * [misc]simplify:  iters left: 3 (184 enodes)
* * [misc]simplify:  iters left: 2 (316 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (* (pow x (+ 3 1)) x)) (* (* (pow (cbrt x) (+ 4 1)) (pow (cbrt x) (+ 4 1))) 32.0)) (+ (* x 120.0) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 54 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x))))) (pow (cbrt x) (+ 1 4))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (+ (* (* (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x))))) (pow (cbrt x) (+ 1 4))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (254 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x 120.0) (* (* x x) (* x -160.0))) (* (cbrt (* x (pow x (+ 1 3)))) (* (* 32.0 (pow (cbrt x) (+ 1 4))) (pow (exp 1/3) (* (+ 1 4) (log x))))))
* * * * [misc]progress:  [ 55 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (pow x 1/3) 5)) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (pow x 1/3) 5)) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (123 enodes)
* * [misc]simplify:  iters left: 1 (132 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* (cbrt (pow x (+ 3 (+ 1 1)))) (cbrt (pow x (+ 3 (+ 1 1))))) (* 32.0 (pow (cbrt x) 5))))
* * * * [misc]progress:  [ 56 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (pow (/ 1 x) -1/3) 5)) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (pow (/ 1 x) -1/3) 5)) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (123 enodes)
* * [misc]simplify:  iters left: 1 (129 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow (pow (/ 1 x) -1/3) 5) (cbrt (* x (pow x (+ 3 1))))) (* 32.0 (cbrt (* x (pow x (+ 3 1)))))) (+ (* (* x -160.0) (* x x)) (* 120.0 x)))
* * * * [misc]progress:  [ 57 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (exp (* 5/3 (- (log -1) (log (/ -1 x)))))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (exp (* 5/3 (- (log -1) (log (/ -1 x)))))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (109 enodes)
* * [misc]simplify:  iters left: 3 (155 enodes)
* * [misc]simplify:  iters left: 2 (210 enodes)
* * [misc]simplify:  iters left: 1 (391 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (* x (pow x (+ 3 1)))) (* (pow x 5/3) 32.0)) (cbrt (* x (pow x (+ 3 1))))) (+ (* (* x x) (* x -160.0)) (* x 120.0)))
* * * * [misc]progress:  [ 58 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* 32.0 (exp (* 1/3 (+ (log x) (log (pow x 4))))))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* 32.0 (exp (* 1/3 (+ (log x) (log (pow x 4))))))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (200 enodes)
* * [misc]simplify:  iters left: 2 (338 enodes)
* * [misc]simplify:  iters left: 1 (462 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (* x (pow x (+ 3 1)))) (* (* 32.0 (pow (cbrt x) (+ 4 1))) (pow (cbrt x) (+ 4 1)))) (+ (* (* x x) (* x -160.0)) (* x 120.0)))
* * * * [misc]progress:  [ 59 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* 32.0 (exp (* 1/3 (- (log (pow x 4)) (log (/ 1 x))))))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* 32.0 (exp (* 1/3 (- (log (pow x 4)) (log (/ 1 x))))))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* * [misc]simplify:  iters left: 3 (186 enodes)
* * [misc]simplify:  iters left: 2 (318 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (* x (pow x (+ 3 1)))) (* (pow (cbrt x) (+ 4 1)) (* (pow (cbrt x) (+ 4 1)) 32.0))) (+ (* (* x x) (* x -160.0)) (* x 120.0)))
* * * * [misc]progress:  [ 60 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* 32.0 (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x))))))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>
* [enter]simplify:  Simplifying (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* 32.0 (exp (* 1/3 (- (log (* -1 (exp (* 4 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x))))))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (256 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* x -160.0))) (* (* (pow (exp 1/3) (* (+ 4 1) (log x))) (* 32.0 (pow (cbrt x) (+ 4 1)))) (cbrt (* x (pow x (+ 3 1))))))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (log (exp (* (* (* x x) x) x))) x))))> #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x (+ 3 1)) x))))> #<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))) +nan.0)) , with alts (#<alt-delta (Î» (x) (+ (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))>)
* [enter]simplify:  Simplifying (* (* (cbrt (* (pow x (+ 3 1)) x)) (pow (cbrt x) (+ 1 4))) (* (cbrt (* (pow x (+ 3 1)) x)) 32.0))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* [exit]simplify:  Simplified to (* (* (pow (cbrt x) (+ 4 1)) (cbrt (* x (pow x (+ 3 1))))) (* (cbrt (* x (pow x (+ 3 1)))) 32.0))
* [exit]simplify:  Simplified to (* (* (pow (cbrt x) (+ 4 1)) (cbrt (* x (pow x (+ 3 1))))) (* (cbrt (* x (pow x (+ 3 1)))) 32.0))
* [enter]simplify:  Simplifying (+ (* 120.0 x) (* (* x x) (* -160.0 x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (+ (* 120.0 x) (* (* x x) (* x -160.0)))
* [exit]simplify:  Simplified to (+ (* 120.0 x) (* (* x x) (* x -160.0)))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Setting MPFR precision to 832
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Setting MPFR precision to 832
* * * * [misc]points:  Setting MPFR precision to 1088
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 832
* * * * [misc]points:  Setting MPFR precision to 1088
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 832
* * * * [misc]points:  Setting MPFR precision to 1088
* * * * [misc]points:  Setting MPFR precision to 1344
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 1088
* * * * [misc]points:  Setting MPFR precision to 1344
* * * * [misc]points:  Setting MPFR precision to 1600
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 1344
* * * * [misc]points:  Setting MPFR precision to 1600
* * * * [misc]points:  Setting MPFR precision to 1856
* * * * [misc]points:  Setting MPFR precision to 2112
* * * * [misc]points:  Setting MPFR precision to 2368
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 2112
* * * * [misc]points:  Setting MPFR precision to 2368
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 2112
* * * * [misc]points:  Setting MPFR precision to 2368
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 2112
* * * * [misc]points:  Setting MPFR precision to 2368
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
