* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (130 enodes)
* * [misc]simplify:  iters left: 2 (232 enodes)
* * [misc]simplify:  iters left: 1 (377 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* x x) (* x 32.0))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -160.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 160.0)
* [misc]backup-simplify:  Simplify (- 160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 160.0) (pow x 3)) into (* -160.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -160.0 (pow (/ 1 (/ 1 x)) 3)) into (* -160.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify 160.0 into 160.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 160.0 (pow (/ 1 (/ 1 (- x))) 3)) into (* -160.0 (pow x 3))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* (* (* x x) x) x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* x x) x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* (* (* x x) x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 5)) into (pow x 5)
* [misc]approximate:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 5)) into (pow x 5)
* [misc]approximate:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify -1 into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (pow (/ 1 (/ 1 (- x))) 5)) into (pow x 5)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (* x x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify -1 into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (pow (/ 1 (/ 1 (- x))) 3)) into (pow x 3)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify -1 into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (pow (/ 1 (/ 1 (- x))) 3)) into (pow x 3)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (pow (* -160.0 (* (* x x) x)) 1)) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 2 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (exp (log (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (log (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (* -160.0 x)))
* [exit]simplify:  Simplified to (log (* (* x x) (* -160.0 x)))
* * * * [misc]progress:  [ 3 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (log (exp (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (exp (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* * * * [misc]progress:  [ 4 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* (cbrt (* -160.0 (* (* x x) x))) (cbrt (* -160.0 (* (* x x) x)))) (cbrt (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* -160.0 (* (* x x) x))) (cbrt (* -160.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* -160.0 x) (* x x))) (cbrt (* (* -160.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* -160.0 x) (* x x))) (cbrt (* (* -160.0 x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* -160.0 x) (* x x)))
* * * * [misc]progress:  [ 5 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (cbrt (* (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))) (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (* (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))) (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (210 enodes)
* [exit]simplify:  Simplified to (pow (* (* -160.0 x) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (* -160.0 x) (* x x)) 3)
* * * * [misc]progress:  [ 6 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (sqrt (* -160.0 (* (* x x) x))) (sqrt (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (sqrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* * * * [misc]progress:  [ 7 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* 1 (* -160.0 (* (* x x) x)))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 8 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* -160.0 (* x x)) x)) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (* -160.0 (* x x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* -160.0 (* x x))
* [exit]simplify:  Simplified to (* -160.0 (* x x))
* * * * [misc]progress:  [ 9 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* (* x x) x) -160.0)) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 10 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (+ (+ 3 1) 1)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ 1 (+ 1 3))
* [exit]simplify:  Simplified to (+ 1 (+ 1 3))
* * * * [misc]progress:  [ 11 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ (+ 2 1) 1) 1)))))>
* [enter]simplify:  Simplifying (+ (+ (+ 2 1) 1) 1)
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* [exit]simplify:  Simplified to (+ (+ 1 1) (+ 1 2))
* [exit]simplify:  Simplified to (+ (+ 1 1) (+ 1 2))
* * * * [misc]progress:  [ 12 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow (* (* (* (* x x) x) x) x) 1))))>
* * * * [misc]progress:  [ 13 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (exp (log (* (* (* (* x x) x) x) x))))))>
* [enter]simplify:  Simplifying (log (* (* (* (* x x) x) x) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (44 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (* (log x) 3))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (* (log x) 3))
* * * * [misc]progress:  [ 14 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (* (* (* x x) x) x) x))))))>
* [enter]simplify:  Simplifying (exp (* (* (* (* x x) x) x) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* * [misc]simplify:  iters left: 2 (33 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (* (pow x 3) (* x x)))
* [exit]simplify:  Simplified to (exp (* (pow x 3) (* x x)))
* * * * [misc]progress:  [ 15 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (* (* x x) x) x) x)) (cbrt (* (* (* (* x x) x) x) x))) (cbrt (* (* (* (* x x) x) x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (* (* x x) x) x) x)) (cbrt (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* * [misc]simplify:  iters left: 1 (26 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* (* (* x x) x) x) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* * [misc]simplify:  iters left: 2 (22 enodes)
* * [misc]simplify:  iters left: 1 (25 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x x)))
* * * * [misc]progress:  [ 16 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (cbrt (* (* (* (* (* (* x x) x) x) x) (* (* (* (* x x) x) x) x)) (* (* (* (* x x) x) x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) x) x) x) (* (* (* (* x x) x) x) x)) (* (* (* (* x x) x) x) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (124 enodes)
* * [misc]simplify:  iters left: 2 (171 enodes)
* * [misc]simplify:  iters left: 1 (178 enodes)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* x x)) 3)
* * * * [misc]progress:  [ 17 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (sqrt (* (* (* (* x x) x) x) x)) (sqrt (* (* (* (* x x) x) x) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (* (* x x) x) x) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* * [misc]simplify:  iters left: 2 (22 enodes)
* * [misc]simplify:  iters left: 1 (25 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (* (* (* x x) x) x) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* * [misc]simplify:  iters left: 2 (22 enodes)
* * [misc]simplify:  iters left: 1 (25 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x x)))
* * * * [misc]progress:  [ 18 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* 1 (* (* (* (* x x) x) x) x)))))>
* * * * [misc]progress:  [ 19 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* x x) x) (* x x)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 20 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* x (* (* (* x x) x) x)))))>
* * * * [misc]progress:  [ 21 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 3) x) x))))>
* * * * [misc]progress:  [ 22 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x (+ 2 1)) x) x))))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 23 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow (* (* x x) x) 1) x) x))))>
* * * * [misc]progress:  [ 24 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (exp (log (* (* x x) x))) x) x))))>
* [enter]simplify:  Simplifying (log (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 25 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (log (exp (* (* x x) x))) x) x))))>
* [enter]simplify:  Simplifying (exp (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (exp (pow x 3))
* [exit]simplify:  Simplified to (exp (pow x 3))
* * * * [misc]progress:  [ 26 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x))) (cbrt (* (* x x) x))) x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* [enter]simplify:  Simplifying (cbrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 27 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))) x) x))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 28 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (sqrt (* (* x x) x)) (sqrt (* (* x x) x))) x) x))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 29 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* 1 (* (* x x) x)) x) x))))>
* * * * [misc]progress:  [ 30 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* x (* x x)) x) x))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 31 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* x (* x x)) x) x))))>
* * * * [misc]progress:  [ 32 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 33 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x (+ 2 1)))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 34 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow (* (* x x) x) 1))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 35 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (exp (log (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (log (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 36 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (log (exp (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (exp (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (exp (pow x 3))
* [exit]simplify:  Simplified to (exp (pow x 3))
* * * * [misc]progress:  [ 37 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x))) (cbrt (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* [enter]simplify:  Simplifying (cbrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 38 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (cbrt (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 39 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (sqrt (* (* x x) x)) (sqrt (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 40 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* 1 (* (* x x) x)))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 41 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* x (* x x)))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 42 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* x (* x x)))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 43 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x 32.0)) (* x x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 44 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x 32.0)) (* x x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 45 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x 32.0)) (* x x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 46 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (53 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 5) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 47 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (53 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 5) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 48 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (53 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 5) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 49 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 3) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 3) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (225 enodes)
* * [misc]simplify:  iters left: 1 (293 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 32.0) (* (* x x) (* x x))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 50 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 3) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 3) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (225 enodes)
* * [misc]simplify:  iters left: 1 (293 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 32.0) (* (* x x) (* x x))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 51 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 3) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 3) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (225 enodes)
* * [misc]simplify:  iters left: 1 (293 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 32.0) (* (* x x) (* x x))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 52 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x 32.0)) (* x x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 53 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x 32.0)) (* x x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 54 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x 32.0)) (* x x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 2 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -160.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 160.0)
* [misc]backup-simplify:  Simplify (- 160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 160.0) (pow x 3)) into (* -160.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -160.0 (pow (/ 1 (/ 1 x)) 3)) into (* -160.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify 160.0 into 160.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 160.0 (pow (/ 1 (/ 1 (- x))) 3)) into (* -160.0 (pow x 3))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify -1 into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (pow (/ 1 (/ 1 (- x))) 3)) into (pow x 3)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* 32.0 (pow x (+ (+ 3 1) 1))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow x (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow x (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 5 (log x)) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5 (log x))) into (pow x 5)
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow x (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow x (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 5 (log x)) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5 (log x))) into (pow x 5)
* [misc]backup-simplify:  Simplify (* 32.0 (pow x 5)) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (* 32.0 (pow x 5)) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 5 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (* 0 (pow x 5))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (* 0 (pow x 5)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 5))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 5)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 5))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 5)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 32.0 (pow x 5)) into (* 32.0 (pow x 5))
* [misc]approximate:  Taking taylor expansion of (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log x))) into (* -5 (log x))
* [misc]backup-simplify:  Simplify (exp (* -5 (log x))) into (pow x -5)
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log x))) into (* -5 (log x))
* [misc]backup-simplify:  Simplify (exp (* -5 (log x))) into (pow x -5)
* [misc]backup-simplify:  Simplify (* 32.0 (pow x -5)) into (/ 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (/ 32.0 (pow x 5)) into (/ 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 5 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -5 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (* 0 (pow x -5))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -5 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (* 0 (pow x -5)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -5 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -5))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -5 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -5)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -5 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -5))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -5 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -5)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ 32.0 (pow (/ 1 x) 5)) into (* 32.0 (pow x 5))
* [misc]approximate:  Taking taylor expansion of (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log -1) (log x))) into (* 5 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 5 (- (log -1) (log x)))) into (exp (* 5 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log -1) (log x))) into (* 5 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 5 (- (log -1) (log x)))) into (exp (* 5 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 32.0 (exp (* 5 (- (log -1) (log x))))) into (* 32.0 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* 32.0 (exp (* 5 (- (log -1) (log x))))) into (* 32.0 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 5 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (* 0 (exp (* 5 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (* 0 (exp (* 5 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 5 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 5 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 5 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 5 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 32.0 (exp (* 5 (- (log -1) (log (/ 1 (- x))))))) into (* 32.0 (exp (* 5 (- (log -1) (log (/ -1 x))))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 x) (* -160.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 x) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow x (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow x (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 5 (log x)) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5 (log x))) into (pow x 5)
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 x) (* -160.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 x) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow x (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow x (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 5 (log x)) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5 (log x))) into (pow x 5)
* [misc]backup-simplify:  Simplify (* 120.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (pow x 5)) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (+ 0 (* 32.0 (pow x 5))) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (* 32.0 (pow x 5)) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (+ (* 120.0 1) (* 0 0)) into 120.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 5 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (* 0 (pow x 5))) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (* 0 (pow x 5)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -160.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 160.0)) into (- 160.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 5))))) into 0
* [misc]backup-simplify:  Simplify (+ (- 160.0) 0) into (- 160.0)
* [misc]backup-simplify:  Simplify (- 160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (* (- 160.0) (pow x 3)) (+ (* 120.0 x) (* 32.0 (pow x 5)))) into (- (+ (* 32.0 (pow x 5)) (* 120.0 x)) (* 160.0 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log x))) into (* -5 (log x))
* [misc]backup-simplify:  Simplify (exp (* -5 (log x))) into (pow x -5)
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log x))) into (* -5 (log x))
* [misc]backup-simplify:  Simplify (exp (* -5 (log x))) into (pow x -5)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify (+ 0 -160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (- 160.0) 0) into (- 160.0)
* [misc]backup-simplify:  Simplify (- 160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 120.0 1) into 120.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (pow x -5)) into (/ 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (+ 0 (/ 32.0 (pow x 5))) into (* 32.0 (/ 1 (pow x 5)))
* [misc]backup-simplify:  Simplify (* 32.0 (/ 1 (pow x 5))) into (/ 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (+ (/ 32.0 (pow (/ 1 x) 5)) (+ (* 120.0 (/ 1 (/ 1 x))) (* (- 160.0) (pow (/ 1 (/ 1 x)) 3)))) into (- (+ (* 32.0 (pow x 5)) (* 120.0 x)) (* 160.0 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log -1) (log x))) into (* 5 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 5 (- (log -1) (log x)))) into (exp (* 5 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log -1) (log x))) into (* 5 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 5 (- (log -1) (log x)))) into (exp (* 5 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify (+ 0 160.0) into 160.0
* [misc]backup-simplify:  Simplify (+ 160.0 0) into 160.0
* [misc]backup-simplify:  Simplify 160.0 into 160.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 120.0 -1) into -120.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ -120.0 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (+ (- 120.0) 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (- 120.0) into (- 120.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (exp (* 5 (- (log -1) (log x))))) into (* 32.0 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ 0 (* 32.0 (exp (* 5 (- (log -1) (log x)))))) into (* 32.0 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* 32.0 (exp (* 5 (- (log -1) (log x))))) into (* 32.0 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* 32.0 (exp (* 5 (- (log -1) (log (/ 1 (- x))))))) (+ (* (- 120.0) (/ 1 (/ 1 (- x)))) (* 160.0 (pow (/ 1 (/ 1 (- x))) 3)))) into (- (+ (* 32.0 (exp (* 5 (- (log -1) (log (/ -1 x)))))) (* 120.0 x)) (* 160.0 (pow x 3)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (pow (* -160.0 (* (* x x) x)) 1)) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* * * * [misc]progress:  [ 2 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (exp (log (* -160.0 (* (* x x) x))))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (log (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (* -160.0 x)))
* [exit]simplify:  Simplified to (log (* (* x x) (* -160.0 x)))
* * * * [misc]progress:  [ 3 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (log (exp (* -160.0 (* (* x x) x))))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (exp (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* * * * [misc]progress:  [ 4 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* (cbrt (* -160.0 (* (* x x) x))) (cbrt (* -160.0 (* (* x x) x)))) (cbrt (* -160.0 (* (* x x) x))))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (* (cbrt (* -160.0 (* (* x x) x))) (cbrt (* -160.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* -160.0 x) (* x x))) (cbrt (* (* -160.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* -160.0 x) (* x x))) (cbrt (* (* -160.0 x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* -160.0 x) (* x x)))
* * * * [misc]progress:  [ 5 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (cbrt (* (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))) (* -160.0 (* (* x x) x))))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (* (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))) (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (210 enodes)
* [exit]simplify:  Simplified to (pow (* (* -160.0 x) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (* -160.0 x) (* x x)) 3)
* * * * [misc]progress:  [ 6 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (sqrt (* -160.0 (* (* x x) x))) (sqrt (* -160.0 (* (* x x) x))))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (sqrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* * * * [misc]progress:  [ 7 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* 1 (* -160.0 (* (* x x) x)))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* * * * [misc]progress:  [ 8 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* -160.0 (* x x)) x)) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (* -160.0 (* x x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* -160.0 (* x x))
* [exit]simplify:  Simplified to (* -160.0 (* x x))
* * * * [misc]progress:  [ 9 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* (* (* x x) x) -160.0)) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* * * * [misc]progress:  [ 10 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* * * * [misc]progress:  [ 11 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x (+ 2 1)))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 12 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow (* (* x x) x) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* * * * [misc]progress:  [ 13 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (exp (log (* (* x x) x))))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (log (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 14 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (log (exp (* (* x x) x))))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (exp (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (exp (pow x 3))
* [exit]simplify:  Simplified to (exp (pow x 3))
* * * * [misc]progress:  [ 15 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x))) (cbrt (* (* x x) x))))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* [enter]simplify:  Simplifying (cbrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 16 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (cbrt (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 17 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (sqrt (* (* x x) x)) (sqrt (* (* x x) x))))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 18 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* 1 (* (* x x) x)))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* * * * [misc]progress:  [ 19 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* x (* x x)))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 20 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* x (* x x)))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* * * * [misc]progress:  [ 21 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 1)))>
* * * * [misc]progress:  [ 22 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (exp (log (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (log (* 32.0 (pow x (+ (+ 3 1) 1))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (119 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 1 3)) (+ (log 32.0) (log x)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 1 3)) (+ (log 32.0) (log x)))
* * * * [misc]progress:  [ 23 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (log (exp (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (exp (* 32.0 (pow x (+ (+ 3 1) 1))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* [exit]simplify:  Simplified to (pow (exp 32.0) (pow x (+ 1 (+ 1 3))))
* [exit]simplify:  Simplified to (pow (exp 32.0) (pow x (+ 1 (+ 1 3))))
* * * * [misc]progress:  [ 24 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* (* (cbrt (* 32.0 (pow x (+ (+ 3 1) 1)))) (cbrt (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* 32.0 (pow x (+ (+ 3 1) 1)))) (cbrt (* 32.0 (pow x (+ (+ 3 1) 1)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* 32.0 (pow x (+ 1 (+ 1 3))))) (cbrt (* 32.0 (pow x (+ 1 (+ 1 3))))))
* [exit]simplify:  Simplified to (* (cbrt (* 32.0 (pow x (+ 1 (+ 1 3))))) (cbrt (* 32.0 (pow x (+ 1 (+ 1 3))))))
* [enter]simplify:  Simplifying (cbrt (* 32.0 (pow x (+ (+ 3 1) 1))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (cbrt (* 32.0 (pow x (+ 1 (+ 1 3)))))
* [exit]simplify:  Simplified to (cbrt (* 32.0 (pow x (+ 1 (+ 1 3)))))
* * * * [misc]progress:  [ 25 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (cbrt (* (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* 32.0 (pow x (+ (+ 3 1) 1))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* * [misc]simplify:  iters left: 2 (97 enodes)
* * [misc]simplify:  iters left: 1 (100 enodes)
* [exit]simplify:  Simplified to (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3)
* [exit]simplify:  Simplified to (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3)
* * * * [misc]progress:  [ 26 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* (sqrt (* 32.0 (pow x (+ (+ 3 1) 1)))) (sqrt (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (sqrt (* 32.0 (pow x (+ (+ 3 1) 1))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (sqrt (* 32.0 (pow x (+ 1 (+ 1 3)))))
* [exit]simplify:  Simplified to (sqrt (* 32.0 (pow x (+ 1 (+ 1 3)))))
* [enter]simplify:  Simplifying (sqrt (* 32.0 (pow x (+ (+ 3 1) 1))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (sqrt (* 32.0 (pow x (+ 1 (+ 1 3)))))
* [exit]simplify:  Simplified to (sqrt (* 32.0 (pow x (+ 1 (+ 1 3)))))
* * * * [misc]progress:  [ 27 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 1 (* 32.0 (pow x (+ (+ 3 1) 1))))))>
* * * * [misc]progress:  [ 28 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* (* 32.0 (pow x (+ 3 1))) (pow x 1))))>
* [enter]simplify:  Simplifying (* 32.0 (pow x (+ 3 1)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (pow x (+ 1 3)) 32.0)
* [exit]simplify:  Simplified to (* (pow x (+ 1 3)) 32.0)
* * * * [misc]progress:  [ 29 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* (* 32.0 (* (cbrt (pow x (+ (+ 3 1) 1))) (cbrt (pow x (+ (+ 3 1) 1))))) (cbrt (pow x (+ (+ 3 1) 1))))))>
* [enter]simplify:  Simplifying (* 32.0 (* (cbrt (pow x (+ (+ 3 1) 1))) (cbrt (pow x (+ (+ 3 1) 1)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* [exit]simplify:  Simplified to (* 32.0 (* (cbrt (pow x (+ 1 (+ 1 3)))) (cbrt (pow x (+ 1 (+ 1 3))))))
* [exit]simplify:  Simplified to (* 32.0 (* (cbrt (pow x (+ 1 (+ 1 3)))) (cbrt (pow x (+ 1 (+ 1 3))))))
* * * * [misc]progress:  [ 30 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* (* 32.0 (sqrt (pow x (+ (+ 3 1) 1)))) (sqrt (pow x (+ (+ 3 1) 1))))))>
* [enter]simplify:  Simplifying (* 32.0 (sqrt (pow x (+ (+ 3 1) 1))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow x (+ 1 (+ 1 3)))) 32.0)
* [exit]simplify:  Simplified to (* (sqrt (pow x (+ 1 (+ 1 3)))) 32.0)
* * * * [misc]progress:  [ 31 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* (* 32.0 1) (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (* 32.0 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 32.0
* [exit]simplify:  Simplified to 32.0
* * * * [misc]progress:  [ 32 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))>
* * * * [misc]progress:  [ 33 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* 120.0 x)) (exp (* -160.0 (* (* x x) x)))) (exp (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (* (exp (* 120.0 x)) (exp (* -160.0 (* (* x x) x)))) (exp (* 32.0 (pow x (+ (+ 3 1) 1)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (93 enodes)
* * [misc]simplify:  iters left: 2 (97 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 32.0) (pow x (+ (+ 3 1) 1))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))
* [exit]simplify:  Simplified to (* (pow (exp 32.0) (pow x (+ (+ 3 1) 1))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))
* * * * [misc]progress:  [ 34 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (exp (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (exp (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (exp (* 32.0 (pow x (+ (+ 3 1) 1)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (103 enodes)
* * [misc]simplify:  iters left: 2 (113 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 32.0) (pow x (+ 1 (+ 1 3)))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x))))
* [exit]simplify:  Simplified to (* (pow (exp 32.0) (pow x (+ 1 (+ 1 3)))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x))))
* * * * [misc]progress:  [ 35 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) 1))>
* * * * [misc]progress:  [ 36 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* [exit]simplify:  Simplified to (log (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* [exit]simplify:  Simplified to (log (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* * * * [misc]progress:  [ 37 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (exp (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (106 enodes)
* * [misc]simplify:  iters left: 2 (119 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 32.0) (pow x (+ (+ 3 1) 1))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))
* [exit]simplify:  Simplified to (* (pow (exp 32.0) (pow x (+ (+ 3 1) 1))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))
* * * * [misc]progress:  [ 38 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* [enter]simplify:  Simplifying (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* [exit]simplify:  Simplified to (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* * * * [misc]progress:  [ 39 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) 3)
* * * * [misc]progress:  [ 40 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (sqrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* [exit]simplify:  Simplified to (sqrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* [enter]simplify:  Simplifying (sqrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* [exit]simplify:  Simplified to (sqrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* * * * [misc]progress:  [ 41 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)) (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))>
* [enter]simplify:  Simplifying (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (283 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3))
* [exit]simplify:  Simplified to (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3))
* [enter]simplify:  Simplifying (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (+ (* (- 32.0) (pow x (+ 3 (+ 1 1)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))) (* (* (pow x (+ 3 (+ 1 1))) 32.0) (* (pow x (+ 3 (+ 1 1))) 32.0)))
* [exit]simplify:  Simplified to (+ (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (+ (* (- 32.0) (pow x (+ 3 (+ 1 1)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))) (* (* (pow x (+ 3 (+ 1 1))) 32.0) (* (pow x (+ 3 (+ 1 1))) 32.0)))
* * * * [misc]progress:  [ 42 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))>
* * * * [misc]progress:  [ 43 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))>
* [enter]simplify:  Simplifying (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (130 enodes)
* * [misc]simplify:  iters left: 3 (440 enodes)
* [exit]simplify:  Simplified to (* (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x)))) (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ 1 (+ 1 3))) 32.0)))
* [exit]simplify:  Simplified to (* (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x)))) (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ 1 (+ 1 3))) 32.0)))
* [enter]simplify:  Simplifying (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (76 enodes)
* * [misc]simplify:  iters left: 2 (78 enodes)
* * [misc]simplify:  iters left: 1 (86 enodes)
* [exit]simplify:  Simplified to (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))
* [exit]simplify:  Simplified to (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))
* * * * [misc]progress:  [ 44 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 120.0 x) (+ (* -160.0 (* (* x x) x)) (* 32.0 (pow x (+ (+ 3 1) 1))))))>
* [enter]simplify:  Simplifying (+ (* -160.0 (* (* x x) x)) (* 32.0 (pow x (+ (+ 3 1) 1))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (+ (* (* -160.0 x) (* x x)) (* (pow x (+ (+ 1 1) 3)) 32.0))
* [exit]simplify:  Simplified to (+ (* (* -160.0 x) (* x x)) (* (pow x (+ (+ 1 1) 3)) 32.0))
* * * * [misc]progress:  [ 45 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 32.0 (pow x (+ (+ 3 1) 1))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))))>
* * * * [misc]progress:  [ 46 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (73 enodes)
* [exit]simplify:  Simplified to (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 47 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (73 enodes)
* [exit]simplify:  Simplified to (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 48 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (73 enodes)
* [exit]simplify:  Simplified to (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 49 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (73 enodes)
* [exit]simplify:  Simplified to (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 50 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (73 enodes)
* [exit]simplify:  Simplified to (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 51 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (73 enodes)
* [exit]simplify:  Simplified to (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 52 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (53 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 5) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 53 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (53 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 5) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 54 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (exp (* 5 (- (log -1) (log (/ -1 x))))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (exp (* 5 (- (log -1) (log (/ -1 x)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (97 enodes)
* * [misc]simplify:  iters left: 2 (133 enodes)
* * [misc]simplify:  iters left: 1 (257 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* -160.0 x)) (+ (* 120.0 x) (* (pow x 5) 32.0)))
* * * * [misc]progress:  [ 55 / 57 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 32.0 (pow x 5)) (* 120.0 x)) (* 160.0 (pow x 3))))>
* [enter]simplify:  Simplifying (- (+ (* 32.0 (pow x 5)) (* 120.0 x)) (* 160.0 (pow x 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (105 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (+ (- (* 120.0 x) (* (* x x) (* x 160.0))) (* (pow x 5) 32.0))
* * * * [misc]progress:  [ 56 / 57 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 32.0 (pow x 5)) (* 120.0 x)) (* 160.0 (pow x 3))))>
* [enter]simplify:  Simplifying (- (+ (* 32.0 (pow x 5)) (* 120.0 x)) (* 160.0 (pow x 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (105 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (+ (- (* 120.0 x) (* (* x x) (* x 160.0))) (* (pow x 5) 32.0))
* * * * [misc]progress:  [ 57 / 57 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 32.0 (exp (* 5 (- (log -1) (log (/ -1 x)))))) (* 120.0 x)) (* 160.0 (pow x 3))))>
* [enter]simplify:  Simplifying (- (+ (* 32.0 (exp (* 5 (- (log -1) (log (/ -1 x)))))) (* 120.0 x)) (* 160.0 (pow x 3)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (127 enodes)
* * [misc]simplify:  iters left: 2 (188 enodes)
* * [misc]simplify:  iters left: 1 (336 enodes)
* [exit]simplify:  Simplified to (+ (* 120.0 x) (- (* (pow x 5) 32.0) (* (* x x) (* 160.0 x))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x)))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 2 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 2 2)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow x 3) (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow x 3) (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow x 3) (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow x 3) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow x 3) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x 3) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (+ (* 0 0) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (* 5 (log x))) into (* 5/3 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5/3 (log x))) into (pow x 5/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow x 3) (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow x 3) (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow x 3) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow x 3) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x 3) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (+ (* 0 0) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (* 5 (log x))) into (* 5/3 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5/3 (log x))) into (pow x 5/3)
* [misc]backup-simplify:  Simplify (pow x 5/3) into (pow x 5/3)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 5 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (* 5 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 5 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 5 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 5 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 5 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 5/3) into (pow x 5/3)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -3) 1) into (/ 1 (pow x 3))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 3))) into (log (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))) into (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) into (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -3) 1) into (/ 1 (pow x 3))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 3))) into (log (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))) into (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) into (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) into (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 1 (pow x 3)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 1 (pow x 3)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ 1 (pow x 3)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (/ 1 (pow x 3)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (/ 1 (pow x 3)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (/ 1 (pow x 3)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (/ 1 (pow x 3)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (/ 1 (pow x 3)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 3)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (/ 1 (pow x 3)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow (/ 1 x) 3))) (* 2 (log (/ 1 x)))))) into (exp (* 1/3 (- (log (pow x 3)) (* 2 (log (/ 1 x))))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 1) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))) into (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) into (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 1) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))) into (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) into (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) into (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (* 3 (log -1)) (* 5 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (* 3 (- (log -1) (log x)))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (* 3 (- (log -1) (log x)))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log (/ 1 (- x))))))) into (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log (/ -1 x))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow x 3) (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow x 3) (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow x 3) (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow x 3) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow x 3) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x 3) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (+ (* 0 0) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (* 5 (log x))) into (* 5/3 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5/3 (log x))) into (pow x 5/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow x 3) (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow x 3) (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow x 3) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow x 3) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x 3) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (+ (* 0 0) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (* 5 (log x))) into (* 5/3 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5/3 (log x))) into (pow x 5/3)
* [misc]backup-simplify:  Simplify (pow x 5/3) into (pow x 5/3)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 5 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (* 5 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 5 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 5 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 5 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 5 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 5/3) into (pow x 5/3)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -3) 1) into (/ 1 (pow x 3))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 3))) into (log (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))) into (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) into (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -3) 1) into (/ 1 (pow x 3))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 3))) into (log (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))) into (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) into (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) into (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 1 (pow x 3)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 1 (pow x 3)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ 1 (pow x 3)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (/ 1 (pow x 3)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (/ 1 (pow x 3)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (/ 1 (pow x 3)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (/ 1 (pow x 3)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (/ 1 (pow x 3)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 3)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (/ 1 (pow x 3)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow (/ 1 x) 3))) (* 2 (log (/ 1 x)))))) into (exp (* 1/3 (- (log (pow x 3)) (* 2 (log (/ 1 x))))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 1) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))) into (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) into (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 1) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))) into (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) into (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) into (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (* 3 (log -1)) (* 5 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (* 3 (- (log -1) (log x)))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (* 3 (- (log -1) (log x)))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log (/ 1 (- x))))))) into (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log (/ -1 x))))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow x 3) (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow x 3) (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow x 3) (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow x 3) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow x 3) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x 3) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (+ (* 0 0) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (* 5 (log x))) into (* 5/3 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5/3 (log x))) into (pow x 5/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow x 3) (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow x 3) (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow x 3) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow x 3) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x 3) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (+ (* 0 0) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (* 5 (log x))) into (* 5/3 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5/3 (log x))) into (pow x 5/3)
* [misc]backup-simplify:  Simplify (pow x 5/3) into (pow x 5/3)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 5 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (* 5 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 5 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 5 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 5 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 5 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 5/3) into (pow x 5/3)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -3) 1) into (/ 1 (pow x 3))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 3))) into (log (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))) into (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) into (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -3) 1) into (/ 1 (pow x 3))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 3))) into (log (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))) into (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) into (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) into (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 1 (pow x 3)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 1 (pow x 3)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ 1 (pow x 3)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (/ 1 (pow x 3)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (/ 1 (pow x 3)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (/ 1 (pow x 3)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (/ 1 (pow x 3)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (/ 1 (pow x 3)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 3)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (/ 1 (pow x 3)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow (/ 1 x) 3))) (* 2 (log (/ 1 x)))))) into (exp (* 1/3 (- (log (pow x 3)) (* 2 (log (/ 1 x))))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 1) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))) into (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) into (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 1) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))) into (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) into (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) into (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (* 3 (log -1)) (* 5 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (* 3 (- (log -1) (log x)))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (* 3 (- (log -1) (log x)))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log (/ 1 (- x))))))) into (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log (/ -1 x))))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow x 3) (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow x 3) (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow x 3) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow x 3) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x 3) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (+ (* 0 0) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (* 5 (log x))) into (* 5/3 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5/3 (log x))) into (pow x 5/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow x 3) (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow x 3) (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow x 3) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow x 3) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x 3) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (+ (* 0 0) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (* 5 (log x))) into (* 5/3 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5/3 (log x))) into (pow x 5/3)
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow x 3) (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow x 3) (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow x 3) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow x 3) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x 3) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (+ (* 0 0) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (* 5 (log x))) into (* 5/3 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5/3 (log x))) into (pow x 5/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow x 3) (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow x 3) (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow x 3) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow x 3) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x 3) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (+ (* 0 0) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (* 5 (log x))) into (* 5/3 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5/3 (log x))) into (pow x 5/3)
* [misc]backup-simplify:  Simplify (* (pow x 5/3) (pow x 5/3)) into (pow (pow x 10) 1/3)
* [misc]backup-simplify:  Simplify (pow (pow x 10) 1/3) into (pow (pow x 10) 1/3)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 5 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (* 5 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 5/3) 0) (* 0 (pow x 5/3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (* 5 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (* 5 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 5/3) 0) (+ (* 0 0) (* 0 (pow x 5/3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 5 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 5 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 5/3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 5/3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 5 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 5 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 5/3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 5/3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 5 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 5 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 5/3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 5/3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 5 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -5) (log x)) 0) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 5 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5/3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 5/3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 5/3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (pow x 10) 1/3) into (pow (pow x 10) 1/3)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) (cbrt (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) (cbrt (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -3) 1) into (/ 1 (pow x 3))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 3))) into (log (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))) into (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) into (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -3) 1) into (/ 1 (pow x 3))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 3))) into (log (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))) into (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) into (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) (cbrt (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -3) 1) into (/ 1 (pow x 3))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 3))) into (log (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))) into (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) into (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -3) 1) into (/ 1 (pow x 3))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 3))) into (log (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))) into (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) into (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))) into (pow (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) 2) into (pow (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) 0) (* 0 (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 1 (pow x 3)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 1 (pow x 3)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 1 (pow x 3)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ 1 (pow x 3)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 1 (pow x 3)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ 1 (pow x 3)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (/ 1 (pow x 3)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (/ 1 (pow x 3)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (/ 1 (pow x 3)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (/ 1 (pow x 3)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (/ 1 (pow x 3)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (/ 1 (pow x 3)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (/ 1 (pow x 3)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 3)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (/ 1 (pow x 3)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (/ 1 (pow x 3)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (/ 1 (pow x 3)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (/ 1 (pow x 3)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (/ 1 (pow x 3)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 1 (pow x 3)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 3)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (/ 1 (pow x 3)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (/ 1 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (/ 1 (pow x 3)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (/ 1 (pow x 3)))) into (- (log (/ 1 (pow x 3))) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (/ 1 (pow x 3))) (* 2 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (/ 1 (pow (/ 1 x) 3))) (* 2 (log (/ 1 x)))))) 2) into (pow (exp (* 1/3 (- (log (pow x 3)) (* 2 (log (/ 1 x)))))) 2)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) (cbrt (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) (cbrt (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 1) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))) into (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) into (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 1) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))) into (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) into (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) (cbrt (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 1) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))) into (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) into (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 1) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))) into (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) into (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))))) into (pow (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) 2) into (pow (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (* 3 (log -1)) (* 5 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (* 3 (log -1)) (* 5 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) 0) (* 0 (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (* 3 (- (log -1) (log x)))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (* 3 (- (log -1) (log x)))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (* 3 (- (log -1) (log x)))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (* 3 (- (log -1) (log x)))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (* 3 (- (log -1) (log x)))) into (- (* 3 (log -1)) (* 5 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 3 (log -1)) (* 5 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log (/ 1 (- x))))))) 2) into (pow (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log (/ -1 x)))))) 2)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (pow (* (pow x 3) (* x x)) 1/3)))))>
* * * * [misc]progress:  [ 2 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (pow (cbrt (* (pow x 3) (* x x))) 1)))))>
* * * * [misc]progress:  [ 3 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (exp (log (cbrt (* (pow x 3) (* x x)))))))))>
* [enter]simplify:  Simplifying (log (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (log (cbrt (* (pow x 3) (* x x))))
* * * * [misc]progress:  [ 4 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (log (exp (cbrt (* (pow x 3) (* x x)))))))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (exp (cbrt (* (pow x 3) (* x x))))
* * * * [misc]progress:  [ 5 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (* (cbrt (pow x 3)) (cbrt (* x x)))))))>
* [enter]simplify:  Simplifying (cbrt (pow x 3))
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* [enter]simplify:  Simplifying (cbrt (* x x))
* * [misc]simplify:  iters left: 3 (3 enodes)
* [exit]simplify:  Simplified to (cbrt (* x x))
* [exit]simplify:  Simplified to (cbrt (* x x))
* * * * [misc]progress:  [ 6 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (* (* (cbrt (cbrt (* (pow x 3) (* x x)))) (cbrt (cbrt (* (pow x 3) (* x x))))) (cbrt (cbrt (* (pow x 3) (* x x)))))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (pow x 3) (* x x)))) (cbrt (cbrt (* (pow x 3) (* x x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow x 3) (* x x)))) (cbrt (cbrt (* (pow x 3) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow x 3) (* x x)))) (cbrt (cbrt (* (pow x 3) (* x x)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* (pow x 3) (* x x))))
* * * * [misc]progress:  [ 7 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* * [misc]simplify:  iters left: 2 (31 enodes)
* * [misc]simplify:  iters left: 1 (32 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 8 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (* (sqrt (cbrt (* (pow x 3) (* x x)))) (sqrt (cbrt (* (pow x 3) (* x x)))))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x x))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x x))))
* * * * [misc]progress:  [ 9 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (* 1 (cbrt (* (pow x 3) (* x x))))))))>
* * * * [misc]progress:  [ 10 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (pow (* (pow x 3) (* x x)) 1/3)) (cbrt (* (pow x 3) (* x x)))))))>
* * * * [misc]progress:  [ 11 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (pow (cbrt (* (pow x 3) (* x x))) 1)) (cbrt (* (pow x 3) (* x x)))))))>
* * * * [misc]progress:  [ 12 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (exp (log (cbrt (* (pow x 3) (* x x)))))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (log (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (log (cbrt (* (pow x 3) (* x x))))
* * * * [misc]progress:  [ 13 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (log (exp (cbrt (* (pow x 3) (* x x)))))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (exp (cbrt (* (pow x 3) (* x x))))
* * * * [misc]progress:  [ 14 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (* (cbrt (pow x 3)) (cbrt (* x x)))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (cbrt (pow x 3))
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* [enter]simplify:  Simplifying (cbrt (* x x))
* * [misc]simplify:  iters left: 3 (3 enodes)
* [exit]simplify:  Simplified to (cbrt (* x x))
* [exit]simplify:  Simplified to (cbrt (* x x))
* * * * [misc]progress:  [ 15 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (* (* (cbrt (cbrt (* (pow x 3) (* x x)))) (cbrt (cbrt (* (pow x 3) (* x x))))) (cbrt (cbrt (* (pow x 3) (* x x)))))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (pow x 3) (* x x)))) (cbrt (cbrt (* (pow x 3) (* x x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow x 3) (* x x)))) (cbrt (cbrt (* (pow x 3) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow x 3) (* x x)))) (cbrt (cbrt (* (pow x 3) (* x x)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* (pow x 3) (* x x))))
* * * * [misc]progress:  [ 16 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x)))))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* * [misc]simplify:  iters left: 2 (31 enodes)
* * [misc]simplify:  iters left: 1 (32 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 17 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (* (sqrt (cbrt (* (pow x 3) (* x x)))) (sqrt (cbrt (* (pow x 3) (* x x)))))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x x))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x x))))
* * * * [misc]progress:  [ 18 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (* 1 (cbrt (* (pow x 3) (* x x))))) (cbrt (* (pow x 3) (* x x)))))))>
* * * * [misc]progress:  [ 19 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow (* (pow x 3) (* x x)) 1/3) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x)))))))>
* * * * [misc]progress:  [ 20 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow (cbrt (* (pow x 3) (* x x))) 1) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x)))))))>
* * * * [misc]progress:  [ 21 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (exp (log (cbrt (* (pow x 3) (* x x))))) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (log (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (log (cbrt (* (pow x 3) (* x x))))
* * * * [misc]progress:  [ 22 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (log (exp (cbrt (* (pow x 3) (* x x))))) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (exp (cbrt (* (pow x 3) (* x x))))
* * * * [misc]progress:  [ 23 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (cbrt (pow x 3)) (cbrt (* x x))) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (cbrt (pow x 3))
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* [enter]simplify:  Simplifying (cbrt (* x x))
* * [misc]simplify:  iters left: 3 (3 enodes)
* [exit]simplify:  Simplified to (cbrt (* x x))
* [exit]simplify:  Simplified to (cbrt (* x x))
* * * * [misc]progress:  [ 24 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* (cbrt (cbrt (* (pow x 3) (* x x)))) (cbrt (cbrt (* (pow x 3) (* x x))))) (cbrt (cbrt (* (pow x 3) (* x x))))) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (pow x 3) (* x x)))) (cbrt (cbrt (* (pow x 3) (* x x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow x 3) (* x x)))) (cbrt (cbrt (* (pow x 3) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow x 3) (* x x)))) (cbrt (cbrt (* (pow x 3) (* x x)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* (pow x 3) (* x x))))
* * * * [misc]progress:  [ 25 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x))))) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* * [misc]simplify:  iters left: 2 (31 enodes)
* * [misc]simplify:  iters left: 1 (32 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 26 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (sqrt (cbrt (* (pow x 3) (* x x)))) (sqrt (cbrt (* (pow x 3) (* x x))))) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x x))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x x))))
* * * * [misc]progress:  [ 27 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* 1 (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x)))))))>
* * * * [misc]progress:  [ 28 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (* (pow x 3) (* x x)) (+ 1/3 1/3)) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (+ 1/3 1/3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* * * * [misc]progress:  [ 29 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (cbrt (* (pow x 3) (* x x))) (+ 1 1)) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 30 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (* (* (pow x 3) (* x x)) (* (pow x 3) (* x x))) 1/3) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* x x)) (* (pow x 3) (* x x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (70 enodes)
* * [misc]simplify:  iters left: 2 (82 enodes)
* * [misc]simplify:  iters left: 1 (90 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (* x x)) (* (pow x 3) (* x x)))
* [exit]simplify:  Simplified to (* (* (pow x 3) (* x x)) (* (pow x 3) (* x x)))
* * * * [misc]progress:  [ 31 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) 1) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))
* * * * [misc]progress:  [ 32 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (cbrt (* (pow x 3) (* x x))) 2) (cbrt (* (pow x 3) (* x x)))))))>
* * * * [misc]progress:  [ 33 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (cbrt (* (pow x 3) (* x x))) (+ 1 1)) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 34 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) 1) (cbrt (* (pow x 3) (* x x)))))))>
* * * * [misc]progress:  [ 35 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (exp (+ (log (cbrt (* (pow x 3) (* x x)))) (log (cbrt (* (pow x 3) (* x x)))))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (* (pow x 3) (* x x)))) (log (cbrt (* (pow x 3) (* x x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (* (pow x 3) (* x x)))) (log (cbrt (* (pow x 3) (* x x)))))
* [exit]simplify:  Simplified to (+ (log (cbrt (* (pow x 3) (* x x)))) (log (cbrt (* (pow x 3) (* x x)))))
* * * * [misc]progress:  [ 36 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (exp (log (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* * [misc]simplify:  iters left: 2 (31 enodes)
* * [misc]simplify:  iters left: 1 (32 enodes)
* [exit]simplify:  Simplified to (log (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))))
* [exit]simplify:  Simplified to (log (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))))
* * * * [misc]progress:  [ 37 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (log (exp (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* * [misc]simplify:  iters left: 2 (31 enodes)
* * [misc]simplify:  iters left: 1 (32 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))))
* [exit]simplify:  Simplified to (exp (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))))
* * * * [misc]progress:  [ 38 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (cbrt (* (* (pow x 3) (* x x)) (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* x x)) (* (pow x 3) (* x x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (70 enodes)
* * [misc]simplify:  iters left: 2 (82 enodes)
* * [misc]simplify:  iters left: 1 (90 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (* x x)) (* (pow x 3) (* x x)))
* [exit]simplify:  Simplified to (* (* (pow x 3) (* x x)) (* (pow x 3) (* x x)))
* * * * [misc]progress:  [ 39 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (cbrt (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))) (cbrt (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))))) (cbrt (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))) (cbrt (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))) (cbrt (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))) (cbrt (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))))
* * * * [misc]progress:  [ 40 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (cbrt (* (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))) (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))) (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (78 enodes)
* * [misc]simplify:  iters left: 1 (183 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (* x x)) (* (pow x 3) (* x x)))
* [exit]simplify:  Simplified to (* (* (pow x 3) (* x x)) (* (pow x 3) (* x x)))
* * * * [misc]progress:  [ 41 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (sqrt (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))) (sqrt (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (fabs (cbrt (* (pow x 3) (* x x))))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (fabs (cbrt (* (pow x 3) (* x x))))
* * * * [misc]progress:  [ 42 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* 1 (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))) (cbrt (* (pow x 3) (* x x)))))))>
* * * * [misc]progress:  [ 43 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (pow x 3))) (cbrt (* x x))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 3) (* x x))) (cbrt (pow x 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (30 enodes)
* * [misc]simplify:  iters left: 1 (31 enodes)
* [exit]simplify:  Simplified to (* x (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (* x (cbrt (* (pow x 3) (* x x))))
* * * * [misc]progress:  [ 44 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (cbrt (* (pow x 3) (* x x))) (* (cbrt (cbrt (* (pow x 3) (* x x)))) (cbrt (cbrt (* (pow x 3) (* x x)))))) (cbrt (cbrt (* (pow x 3) (* x x))))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 3) (* x x))) (* (cbrt (cbrt (* (pow x 3) (* x x)))) (cbrt (cbrt (* (pow x 3) (* x x))))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (34 enodes)
* * [misc]simplify:  iters left: 1 (35 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x x))) (* (cbrt (cbrt (* (pow x 3) (* x x)))) (cbrt (cbrt (* (pow x 3) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x x))) (* (cbrt (cbrt (* (pow x 3) (* x x)))) (cbrt (cbrt (* (pow x 3) (* x x))))))
* * * * [misc]progress:  [ 45 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (cbrt (* (pow x 3) (* x x))) (sqrt (cbrt (* (pow x 3) (* x x))))) (sqrt (cbrt (* (pow x 3) (* x x))))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 3) (* x x))) (sqrt (cbrt (* (pow x 3) (* x x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (30 enodes)
* * [misc]simplify:  iters left: 1 (31 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x))))
* * * * [misc]progress:  [ 46 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (cbrt (* (pow x 3) (* x x))) 1) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 3) (* x x))) 1)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* * [misc]simplify:  iters left: 2 (31 enodes)
* * [misc]simplify:  iters left: 1 (32 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x x)))
* * * * [misc]progress:  [ 47 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (pow x 3)) (* (cbrt (* x x)) (cbrt (* (pow x 3) (* x x))))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* x x)) (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x x)) (cbrt (* (* x x) (pow x 3))))
* [exit]simplify:  Simplified to (* (cbrt (* x x)) (cbrt (* (* x x) (pow x 3))))
* * * * [misc]progress:  [ 48 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (cbrt (cbrt (* (pow x 3) (* x x)))) (cbrt (cbrt (* (pow x 3) (* x x))))) (* (cbrt (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x))))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (30 enodes)
* * [misc]simplify:  iters left: 1 (31 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x))))
* * * * [misc]progress:  [ 49 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (sqrt (cbrt (* (pow x 3) (* x x)))) (* (sqrt (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x))))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (30 enodes)
* * [misc]simplify:  iters left: 1 (31 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x))))
* * * * [misc]progress:  [ 50 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* 1 (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))
* * * * [misc]progress:  [ 51 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x)))))))>
* * * * [misc]progress:  [ 52 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (pow x 5/3)))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (pow x 5/3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (108 enodes)
* * [misc]simplify:  iters left: 1 (109 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* 32.0 (cbrt (* (pow x 3) (* x x)))) (* (pow x 5/3) (cbrt (* (pow x 3) (* x x))))))
* * * * [misc]progress:  [ 53 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (exp (* 1/3 (- (log (pow x 3)) (* 2 (log (/ 1 x))))))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (exp (* 1/3 (- (log (pow x 3)) (* 2 (log (/ 1 x)))))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (225 enodes)
* [exit]simplify:  Simplified to (+ (* (* 32.0 (cbrt (* (pow x 3) (* x x)))) (* (cbrt (* (pow x 3) (* x x))) (* (pow x (* 1/3 2)) (pow x (* 1/3 3))))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 54 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log (/ -1 x))))))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log (/ -1 x)))))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (192 enodes)
* * [misc]simplify:  iters left: 2 (357 enodes)
* [exit]simplify:  Simplified to (+ (* (* 32.0 (cbrt (* (pow x 3) (* x x)))) (* (/ (pow -1 (* 1/3 3)) (pow (/ -1 x) (* 1/3 5))) (cbrt (* (pow x 3) (* x x))))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 55 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (pow x 5/3)) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (pow x 5/3)) (cbrt (* (pow x 3) (* x x))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (106 enodes)
* * [misc]simplify:  iters left: 1 (107 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* (pow x 5/3) 32.0) (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))))
* * * * [misc]progress:  [ 56 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (exp (* 1/3 (- (log (pow x 3)) (* 2 (log (/ 1 x))))))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (exp (* 1/3 (- (log (pow x 3)) (* 2 (log (/ 1 x))))))) (cbrt (* (pow x 3) (* x x))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (220 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x (* 1/3 3)) (* (pow x (* 2 1/3)) 32.0)) (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 57 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log (/ -1 x))))))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log (/ -1 x))))))) (cbrt (* (pow x 3) (* x x))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (188 enodes)
* * [misc]simplify:  iters left: 2 (350 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (* (pow x 3) (* x x))) (/ (pow -1 (* 1/3 3)) (pow (/ -1 x) (* 5 1/3)))) (* 32.0 (cbrt (* (pow x 3) (* x x))))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 58 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 5/3) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (pow x 5/3) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (105 enodes)
* * [misc]simplify:  iters left: 2 (110 enodes)
* * [misc]simplify:  iters left: 1 (111 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* (cbrt (* (* x x) (pow x 3))) (cbrt (* (* x x) (pow x 3)))) (* (pow x 5/3) 32.0)))
* * * * [misc]progress:  [ 59 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (exp (* 1/3 (- (log (pow x 3)) (* 2 (log (/ 1 x)))))) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (exp (* 1/3 (- (log (pow x 3)) (* 2 (log (/ 1 x)))))) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (225 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (* (pow x 3) (* x x))) (* (pow x (* 2 1/3)) (pow x (* 3 1/3)))) (* 32.0 (cbrt (* (pow x 3) (* x x))))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 60 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log (/ -1 x)))))) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log (/ -1 x)))))) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (190 enodes)
* * [misc]simplify:  iters left: 2 (356 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (* (* x x) (pow x 3))) 32.0) (* (/ (pow -1 (* 3 1/3)) (pow (/ -1 x) (* 5 1/3))) (cbrt (* (* x x) (pow x 3))))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 61 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (pow x 10) 1/3) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (pow x 10) 1/3) (cbrt (* (pow x 3) (* x x))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (87 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (91 enodes)
* [exit]simplify:  Simplified to (+ (* (* 32.0 (cbrt (pow x 10))) (cbrt (* (pow x 3) (* x x)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 62 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (exp (* 1/3 (- (log (pow x 3)) (* 2 (log (/ 1 x)))))) 2) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (exp (* 1/3 (- (log (pow x 3)) (* 2 (log (/ 1 x)))))) 2) (cbrt (* (pow x 3) (* x x))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (234 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (pow x (* 2 1/3)) (pow x (* 3 1/3))) (* (pow x (* 2 1/3)) (pow x (* 3 1/3)))) (* (cbrt (* (pow x 3) (* x x))) 32.0)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 63 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log (/ -1 x)))))) 2) (cbrt (* (pow x 3) (* x x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (exp (* 1/3 (- (* 3 (log -1)) (* 5 (log (/ -1 x)))))) 2) (cbrt (* (pow x 3) (* x x))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (201 enodes)
* * [misc]simplify:  iters left: 2 (405 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* (/ (pow -1 (* 3 1/3)) (pow (/ -1 x) (* 5 1/3))) (/ (pow -1 (* 3 1/3)) (pow (/ -1 x) (* 5 1/3)))) (* (cbrt (* (pow x 3) (* x x))) 32.0)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 1 1 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 2 1 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 x) (* -160.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 x) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow x (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow x (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 5 (log x)) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5 (log x))) into (pow x 5)
* [misc]backup-simplify:  Simplify (* 120.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (pow x 5)) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (+ 0 (* 32.0 (pow x 5))) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (log (* 32.0 (pow x 5))) into (log (* 32.0 (pow x 5)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* 32.0 (pow x 5)))) into (* 1/3 (log (* 32.0 (pow x 5))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* 32.0 (pow x 5))))) into (pow (* 32.0 (pow x 5)) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 x) (* -160.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 x) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow x (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow x (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 5 (log x)) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5 (log x))) into (pow x 5)
* [misc]backup-simplify:  Simplify (* 120.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (pow x 5)) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (+ 0 (* 32.0 (pow x 5))) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (log (* 32.0 (pow x 5))) into (log (* 32.0 (pow x 5)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* 32.0 (pow x 5)))) into (* 1/3 (log (* 32.0 (pow x 5))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* 32.0 (pow x 5))))) into (pow (* 32.0 (pow x 5)) 1/3)
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 x) (* -160.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 x) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow x (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow x (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 5 (log x)) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5 (log x))) into (pow x 5)
* [misc]backup-simplify:  Simplify (* 120.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (pow x 5)) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (+ 0 (* 32.0 (pow x 5))) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (log (* 32.0 (pow x 5))) into (log (* 32.0 (pow x 5)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* 32.0 (pow x 5)))) into (* 1/3 (log (* 32.0 (pow x 5))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* 32.0 (pow x 5))))) into (pow (* 32.0 (pow x 5)) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 x) (* -160.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 x) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow x (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow x (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 5 (log x)) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5 (log x))) into (pow x 5)
* [misc]backup-simplify:  Simplify (* 120.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (pow x 5)) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (+ 0 (* 32.0 (pow x 5))) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (log (* 32.0 (pow x 5))) into (log (* 32.0 (pow x 5)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* 32.0 (pow x 5)))) into (* 1/3 (log (* 32.0 (pow x 5))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* 32.0 (pow x 5))))) into (pow (* 32.0 (pow x 5)) 1/3)
* [misc]backup-simplify:  Simplify (* (pow (* 32.0 (pow x 5)) 1/3) (pow (* 32.0 (pow x 5)) 1/3)) into (pow (* (pow 32.0 2) (pow x 10)) 1/3)
* [misc]backup-simplify:  Simplify (pow (* (pow 32.0 2) (pow x 10)) 1/3) into (pow (* (pow 32.0 2) (pow x 10)) 1/3)
* [misc]backup-simplify:  Simplify (+ (* 120.0 1) (* 0 0)) into 120.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 5 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (* 0 (pow x 5))) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 120.0) 1)) (pow (* 32.0 (pow x 5)) 1)))) 1) into (/ 3.75 (pow x 5))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ 3.75 (pow x 5))) (* 0 (log (* 32.0 (pow x 5))))) into (* 1.25 (/ 1 (pow x 5)))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* 32.0 (pow x 5))))) (+ (* (/ (pow (* 1.25 (/ 1 (pow x 5))) 1) 1)))) into (* 1.25 (pow (/ 32.0 (pow x 10)) 1/3))
* [misc]backup-simplify:  Simplify (+ (* 120.0 1) (* 0 0)) into 120.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 5 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (* 0 (pow x 5))) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 120.0) 1)) (pow (* 32.0 (pow x 5)) 1)))) 1) into (/ 3.75 (pow x 5))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ 3.75 (pow x 5))) (* 0 (log (* 32.0 (pow x 5))))) into (* 1.25 (/ 1 (pow x 5)))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* 32.0 (pow x 5))))) (+ (* (/ (pow (* 1.25 (/ 1 (pow x 5))) 1) 1)))) into (* 1.25 (pow (/ 32.0 (pow x 10)) 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow (* 32.0 (pow x 5)) 1/3) (* 1.25 (pow (/ 32.0 (pow x 10)) 1/3))) (* (* 1.25 (pow (/ 32.0 (pow x 10)) 1/3)) (pow (* 32.0 (pow x 5)) 1/3))) into (* 2.5 (pow (/ (pow 32.0 2) (pow x 5)) 1/3))
* [misc]backup-simplify:  Simplify (* 2.5 (pow (/ (pow 32.0 2) (pow x 5)) 1/3)) into (* 2.5 (pow (/ (pow 32.0 2) (pow x 5)) 1/3))
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (* 0 (pow x 5)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 120.0) 2)) (pow (* 32.0 (pow x 5)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* 32.0 (pow x 5)) 1)))) 2) into (/ -7200.0 (* (pow 32.0 2) (pow x 10)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -7200.0 (* (pow 32.0 2) (pow x 10)))) (+ (* 0 (/ 3.75 (pow x 5))) (* 0 (log (* 32.0 (pow x 5)))))) into (- (* 2400.0 (/ 1 (* (pow 32.0 2) (pow x 10)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* 32.0 (pow x 5))))) (+ (* (/ (pow (* 1.25 (/ 1 (pow x 5))) 2) 2)) (* (/ (pow (- (* 2400.0 (/ 1 (* (pow 32.0 2) (pow x 10))))) 1) 1)))) into (* (- (* 0.78125 (/ 1 (pow x 10))) (* 2400.0 (/ 1 (* (pow 32.0 2) (pow x 10))))) (pow (* 32.0 (pow x 5)) 1/3))
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (* 0 (pow x 5)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 120.0) 2)) (pow (* 32.0 (pow x 5)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* 32.0 (pow x 5)) 1)))) 2) into (/ -7200.0 (* (pow 32.0 2) (pow x 10)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -7200.0 (* (pow 32.0 2) (pow x 10)))) (+ (* 0 (/ 3.75 (pow x 5))) (* 0 (log (* 32.0 (pow x 5)))))) into (- (* 2400.0 (/ 1 (* (pow 32.0 2) (pow x 10)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* 32.0 (pow x 5))))) (+ (* (/ (pow (* 1.25 (/ 1 (pow x 5))) 2) 2)) (* (/ (pow (- (* 2400.0 (/ 1 (* (pow 32.0 2) (pow x 10))))) 1) 1)))) into (* (- (* 0.78125 (/ 1 (pow x 10))) (* 2400.0 (/ 1 (* (pow 32.0 2) (pow x 10))))) (pow (* 32.0 (pow x 5)) 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow (* 32.0 (pow x 5)) 1/3) (* (- (* 0.78125 (/ 1 (pow x 10))) (* 2400.0 (/ 1 (* (pow 32.0 2) (pow x 10))))) (pow (* 32.0 (pow x 5)) 1/3))) (+ (* (* 1.25 (pow (/ 32.0 (pow x 10)) 1/3)) (* 1.25 (pow (/ 32.0 (pow x 10)) 1/3))) (* (* (- (* 0.78125 (/ 1 (pow x 10))) (* 2400.0 (/ 1 (* (pow 32.0 2) (pow x 10))))) (pow (* 32.0 (pow x 5)) 1/3)) (pow (* 32.0 (pow x 5)) 1/3)))) into (- (* 3.125 (pow (/ (pow 32.0 2) (pow x 20)) 1/3)) (* 4800.0 (pow (/ 1 (* (pow 32.0 4) (pow x 20))) 1/3)))
* [misc]backup-simplify:  Simplify (- (* 3.125 (pow (/ (pow 32.0 2) (pow x 20)) 1/3)) (* 4800.0 (pow (/ 1 (* (pow 32.0 4) (pow x 20))) 1/3))) into (- (* 3.125 (pow (/ (pow 32.0 2) (pow x 20)) 1/3)) (* 4800.0 (pow (/ 1 (* (pow 32.0 4) (pow x 20))) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* (- (* 3.125 (pow (/ (pow 32.0 2) (pow x 20)) 1/3)) (* 4800.0 (pow (/ 1 (* (pow 32.0 4) (pow x 20))) 1/3))) (pow x 2)) (+ (* (* 2.5 (pow (/ (pow 32.0 2) (pow x 5)) 1/3)) x) (pow (* (pow 32.0 2) (pow x 10)) 1/3))) into (- (+ (* 2.5 (pow (/ (pow 32.0 2) (pow x 2)) 1/3)) (+ (pow (* (pow 32.0 2) (pow x 10)) 1/3) (* 3.125 (pow (/ (pow 32.0 2) (pow x 14)) 1/3)))) (* 4800.0 (pow (/ 1 (* (pow 32.0 4) (pow x 14))) 1/3)))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log x))) into (* -5 (log x))
* [misc]backup-simplify:  Simplify (exp (* -5 (log x))) into (pow x -5)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify (+ 0 -160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (- 160.0) 0) into (- 160.0)
* [misc]backup-simplify:  Simplify (log (- 160.0)) into (log (- 160.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 160.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 160.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log x))) into (* -5 (log x))
* [misc]backup-simplify:  Simplify (exp (* -5 (log x))) into (pow x -5)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify (+ 0 -160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (- 160.0) 0) into (- 160.0)
* [misc]backup-simplify:  Simplify (log (- 160.0)) into (log (- 160.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 160.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 160.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log x))) into (* -5 (log x))
* [misc]backup-simplify:  Simplify (exp (* -5 (log x))) into (pow x -5)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify (+ 0 -160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (- 160.0) 0) into (- 160.0)
* [misc]backup-simplify:  Simplify (log (- 160.0)) into (log (- 160.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 160.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 160.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log x))) into (* -5 (log x))
* [misc]backup-simplify:  Simplify (exp (* -5 (log x))) into (pow x -5)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify (+ 0 -160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (- 160.0) 0) into (- 160.0)
* [misc]backup-simplify:  Simplify (log (- 160.0)) into (log (- 160.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 160.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 160.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 160.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 160.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 160.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 160.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 120.0 1) into 120.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 160.0) 2))) (* 1 (/ (* 1 (pow (* 2 120.0) 1)) (pow (- 160.0) 1)))) 2) into -0.75
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.75) (+ (* 0 0) (* 0 (- (log (- 160.0)) (* 3 (log x)))))) into (- 0.25)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.25) 1) 1)))) into (* -0.25 (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* 120.0 1) into 120.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 160.0) 2))) (* 1 (/ (* 1 (pow (* 2 120.0) 1)) (pow (- 160.0) 1)))) 2) into -0.75
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.75) (+ (* 0 0) (* 0 (- (log (- 160.0)) (* 3 (log x)))))) into (- 0.25)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.25) 1) 1)))) into (* -0.25 (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (* -0.25 (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.25 (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x)))))) (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x)))))))) into (- (* 0.5 (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (* 0.5 (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 2))) into (- (* 0.5 (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (pow x -5)) into (/ 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (+ 0 (/ 32.0 (pow x 5))) into (* 32.0 (/ 1 (pow x 5)))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 160.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 120.0) 1)) (pow (- 160.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 (* 32.0 (/ 1 (pow x 5)))) 1)) (pow (- 160.0) 1)))) 6) into (/ -0.19999999999999998 (pow x 5))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.19999999999999998 (pow x 5))) (+ (* 0 -0.75) (+ (* 0 0) (* 0 (- (log (- 160.0)) (* 3 (log x))))))) into (- (* 0.06666666666666665 (/ 1 (pow x 5))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.25) 1) 1)) (* (/ (pow (- (* 0.06666666666666665 (/ 1 (pow x 5)))) 1) 1)))) into (* -0.06666666666666665 (/ (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (pow x 5)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (pow x -5)) into (/ 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (+ 0 (/ 32.0 (pow x 5))) into (* 32.0 (/ 1 (pow x 5)))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 160.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 120.0) 1)) (pow (- 160.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 (* 32.0 (/ 1 (pow x 5)))) 1)) (pow (- 160.0) 1)))) 6) into (/ -0.19999999999999998 (pow x 5))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.19999999999999998 (pow x 5))) (+ (* 0 -0.75) (+ (* 0 0) (* 0 (- (log (- 160.0)) (* 3 (log x))))))) into (- (* 0.06666666666666665 (/ 1 (pow x 5))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.25) 1) 1)) (* (/ (pow (- (* 0.06666666666666665 (/ 1 (pow x 5)))) 1) 1)))) into (* -0.06666666666666665 (/ (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (pow x 5)))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (* -0.06666666666666665 (/ (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (pow x 5)))) (+ (* 0 (* -0.25 (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))))) (+ (* (* -0.25 (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x)))))) 0) (* (* -0.06666666666666665 (/ (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (pow x 5))) (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))))))) into (- (* 0.1333333333333333 (/ (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 2) (pow x 5))))
* [misc]backup-simplify:  Simplify (- (* 0.1333333333333333 (/ (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 2) (pow x 5)))) into (- (* 0.1333333333333333 (/ (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 2) (pow x 5))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.1333333333333333 (/ (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 2) (pow (/ 1 x) 5)))) (pow (/ 1 x) 3)) (+ (* (- (* 0.5 (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 2))) (pow (/ 1 x) 2)) (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 2))) into (- (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 2) (+ (* 0.5 (/ (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 2) (pow x 2))) (* 0.1333333333333333 (* (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 2) (pow x 2)))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log -1) (log x))) into (* 5 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 5 (- (log -1) (log x)))) into (exp (* 5 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify (+ 0 160.0) into 160.0
* [misc]backup-simplify:  Simplify (+ 160.0 0) into 160.0
* [misc]backup-simplify:  Simplify (log 160.0) into (log 160.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 160.0) (* 3 (log x)))) into (* 1/3 (- (log 160.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 160.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log -1) (log x))) into (* 5 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 5 (- (log -1) (log x)))) into (exp (* 5 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify (+ 0 160.0) into 160.0
* [misc]backup-simplify:  Simplify (+ 160.0 0) into 160.0
* [misc]backup-simplify:  Simplify (log 160.0) into (log 160.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 160.0) (* 3 (log x)))) into (* 1/3 (- (log 160.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 160.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log -1) (log x))) into (* 5 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 5 (- (log -1) (log x)))) into (exp (* 5 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify (+ 0 160.0) into 160.0
* [misc]backup-simplify:  Simplify (+ 160.0 0) into 160.0
* [misc]backup-simplify:  Simplify (log 160.0) into (log 160.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 160.0) (* 3 (log x)))) into (* 1/3 (- (log 160.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 160.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log -1) (log x))) into (* 5 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 5 (- (log -1) (log x)))) into (exp (* 5 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify (+ 0 160.0) into 160.0
* [misc]backup-simplify:  Simplify (+ 160.0 0) into 160.0
* [misc]backup-simplify:  Simplify (log 160.0) into (log 160.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 160.0) (* 3 (log x)))) into (* 1/3 (- (log 160.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 160.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (exp (* 1/3 (- (log 160.0) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 160.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 160.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 160.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 160.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log 160.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 120.0 -1) into -120.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ -120.0 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (+ (- 120.0) 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 160.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 120.0)) 1)) (pow 160.0 1)))) 2) into -0.75
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.75) (+ (* 0 0) (* 0 (- (log 160.0) (* 3 (log x)))))) into (- 0.25)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.25) 1) 1)))) into (* -0.25 (exp (* 1/3 (- (log 160.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* 120.0 -1) into -120.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ -120.0 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (+ (- 120.0) 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 160.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 120.0)) 1)) (pow 160.0 1)))) 2) into -0.75
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.75) (+ (* 0 0) (* 0 (- (log 160.0) (* 3 (log x)))))) into (- 0.25)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.25) 1) 1)))) into (* -0.25 (exp (* 1/3 (- (log 160.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (* -0.25 (exp (* 1/3 (- (log 160.0) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.25 (exp (* 1/3 (- (log 160.0) (* 3 (log x)))))) (exp (* 1/3 (- (log 160.0) (* 3 (log x)))))))) into (- (* 0.5 (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (* 0.5 (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 2))) into (- (* 0.5 (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (exp (* 5 (- (log -1) (log x))))) into (* 32.0 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ 0 (* 32.0 (exp (* 5 (- (log -1) (log x)))))) into (* 32.0 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 160.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 120.0)) 1)) (pow 160.0 2))) (* 1 (/ (* 1 1 (pow (* 6 (* 32.0 (exp (* 5 (- (log -1) (log x)))))) 1)) (pow 160.0 1)))) 6) into (* 0.19999999999999998 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 0.19999999999999998 (exp (* 5 (- (log -1) (log x)))))) (+ (* 0 -0.75) (+ (* 0 0) (* 0 (- (log 160.0) (* 3 (log x))))))) into (* 0.06666666666666665 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.25) 1) 1)) (* (/ (pow (* 0.06666666666666665 (exp (* 5 (- (log -1) (log x))))) 1) 1)))) into (* 0.06666666666666665 (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (exp (* 5 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (exp (* 5 (- (log -1) (log x))))) into (* 32.0 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ 0 (* 32.0 (exp (* 5 (- (log -1) (log x)))))) into (* 32.0 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 160.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 120.0)) 1)) (pow 160.0 2))) (* 1 (/ (* 1 1 (pow (* 6 (* 32.0 (exp (* 5 (- (log -1) (log x)))))) 1)) (pow 160.0 1)))) 6) into (* 0.19999999999999998 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 0.19999999999999998 (exp (* 5 (- (log -1) (log x)))))) (+ (* 0 -0.75) (+ (* 0 0) (* 0 (- (log 160.0) (* 3 (log x))))))) into (* 0.06666666666666665 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.25) 1) 1)) (* (/ (pow (* 0.06666666666666665 (exp (* 5 (- (log -1) (log x))))) 1) 1)))) into (* 0.06666666666666665 (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (exp (* 5 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (* 0.06666666666666665 (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (exp (* 5 (- (log -1) (log x))))))) (+ (* 0 (* -0.25 (exp (* 1/3 (- (log 160.0) (* 3 (log x))))))) (+ (* (* -0.25 (exp (* 1/3 (- (log 160.0) (* 3 (log x)))))) 0) (* (* 0.06666666666666665 (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (exp (* 5 (- (log -1) (log x)))))) (exp (* 1/3 (- (log 160.0) (* 3 (log x))))))))) into (* 0.1333333333333333 (* (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 2) (exp (* 5 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* 0.1333333333333333 (* (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 2) (exp (* 5 (- (log -1) (log x)))))) into (* 0.1333333333333333 (* (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 2) (exp (* 5 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (* 0.1333333333333333 (* (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ 1 (- x))))))) 2) (exp (* 5 (- (log -1) (log (/ 1 (- x)))))))) (pow (/ 1 (- x)) 3)) (+ (* (- (* 0.5 (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ 1 (- x))))))) 2))) (pow (/ 1 (- x)) 2)) (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ 1 (- x))))))) 2))) into (- (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ -1 x)))))) 2) (+ (* 0.5 (/ (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ -1 x)))))) 2) (pow x 2))) (* 0.1333333333333333 (/ (* (exp (* 5 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ -1 x)))))) 2)) (pow x 3)))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 x) (* -160.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 x) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow x (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow x (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 5 (log x)) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5 (log x))) into (pow x 5)
* [misc]backup-simplify:  Simplify (* 120.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (pow x 5)) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (+ 0 (* 32.0 (pow x 5))) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (log (* 32.0 (pow x 5))) into (log (* 32.0 (pow x 5)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* 32.0 (pow x 5)))) into (* 1/3 (log (* 32.0 (pow x 5))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* 32.0 (pow x 5))))) into (pow (* 32.0 (pow x 5)) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 x) (* -160.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 x) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow x (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow x (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 5 (log x)) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5 (log x))) into (pow x 5)
* [misc]backup-simplify:  Simplify (* 120.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (pow x 5)) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (+ 0 (* 32.0 (pow x 5))) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (log (* 32.0 (pow x 5))) into (log (* 32.0 (pow x 5)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* 32.0 (pow x 5)))) into (* 1/3 (log (* 32.0 (pow x 5))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* 32.0 (pow x 5))))) into (pow (* 32.0 (pow x 5)) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 x) (* -160.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 x) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow x (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow x (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 5 (log x)) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5 (log x))) into (pow x 5)
* [misc]backup-simplify:  Simplify (* 120.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (pow x 5)) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (+ 0 (* 32.0 (pow x 5))) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (log (* 32.0 (pow x 5))) into (log (* 32.0 (pow x 5)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* 32.0 (pow x 5)))) into (* 1/3 (log (* 32.0 (pow x 5))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* 32.0 (pow x 5))))) into (pow (* 32.0 (pow x 5)) 1/3)
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 x) (* -160.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 x) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow x (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow x (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 5 (log x)) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5 (log x))) into (pow x 5)
* [misc]backup-simplify:  Simplify (* 120.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (pow x 5)) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (+ 0 (* 32.0 (pow x 5))) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (log (* 32.0 (pow x 5))) into (log (* 32.0 (pow x 5)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* 32.0 (pow x 5)))) into (* 1/3 (log (* 32.0 (pow x 5))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* 32.0 (pow x 5))))) into (pow (* 32.0 (pow x 5)) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 x) (* -160.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 x) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow x (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow x (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 5 (log x)) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5 (log x))) into (pow x 5)
* [misc]backup-simplify:  Simplify (* 120.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (pow x 5)) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (+ 0 (* 32.0 (pow x 5))) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (log (* 32.0 (pow x 5))) into (log (* 32.0 (pow x 5)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* 32.0 (pow x 5)))) into (* 1/3 (log (* 32.0 (pow x 5))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* 32.0 (pow x 5))))) into (pow (* 32.0 (pow x 5)) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 x) (* -160.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 x) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow x (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow x (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 5 (log x)) into (* 5 (log x))
* [misc]backup-simplify:  Simplify (exp (* 5 (log x))) into (pow x 5)
* [misc]backup-simplify:  Simplify (* 120.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (pow x 5)) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (+ 0 (* 32.0 (pow x 5))) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (log (* 32.0 (pow x 5))) into (log (* 32.0 (pow x 5)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* 32.0 (pow x 5)))) into (* 1/3 (log (* 32.0 (pow x 5))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* 32.0 (pow x 5))))) into (pow (* 32.0 (pow x 5)) 1/3)
* [misc]backup-simplify:  Simplify (* (pow (* 32.0 (pow x 5)) 1/3) (pow (* 32.0 (pow x 5)) 1/3)) into (pow (* (pow 32.0 2) (pow x 10)) 1/3)
* [misc]backup-simplify:  Simplify (* (pow (* (pow 32.0 2) (pow x 10)) 1/3) (pow (* 32.0 (pow x 5)) 1/3)) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (* 32.0 (pow x 5)) into (* 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (+ (* 120.0 1) (* 0 0)) into 120.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 5 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (* 0 (pow x 5))) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 120.0) 1)) (pow (* 32.0 (pow x 5)) 1)))) 1) into (/ 3.75 (pow x 5))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ 3.75 (pow x 5))) (* 0 (log (* 32.0 (pow x 5))))) into (* 1.25 (/ 1 (pow x 5)))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* 32.0 (pow x 5))))) (+ (* (/ (pow (* 1.25 (/ 1 (pow x 5))) 1) 1)))) into (* 1.25 (pow (/ 32.0 (pow x 10)) 1/3))
* [misc]backup-simplify:  Simplify (+ (* 120.0 1) (* 0 0)) into 120.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 5 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (* 0 (pow x 5))) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 120.0) 1)) (pow (* 32.0 (pow x 5)) 1)))) 1) into (/ 3.75 (pow x 5))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ 3.75 (pow x 5))) (* 0 (log (* 32.0 (pow x 5))))) into (* 1.25 (/ 1 (pow x 5)))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* 32.0 (pow x 5))))) (+ (* (/ (pow (* 1.25 (/ 1 (pow x 5))) 1) 1)))) into (* 1.25 (pow (/ 32.0 (pow x 10)) 1/3))
* [misc]backup-simplify:  Simplify (+ (* 120.0 1) (* 0 0)) into 120.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 5 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (* 0 (pow x 5))) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 120.0) 1)) (pow (* 32.0 (pow x 5)) 1)))) 1) into (/ 3.75 (pow x 5))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ 3.75 (pow x 5))) (* 0 (log (* 32.0 (pow x 5))))) into (* 1.25 (/ 1 (pow x 5)))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* 32.0 (pow x 5))))) (+ (* (/ (pow (* 1.25 (/ 1 (pow x 5))) 1) 1)))) into (* 1.25 (pow (/ 32.0 (pow x 10)) 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow (* 32.0 (pow x 5)) 1/3) (* 1.25 (pow (/ 32.0 (pow x 10)) 1/3))) (* (* 1.25 (pow (/ 32.0 (pow x 10)) 1/3)) (pow (* 32.0 (pow x 5)) 1/3))) into (* 2.5 (pow (/ (pow 32.0 2) (pow x 5)) 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow (* (pow 32.0 2) (pow x 10)) 1/3) (* 1.25 (pow (/ 32.0 (pow x 10)) 1/3))) (* (* 2.5 (pow (/ (pow 32.0 2) (pow x 5)) 1/3)) (pow (* 32.0 (pow x 5)) 1/3))) into 120.0
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (* 0 (pow x 5)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 120.0) 2)) (pow (* 32.0 (pow x 5)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* 32.0 (pow x 5)) 1)))) 2) into (/ -7200.0 (* (pow 32.0 2) (pow x 10)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -7200.0 (* (pow 32.0 2) (pow x 10)))) (+ (* 0 (/ 3.75 (pow x 5))) (* 0 (log (* 32.0 (pow x 5)))))) into (- (* 2400.0 (/ 1 (* (pow 32.0 2) (pow x 10)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* 32.0 (pow x 5))))) (+ (* (/ (pow (* 1.25 (/ 1 (pow x 5))) 2) 2)) (* (/ (pow (- (* 2400.0 (/ 1 (* (pow 32.0 2) (pow x 10))))) 1) 1)))) into (* (- (* 0.78125 (/ 1 (pow x 10))) (* 2400.0 (/ 1 (* (pow 32.0 2) (pow x 10))))) (pow (* 32.0 (pow x 5)) 1/3))
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (* 0 (pow x 5)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 120.0) 2)) (pow (* 32.0 (pow x 5)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* 32.0 (pow x 5)) 1)))) 2) into (/ -7200.0 (* (pow 32.0 2) (pow x 10)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -7200.0 (* (pow 32.0 2) (pow x 10)))) (+ (* 0 (/ 3.75 (pow x 5))) (* 0 (log (* 32.0 (pow x 5)))))) into (- (* 2400.0 (/ 1 (* (pow 32.0 2) (pow x 10)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* 32.0 (pow x 5))))) (+ (* (/ (pow (* 1.25 (/ 1 (pow x 5))) 2) 2)) (* (/ (pow (- (* 2400.0 (/ 1 (* (pow 32.0 2) (pow x 10))))) 1) 1)))) into (* (- (* 0.78125 (/ 1 (pow x 10))) (* 2400.0 (/ 1 (* (pow 32.0 2) (pow x 10))))) (pow (* 32.0 (pow x 5)) 1/3))
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 5 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 5 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (* 0 (pow x 5)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 120.0) 2)) (pow (* 32.0 (pow x 5)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* 32.0 (pow x 5)) 1)))) 2) into (/ -7200.0 (* (pow 32.0 2) (pow x 10)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -7200.0 (* (pow 32.0 2) (pow x 10)))) (+ (* 0 (/ 3.75 (pow x 5))) (* 0 (log (* 32.0 (pow x 5)))))) into (- (* 2400.0 (/ 1 (* (pow 32.0 2) (pow x 10)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* 32.0 (pow x 5))))) (+ (* (/ (pow (* 1.25 (/ 1 (pow x 5))) 2) 2)) (* (/ (pow (- (* 2400.0 (/ 1 (* (pow 32.0 2) (pow x 10))))) 1) 1)))) into (* (- (* 0.78125 (/ 1 (pow x 10))) (* 2400.0 (/ 1 (* (pow 32.0 2) (pow x 10))))) (pow (* 32.0 (pow x 5)) 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow (* 32.0 (pow x 5)) 1/3) (* (- (* 0.78125 (/ 1 (pow x 10))) (* 2400.0 (/ 1 (* (pow 32.0 2) (pow x 10))))) (pow (* 32.0 (pow x 5)) 1/3))) (+ (* (* 1.25 (pow (/ 32.0 (pow x 10)) 1/3)) (* 1.25 (pow (/ 32.0 (pow x 10)) 1/3))) (* (* (- (* 0.78125 (/ 1 (pow x 10))) (* 2400.0 (/ 1 (* (pow 32.0 2) (pow x 10))))) (pow (* 32.0 (pow x 5)) 1/3)) (pow (* 32.0 (pow x 5)) 1/3)))) into (- (* 3.125 (pow (/ (pow 32.0 2) (pow x 20)) 1/3)) (* 4800.0 (pow (/ 1 (* (pow 32.0 4) (pow x 20))) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* (pow (* (pow 32.0 2) (pow x 10)) 1/3) (* (- (* 0.78125 (/ 1 (pow x 10))) (* 2400.0 (/ 1 (* (pow 32.0 2) (pow x 10))))) (pow (* 32.0 (pow x 5)) 1/3))) (+ (* (* 2.5 (pow (/ (pow 32.0 2) (pow x 5)) 1/3)) (* 1.25 (pow (/ 32.0 (pow x 10)) 1/3))) (* (- (* 3.125 (pow (/ (pow 32.0 2) (pow x 20)) 1/3)) (* 4800.0 (pow (/ 1 (* (pow 32.0 4) (pow x 20))) 1/3))) (pow (* 32.0 (pow x 5)) 1/3)))) into (- (* 225.0 (/ 1 (pow x 5))) (+ (* 76800.0 (/ 1 (* (pow 32.0 2) (pow x 5)))) (* 4800.0 (/ 0.03125 (pow x 5)))))
* [misc]backup-simplify:  Simplify (- (* 225.0 (/ 1 (pow x 5))) (+ (* 76800.0 (/ 1 (* (pow 32.0 2) (pow x 5)))) (* 4800.0 (/ 0.03125 (pow x 5))))) into (- (* 75.0 (/ 1 (pow x 5))) (* 76800.0 (/ 1 (* (pow 32.0 2) (pow x 5)))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 75.0 (/ 1 (pow x 5))) (* 76800.0 (/ 1 (* (pow 32.0 2) (pow x 5))))) (pow x 2)) (+ (* 120.0 x) (* 32.0 (pow x 5)))) into (- (+ (* 75.0 (/ 1 (pow x 3))) (+ (* 32.0 (pow x 5)) (* 120.0 x))) (* 76800.0 (/ 1 (* (pow 32.0 2) (pow x 3)))))
* [misc]approximate:  Taking taylor expansion of (* (* (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log x))) into (* -5 (log x))
* [misc]backup-simplify:  Simplify (exp (* -5 (log x))) into (pow x -5)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify (+ 0 -160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (- 160.0) 0) into (- 160.0)
* [misc]backup-simplify:  Simplify (log (- 160.0)) into (log (- 160.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 160.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 160.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log x))) into (* -5 (log x))
* [misc]backup-simplify:  Simplify (exp (* -5 (log x))) into (pow x -5)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify (+ 0 -160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (- 160.0) 0) into (- 160.0)
* [misc]backup-simplify:  Simplify (log (- 160.0)) into (log (- 160.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 160.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 160.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log x))) into (* -5 (log x))
* [misc]backup-simplify:  Simplify (exp (* -5 (log x))) into (pow x -5)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify (+ 0 -160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (- 160.0) 0) into (- 160.0)
* [misc]backup-simplify:  Simplify (log (- 160.0)) into (log (- 160.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 160.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 160.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log x))) into (* -5 (log x))
* [misc]backup-simplify:  Simplify (exp (* -5 (log x))) into (pow x -5)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify (+ 0 -160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (- 160.0) 0) into (- 160.0)
* [misc]backup-simplify:  Simplify (log (- 160.0)) into (log (- 160.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 160.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 160.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log x))) into (* -5 (log x))
* [misc]backup-simplify:  Simplify (exp (* -5 (log x))) into (pow x -5)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify (+ 0 -160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (- 160.0) 0) into (- 160.0)
* [misc]backup-simplify:  Simplify (log (- 160.0)) into (log (- 160.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 160.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 160.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 x) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log x))) into (* -5 (log x))
* [misc]backup-simplify:  Simplify (exp (* -5 (log x))) into (pow x -5)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify (+ 0 -160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (- 160.0) 0) into (- 160.0)
* [misc]backup-simplify:  Simplify (log (- 160.0)) into (log (- 160.0))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 160.0)) (* 3 (log x)))) into (* 1/3 (- (log (- 160.0)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) into (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 2) (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 3)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 3) into (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 3)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 160.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 160.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 160.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 160.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 160.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (- 160.0)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 2) 0) (* 0 (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 120.0 1) into 120.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 160.0) 2))) (* 1 (/ (* 1 (pow (* 2 120.0) 1)) (pow (- 160.0) 1)))) 2) into -0.75
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.75) (+ (* 0 0) (* 0 (- (log (- 160.0)) (* 3 (log x)))))) into (- 0.25)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.25) 1) 1)))) into (* -0.25 (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* 120.0 1) into 120.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 160.0) 2))) (* 1 (/ (* 1 (pow (* 2 120.0) 1)) (pow (- 160.0) 1)))) 2) into -0.75
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.75) (+ (* 0 0) (* 0 (- (log (- 160.0)) (* 3 (log x)))))) into (- 0.25)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.25) 1) 1)))) into (* -0.25 (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* 120.0 1) into 120.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 160.0) 2))) (* 1 (/ (* 1 (pow (* 2 120.0) 1)) (pow (- 160.0) 1)))) 2) into -0.75
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.75) (+ (* 0 0) (* 0 (- (log (- 160.0)) (* 3 (log x)))))) into (- 0.25)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.25) 1) 1)))) into (* -0.25 (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (* -0.25 (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.25 (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x)))))) (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x)))))))) into (- (* 0.5 (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 2) (* -0.25 (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))))) (+ (* 0 0) (* (- (* 0.5 (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 2))) (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x)))))))) into (- (* 0.75 (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 3)))
* [misc]backup-simplify:  Simplify (- (* 0.75 (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 3))) into (- (* 0.75 (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 3)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (pow x -5)) into (/ 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (+ 0 (/ 32.0 (pow x 5))) into (* 32.0 (/ 1 (pow x 5)))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 160.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 120.0) 1)) (pow (- 160.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 (* 32.0 (/ 1 (pow x 5)))) 1)) (pow (- 160.0) 1)))) 6) into (/ -0.19999999999999998 (pow x 5))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.19999999999999998 (pow x 5))) (+ (* 0 -0.75) (+ (* 0 0) (* 0 (- (log (- 160.0)) (* 3 (log x))))))) into (- (* 0.06666666666666665 (/ 1 (pow x 5))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.25) 1) 1)) (* (/ (pow (- (* 0.06666666666666665 (/ 1 (pow x 5)))) 1) 1)))) into (* -0.06666666666666665 (/ (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (pow x 5)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (pow x -5)) into (/ 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (+ 0 (/ 32.0 (pow x 5))) into (* 32.0 (/ 1 (pow x 5)))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 160.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 120.0) 1)) (pow (- 160.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 (* 32.0 (/ 1 (pow x 5)))) 1)) (pow (- 160.0) 1)))) 6) into (/ -0.19999999999999998 (pow x 5))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.19999999999999998 (pow x 5))) (+ (* 0 -0.75) (+ (* 0 0) (* 0 (- (log (- 160.0)) (* 3 (log x))))))) into (- (* 0.06666666666666665 (/ 1 (pow x 5))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.25) 1) 1)) (* (/ (pow (- (* 0.06666666666666665 (/ 1 (pow x 5)))) 1) 1)))) into (* -0.06666666666666665 (/ (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (pow x 5)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (pow x -5)) into (/ 32.0 (pow x 5))
* [misc]backup-simplify:  Simplify (+ 0 (/ 32.0 (pow x 5))) into (* 32.0 (/ 1 (pow x 5)))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 160.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 120.0) 1)) (pow (- 160.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 (* 32.0 (/ 1 (pow x 5)))) 1)) (pow (- 160.0) 1)))) 6) into (/ -0.19999999999999998 (pow x 5))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log (- 160.0))) into (- (log (- 160.0)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.19999999999999998 (pow x 5))) (+ (* 0 -0.75) (+ (* 0 0) (* 0 (- (log (- 160.0)) (* 3 (log x))))))) into (- (* 0.06666666666666665 (/ 1 (pow x 5))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.25) 1) 1)) (* (/ (pow (- (* 0.06666666666666665 (/ 1 (pow x 5)))) 1) 1)))) into (* -0.06666666666666665 (/ (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (pow x 5)))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (* -0.06666666666666665 (/ (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (pow x 5)))) (+ (* 0 (* -0.25 (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))))) (+ (* (* -0.25 (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x)))))) 0) (* (* -0.06666666666666665 (/ (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (pow x 5))) (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))))))) into (- (* 0.1333333333333333 (/ (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 2) (pow x 5))))
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 2) (* -0.06666666666666665 (/ (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) (pow x 5)))) (+ (* 0 (* -0.25 (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))))) (+ (* (- (* 0.5 (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 2))) 0) (* (- (* 0.1333333333333333 (/ (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 2) (pow x 5)))) (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))))))) into (- (* 0.19999999999999996 (/ (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 3) (pow x 5))))
* [misc]backup-simplify:  Simplify (- (* 0.19999999999999996 (/ (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 3) (pow x 5)))) into (- (* 0.19999999999999996 (/ (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log x))))) 3) (pow x 5))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.19999999999999996 (/ (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 3) (pow (/ 1 x) 5)))) (pow (/ 1 x) 3)) (+ (* (- (* 0.75 (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 3))) (pow (/ 1 x) 2)) (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 3))) into (- (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 3) (+ (* 0.19999999999999996 (* (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 3) (pow x 2))) (* 0.75 (/ (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 3) (pow x 2)))))
* [misc]approximate:  Taking taylor expansion of (* (* (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log -1) (log x))) into (* 5 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 5 (- (log -1) (log x)))) into (exp (* 5 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify (+ 0 160.0) into 160.0
* [misc]backup-simplify:  Simplify (+ 160.0 0) into 160.0
* [misc]backup-simplify:  Simplify (log 160.0) into (log 160.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 160.0) (* 3 (log x)))) into (* 1/3 (- (log 160.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 160.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log -1) (log x))) into (* 5 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 5 (- (log -1) (log x)))) into (exp (* 5 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify (+ 0 160.0) into 160.0
* [misc]backup-simplify:  Simplify (+ 160.0 0) into 160.0
* [misc]backup-simplify:  Simplify (log 160.0) into (log 160.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 160.0) (* 3 (log x)))) into (* 1/3 (- (log 160.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 160.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log -1) (log x))) into (* 5 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 5 (- (log -1) (log x)))) into (exp (* 5 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify (+ 0 160.0) into 160.0
* [misc]backup-simplify:  Simplify (+ 160.0 0) into 160.0
* [misc]backup-simplify:  Simplify (log 160.0) into (log 160.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 160.0) (* 3 (log x)))) into (* 1/3 (- (log 160.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 160.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log -1) (log x))) into (* 5 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 5 (- (log -1) (log x)))) into (exp (* 5 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify (+ 0 160.0) into 160.0
* [misc]backup-simplify:  Simplify (+ 160.0 0) into 160.0
* [misc]backup-simplify:  Simplify (log 160.0) into (log 160.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 160.0) (* 3 (log x)))) into (* 1/3 (- (log 160.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 160.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log -1) (log x))) into (* 5 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 5 (- (log -1) (log x)))) into (exp (* 5 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify (+ 0 160.0) into 160.0
* [misc]backup-simplify:  Simplify (+ 160.0 0) into 160.0
* [misc]backup-simplify:  Simplify (log 160.0) into (log 160.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 160.0) (* 3 (log x)))) into (* 1/3 (- (log 160.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 160.0) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (pow (/ 1 (- x)) (+ (+ 3 1) 1))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ (+ 3 1) 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (+ 3 1) 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (+ 3 1) 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 3 1) 1) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ 4 1) into 5
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 5 (- (log -1) (log x))) into (* 5 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 5 (- (log -1) (log x)))) into (exp (* 5 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify (+ 0 160.0) into 160.0
* [misc]backup-simplify:  Simplify (+ 160.0 0) into 160.0
* [misc]backup-simplify:  Simplify (log 160.0) into (log 160.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 160.0) (* 3 (log x)))) into (* 1/3 (- (log 160.0) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) into (exp (* 1/3 (- (log 160.0) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (exp (* 1/3 (- (log 160.0) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 160.0) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 3)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 3) into (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 3)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 160.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 160.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 160.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 160.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 160.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 160.0) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log 160.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 2) 0) (* 0 (exp (* 1/3 (- (log 160.0) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 120.0 -1) into -120.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ -120.0 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (+ (- 120.0) 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 160.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 120.0)) 1)) (pow 160.0 1)))) 2) into -0.75
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.75) (+ (* 0 0) (* 0 (- (log 160.0) (* 3 (log x)))))) into (- 0.25)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.25) 1) 1)))) into (* -0.25 (exp (* 1/3 (- (log 160.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* 120.0 -1) into -120.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ -120.0 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (+ (- 120.0) 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 160.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 120.0)) 1)) (pow 160.0 1)))) 2) into -0.75
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.75) (+ (* 0 0) (* 0 (- (log 160.0) (* 3 (log x)))))) into (- 0.25)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.25) 1) 1)))) into (* -0.25 (exp (* 1/3 (- (log 160.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (* 120.0 -1) into -120.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ -120.0 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (+ (- 120.0) 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 160.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 120.0)) 1)) (pow 160.0 1)))) 2) into -0.75
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.75) (+ (* 0 0) (* 0 (- (log 160.0) (* 3 (log x)))))) into (- 0.25)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.25) 1) 1)))) into (* -0.25 (exp (* 1/3 (- (log 160.0) (* 3 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (* -0.25 (exp (* 1/3 (- (log 160.0) (* 3 (log x))))))) (+ (* 0 0) (* (* -0.25 (exp (* 1/3 (- (log 160.0) (* 3 (log x)))))) (exp (* 1/3 (- (log 160.0) (* 3 (log x)))))))) into (- (* 0.5 (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 2) (* -0.25 (exp (* 1/3 (- (log 160.0) (* 3 (log x))))))) (+ (* 0 0) (* (- (* 0.5 (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 2))) (exp (* 1/3 (- (log 160.0) (* 3 (log x)))))))) into (- (* 0.75 (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 3)))
* [misc]backup-simplify:  Simplify (- (* 0.75 (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 3))) into (- (* 0.75 (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 3)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (exp (* 5 (- (log -1) (log x))))) into (* 32.0 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ 0 (* 32.0 (exp (* 5 (- (log -1) (log x)))))) into (* 32.0 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 160.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 120.0)) 1)) (pow 160.0 2))) (* 1 (/ (* 1 1 (pow (* 6 (* 32.0 (exp (* 5 (- (log -1) (log x)))))) 1)) (pow 160.0 1)))) 6) into (* 0.19999999999999998 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 0.19999999999999998 (exp (* 5 (- (log -1) (log x)))))) (+ (* 0 -0.75) (+ (* 0 0) (* 0 (- (log 160.0) (* 3 (log x))))))) into (* 0.06666666666666665 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.25) 1) 1)) (* (/ (pow (* 0.06666666666666665 (exp (* 5 (- (log -1) (log x))))) 1) 1)))) into (* 0.06666666666666665 (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (exp (* 5 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (exp (* 5 (- (log -1) (log x))))) into (* 32.0 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ 0 (* 32.0 (exp (* 5 (- (log -1) (log x)))))) into (* 32.0 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 160.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 120.0)) 1)) (pow 160.0 2))) (* 1 (/ (* 1 1 (pow (* 6 (* 32.0 (exp (* 5 (- (log -1) (log x)))))) 1)) (pow 160.0 1)))) 6) into (* 0.19999999999999998 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 0.19999999999999998 (exp (* 5 (- (log -1) (log x)))))) (+ (* 0 -0.75) (+ (* 0 0) (* 0 (- (log 160.0) (* 3 (log x))))))) into (* 0.06666666666666665 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.25) 1) 1)) (* (/ (pow (* 0.06666666666666665 (exp (* 5 (- (log -1) (log x))))) 1) 1)))) into (* 0.06666666666666665 (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (exp (* 5 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 (exp (* 5 (- (log -1) (log x))))) into (* 32.0 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ 0 (* 32.0 (exp (* 5 (- (log -1) (log x)))))) into (* 32.0 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 160.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 120.0)) 1)) (pow 160.0 2))) (* 1 (/ (* 1 1 (pow (* 6 (* 32.0 (exp (* 5 (- (log -1) (log x)))))) 1)) (pow 160.0 1)))) 6) into (* 0.19999999999999998 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 160.0)) into (- (log 160.0) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 0.19999999999999998 (exp (* 5 (- (log -1) (log x)))))) (+ (* 0 -0.75) (+ (* 0 0) (* 0 (- (log 160.0) (* 3 (log x))))))) into (* 0.06666666666666665 (exp (* 5 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.25) 1) 1)) (* (/ (pow (* 0.06666666666666665 (exp (* 5 (- (log -1) (log x))))) 1) 1)))) into (* 0.06666666666666665 (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (exp (* 5 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (* 0.06666666666666665 (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (exp (* 5 (- (log -1) (log x))))))) (+ (* 0 (* -0.25 (exp (* 1/3 (- (log 160.0) (* 3 (log x))))))) (+ (* (* -0.25 (exp (* 1/3 (- (log 160.0) (* 3 (log x)))))) 0) (* (* 0.06666666666666665 (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (exp (* 5 (- (log -1) (log x)))))) (exp (* 1/3 (- (log 160.0) (* 3 (log x))))))))) into (* 0.1333333333333333 (* (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 2) (exp (* 5 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 2) (* 0.06666666666666665 (* (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) (exp (* 5 (- (log -1) (log x))))))) (+ (* 0 (* -0.25 (exp (* 1/3 (- (log 160.0) (* 3 (log x))))))) (+ (* (- (* 0.5 (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 2))) 0) (* (* 0.1333333333333333 (* (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 2) (exp (* 5 (- (log -1) (log x)))))) (exp (* 1/3 (- (log 160.0) (* 3 (log x))))))))) into (* 0.19999999999999996 (* (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 3) (exp (* 5 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* 0.19999999999999996 (* (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 3) (exp (* 5 (- (log -1) (log x)))))) into (* 0.19999999999999996 (* (pow (exp (* 1/3 (- (log 160.0) (* 3 (log x))))) 3) (exp (* 5 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (* 0.19999999999999996 (* (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ 1 (- x))))))) 3) (exp (* 5 (- (log -1) (log (/ 1 (- x)))))))) (pow (/ 1 (- x)) 3)) (+ (* (- (* 0.75 (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ 1 (- x))))))) 3))) (pow (/ 1 (- x)) 2)) (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ 1 (- x))))))) 3))) into (- (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ -1 x)))))) 3) (+ (* 0.19999999999999996 (/ (* (exp (* 5 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ -1 x)))))) 3)) (pow x 3))) (* 0.75 (/ (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ -1 x)))))) 3) (pow x 2)))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -160.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 160.0)
* [misc]backup-simplify:  Simplify (- 160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 160.0) (pow x 3)) into (* -160.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -160.0 (pow (/ 1 (/ 1 x)) 3)) into (* -160.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify 160.0 into 160.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 160.0 (pow (/ 1 (/ 1 (- x))) 3)) into (* -160.0 (pow x 3))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -160.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 160.0)
* [misc]backup-simplify:  Simplify (- 160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 160.0) (pow x 3)) into (* -160.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -160.0 (pow (/ 1 (/ 1 x)) 3)) into (* -160.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify 160.0 into 160.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 160.0 (pow (/ 1 (/ 1 (- x))) 3)) into (* -160.0 (pow x 3))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (+ 1/3 1/3)) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (+ 1/3 1/3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* * * * [misc]progress:  [ 2 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (+ 1 1)) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 3 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (* (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) 1/3) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (427 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* [exit]simplify:  Simplified to (* (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* * * * [misc]progress:  [ 4 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) 1) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* * * * [misc]progress:  [ 5 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) 2) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* * * * [misc]progress:  [ 6 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (+ 1 1)) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 7 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (pow (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) 1) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* * * * [misc]progress:  [ 8 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (exp (+ (log (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (log (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (log (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (64 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (log (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (log (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* * * * [misc]progress:  [ 9 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (exp (log (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* [exit]simplify:  Simplified to (log (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (log (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* * * * [misc]progress:  [ 10 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (log (exp (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* * * * [misc]progress:  [ 11 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (* (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (427 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* [exit]simplify:  Simplified to (* (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* * * * [misc]progress:  [ 12 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (65 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))) (cbrt (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))) (cbrt (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (64 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* * * * [misc]progress:  [ 13 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (* (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (154 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* [exit]simplify:  Simplified to (* (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* * * * [misc]progress:  [ 14 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (sqrt (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (65 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (65 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* * * * [misc]progress:  [ 15 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (* (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (293 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3))) (cbrt (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3))) (cbrt (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (+ (* (- 32.0) (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)))) (cbrt (+ (* (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (+ (* (- 32.0) (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (+ (* (- 32.0) (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)))) (cbrt (+ (* (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (+ (* (- 32.0) (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)))))
* * * * [misc]progress:  [ 16 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (* (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* 32.0 (pow x (+ 1 (+ 1 3))))) (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x)))))) (cbrt (+ (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* 32.0 (pow x (+ 1 (+ 1 3))))) (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x)))))) (cbrt (+ (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (182 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))) (cbrt (+ (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)) (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))))))
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))) (cbrt (+ (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)) (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))))))
* * * * [misc]progress:  [ 17 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (* (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (pow x (+ 1 (+ 1 3))) 32.0) 3) (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3))) (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0)) (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (pow x (+ 1 (+ 1 3))) 32.0) 3) (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3))) (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0)) (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))))
* [enter]simplify:  Simplifying (* (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (182 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (* (* (pow x (+ (+ 3 1) 1)) 32.0) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (* (* (pow x (+ (+ 3 1) 1)) 32.0) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* * * * [misc]progress:  [ 18 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (* (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0)) (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))) (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0)) (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0)) (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))) (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0)) (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))))
* [enter]simplify:  Simplifying (* (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (78 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (88 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* * * * [misc]progress:  [ 19 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* 1 (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* * * * [misc]progress:  [ 20 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))))
* * * * [misc]progress:  [ 21 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (sqrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (sqrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (sqrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (sqrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (sqrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* * * * [misc]progress:  [ 22 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt 1)) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt 1))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (65 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt 1))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt 1))
* * * * [misc]progress:  [ 23 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (* (cbrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (* (cbrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (* (cbrt (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (cbrt (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (* (cbrt (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (cbrt (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))))
* * * * [misc]progress:  [ 24 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (sqrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (sqrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (sqrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (65 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (sqrt (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (sqrt (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* * * * [misc]progress:  [ 25 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) 1) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) 1)
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* [exit]simplify:  Simplified to (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* * * * [misc]progress:  [ 26 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (* (cbrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (65 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* * * * [misc]progress:  [ 27 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (sqrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (* (cbrt (sqrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (sqrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (sqrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* * * * [misc]progress:  [ 28 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt 1) (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* * * * [misc]progress:  [ 29 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (* (cbrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (65 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* * * * [misc]progress:  [ 30 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (sqrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (* (sqrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (65 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (sqrt (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (sqrt (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* * * * [misc]progress:  [ 31 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* 1 (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* * * * [misc]progress:  [ 32 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (302 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (pow x (+ (+ 3 1) 1)) 32.0) 3) (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (pow x (+ (+ 3 1) 1)) 32.0) 3) (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* * * * [misc]progress:  [ 33 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* * [misc]simplify:  iters left: 3 (450 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* * * * [misc]progress:  [ 34 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (291 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (cbrt (+ (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (cbrt (+ (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3))))
* * * * [misc]progress:  [ 35 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* * [misc]simplify:  iters left: 3 (453 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (cbrt (* (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ 1 (+ 1 3))) 32.0)) (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (cbrt (* (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ 1 (+ 1 3))) 32.0)) (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x)))))))
* * * * [misc]progress:  [ 36 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* * * * [misc]progress:  [ 37 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (+ (+ 1/3 1/3) 1/3)))>
* [enter]simplify:  Simplifying (+ (+ 1/3 1/3) 1/3)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* [exit]simplify:  Simplified to (+ (+ 1/3 1/3) 1/3)
* [exit]simplify:  Simplified to (+ (+ 1/3 1/3) 1/3)
* * * * [misc]progress:  [ 38 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (+ (+ 1 1) 1)))>
* [enter]simplify:  Simplifying (+ (+ 1 1) 1)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* * * * [misc]progress:  [ 39 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (+ 2 1)))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 40 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (+ (+ 1 1) 1)))>
* [enter]simplify:  Simplifying (+ (+ 1 1) 1)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* * * * [misc]progress:  [ 41 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (* (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) 1/3))>
* [enter]simplify:  Simplifying (* (* (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) 3)
* * * * [misc]progress:  [ 42 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) 1))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))
* * * * [misc]progress:  [ 43 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) 1))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))
* * * * [misc]progress:  [ 44 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) 3))>
* * * * [misc]progress:  [ 45 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (+ (+ 1 1) 1)))>
* [enter]simplify:  Simplifying (+ (+ 1 1) 1)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* * * * [misc]progress:  [ 46 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (+ 2 1)))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 47 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (+ (+ 1 1) 1)))>
* [enter]simplify:  Simplifying (+ (+ 1 1) 1)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* * * * [misc]progress:  [ 48 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (pow (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) 1))>
* * * * [misc]progress:  [ 49 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (exp (+ (+ (log (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (log (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (log (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (log (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (log (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (log (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))) (log (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (log (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))) (log (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* * * * [misc]progress:  [ 50 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (exp (+ (log (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (log (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))))>
* [enter]simplify:  Simplifying (+ (log (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (log (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (68 enodes)
* [exit]simplify:  Simplified to (+ (log (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))) (log (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (+ (log (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))) (log (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* * * * [misc]progress:  [ 51 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))))>
* [enter]simplify:  Simplifying (log (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (74 enodes)
* [exit]simplify:  Simplified to (log (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* [exit]simplify:  Simplified to (log (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* * * * [misc]progress:  [ 52 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))))>
* [enter]simplify:  Simplifying (exp (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (83 enodes)
* * [misc]simplify:  iters left: 1 (112 enodes)
* [exit]simplify:  Simplified to (* (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x))) (pow (exp 32.0) (pow x (+ (+ 3 1) 1))))
* [exit]simplify:  Simplified to (* (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x))) (pow (exp 32.0) (pow x (+ (+ 3 1) 1))))
* * * * [misc]progress:  [ 53 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) 3)
* * * * [misc]progress:  [ 54 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (* (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* [exit]simplify:  Simplified to (* (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (* (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* * * * [misc]progress:  [ 55 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (68 enodes)
* * [misc]simplify:  iters left: 2 (72 enodes)
* * [misc]simplify:  iters left: 1 (75 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* [enter]simplify:  Simplifying (cbrt (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (67 enodes)
* * [misc]simplify:  iters left: 2 (71 enodes)
* * [misc]simplify:  iters left: 1 (74 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* [exit]simplify:  Simplified to (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* * * * [misc]progress:  [ 56 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (110 enodes)
* * [misc]simplify:  iters left: 2 (258 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) 3)
* * * * [misc]progress:  [ 57 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (sqrt (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (67 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* [exit]simplify:  Simplified to (sqrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* [enter]simplify:  Simplifying (sqrt (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (67 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* [exit]simplify:  Simplified to (sqrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))
* * * * [misc]progress:  [ 58 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (* (* (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (290 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3))
* [exit]simplify:  Simplified to (+ (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3))
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x (+ 3 (+ 1 1))) 32.0) (* (pow x (+ 3 (+ 1 1))) 32.0)) (* (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (+ (* (- 32.0) (pow x (+ 3 (+ 1 1)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))))
* [exit]simplify:  Simplified to (+ (* (* (pow x (+ 3 (+ 1 1))) 32.0) (* (pow x (+ 3 (+ 1 1))) 32.0)) (* (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (+ (* (- 32.0) (pow x (+ 3 (+ 1 1)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))))
* * * * [misc]progress:  [ 59 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (* (* (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* 32.0 (pow x (+ 1 (+ 1 3))))) (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))) (* (cbrt (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3))) (cbrt (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3)))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* 32.0 (pow x (+ 1 (+ 1 3))))) (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))) (* (cbrt (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3))) (cbrt (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3)))))
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (187 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)))) (cbrt (+ (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0))))) (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)))) (cbrt (+ (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0))))) (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))))
* * * * [misc]progress:  [ 60 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (* (* (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (187 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3))) (cbrt (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3)))) (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* 32.0 (pow x (+ 1 (+ 1 3))))) (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3))) (cbrt (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3)))) (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* 32.0 (pow x (+ 1 (+ 1 3))))) (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))))
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (186 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)))) (* (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))) (cbrt (+ (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)))) (* (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))) (cbrt (+ (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0))))))
* * * * [misc]progress:  [ 61 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (* (* (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* 32.0 (pow x (+ 1 (+ 1 3))))) (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))) (cbrt (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3)))) (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* 32.0 (pow x (+ 1 (+ 1 3))))) (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))))
* [exit]simplify:  Simplified to (* (* (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* 32.0 (pow x (+ 1 (+ 1 3))))) (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))) (cbrt (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3)))) (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* 32.0 (pow x (+ 1 (+ 1 3))))) (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))))
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (187 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)) (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))))) (* (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))) (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)) (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))))) (* (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))) (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0)))))
* * * * [misc]progress:  [ 62 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (* (* (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* (pow x (+ 1 (+ 1 3))) 32.0) 3) (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3))) (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0)) (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))))) (cbrt (+ (pow (* (pow x (+ 1 (+ 1 3))) 32.0) 3) (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* (pow x (+ 1 (+ 1 3))) 32.0) 3) (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3))) (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0)) (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))))) (cbrt (+ (pow (* (pow x (+ 1 (+ 1 3))) 32.0) 3) (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3))))
* [enter]simplify:  Simplifying (* (* (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (187 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* (pow x (+ (+ 3 1) 1)) 32.0) (* (pow x (+ (+ 3 1) 1)) 32.0)) (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))) (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (cbrt (+ (* (* (pow x (+ (+ 3 1) 1)) 32.0) (* (pow x (+ (+ 3 1) 1)) 32.0)) (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* (pow x (+ (+ 3 1) 1)) 32.0) (* (pow x (+ (+ 3 1) 1)) 32.0)) (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))) (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (cbrt (+ (* (* (pow x (+ (+ 3 1) 1)) 32.0) (* (pow x (+ (+ 3 1) 1)) 32.0)) (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))))
* * * * [misc]progress:  [ 63 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (* (* (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (187 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0)) (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))) (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0)) (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))))) (cbrt (+ (pow (* (pow x (+ 1 (+ 1 3))) 32.0) 3) (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3))))
* [exit]simplify:  Simplified to (* (* (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0)) (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))) (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0)) (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))))) (cbrt (+ (pow (* (pow x (+ 1 (+ 1 3))) 32.0) 3) (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3))))
* [enter]simplify:  Simplifying (* (* (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (186 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (cbrt (+ (* (- (* (pow x (+ (+ 3 1) 1)) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))))
* [exit]simplify:  Simplified to (* (* (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (cbrt (+ (* (- (* (pow x (+ (+ 3 1) 1)) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))))
* * * * [misc]progress:  [ 64 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (* (* (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* (pow x (+ 1 (+ 1 3))) 32.0) 3))) (* (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0)) (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))) (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0)) (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* (pow x (+ 1 (+ 1 3))) 32.0) 3))) (* (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0)) (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))) (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0)) (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))))))
* [enter]simplify:  Simplifying (* (* (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (187 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (* (* (pow x (+ (+ 3 1) 1)) 32.0) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (* (cbrt (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (* (* (pow x (+ (+ 3 1) 1)) 32.0) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (* (cbrt (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* * * * [misc]progress:  [ 65 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (* (* (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (445 enodes)
* [exit]simplify:  Simplified to (* (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0)))
* [exit]simplify:  Simplified to (* (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0)))
* [enter]simplify:  Simplifying (* (* (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (83 enodes)
* * [misc]simplify:  iters left: 1 (91 enodes)
* [exit]simplify:  Simplified to (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))
* [exit]simplify:  Simplified to (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))
* * * * [misc]progress:  [ 66 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (* (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (311 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (pow x (+ (+ 3 1) 1)) 32.0) 3) (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3))) (* (cbrt (+ (pow (* (pow x (+ (+ 3 1) 1)) 32.0) 3) (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (pow x (+ (+ 3 1) 1)) 32.0) 3) (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3))) (* (cbrt (+ (pow (* (pow x (+ (+ 3 1) 1)) 32.0) 3) (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (+ (* (- 32.0) (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)))) (cbrt (+ (* (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (+ (* (- 32.0) (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (+ (* (- 32.0) (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)))) (cbrt (+ (* (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (+ (* (- 32.0) (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)))))
* * * * [misc]progress:  [ 67 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (* (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* (pow x (+ (+ 3 1) 1)) 32.0) 3) (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (cbrt (* (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* (pow x (+ (+ 3 1) 1)) 32.0) 3) (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (cbrt (* (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (182 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))) (cbrt (+ (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)) (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))))))
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))) (cbrt (+ (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)) (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))))))
* * * * [misc]progress:  [ 68 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (* (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (pow (* (pow x (+ (+ 3 1) 1)) 32.0) 3) (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3)))) (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (pow (* (pow x (+ (+ 3 1) 1)) 32.0) 3) (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3)))) (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [enter]simplify:  Simplifying (* (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (182 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (* (* (pow x (+ (+ 3 1) 1)) 32.0) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (* (* (pow x (+ (+ 3 1) 1)) 32.0) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* * * * [misc]progress:  [ 69 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (* (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (456 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (* (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (* (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))))
* [enter]simplify:  Simplifying (* (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (78 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (88 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* * * * [misc]progress:  [ 70 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (* (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (308 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (* (cbrt (+ (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3))) (cbrt (+ (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (* (cbrt (+ (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3))) (cbrt (+ (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3)))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (+ (* (- 32.0) (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)))) (cbrt (+ (* (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (+ (* (- 32.0) (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (+ (* (- 32.0) (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)))) (cbrt (+ (* (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (+ (* (- 32.0) (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)))))
* * * * [misc]progress:  [ 71 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (* (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))) (cbrt (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3)))) (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* 32.0 (pow x (+ 1 (+ 1 3))))) (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))) (cbrt (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3)))) (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* 32.0 (pow x (+ 1 (+ 1 3))))) (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (182 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))) (cbrt (+ (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)) (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))))))
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))) (cbrt (+ (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)) (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 1 (+ 1 3))) 32.0))))))
* * * * [misc]progress:  [ 72 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (* (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))) (cbrt (- (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0))))) (cbrt (+ (pow (* (pow x (+ 1 (+ 1 3))) 32.0) 3) (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))) (cbrt (- (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0))))) (cbrt (+ (pow (* (pow x (+ 1 (+ 1 3))) 32.0) 3) (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3))))
* [enter]simplify:  Simplifying (* (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (182 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (* (* (pow x (+ (+ 3 1) 1)) 32.0) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (* (* (pow x (+ (+ 3 1) 1)) 32.0) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (cbrt (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* * * * [misc]progress:  [ 73 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (* (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (pow x (+ 3 (+ 1 1))) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (cbrt (* (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ 3 (+ 1 1))) 32.0)) (+ (* (pow x (+ 3 (+ 1 1))) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))))) (cbrt (* (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ 3 (+ 1 1))) 32.0)) (+ (* (pow x (+ 3 (+ 1 1))) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (pow x (+ 3 (+ 1 1))) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (cbrt (* (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ 3 (+ 1 1))) 32.0)) (+ (* (pow x (+ 3 (+ 1 1))) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))))) (cbrt (* (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ 3 (+ 1 1))) 32.0)) (+ (* (pow x (+ 3 (+ 1 1))) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x)))))))
* [enter]simplify:  Simplifying (* (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (78 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (88 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* [exit]simplify:  Simplified to (* (cbrt (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (- (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* * * * [misc]progress:  [ 74 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))>
* * * * [misc]progress:  [ 75 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))) (* (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))) (* (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* * * * [misc]progress:  [ 76 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (sqrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (sqrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (sqrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (cbrt (sqrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (cbrt (sqrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* * * * [misc]progress:  [ 77 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt 1)) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt 1))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* [exit]simplify:  Simplified to (* (cbrt 1) (* (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (* (cbrt 1) (* (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* * * * [misc]progress:  [ 78 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (* (cbrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (* (cbrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (82 enodes)
* * [misc]simplify:  iters left: 2 (84 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))) (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))) (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))))
* * * * [misc]progress:  [ 79 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (sqrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (sqrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (sqrt (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (* (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (* (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* * * * [misc]progress:  [ 80 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) 1) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) 1)
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* * * * [misc]progress:  [ 81 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (pow x (+ (+ 3 1) 1)) 32.0))))
* * * * [misc]progress:  [ 82 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (311 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* (pow x (+ (+ 3 1) 1)) 32.0) 3))) (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* (pow x (+ (+ 3 1) 1)) 32.0) 3))) (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* * * * [misc]progress:  [ 83 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (458 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* * * * [misc]progress:  [ 84 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (* (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (304 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (* (cbrt (+ (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3))) (cbrt (+ (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (* (cbrt (+ (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3))) (cbrt (+ (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3)))))
* * * * [misc]progress:  [ 85 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (* (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* 32.0 (pow x (+ 1 (+ 1 3))))))) (* (cbrt (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))) (cbrt (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3)))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))) (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* 32.0 (pow x (+ 1 (+ 1 3))))))) (* (cbrt (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))) (cbrt (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3)))))
* * * * [misc]progress:  [ 86 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (* (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (pow x (+ 1 (+ 1 3))) 32.0) 3) (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3))) (* (cbrt (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (cbrt (- (* (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (+ (* 120.0 x) (* (* -160.0 x) (* x x)))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (pow x (+ 1 (+ 1 3))) 32.0) 3) (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3))) (* (cbrt (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (cbrt (- (* (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (+ (* 120.0 x) (* (* -160.0 x) (* x x)))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0))))))
* * * * [misc]progress:  [ 87 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (* (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (457 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x (+ 3 (+ 1 1))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))) (* (cbrt (- (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))) (* (* (pow x (+ 3 (+ 1 1))) 32.0) (* (pow x (+ 3 (+ 1 1))) 32.0)))) (cbrt (- (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))) (* (* (pow x (+ 3 (+ 1 1))) 32.0) (* (pow x (+ 3 (+ 1 1))) 32.0))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x (+ 3 (+ 1 1))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))) (* (cbrt (- (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))) (* (* (pow x (+ 3 (+ 1 1))) 32.0) (* (pow x (+ 3 (+ 1 1))) 32.0)))) (cbrt (- (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))) (* (* (pow x (+ 3 (+ 1 1))) 32.0) (* (pow x (+ 3 (+ 1 1))) 32.0))))))
* * * * [misc]progress:  [ 88 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (307 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (pow x (+ (+ 3 1) 1)) 32.0) 3) (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3))) (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* (pow x (+ (+ 3 1) 1)) 32.0) 3) (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3))) (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* * * * [misc]progress:  [ 89 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (460 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)) (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))) (* (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0))) (cbrt (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ (+ 3 1) 1)) 32.0)))))
* * * * [misc]progress:  [ 90 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (304 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3))) (* (cbrt (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (cbrt (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3) (pow (* 32.0 (pow x (+ 1 (+ 1 3)))) 3))) (* (cbrt (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (cbrt (+ (* 32.0 (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x)))))))
* * * * [misc]progress:  [ 91 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (455 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 3 (+ 1 1))) 32.0)) (+ (* (pow x (+ 3 (+ 1 1))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))) (* (cbrt (+ (* (pow x (+ 3 (+ 1 1))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))) (cbrt (+ (* (pow x (+ 3 (+ 1 1))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (pow x (+ 3 (+ 1 1))) 32.0)) (+ (* (pow x (+ 3 (+ 1 1))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))) (* (cbrt (+ (* (pow x (+ 3 (+ 1 1))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))) (cbrt (+ (* (pow x (+ 3 (+ 1 1))) 32.0) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))))
* * * * [misc]progress:  [ 92 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))))>
* * * * [misc]progress:  [ 93 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (pow (* -160.0 (* (* x x) x)) 1)) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* * * * [misc]progress:  [ 94 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (exp (log (* -160.0 (* (* x x) x))))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (log (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (* -160.0 x)))
* [exit]simplify:  Simplified to (log (* (* x x) (* -160.0 x)))
* * * * [misc]progress:  [ 95 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (log (exp (* -160.0 (* (* x x) x))))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (exp (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* * * * [misc]progress:  [ 96 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* (* (cbrt (* -160.0 (* (* x x) x))) (cbrt (* -160.0 (* (* x x) x)))) (cbrt (* -160.0 (* (* x x) x))))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* -160.0 (* (* x x) x))) (cbrt (* -160.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* -160.0 x) (* x x))) (cbrt (* (* -160.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* -160.0 x) (* x x))) (cbrt (* (* -160.0 x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* -160.0 x) (* x x)))
* * * * [misc]progress:  [ 97 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (cbrt (* (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))) (* -160.0 (* (* x x) x))))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))) (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (210 enodes)
* [exit]simplify:  Simplified to (pow (* (* -160.0 x) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (* -160.0 x) (* x x)) 3)
* * * * [misc]progress:  [ 98 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* (sqrt (* -160.0 (* (* x x) x))) (sqrt (* -160.0 (* (* x x) x))))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (sqrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* * * * [misc]progress:  [ 99 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* 1 (* -160.0 (* (* x x) x)))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* * * * [misc]progress:  [ 100 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 (* x x)) x)) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* -160.0 (* x x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* -160.0 (* x x))
* [exit]simplify:  Simplified to (* -160.0 (* x x))
* * * * [misc]progress:  [ 101 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* (* (* x x) x) -160.0)) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* * * * [misc]progress:  [ 102 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (pow (* -160.0 (* (* x x) x)) 1)) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* * * * [misc]progress:  [ 103 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (exp (log (* -160.0 (* (* x x) x))))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (log (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (* -160.0 x)))
* [exit]simplify:  Simplified to (log (* (* x x) (* -160.0 x)))
* * * * [misc]progress:  [ 104 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (log (exp (* -160.0 (* (* x x) x))))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (exp (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* * * * [misc]progress:  [ 105 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* (* (cbrt (* -160.0 (* (* x x) x))) (cbrt (* -160.0 (* (* x x) x)))) (cbrt (* -160.0 (* (* x x) x))))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* -160.0 (* (* x x) x))) (cbrt (* -160.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* -160.0 x) (* x x))) (cbrt (* (* -160.0 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* -160.0 x) (* x x))) (cbrt (* (* -160.0 x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* -160.0 x) (* x x)))
* * * * [misc]progress:  [ 106 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (cbrt (* (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))) (* -160.0 (* (* x x) x))))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))) (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (210 enodes)
* [exit]simplify:  Simplified to (pow (* (* -160.0 x) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (* -160.0 x) (* x x)) 3)
* * * * [misc]progress:  [ 107 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* (sqrt (* -160.0 (* (* x x) x))) (sqrt (* -160.0 (* (* x x) x))))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (sqrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -160.0 x) (* x x)))
* * * * [misc]progress:  [ 108 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* 1 (* -160.0 (* (* x x) x)))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* * * * [misc]progress:  [ 109 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* (* -160.0 (* x x)) x)) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* -160.0 (* x x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* -160.0 (* x x))
* [exit]simplify:  Simplified to (* -160.0 (* x x))
* * * * [misc]progress:  [ 110 / 122 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* (* (* x x) x) -160.0)) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* * * * [misc]progress:  [ 111 / 122 ] simplifiying candidate #<alt-event (Î» (x) (* (- (+ (* 2.5 (pow (/ (pow 32.0 2) (pow x 2)) 1/3)) (+ (pow (* (pow 32.0 2) (pow x 10)) 1/3) (* 3.125 (pow (/ (pow 32.0 2) (pow x 14)) 1/3)))) (* 4800.0 (pow (/ 1 (* (pow 32.0 4) (pow x 14))) 1/3))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (- (+ (* 2.5 (pow (/ (pow 32.0 2) (pow x 2)) 1/3)) (+ (pow (* (pow 32.0 2) (pow x 10)) 1/3) (* 3.125 (pow (/ (pow 32.0 2) (pow x 14)) 1/3)))) (* 4800.0 (pow (/ 1 (* (pow 32.0 4) (pow x 14))) 1/3))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (84 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* * [misc]simplify:  iters left: 3 (302 enodes)
* * [misc]simplify:  iters left: 2 (484 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x (+ 1 (+ 1 3))) 32.0) (+ (* x 120.0) (* (* -160.0 x) (* x x))))) (+ (cbrt (* (* 32.0 32.0) (pow x 10))) (- (+ (* 3.125 (cbrt (/ (* 32.0 32.0) (pow x 14)))) (* 2.5 (cbrt (* (/ 32.0 x) (/ 32.0 x))))) (* 4800.0 (cbrt (/ (/ 1 (pow 32.0 4)) (pow x 14)))))))
* * * * [misc]progress:  [ 112 / 122 ] simplifiying candidate #<alt-event (Î» (x) (* (- (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 2) (+ (* 0.5 (/ (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 2) (pow x 2))) (* 0.1333333333333333 (* (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 2) (pow x 2))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (- (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 2) (+ (* 0.5 (/ (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 2) (pow x 2))) (* 0.1333333333333333 (* (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 2) (pow x 2))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* * [misc]simplify:  iters left: 3 (376 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x (+ 3 (+ 1 1))) 32.0) (+ (* (* x x) (* -160.0 x)) (* 120.0 x)))) (- (* (* (pow x (* 1/3 3)) (pow (- 160.0) 1/3)) (* (pow x (* 1/3 3)) (pow (- 160.0) 1/3))) (* (* (* (pow x (* 1/3 3)) (pow (- 160.0) 1/3)) (* (pow x (* 1/3 3)) (pow (- 160.0) 1/3))) (+ (* (* x x) 0.1333333333333333) (/ 0.5 (* x x))))))
* * * * [misc]progress:  [ 113 / 122 ] simplifiying candidate #<alt-event (Î» (x) (* (- (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ -1 x)))))) 2) (+ (* 0.5 (/ (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ -1 x)))))) 2) (pow x 2))) (* 0.1333333333333333 (/ (* (exp (* 5 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ -1 x)))))) 2)) (pow x 3))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (- (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ -1 x)))))) 2) (+ (* 0.5 (/ (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ -1 x)))))) 2) (pow x 2))) (* 0.1333333333333333 (/ (* (exp (* 5 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ -1 x)))))) 2)) (pow x 3))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (91 enodes)
* * [misc]simplify:  iters left: 4 (208 enodes)
* [exit]simplify:  Simplified to (* (- (exp (* (- (log 160.0) (* 3 (log (/ -1 x)))) (+ 1/3 1/3))) (+ (* (/ (* (pow (exp 5) (+ 0 (log x))) 0.1333333333333333) (pow x 3)) (exp (* (- (log 160.0) (* 3 (log (/ -1 x)))) (+ 1/3 1/3)))) (* (/ 0.5 (* x x)) (exp (* (- (log 160.0) (* 3 (log (/ -1 x)))) (+ 1/3 1/3)))))) (cbrt (+ (* (pow x (+ (+ 1 3) 1)) 32.0) (+ (* (* x x) (* x -160.0)) (* x 120.0)))))
* * * * [misc]progress:  [ 114 / 122 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 75.0 (/ 1 (pow x 3))) (+ (* 32.0 (pow x 5)) (* 120.0 x))) (* 76800.0 (/ 1 (* (pow 32.0 2) (pow x 3))))))>
* [enter]simplify:  Simplifying (- (+ (* 75.0 (/ 1 (pow x 3))) (+ (* 32.0 (pow x 5)) (* 120.0 x))) (* 76800.0 (/ 1 (* (pow 32.0 2) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (110 enodes)
* * [misc]simplify:  iters left: 3 (276 enodes)
* [exit]simplify:  Simplified to (+ (* (/ (/ 1 x) (* x x)) (- 75.0 (/ (/ 76800.0 32.0) 32.0))) (+ (* 120.0 x) (* 32.0 (pow x 5))))
* * * * [misc]progress:  [ 115 / 122 ] simplifiying candidate #<alt-event (Î» (x) (- (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 3) (+ (* 0.19999999999999996 (* (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 3) (pow x 2))) (* 0.75 (/ (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 3) (pow x 2))))))>
* [enter]simplify:  Simplifying (- (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 3) (+ (* 0.19999999999999996 (* (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 3) (pow x 2))) (* 0.75 (/ (pow (exp (* 1/3 (- (log (- 160.0)) (* 3 (log (/ 1 x)))))) 3) (pow x 2)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (354 enodes)
* [exit]simplify:  Simplified to (- (pow (* (pow (- 160.0) 1/3) (pow x (* 1/3 3))) 3) (* (pow (* (pow (- 160.0) 1/3) (pow x (* 1/3 3))) 3) (+ (* (* 0.19999999999999996 x) x) (/ 0.75 (* x x)))))
* * * * [misc]progress:  [ 116 / 122 ] simplifiying candidate #<alt-event (Î» (x) (- (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ -1 x)))))) 3) (+ (* 0.19999999999999996 (/ (* (exp (* 5 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ -1 x)))))) 3)) (pow x 3))) (* 0.75 (/ (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ -1 x)))))) 3) (pow x 2))))))>
* [enter]simplify:  Simplifying (- (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ -1 x)))))) 3) (+ (* 0.19999999999999996 (/ (* (exp (* 5 (- (log -1) (log (/ -1 x))))) (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ -1 x)))))) 3)) (pow x 3))) (* 0.75 (/ (pow (exp (* 1/3 (- (log 160.0) (* 3 (log (/ -1 x)))))) 3) (pow x 2)))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (172 enodes)
* [exit]simplify:  Simplified to (+ (- (pow (exp (+ (* 1/3 (log 160.0)) (* (log (/ -1 x)) (* (- 3) 1/3)))) 3) (* (/ 0.75 (* x x)) (pow (exp (+ (* 1/3 (log 160.0)) (* (log (/ -1 x)) (* (- 3) 1/3)))) 3))) (* (- (/ (/ 0.19999999999999996 x) x)) (/ (pow (exp (+ (* 1/3 (log 160.0)) (* (log (/ -1 x)) (* (- 3) 1/3)))) 3) (/ x (pow (exp 5) (+ 0 (log x)))))))
* * * * [misc]progress:  [ 117 / 122 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* -160.0 x) (* x x)) (* 120.0 x)) (* (pow x (+ (+ 3 1) 1)) 32.0))
* * * * [misc]progress:  [ 118 / 122 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* -160.0 x) (* x x)) (* 120.0 x)) (* (pow x (+ (+ 3 1) 1)) 32.0))
* * * * [misc]progress:  [ 119 / 122 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* -160.0 x) (* x x)) (* 120.0 x)) (* (pow x (+ (+ 3 1) 1)) 32.0))
* * * * [misc]progress:  [ 120 / 122 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (78 enodes)
* * [misc]simplify:  iters left: 2 (84 enodes)
* * [misc]simplify:  iters left: 1 (86 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* -160.0 x)) (* 120.0 x)) (* (pow x (+ (+ 3 1) 1)) 32.0))
* * * * [misc]progress:  [ 121 / 122 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (78 enodes)
* * [misc]simplify:  iters left: 2 (84 enodes)
* * [misc]simplify:  iters left: 1 (86 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* -160.0 x)) (* 120.0 x)) (* (pow x (+ (+ 3 1) 1)) 32.0))
* * * * [misc]progress:  [ 122 / 122 ] simplifiying candidate #<alt-event (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (pow x 3))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (78 enodes)
* * [misc]simplify:  iters left: 2 (84 enodes)
* * [misc]simplify:  iters left: 1 (86 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* -160.0 x)) (* 120.0 x)) (* (pow x (+ (+ 3 1) 1)) 32.0))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))))> #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))> #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))) (cbrt (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (pow x (+ (+ 3 1) 1))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))> #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x)))))))> #<alt-delta (Î» (x) (* (exp (log (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))> #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3))) (cbrt (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (pow x (+ (+ 3 1) 1))) 3)))) (* (cbrt (+ (* (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (+ (* (- 32.0) (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)))) (cbrt (+ (* (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (+ (* (- 32.0) (pow x (+ 1 (+ 1 3)))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))) (* (* (pow x (+ 1 (+ 1 3))) 32.0) (* (pow x (+ 1 (+ 1 3))) 32.0)))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))> #<alt-delta (Î» (x) (* (* (* (cbrt (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))))) (cbrt (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))) +nan.0)) , with alts (#<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>)
* [enter]simplify:  Simplifying (+ (+ 3 1) 1)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (+ 1 (+ 1 3))
* [exit]simplify:  Simplified to (+ 1 (+ 1 3))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Setting MPFR precision to 832
* * * * [misc]points:  Setting MPFR precision to 1088
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 832
* * * * [misc]points:  Setting MPFR precision to 1088
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 832
* * * * [misc]points:  Setting MPFR precision to 1088
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 832
* * * * [misc]points:  Setting MPFR precision to 1088
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 832
* * * * [misc]points:  Setting MPFR precision to 1088
* * * * [misc]points:  Setting MPFR precision to 1344
* * * * [misc]points:  Setting MPFR precision to 1600
* * * * [misc]points:  Setting MPFR precision to 1856
* * * * [misc]points:  Setting MPFR precision to 2112
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 1856
* * * * [misc]points:  Setting MPFR precision to 2112
* * * * [misc]points:  Setting MPFR precision to 2368
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 2112
* * * * [misc]points:  Setting MPFR precision to 2368
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 2112
* * * * [misc]points:  Setting MPFR precision to 2368
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 2112
* * * * [misc]points:  Setting MPFR precision to 2368
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
