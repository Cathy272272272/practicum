* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 2 ] rewriting at (2 2)
* * * * [misc]progress:  [ 2 / 2 ] rewriting at (2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 2 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* 0.5 (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.5 (pow x 2)) into (* 0.5 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.5 (pow (/ 1 (/ 1 x)) 2)) into (* 0.5 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.5 (pow (/ 1 (/ 1 (- x))) 2)) into (* 0.5 (pow x 2))
* * * * [misc]progress:  [ 2 / 2 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0.5 (pow x 2)) (+ (* (- 2.0) x) 1.0)) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* (- 2.0) (/ 1 (/ 1 x))) (* 0.5 (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify 2.0 into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* 2.0 (/ 1 (/ 1 (- x)))) (* 0.5 (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (pow (* 0.5 (* x x)) 1)))>
* * * * [misc]progress:  [ 2 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (exp (log (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (log (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (log (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (log (* 0.5 (* x x)))
* * * * [misc]progress:  [ 3 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (log (exp (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (exp (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp 0.5) (* x x))
* [exit]simplify:  Simplified to (pow (exp 0.5) (* x x))
* * * * [misc]progress:  [ 4 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* [enter]simplify:  Simplifying (cbrt (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* 0.5 (* x x)))
* * * * [misc]progress:  [ 5 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (cbrt (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (127 enodes)
* * [misc]simplify:  iters left: 2 (270 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* 0.5 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* 0.5 (* x x)) 3)
* * * * [misc]progress:  [ 6 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (sqrt (* 0.5 (* x x))) (sqrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* * * * [misc]progress:  [ 7 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 1 (* 0.5 (* x x)))))>
* * * * [misc]progress:  [ 8 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* 0.5 x) x)))>
* [enter]simplify:  Simplifying (* 0.5 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 0.5 x)
* [exit]simplify:  Simplified to (* 0.5 x)
* * * * [misc]progress:  [ 9 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* x x) 0.5)))>
* * * * [misc]progress:  [ 10 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (+ 1.0 (* -2.0 x))) (exp (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (exp (+ 1.0 (* -2.0 x))) (exp (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (71 enodes)
* [exit]simplify:  Simplified to (exp (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (exp (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* * * * [misc]progress:  [ 11 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1))>
* * * * [misc]progress:  [ 12 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (log (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (log (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 13 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (exp (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 14 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 15 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* * * * [misc]progress:  [ 16 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 17 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (272 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))
* [enter]simplify:  Simplifying (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* * [misc]simplify:  iters left: 3 (482 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 18 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* * * * [misc]progress:  [ 19 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (336 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [enter]simplify:  Simplifying (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (60 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (66 enodes)
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* * * * [misc]progress:  [ 20 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ 1.0 (+ (* -2.0 x) (* 0.5 (* x x)))))>
* [enter]simplify:  Simplifying (+ (* -2.0 x) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (* (+ -2.0 (* 0.5 x)) x)
* [exit]simplify:  Simplified to (* (+ -2.0 (* 0.5 x)) x)
* * * * [misc]progress:  [ 21 / 27 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 0.5 (* x x)) (+ 1.0 (* -2.0 x))))>
* * * * [misc]progress:  [ 22 / 27 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (* 0.5 (* x x)))
* * * * [misc]progress:  [ 23 / 27 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (* 0.5 (* x x)))
* * * * [misc]progress:  [ 24 / 27 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (* 0.5 (* x x)))
* * * * [misc]progress:  [ 25 / 27 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 0.5 x)) (- 1.0 (* 2.0 x)))
* * * * [misc]progress:  [ 26 / 27 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 0.5 x)) (- 1.0 (* 2.0 x)))
* * * * [misc]progress:  [ 27 / 27 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 0.5 x)) (- 1.0 (* 2.0 x)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (cbrt (* 0.5 (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log 0.5) (* 2 (log x)))) into (* 1/3 (+ (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log 0.5) (* 2 (log x)))) into (* 1/3 (+ (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log 0.5) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.5 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.5 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.5 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.5 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.5 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.5 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.5 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.5 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.5 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.5 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.5 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.5 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.5 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.5 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 0.5) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.5 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.5 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.5 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.5 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.5 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.5 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.5 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.5 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.5 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.5 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.5 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.5 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.5 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.5 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x))))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 0.5) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.5 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.5 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.5 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.5 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.5 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.5 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.5 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.5 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.5 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.5 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.5 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.5 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.5 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.5 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 (- x))))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (cbrt (* 0.5 (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log 0.5) (* 2 (log x)))) into (* 1/3 (+ (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log 0.5) (* 2 (log x)))) into (* 1/3 (+ (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log 0.5) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.5 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.5 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.5 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.5 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.5 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.5 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.5 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.5 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.5 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.5 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.5 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.5 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.5 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.5 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 0.5) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.5 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.5 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.5 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.5 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.5 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.5 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.5 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.5 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.5 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.5 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.5 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.5 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.5 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.5 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x))))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 0.5) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.5 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.5 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.5 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.5 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.5 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.5 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.5 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.5 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.5 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.5 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.5 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.5 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.5 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.5 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 (- x))))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x))))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (cbrt (* 0.5 (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log 0.5) (* 2 (log x)))) into (* 1/3 (+ (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log 0.5) (* 2 (log x)))) into (* 1/3 (+ (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log 0.5) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.5 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.5 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.5 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.5 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.5 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.5 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.5 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.5 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.5 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.5 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.5 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.5 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.5 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.5 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 0.5) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.5 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.5 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.5 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.5 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.5 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.5 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.5 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.5 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.5 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.5 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.5 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.5 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.5 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.5 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x))))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 0.5) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.5 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.5 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.5 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.5 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.5 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.5 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.5 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.5 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.5 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.5 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.5 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.5 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.5 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.5 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 (- x))))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x))))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log 0.5) (* 2 (log x)))) into (* 1/3 (+ (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log 0.5) (* 2 (log x)))) into (* 1/3 (+ (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log 0.5) (* 2 (log x)))) into (* 1/3 (+ (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* x x))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* x x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log 0.5) (* 2 (log x)))) into (* 1/3 (+ (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))) into (pow (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) 2) into (pow (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log 0.5) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log 0.5) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) 0) (* 0 (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.5 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.5 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.5 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.5 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.5 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.5 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.5 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.5 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.5 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.5 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.5 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.5 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.5 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.5 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.5 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.5 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.5 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.5 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.5 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.5 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.5 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.5 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.5 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.5 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.5 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.5 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.5 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.5 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log 0.5)) into (+ (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log 0.5) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) 2) into (pow (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) 2)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* 0.5 (* (/ 1 x) (/ 1 x)))) (cbrt (* 0.5 (* (/ 1 x) (/ 1 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* 0.5 (* (/ 1 x) (/ 1 x)))) (cbrt (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* 0.5 (* (/ 1 x) (/ 1 x)))) (cbrt (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* (/ 1 x) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))) into (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2) into (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 0.5) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 0.5) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 0) (* 0 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.5 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.5 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.5 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.5 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.5 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.5 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.5 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.5 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.5 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.5 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.5 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.5 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.5 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.5 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.5 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.5 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.5 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.5 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.5 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.5 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.5 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.5 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.5 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.5 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.5 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.5 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.5 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.5 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 2) into (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 2)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) (cbrt (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) (cbrt (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) (cbrt (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.5) (* 2 (log x)))) into (* 1/3 (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) into (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))) into (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2) into (pow (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 0.5) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.5 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 0.5) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 0) (* 0 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.5 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.5 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.5 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.5 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.5 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.5 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.5 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.5 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.5 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.5 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.5 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.5 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.5 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.5 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.5 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.5 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.5 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.5) (* 2 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.5 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.5 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.5 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.5 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.5 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.5 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.5 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.5 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.5 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.5 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.5 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.5 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.5 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.5 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.5 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.5 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.5 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.5 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.5) (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.5) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.5) (* 2 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 (- x))))))) 2) into (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 2)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (pow (* 0.5 (* x x)) 1/3))))>
* * * * [misc]progress:  [ 2 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (pow (cbrt (* 0.5 (* x x))) 1))))>
* * * * [misc]progress:  [ 3 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (exp (log (cbrt (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (log (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (log (cbrt (* 0.5 (* x x))))
* * * * [misc]progress:  [ 4 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (log (exp (cbrt (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (exp (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (exp (cbrt (* 0.5 (* x x))))
* * * * [misc]progress:  [ 5 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (* (cbrt 0.5) (cbrt (* x x))))))>
* [enter]simplify:  Simplifying (cbrt 0.5)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (cbrt 0.5)
* [exit]simplify:  Simplified to (cbrt 0.5)
* [enter]simplify:  Simplifying (cbrt (* x x))
* * [misc]simplify:  iters left: 3 (3 enodes)
* [exit]simplify:  Simplified to (cbrt (* x x))
* [exit]simplify:  Simplified to (cbrt (* x x))
* * * * [misc]progress:  [ 6 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (* (* (cbrt (cbrt (* 0.5 (* x x)))) (cbrt (cbrt (* 0.5 (* x x))))) (cbrt (cbrt (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* 0.5 (* x x)))) (cbrt (cbrt (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* 0.5 (* x x)))) (cbrt (cbrt (* 0.5 (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* 0.5 (* x x)))) (cbrt (cbrt (* 0.5 (* x x)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* 0.5 (* x x))))
* * * * [misc]progress:  [ 7 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (cbrt (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* 0.5 (* x x))
* [exit]simplify:  Simplified to (* 0.5 (* x x))
* * * * [misc]progress:  [ 8 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (* (sqrt (cbrt (* 0.5 (* x x)))) (sqrt (cbrt (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* 0.5 (* x x))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* 0.5 (* x x))))
* * * * [misc]progress:  [ 9 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (* 1 (cbrt (* 0.5 (* x x)))))))>
* * * * [misc]progress:  [ 10 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (pow (* 0.5 (* x x)) 1/3)) (cbrt (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 11 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (pow (cbrt (* 0.5 (* x x))) 1)) (cbrt (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 12 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (exp (log (cbrt (* 0.5 (* x x)))))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (log (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (log (cbrt (* 0.5 (* x x))))
* * * * [misc]progress:  [ 13 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (log (exp (cbrt (* 0.5 (* x x)))))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (exp (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (exp (cbrt (* 0.5 (* x x))))
* * * * [misc]progress:  [ 14 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (* (cbrt 0.5) (cbrt (* x x)))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (cbrt 0.5)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (cbrt 0.5)
* [exit]simplify:  Simplified to (cbrt 0.5)
* [enter]simplify:  Simplifying (cbrt (* x x))
* * [misc]simplify:  iters left: 3 (3 enodes)
* [exit]simplify:  Simplified to (cbrt (* x x))
* [exit]simplify:  Simplified to (cbrt (* x x))
* * * * [misc]progress:  [ 15 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (* (* (cbrt (cbrt (* 0.5 (* x x)))) (cbrt (cbrt (* 0.5 (* x x))))) (cbrt (cbrt (* 0.5 (* x x)))))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* 0.5 (* x x)))) (cbrt (cbrt (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* 0.5 (* x x)))) (cbrt (cbrt (* 0.5 (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* 0.5 (* x x)))) (cbrt (cbrt (* 0.5 (* x x)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* 0.5 (* x x))))
* * * * [misc]progress:  [ 16 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x)))))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* 0.5 (* x x))
* [exit]simplify:  Simplified to (* 0.5 (* x x))
* * * * [misc]progress:  [ 17 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (* (sqrt (cbrt (* 0.5 (* x x)))) (sqrt (cbrt (* 0.5 (* x x)))))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* 0.5 (* x x))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* 0.5 (* x x))))
* * * * [misc]progress:  [ 18 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (* 1 (cbrt (* 0.5 (* x x))))) (cbrt (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 19 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (pow (* 0.5 (* x x)) 1/3) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 20 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (pow (cbrt (* 0.5 (* x x))) 1) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 21 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (exp (log (cbrt (* 0.5 (* x x))))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (log (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (log (cbrt (* 0.5 (* x x))))
* * * * [misc]progress:  [ 22 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (log (exp (cbrt (* 0.5 (* x x))))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (exp (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (exp (cbrt (* 0.5 (* x x))))
* * * * [misc]progress:  [ 23 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (* (cbrt 0.5) (cbrt (* x x))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (cbrt 0.5)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (cbrt 0.5)
* [exit]simplify:  Simplified to (cbrt 0.5)
* [enter]simplify:  Simplifying (cbrt (* x x))
* * [misc]simplify:  iters left: 3 (3 enodes)
* [exit]simplify:  Simplified to (cbrt (* x x))
* [exit]simplify:  Simplified to (cbrt (* x x))
* * * * [misc]progress:  [ 24 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (* (* (cbrt (cbrt (* 0.5 (* x x)))) (cbrt (cbrt (* 0.5 (* x x))))) (cbrt (cbrt (* 0.5 (* x x))))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* 0.5 (* x x)))) (cbrt (cbrt (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* 0.5 (* x x)))) (cbrt (cbrt (* 0.5 (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* 0.5 (* x x)))) (cbrt (cbrt (* 0.5 (* x x)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* 0.5 (* x x))))
* * * * [misc]progress:  [ 25 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* 0.5 (* x x))
* [exit]simplify:  Simplified to (* 0.5 (* x x))
* * * * [misc]progress:  [ 26 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (* (sqrt (cbrt (* 0.5 (* x x)))) (sqrt (cbrt (* 0.5 (* x x))))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* 0.5 (* x x))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* 0.5 (* x x))))
* * * * [misc]progress:  [ 27 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (* 1 (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 28 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (pow (* 0.5 (* x x)) (+ 1/3 1/3)) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (+ 1/3 1/3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* * * * [misc]progress:  [ 29 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (pow (cbrt (* 0.5 (* x x))) (+ 1 1)) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 30 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (pow (* (* 0.5 (* x x)) (* 0.5 (* x x))) 1/3) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* 0.5 (* x x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (90 enodes)
* [exit]simplify:  Simplified to (* (* 0.5 (* x x)) (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (* (* 0.5 (* x x)) (* 0.5 (* x x)))
* * * * [misc]progress:  [ 31 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (pow (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) 1) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* * * * [misc]progress:  [ 32 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (pow (cbrt (* 0.5 (* x x))) 2) (cbrt (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 33 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (pow (cbrt (* 0.5 (* x x))) (+ 1 1)) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 34 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (pow (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) 1) (cbrt (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 35 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (exp (+ (log (cbrt (* 0.5 (* x x)))) (log (cbrt (* 0.5 (* x x)))))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (* 0.5 (* x x)))) (log (cbrt (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (* 0.5 (* x x)))) (log (cbrt (* 0.5 (* x x)))))
* [exit]simplify:  Simplified to (+ (log (cbrt (* 0.5 (* x x)))) (log (cbrt (* 0.5 (* x x)))))
* * * * [misc]progress:  [ 36 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (exp (log (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (* 0.5 (* x x)))) (log (cbrt (* 0.5 (* x x)))))
* [exit]simplify:  Simplified to (+ (log (cbrt (* 0.5 (* x x)))) (log (cbrt (* 0.5 (* x x)))))
* * * * [misc]progress:  [ 37 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (log (exp (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))))
* [exit]simplify:  Simplified to (exp (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))))
* * * * [misc]progress:  [ 38 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (cbrt (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* 0.5 (* x x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (90 enodes)
* [exit]simplify:  Simplified to (* (* 0.5 (* x x)) (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (* (* 0.5 (* x x)) (* 0.5 (* x x)))
* * * * [misc]progress:  [ 39 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (* (cbrt (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))) (cbrt (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))))) (cbrt (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))) (cbrt (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))) (cbrt (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))) (cbrt (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))))
* * * * [misc]progress:  [ 40 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (cbrt (* (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))) (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))) (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* * [misc]simplify:  iters left: 2 (73 enodes)
* * [misc]simplify:  iters left: 1 (169 enodes)
* [exit]simplify:  Simplified to (* (* 0.5 (* x x)) (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (* (* 0.5 (* x x)) (* 0.5 (* x x)))
* * * * [misc]progress:  [ 41 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (sqrt (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))) (sqrt (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (fabs (cbrt (* 0.5 (* x x))))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (fabs (cbrt (* 0.5 (* x x))))
* * * * [misc]progress:  [ 42 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* 1 (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))) (cbrt (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 43 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (* (cbrt (* 0.5 (* x x))) (cbrt 0.5)) (cbrt (* x x))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* 0.5 (* x x))) (cbrt 0.5))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (* (cbrt 0.5) (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (* (cbrt 0.5) (cbrt (* 0.5 (* x x))))
* * * * [misc]progress:  [ 44 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (* (cbrt (* 0.5 (* x x))) (* (cbrt (cbrt (* 0.5 (* x x)))) (cbrt (cbrt (* 0.5 (* x x)))))) (cbrt (cbrt (* 0.5 (* x x))))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* 0.5 (* x x))) (* (cbrt (cbrt (* 0.5 (* x x)))) (cbrt (cbrt (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x)))) (cbrt (cbrt (* 0.5 (* x x)))))
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x)))) (cbrt (cbrt (* 0.5 (* x x)))))
* * * * [misc]progress:  [ 45 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (* (cbrt (* 0.5 (* x x))) (sqrt (cbrt (* 0.5 (* x x))))) (sqrt (cbrt (* 0.5 (* x x))))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* 0.5 (* x x))) (sqrt (cbrt (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))
* * * * [misc]progress:  [ 46 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (* (cbrt (* 0.5 (* x x))) 1) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* 0.5 (* x x))) 1)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (cbrt (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* 0.5 (* x x)))
* * * * [misc]progress:  [ 47 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt 0.5) (* (cbrt (* x x)) (cbrt (* 0.5 (* x x))))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* x x)) (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x x)) (cbrt (* (* 0.5 x) x)))
* [exit]simplify:  Simplified to (* (cbrt (* x x)) (cbrt (* (* 0.5 x) x)))
* * * * [misc]progress:  [ 48 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (* (cbrt (cbrt (* 0.5 (* x x)))) (cbrt (cbrt (* 0.5 (* x x))))) (* (cbrt (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))
* * * * [misc]progress:  [ 49 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (sqrt (cbrt (* 0.5 (* x x)))) (* (sqrt (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))
* * * * [misc]progress:  [ 50 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* 1 (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* * * * [misc]progress:  [ 51 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 52 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (95 enodes)
* * [misc]simplify:  iters left: 2 (163 enodes)
* * [misc]simplify:  iters left: 1 (270 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (* x (* x 0.5)))
* * * * [misc]progress:  [ 53 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x))))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (125 enodes)
* * [misc]simplify:  iters left: 2 (307 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (* (* (cbrt (* x (* x 0.5))) (cbrt (* x (* x 0.5)))) (cbrt (* x (* x 0.5)))))
* * * * [misc]progress:  [ 54 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x))))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (113 enodes)
* * [misc]simplify:  iters left: 2 (258 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (* (cbrt (* x (* x 0.5))) (* (/ (cbrt 0.5) (pow (/ -1 x) (* 2 1/3))) (cbrt (* x (* x 0.5))))))
* * * * [misc]progress:  [ 55 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (exp (* 1/3 (+ (log 0.5) (* 2 (log x)))))) (cbrt (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (94 enodes)
* * [misc]simplify:  iters left: 2 (148 enodes)
* * [misc]simplify:  iters left: 1 (237 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (pow (cbrt (* x (* x 0.5))) 3))
* * * * [misc]progress:  [ 56 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x))))))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x))))))) (cbrt (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (72 enodes)
* * [misc]simplify:  iters left: 3 (123 enodes)
* * [misc]simplify:  iters left: 2 (303 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (* (* (cbrt (* (* x x) 0.5)) (cbrt (* (* x x) 0.5))) (cbrt (* (* x x) 0.5))))
* * * * [misc]progress:  [ 57 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x))))))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x))))))) (cbrt (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (255 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (* (/ (cbrt 0.5) (pow (/ -1 x) (* 2 1/3))) (* (cbrt (* x (* x 0.5))) (cbrt (* x (* x 0.5))))))
* * * * [misc]progress:  [ 58 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* (* (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (94 enodes)
* * [misc]simplify:  iters left: 2 (135 enodes)
* * [misc]simplify:  iters left: 1 (206 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (pow (cbrt (* x (* x 0.5))) 3))
* * * * [misc]progress:  [ 59 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* (* (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (126 enodes)
* * [misc]simplify:  iters left: 2 (306 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x)))))
* * * * [misc]progress:  [ 60 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* (* (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (253 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (* (* (/ (cbrt 0.5) (pow (/ -1 x) (* 2 1/3))) (cbrt (* x (* x 0.5)))) (cbrt (* x (* x 0.5)))))
* * * * [misc]progress:  [ 61 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (pow (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) 2) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* (pow (exp (* 1/3 (+ (log 0.5) (* 2 (log x))))) 2) (cbrt (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (116 enodes)
* * [misc]simplify:  iters left: 2 (190 enodes)
* * [misc]simplify:  iters left: 1 (367 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (* 0.5 (* x x)))
* * * * [misc]progress:  [ 62 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 2) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ 1 x)))))) 2) (cbrt (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (142 enodes)
* * [misc]simplify:  iters left: 2 (355 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (* (pow (* 0.5 (* x x)) (+ 1/3 1/3)) (cbrt (* 0.5 (* x x)))))
* * * * [misc]progress:  [ 63 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 2) (cbrt (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* (pow (exp (* 1/3 (- (log 0.5) (* 2 (log (/ -1 x)))))) 2) (cbrt (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (128 enodes)
* * [misc]simplify:  iters left: 2 (303 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (* (* (/ (cbrt 0.5) (pow (/ -1 x) (* 2 1/3))) (cbrt (* x (* x 0.5)))) (/ (cbrt 0.5) (pow (/ -1 x) (* 2 1/3)))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 2.0)) 1)) (pow 1.0 1)))) 1) into -2.0
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 2.0)) 2)) (pow 1.0 2))) (* 1 (/ (* 1 (pow (* 2 0.5) 1)) (pow 1.0 1)))) 2) into (* 1/2 (- 1.0 (* 4.0 (/ 1 (pow 1.0 2)))))
* [misc]backup-simplify:  Simplify (* 1/2 (- 1.0 (* 4.0 (/ 1 (pow 1.0 2))))) into (* 1/2 (- 1.0 (* 4.0 (/ 1 (pow 1.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* 1/2 (- 1.0 (* 4.0 (/ 1 (pow 1.0 2))))) (pow x 2)) (+ (* -2.0 x) (log 1.0))) into (- (+ (* 0.5 (pow x 2)) (log 1.0)) (+ (* 2.0 (/ (pow x 2) (pow 1.0 2))) (* 2.0 x)))
* [misc]approximate:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- (log 0.5) (* 2 (log x))) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 2.0)) 1)) (pow 0.5 1)))) 1) into -4.0
* [misc]backup-simplify:  Simplify -4.0 into -4.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 2.0)) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 1.0) 1)) (pow 0.5 1)))) 2) into (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))
* [misc]backup-simplify:  Simplify (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2))))) into (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2))))) (pow (/ 1 x) 2)) (+ (* -4.0 (/ 1 x)) (- (log 0.5) (* 2 (log (/ 1 x)))))) into (- (+ (log 0.5) (* 2.0 (/ 1 (pow x 2)))) (+ (* 2 (log (/ 1 x))) (+ (* 2.0 (/ 1 (* (pow 0.5 2) (pow x 2)))) (* 4.0 (/ 1 x)))))
* [misc]approximate:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- (log 0.5) (* 2 (log x))) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 2.0) 1)) (pow 0.5 1)))) 1) into 4.0
* [misc]backup-simplify:  Simplify 4.0 into 4.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 2.0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 1.0) 1)) (pow 0.5 1)))) 2) into (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))
* [misc]backup-simplify:  Simplify (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2))))) into (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2))))) (pow (/ 1 (- x)) 2)) (+ (* 4.0 (/ 1 (- x))) (- (log 0.5) (* 2 (log (/ 1 (- x))))))) into (- (+ (log 0.5) (* 2.0 (/ 1 (pow x 2)))) (+ (* 2.0 (/ 1 (* (pow 0.5 2) (pow x 2)))) (+ (* 4.0 (/ 1 x)) (* 2 (log (/ -1 x))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (exp (log 1.0)) into 1.0
* [misc]taylor:  Taking taylor expansion of (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (log 1.0) into (log 1.0)
* [misc]backup-simplify:  Simplify (exp (log 1.0)) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 2.0)) 1)) (pow 1.0 1)))) 1) into -2.0
* [misc]backup-simplify:  Simplify (* (exp (log 1.0)) (+ (* (/ (pow -2.0 1) 1)))) into -2.0
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 2.0)) 2)) (pow 1.0 2))) (* 1 (/ (* 1 (pow (* 2 0.5) 1)) (pow 1.0 1)))) 2) into (* 1/2 (- 1.0 (* 4.0 (/ 1 (pow 1.0 2)))))
* [misc]backup-simplify:  Simplify (* (exp (log 1.0)) (+ (* (/ (pow -2.0 2) 2)) (* (/ (pow (* 1/2 (- 1.0 (* 4.0 (/ 1 (pow 1.0 2))))) 1) 1)))) into (* 1.0 (- 2.5 (* 2.0 (/ 1 (pow 1.0 2)))))
* [misc]backup-simplify:  Simplify (* 1.0 (- 2.5 (* 2.0 (/ 1 (pow 1.0 2))))) into (* 1.0 (- 2.5 (* 2.0 (/ 1 (pow 1.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* 1.0 (- 2.5 (* 2.0 (/ 1 (pow 1.0 2))))) (pow x 2)) (+ (* -2.0 x) 1.0)) into (- (+ (* 2.5 (pow x 2)) 1.0) (+ (* 2.0 (/ (pow x 2) (pow 1.0 2))) (* 2.0 x)))
* [misc]approximate:  Taking taylor expansion of (exp (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (exp (- (log 0.5) (* 2 (log x)))) into (exp (- (log 0.5) (* 2 (log x))))
* [misc]taylor:  Taking taylor expansion of (exp (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (exp (- (log 0.5) (* 2 (log x)))) into (exp (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (- (log 0.5) (* 2 (log x)))) into (exp (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 2.0)) 1)) (pow 0.5 1)))) 1) into -4.0
* [misc]backup-simplify:  Simplify (* (exp (- (log 0.5) (* 2 (log x)))) (+ (* (/ (pow -4.0 1) 1)))) into (* -4.0 (exp (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* -4.0 (exp (- (log 0.5) (* 2 (log x))))) into (* -4.0 (exp (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 2.0)) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 1.0) 1)) (pow 0.5 1)))) 2) into (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))
* [misc]backup-simplify:  Simplify (* (exp (- (log 0.5) (* 2 (log x)))) (+ (* (/ (pow -4.0 2) 2)) (* (/ (pow (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2))))) 1) 1)))) into (* (- 10.0 (* 2.0 (/ 1 (pow 0.5 2)))) (exp (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* (- 10.0 (* 2.0 (/ 1 (pow 0.5 2)))) (exp (- (log 0.5) (* 2 (log x))))) into (* (exp (- (log 0.5) (* 2 (log x)))) (- 10.0 (* 2.0 (/ 1 (pow 0.5 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (- (log 0.5) (* 2 (log (/ 1 x))))) (- 10.0 (* 2.0 (/ 1 (pow 0.5 2))))) (pow (/ 1 x) 2)) (+ (* (* -4.0 (exp (- (log 0.5) (* 2 (log (/ 1 x)))))) (/ 1 x)) (exp (- (log 0.5) (* 2 (log (/ 1 x))))))) into (- (+ (exp (- (log 0.5) (* 2 (log (/ 1 x))))) (* 10.0 (/ (exp (- (log 0.5) (* 2 (log (/ 1 x))))) (pow x 2)))) (+ (* 2.0 (/ (exp (- (log 0.5) (* 2 (log (/ 1 x))))) (* (pow 0.5 2) (pow x 2)))) (* 4.0 (/ (exp (- (log 0.5) (* 2 (log (/ 1 x))))) x))))
* [misc]approximate:  Taking taylor expansion of (exp (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (exp (- (log 0.5) (* 2 (log x)))) into (exp (- (log 0.5) (* 2 (log x))))
* [misc]taylor:  Taking taylor expansion of (exp (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (log (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify (log 0.5) into (log 0.5)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (exp (- (log 0.5) (* 2 (log x)))) into (exp (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (- (log 0.5) (* 2 (log x)))) into (exp (- (log 0.5) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 2.0) 1)) (pow 0.5 1)))) 1) into 4.0
* [misc]backup-simplify:  Simplify (* (exp (- (log 0.5) (* 2 (log x)))) (+ (* (/ (pow 4.0 1) 1)))) into (* 4.0 (exp (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* 4.0 (exp (- (log 0.5) (* 2 (log x))))) into (* 4.0 (exp (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 0.5)) into (- (log 0.5) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 2.0) 2)) (pow 0.5 2))) (* 1 (/ (* 1 (pow (* 2 1.0) 1)) (pow 0.5 1)))) 2) into (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2)))))
* [misc]backup-simplify:  Simplify (* (exp (- (log 0.5) (* 2 (log x)))) (+ (* (/ (pow 4.0 2) 2)) (* (/ (pow (* 1/2 (- 4.0 (* 4.0 (/ 1 (pow 0.5 2))))) 1) 1)))) into (* (- 10.0 (* 2.0 (/ 1 (pow 0.5 2)))) (exp (- (log 0.5) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* (- 10.0 (* 2.0 (/ 1 (pow 0.5 2)))) (exp (- (log 0.5) (* 2 (log x))))) into (* (exp (- (log 0.5) (* 2 (log x)))) (- 10.0 (* 2.0 (/ 1 (pow 0.5 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (- (log 0.5) (* 2 (log (/ 1 (- x)))))) (- 10.0 (* 2.0 (/ 1 (pow 0.5 2))))) (pow (/ 1 (- x)) 2)) (+ (* (* 4.0 (exp (- (log 0.5) (* 2 (log (/ 1 (- x))))))) (/ 1 (- x))) (exp (- (log 0.5) (* 2 (log (/ 1 (- x)))))))) into (- (+ (* 10.0 (/ (exp (- (log 0.5) (* 2 (log (/ -1 x))))) (pow x 2))) (exp (- (log 0.5) (* 2 (log (/ -1 x)))))) (+ (* 4.0 (/ (exp (- (log 0.5) (* 2 (log (/ -1 x))))) x)) (* 2.0 (/ (exp (- (log 0.5) (* 2 (log (/ -1 x))))) (* (pow 0.5 2) (pow x 2))))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (* 0.5 (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.5 (pow x 2)) into (* 0.5 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.5 (pow (/ 1 (/ 1 x)) 2)) into (* 0.5 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.5 (pow (/ 1 (/ 1 (- x))) 2)) into (* 0.5 (pow x 2))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 x) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -2.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* -2.0 1) (* 0 0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 2.0)) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0.5 1) (+ (* 0 0) (* 0 0))) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (+ (* 0.5 (pow x 2)) (+ (* (- 2.0) x) 1.0)) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 x))) (* 0.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (* -2.0 1) into -2.0
* [misc]backup-simplify:  Simplify (+ 0 -2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 2.0) 0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- 2.0) into (- 2.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* (- 2.0) (/ 1 (/ 1 x))) (* 0.5 (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -2.0 (/ 1 (- x)))) (* 0.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -2.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -2.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -2.0 in x
* [misc]backup-simplify:  Simplify -2.0 into -2.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 0.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.5 in x
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.5 1) into 0.5
* [misc]backup-simplify:  Simplify (+ 0 0.5) into 0.5
* [misc]backup-simplify:  Simplify 0.5 into 0.5
* [misc]backup-simplify:  Simplify (* -2.0 -1) into 2.0
* [misc]backup-simplify:  Simplify (+ 0 2.0) into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.0 0) into 2.0
* [misc]backup-simplify:  Simplify 2.0 into 2.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* 2.0 (/ 1 (/ 1 (- x)))) (* 0.5 (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (+ (log (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (log (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [enter]simplify:  Simplifying (log (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (log (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 2 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (+ (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (log (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 3 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (+ (log 1) (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (log 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (log 1)
* [exit]simplify:  Simplified to (log 1)
* [enter]simplify:  Simplifying (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (log (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (log (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 4 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (- (log (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))) (log (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (log (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (267 enodes)
* [exit]simplify:  Simplified to (log (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))
* [exit]simplify:  Simplified to (log (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3)))
* [enter]simplify:  Simplifying (log (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (483 enodes)
* [exit]simplify:  Simplified to (log (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (log (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 5 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (- (log (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))) (log (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (log (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (106 enodes)
* * [misc]simplify:  iters left: 3 (342 enodes)
* [exit]simplify:  Simplified to (log (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [exit]simplify:  Simplified to (log (* (- (+ (* x -2.0) 1.0) (* (* x 0.5) x)) (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))))
* [enter]simplify:  Simplifying (log (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (65 enodes)
* * [misc]simplify:  iters left: 1 (67 enodes)
* [exit]simplify:  Simplified to (log (- (+ (* x -2.0) 1.0) (* x (* x 0.5))))
* [exit]simplify:  Simplified to (log (- (+ (* x -2.0) 1.0) (* x (* x 0.5))))
* * * * [misc]progress:  [ 6 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (* 1 (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (log (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (log (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 7 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (pow (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) 1)))>
* * * * [misc]progress:  [ 8 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* * * * [misc]progress:  [ 9 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (exp (log (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (log (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (log (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (log (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 10 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 11 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (* (* (cbrt (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (* (cbrt (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (* (cbrt (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [enter]simplify:  Simplifying (cbrt (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (cbrt (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (cbrt (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 12 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (cbrt (* (* (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* [exit]simplify:  Simplified to (pow (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) 3)
* [exit]simplify:  Simplified to (pow (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) 3)
* * * * [misc]progress:  [ 13 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (* (sqrt (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (sqrt (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (sqrt (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* * * * [misc]progress:  [ 14 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (* 1 (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* * * * [misc]progress:  [ 15 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (pow (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) 1))>
* * * * [misc]progress:  [ 16 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (pow (exp 1) (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (exp 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to E
* [exit]simplify:  Simplified to E
* * * * [misc]progress:  [ 17 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (pow (exp (* (cbrt (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))))
* [exit]simplify:  Simplified to (exp (* (cbrt (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))) (cbrt (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))))
* * * * [misc]progress:  [ 18 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (pow (exp (sqrt (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (exp (sqrt (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (exp (sqrt (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* [exit]simplify:  Simplified to (exp (sqrt (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))))
* * * * [misc]progress:  [ 19 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (pow (exp 1) (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))>
* [enter]simplify:  Simplifying (exp 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to E
* [exit]simplify:  Simplified to E
* * * * [misc]progress:  [ 20 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (* (exp (log (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (exp (log (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (exp (log (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (exp (log (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 21 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (* (exp (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (exp (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (exp (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [enter]simplify:  Simplifying (exp (log (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 22 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (* (exp (log 1)) (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (exp (log 1))
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* [exit]simplify:  Simplified to (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))
* * * * [misc]progress:  [ 23 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (/ (exp (log (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)))) (exp (log (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (exp (log (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (273 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* 0.5 (* x x)) 3))
* [enter]simplify:  Simplifying (exp (log (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (484 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (+ (* (- (* (* x 0.5) x) (+ (* x -2.0) 1.0)) (* (* x 0.5) x)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 24 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (/ (exp (log (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))))) (exp (log (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (exp (log (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (347 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [enter]simplify:  Simplifying (exp (log (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (68 enodes)
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* * * * [misc]progress:  [ 25 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))>
* * * * [misc]progress:  [ 26 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (log (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (log (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 27 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (exp (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (59 enodes)
* * [misc]simplify:  iters left: 2 (77 enodes)
* * [misc]simplify:  iters left: 1 (79 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 28 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))) (cbrt (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (cbrt (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (cbrt (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 29 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (351 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* * * * [misc]progress:  [ 30 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))) (sqrt (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [enter]simplify:  Simplifying (sqrt (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 31 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* * * * [misc]progress:  [ 32 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ 1.0 (* -2.0 x)) (pow (* 0.5 (* x x)) 1)))))>
* * * * [misc]progress:  [ 33 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ 1.0 (* -2.0 x)) (exp (log (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (log (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (log (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (log (* 0.5 (* x x)))
* * * * [misc]progress:  [ 34 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ 1.0 (* -2.0 x)) (log (exp (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (exp (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp 0.5) (* x x))
* [exit]simplify:  Simplified to (pow (exp 0.5) (* x x))
* * * * [misc]progress:  [ 35 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x))))
* [enter]simplify:  Simplifying (cbrt (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* 0.5 (* x x)))
* * * * [misc]progress:  [ 36 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ 1.0 (* -2.0 x)) (cbrt (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (127 enodes)
* * [misc]simplify:  iters left: 2 (270 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* 0.5 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* 0.5 (* x x)) 3)
* * * * [misc]progress:  [ 37 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ 1.0 (* -2.0 x)) (* (sqrt (* 0.5 (* x x))) (sqrt (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 0.5 (* x x)))
* * * * [misc]progress:  [ 38 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ 1.0 (* -2.0 x)) (* 1 (* 0.5 (* x x)))))))>
* * * * [misc]progress:  [ 39 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ 1.0 (* -2.0 x)) (* (* 0.5 x) x)))))>
* [enter]simplify:  Simplifying (* 0.5 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 0.5 x)
* [exit]simplify:  Simplified to (* 0.5 x)
* * * * [misc]progress:  [ 40 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ 1.0 (* -2.0 x)) (* (* x x) 0.5)))))>
* * * * [misc]progress:  [ 41 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (log (* (exp (+ 1.0 (* -2.0 x))) (exp (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (exp (+ 1.0 (* -2.0 x))) (exp (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (71 enodes)
* [exit]simplify:  Simplified to (exp (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (exp (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* * * * [misc]progress:  [ 42 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (pow (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) 1))))>
* * * * [misc]progress:  [ 43 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (log (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (log (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 44 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (log (exp (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (exp (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (exp (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 45 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (* (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))) (cbrt (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0))))
* [enter]simplify:  Simplifying (cbrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 46 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (cbrt (* (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x 0.5) x) (+ (* x -2.0) 1.0)) 3)
* * * * [misc]progress:  [ 47 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (* (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))) (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 0.5)) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 48 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (/ (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3)) (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))))>
* [enter]simplify:  Simplifying (+ (pow (+ 1.0 (* -2.0 x)) 3) (pow (* 0.5 (* x x)) 3))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (272 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))
* [exit]simplify:  Simplified to (+ (pow (+ (* x -2.0) 1.0) 3) (pow (* (* 0.5 x) x) 3))
* [enter]simplify:  Simplifying (+ (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (- (* (* 0.5 (* x x)) (* 0.5 (* x x))) (* (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* * [misc]simplify:  iters left: 3 (482 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) 0.5) (+ (* x -2.0) 1.0)) (* (* x x) 0.5)) (* (+ (* x -2.0) 1.0) (+ (* x -2.0) 1.0)))
* * * * [misc]progress:  [ 49 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (* 1 (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* * * * [misc]progress:  [ 50 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (/ (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x)))) (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (- (* (+ 1.0 (* -2.0 x)) (+ 1.0 (* -2.0 x))) (* (* 0.5 (* x x)) (* 0.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (336 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [exit]simplify:  Simplified to (* (+ (+ (* x -2.0) 1.0) (* (* x x) 0.5)) (- (+ (* x -2.0) 1.0) (* (* x x) 0.5)))
* [enter]simplify:  Simplifying (- (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (60 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (66 enodes)
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* [exit]simplify:  Simplified to (- (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* * * * [misc]progress:  [ 51 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ 1.0 (+ (* -2.0 x) (* 0.5 (* x x)))))))>
* [enter]simplify:  Simplifying (+ (* -2.0 x) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (* (+ -2.0 (* 0.5 x)) x)
* [exit]simplify:  Simplified to (* (+ -2.0 (* 0.5 x)) x)
* * * * [misc]progress:  [ 52 / 64 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (* 0.5 (* x x)) (+ 1.0 (* -2.0 x))))))>
* * * * [misc]progress:  [ 53 / 64 ] simplifiying candidate #<alt-event (Î» (x) (exp (- (+ (* 0.5 (pow x 2)) (log 1.0)) (+ (* 2.0 (/ (pow x 2) (pow 1.0 2))) (* 2.0 x)))))>
* [enter]simplify:  Simplifying (exp (- (+ (* 0.5 (pow x 2)) (log 1.0)) (+ (* 2.0 (/ (pow x 2) (pow 1.0 2))) (* 2.0 x))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (258 enodes)
* [exit]simplify:  Simplified to (exp (- (+ (- (log 1.0) (* x 2.0)) (* x (* 0.5 x))) (* (* 2.0 (/ x 1.0)) (/ x 1.0))))
* * * * [misc]progress:  [ 54 / 64 ] simplifiying candidate #<alt-event (Î» (x) (exp (- (+ (log 0.5) (* 2.0 (/ 1 (pow x 2)))) (+ (* 2 (log (/ 1 x))) (+ (* 2.0 (/ 1 (* (pow 0.5 2) (pow x 2)))) (* 4.0 (/ 1 x)))))))>
* [enter]simplify:  Simplifying (exp (- (+ (log 0.5) (* 2.0 (/ 1 (pow x 2)))) (+ (* 2 (log (/ 1 x))) (+ (* 2.0 (/ 1 (* (pow 0.5 2) (pow x 2)))) (* 4.0 (/ 1 x))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (397 enodes)
* [exit]simplify:  Simplified to (* (exp (- (/ (/ 2.0 x) x) (/ 4.0 x))) (/ (* (/ 0.5 1) (* x x)) (pow (exp (/ 1 x)) (/ (/ 2.0 0.5) (* 0.5 x)))))
* * * * [misc]progress:  [ 55 / 64 ] simplifiying candidate #<alt-event (Î» (x) (exp (- (+ (log 0.5) (* 2.0 (/ 1 (pow x 2)))) (+ (* 2.0 (/ 1 (* (pow 0.5 2) (pow x 2)))) (+ (* 4.0 (/ 1 x)) (* 2 (log (/ -1 x))))))))>
* [enter]simplify:  Simplifying (exp (- (+ (log 0.5) (* 2.0 (/ 1 (pow x 2)))) (+ (* 2.0 (/ 1 (* (pow 0.5 2) (pow x 2)))) (+ (* 4.0 (/ 1 x)) (* 2 (log (/ -1 x)))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* * [misc]simplify:  iters left: 3 (404 enodes)
* [exit]simplify:  Simplified to (* (exp (- (- (/ (/ 2.0 x) x) (/ 4.0 x)) (/ 2.0 (* (* 0.5 x) (* 0.5 x))))) (/ 0.5 (* (/ -1 x) (/ -1 x))))
* * * * [misc]progress:  [ 56 / 64 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 2.5 (pow x 2)) 1.0) (+ (* 2.0 (/ (pow x 2) (pow 1.0 2))) (* 2.0 x))))>
* [enter]simplify:  Simplifying (- (+ (* 2.5 (pow x 2)) 1.0) (+ (* 2.0 (/ (pow x 2) (pow 1.0 2))) (* 2.0 x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (177 enodes)
* * [misc]simplify:  iters left: 2 (379 enodes)
* [exit]simplify:  Simplified to (- (+ (* (* 2.5 x) x) (- 1.0 (* 2.0 x))) (/ 2.0 (* (/ 1.0 x) (/ 1.0 x))))
* * * * [misc]progress:  [ 57 / 64 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (exp (- (log 0.5) (* 2 (log (/ 1 x))))) (* 10.0 (/ (exp (- (log 0.5) (* 2 (log (/ 1 x))))) (pow x 2)))) (+ (* 2.0 (/ (exp (- (log 0.5) (* 2 (log (/ 1 x))))) (* (pow 0.5 2) (pow x 2)))) (* 4.0 (/ (exp (- (log 0.5) (* 2 (log (/ 1 x))))) x)))))>
* [enter]simplify:  Simplifying (- (+ (exp (- (log 0.5) (* 2 (log (/ 1 x))))) (* 10.0 (/ (exp (- (log 0.5) (* 2 (log (/ 1 x))))) (pow x 2)))) (+ (* 2.0 (/ (exp (- (log 0.5) (* 2 (log (/ 1 x))))) (* (pow 0.5 2) (pow x 2)))) (* 4.0 (/ (exp (- (log 0.5) (* 2 (log (/ 1 x))))) x))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* * [misc]simplify:  iters left: 3 (441 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (/ 0.5 1) x) (- 4.0)) (* (* x x) 0.5)) (* (/ 0.5 1) (- 10.0 (/ 2.0 (* 0.5 0.5)))))
* * * * [misc]progress:  [ 58 / 64 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 10.0 (/ (exp (- (log 0.5) (* 2 (log (/ -1 x))))) (pow x 2))) (exp (- (log 0.5) (* 2 (log (/ -1 x)))))) (+ (* 4.0 (/ (exp (- (log 0.5) (* 2 (log (/ -1 x))))) x)) (* 2.0 (/ (exp (- (log 0.5) (* 2 (log (/ -1 x))))) (* (pow 0.5 2) (pow x 2)))))))>
* [enter]simplify:  Simplifying (- (+ (* 10.0 (/ (exp (- (log 0.5) (* 2 (log (/ -1 x))))) (pow x 2))) (exp (- (log 0.5) (* 2 (log (/ -1 x)))))) (+ (* 4.0 (/ (exp (- (log 0.5) (* 2 (log (/ -1 x))))) x)) (* 2.0 (/ (exp (- (log 0.5) (* 2 (log (/ -1 x))))) (* (pow 0.5 2) (pow x 2))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (425 enodes)
* [exit]simplify:  Simplified to (+ (/ 0.5 (* (/ -1 x) (/ -1 x))) (* (/ (/ 0.5 x) (* (/ -1 x) (/ -1 x))) (- (- (/ 10.0 x) 4.0) (/ (/ 2.0 0.5) (* x 0.5)))))
* * * * [misc]progress:  [ 59 / 64 ] simplifiying candidate #<alt-event (Î» (x) (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))))>
* [enter]simplify:  Simplifying (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* * * * [misc]progress:  [ 60 / 64 ] simplifiying candidate #<alt-event (Î» (x) (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))))>
* [enter]simplify:  Simplifying (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* * * * [misc]progress:  [ 61 / 64 ] simplifiying candidate #<alt-event (Î» (x) (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2))))))>
* [enter]simplify:  Simplifying (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -2.0) 1.0) (* (* x 0.5) x))
* * * * [misc]progress:  [ 62 / 64 ] simplifiying candidate #<alt-event (Î» (x) (exp (log (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))))>
* [enter]simplify:  Simplifying (exp (log (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* * [misc]simplify:  iters left: 1 (82 enodes)
* [exit]simplify:  Simplified to (+ (- 1.0 (* 2.0 x)) (* x (* 0.5 x)))
* * * * [misc]progress:  [ 63 / 64 ] simplifiying candidate #<alt-event (Î» (x) (exp (log (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))))>
* [enter]simplify:  Simplifying (exp (log (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* * [misc]simplify:  iters left: 1 (82 enodes)
* [exit]simplify:  Simplified to (+ (- 1.0 (* 2.0 x)) (* x (* 0.5 x)))
* * * * [misc]progress:  [ 64 / 64 ] simplifiying candidate #<alt-event (Î» (x) (exp (log (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x)))))>
* [enter]simplify:  Simplifying (exp (log (- (+ (* 0.5 (pow x 2)) 1.0) (* 2.0 x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* * [misc]simplify:  iters left: 1 (82 enodes)
* [exit]simplify:  Simplified to (+ (- 1.0 (* 2.0 x)) (* x (* 0.5 x)))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (exp (log (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))))> #<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))> #<alt-delta (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* (* (cbrt (* 0.5 (* x x))) (cbrt (* 0.5 (* x x)))) (cbrt (* 0.5 (* x x))))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))) +nan.0)) , with alts (#<alt-event (Î» (x) (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x))))>)
* [enter]simplify:  Simplifying (+ (+ 1.0 (* -2.0 x)) (* 0.5 (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) 0.5) (+ (* x -2.0) 1.0))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
