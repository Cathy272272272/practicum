* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (+ (+ 1680.0 (* -13440.0 (* x x))) (* 13440.0 (* (* (* x x) x) x))) (* -3584.0 (* (* (* (* (* x x) x) x) x) x))) (* 256.0 (* (* (* (* (* (* (* x x) x) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* * [misc]simplify:  iters left: 3 (379 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (* x (* x -13440.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* x (* x -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x -13440.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]taylor:  Taking taylor expansion of (* x (* x -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x -13440.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]backup-simplify:  Simplify (* 0 -13440.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -13440.0)) into (- 13440.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 13440.0)) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 (- 13440.0)) (* 0 0))) into (- 13440.0)
* [misc]backup-simplify:  Simplify (- 13440.0) into (- 13440.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 (- 13440.0)) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 (- 13440.0)) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 13440.0)) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 13440.0)) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 13440.0)) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 13440.0)) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 13440.0) (pow x 2)) into (* -13440.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -13440.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]backup-simplify:  Simplify (* 1 -13440.0) into -13440.0
* [misc]backup-simplify:  Simplify (* 1 -13440.0) into -13440.0
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -13440.0)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -13440.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -13440.0))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -13440.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -13440.0 (pow (/ 1 (/ 1 x)) 2)) into (* -13440.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -13440.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -13440.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -13440.0 in x
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]backup-simplify:  Simplify (* -1 -13440.0) into 13440.0
* [misc]backup-simplify:  Simplify (* -1 13440.0) into -13440.0
* [misc]backup-simplify:  Simplify -13440.0 into -13440.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -13440.0)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 13440.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -13440.0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -13440.0 (pow (/ 1 (/ 1 (- x))) 2)) into (* -13440.0 (pow x 2))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ -3584.0 (* (* 256.0 x) x)) in x
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (* 256.0 x) x) in x
* [misc]taylor:  Taking taylor expansion of (* 256.0 x) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ -3584.0 (* (* 256.0 x) x)) in x
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (* 256.0 x) x) in x
* [misc]taylor:  Taking taylor expansion of (* 256.0 x) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 256.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ -3584.0 0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (* 1 (- 3584.0)) into -3584.0
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]backup-simplify:  Simplify (+ (* 256.0 1) (* 0 0)) into 256.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 256.0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 (- 3584.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 256.0 1) (* 0 0))) into 256.0
* [misc]backup-simplify:  Simplify (+ 0 256.0) into 256.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 256.0) (+ (* 0 0) (* 0 (- 3584.0)))) into 256.0
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 256.0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 256.0) (+ (* 0 0) (* 0 (- 3584.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 256.0) (+ (* 0 0) (* 0 (- 3584.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 256.0) (+ (* 0 0) (* 0 (- 3584.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 256.0) (+ (* 0 0) (* 0 (- 3584.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 256.0) (+ (* 0 0) (* 0 (- 3584.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 256.0) (+ (* 0 0) (* 0 (- 3584.0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 (pow x 8)) (* -3584.0 (pow x 6))) into (- (* 256.0 (pow x 8)) (* 3584.0 (pow x 6)))
* [misc]approximate:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ -3584.0 (* (* 256.0 (/ 1 x)) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ -3584.0 (* (* 256.0 (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ -3584.0 (* (* 256.0 (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (* 256.0 (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ -3584.0 (* (* 256.0 (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ -3584.0 (* (* 256.0 (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (* 256.0 (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* 256.0 1) into 256.0
* [misc]backup-simplify:  Simplify (* 256.0 1) into 256.0
* [misc]backup-simplify:  Simplify (+ 0 256.0) into 256.0
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 6)) 256.0) into (/ 256.0 (pow x 6))
* [misc]backup-simplify:  Simplify (/ 256.0 (pow x 6)) into (/ 256.0 (pow x 6))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (* 0 256.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -3584.0 0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) (- 3584.0)) (+ (* 0 0) (* 0 256.0))) into (- (* 3584.0 (/ 1 (pow x 6))))
* [misc]backup-simplify:  Simplify (- (* 3584.0 (/ 1 (pow x 6)))) into (- (* 3584.0 (/ 1 (pow x 6))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- (* 3584.0 (/ 1 (pow (/ 1 x) 6)))) (* (/ 256.0 (pow (/ 1 x) 6)) (pow (/ 1 (/ 1 x)) 2))) into (- (* 256.0 (pow x 8)) (* 3584.0 (pow x 6)))
* [misc]approximate:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ -3584.0 (* (* 256.0 (/ 1 (- x))) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ -3584.0 (* (* 256.0 (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ -3584.0 (* (* 256.0 (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (* 256.0 (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ -3584.0 (* (* 256.0 (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ -3584.0 (* (* 256.0 (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3584.0 in x
* [misc]backup-simplify:  Simplify -3584.0 into -3584.0
* [misc]taylor:  Taking taylor expansion of (* (* 256.0 (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* 256.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 256.0 in x
* [misc]backup-simplify:  Simplify 256.0 into 256.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* 256.0 -1) into -256.0
* [misc]backup-simplify:  Simplify (* -256.0 -1) into 256.0
* [misc]backup-simplify:  Simplify (+ 0 256.0) into 256.0
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 256.0) into (* 256.0 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* 256.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)) into (* 256.0 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -256.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (* 0 256.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -256.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ -3584.0 0) into (- 3584.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (- 3584.0)) (+ (* 0 0) (* 0 256.0))) into (- (* 3584.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (- (* 3584.0 (pow (exp (* 3 (- (log -1) (log x)))) 2))) into (- (* 3584.0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -256.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -256.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 3584.0)) (+ (* 0 0) (* 0 256.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- (* 3584.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2))) (* (* 256.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2)) (pow (/ 1 (/ 1 (- x))) 2))) into (- (* 256.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (pow x 2))) (* 3584.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (* (* x 13440.0) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x 13440.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 13440.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 13440.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 13440.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 13440.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 13440.0)) into 13440.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 13440.0 1)) into 13440.0
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 13440.0 (pow x 4)) into (* 13440.0 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 13440.0) into 13440.0
* [misc]backup-simplify:  Simplify (* 13440.0 (pow x -3)) into (/ 13440.0 (pow x 3))
* [misc]backup-simplify:  Simplify (/ 13440.0 (pow x 3)) into (/ 13440.0 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 13440.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (/ 13440.0 (pow (/ 1 x) 3)) (/ 1 (/ 1 x))) into (* 13440.0 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 13440.0) into -13440.0
* [misc]backup-simplify:  Simplify (* -13440.0 (exp (* 3 (- (log -1) (log x))))) into (* -13440.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* -13440.0 (exp (* 3 (- (log -1) (log x))))) into (* -13440.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 13440.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (* -13440.0 (exp (* 3 (- (log -1) (log (/ 1 (- x))))))) (/ 1 (/ 1 (- x)))) into (* 13440.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (/ 1 (pow x 6)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ 1 (pow (/ 1 x) 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 3 (- (log -1) (log x)))) 2) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) into (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (pow (* x (* x -13440.0)) 1)) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 2 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (exp (log (* x (* x -13440.0))))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (log (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (log (* x (* x -13440.0)))
* [exit]simplify:  Simplified to (log (* x (* x -13440.0)))
* * * * [misc]progress:  [ 3 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (log (exp (* x (* x -13440.0))))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (exp (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (* x -13440.0))
* [exit]simplify:  Simplified to (pow (exp x) (* x -13440.0))
* * * * [misc]progress:  [ 4 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* (* (cbrt (* x (* x -13440.0))) (cbrt (* x (* x -13440.0)))) (cbrt (* x (* x -13440.0))))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (* x (* x -13440.0))) (cbrt (* x (* x -13440.0))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -13440.0))) (cbrt (* x (* x -13440.0))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -13440.0))) (cbrt (* x (* x -13440.0))))
* [enter]simplify:  Simplifying (cbrt (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* x (* x -13440.0)))
* [exit]simplify:  Simplified to (cbrt (* x (* x -13440.0)))
* * * * [misc]progress:  [ 5 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (cbrt (* (* (* x (* x -13440.0)) (* x (* x -13440.0))) (* x (* x -13440.0))))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* (* x (* x -13440.0)) (* x (* x -13440.0))) (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (246 enodes)
* * [misc]simplify:  iters left: 1 (355 enodes)
* [exit]simplify:  Simplified to (pow (* x (* x -13440.0)) 3)
* [exit]simplify:  Simplified to (pow (* x (* x -13440.0)) 3)
* * * * [misc]progress:  [ 6 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* (sqrt (* x (* x -13440.0))) (sqrt (* x (* x -13440.0))))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (sqrt (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x -13440.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x -13440.0)))
* [enter]simplify:  Simplifying (sqrt (* x (* x -13440.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x -13440.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x -13440.0)))
* * * * [misc]progress:  [ 7 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* 1 (* x (* x -13440.0)))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 8 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* (* x x) -13440.0)) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 9 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* (* x -13440.0) x)) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 10 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (pow (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))) 1)))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (223 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0))
* [exit]simplify:  Simplified to (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0))
* * * * [misc]progress:  [ 11 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (pow (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))) 1)))>
* * * * [misc]progress:  [ 12 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (exp (+ (+ (* (log x) 3) (* (log x) 3)) (log (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (* (log x) 3)) (log (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 3 3) (log x)) (log (+ -3584.0 (* (* x 256.0) x))))
* [exit]simplify:  Simplified to (+ (* (+ 3 3) (log x)) (log (+ -3584.0 (* (* x 256.0) x))))
* * * * [misc]progress:  [ 13 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (exp (+ (+ (* (log x) 3) (log (pow x 3))) (log (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (log (pow x 3))) (log (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (58 enodes)
* * [misc]simplify:  iters left: 2 (99 enodes)
* * [misc]simplify:  iters left: 1 (106 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 3 3) (log x)) (log (+ (* 256.0 (* x x)) -3584.0)))
* [exit]simplify:  Simplified to (+ (* (+ 3 3) (log x)) (log (+ (* 256.0 (* x x)) -3584.0)))
* * * * [misc]progress:  [ 14 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (exp (+ (+ (log (pow x 3)) (* (log x) 3)) (log (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (* (log x) 3)) (log (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (59 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (115 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 3)) (log (+ (* 256.0 (* x x)) -3584.0)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 3)) (log (+ (* 256.0 (* x x)) -3584.0)))
* * * * [misc]progress:  [ 15 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (exp (+ (+ (log (pow x 3)) (log (pow x 3))) (log (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (log (pow x 3))) (log (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (53 enodes)
* * [misc]simplify:  iters left: 2 (89 enodes)
* * [misc]simplify:  iters left: 1 (109 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 3)) (log (+ -3584.0 (* (* x x) 256.0))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 3)) (log (+ -3584.0 (* (* x x) 256.0))))
* * * * [misc]progress:  [ 16 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (exp (+ (log (* (pow x 3) (pow x 3))) (log (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (+ (log (* (pow x 3) (pow x 3))) (log (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (131 enodes)
* * [misc]simplify:  iters left: 1 (151 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 3)) (log (+ -3584.0 (* (* x x) 256.0))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 3)) (log (+ -3584.0 (* (* x x) 256.0))))
* * * * [misc]progress:  [ 17 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (exp (log (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (log (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (278 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 3)) (log (+ (* x (* 256.0 x)) -3584.0)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 3)) (log (+ (* x (* 256.0 x)) -3584.0)))
* * * * [misc]progress:  [ 18 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (log (exp (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (exp (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (283 enodes)
* [exit]simplify:  Simplified to (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))
* [exit]simplify:  Simplified to (pow (exp (pow (* x x) 3)) (+ (* x (* 256.0 x)) -3584.0))
* * * * [misc]progress:  [ 19 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3))) (* (* (+ -3584.0 (* (* 256.0 x) x)) (+ -3584.0 (* (* 256.0 x) x))) (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3))) (* (* (+ -3584.0 (* (* 256.0 x) x)) (+ -3584.0 (* (* 256.0 x) x))) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (226 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* [exit]simplify:  Simplified to (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * * * [misc]progress:  [ 20 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3))) (* (* (+ -3584.0 (* (* 256.0 x) x)) (+ -3584.0 (* (* 256.0 x) x))) (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3))) (* (* (+ -3584.0 (* (* 256.0 x) x)) (+ -3584.0 (* (* 256.0 x) x))) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (232 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (pow (* (pow x 3) (pow x 3)) 3)))
* [exit]simplify:  Simplified to (* (* (+ (* x (* 256.0 x)) -3584.0) (+ (* x (* 256.0 x)) -3584.0)) (* (+ (* x (* 256.0 x)) -3584.0) (pow (* (pow x 3) (pow x 3)) 3)))
* * * * [misc]progress:  [ 21 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (cbrt (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))) (cbrt (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))) (cbrt (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))) (cbrt (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (254 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0))) (cbrt (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0))) (cbrt (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0))))
* [enter]simplify:  Simplifying (cbrt (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (72 enodes)
* * [misc]simplify:  iters left: 3 (255 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0)))
* [exit]simplify:  Simplified to (cbrt (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0)))
* * * * [misc]progress:  [ 22 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (cbrt (* (* (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* [exit]simplify:  Simplified to (pow (* (* (pow x 3) (pow x 3)) (+ (* x (* 256.0 x)) -3584.0)) 3)
* [exit]simplify:  Simplified to (pow (* (* (pow x 3) (pow x 3)) (+ (* x (* 256.0 x)) -3584.0)) 3)
* * * * [misc]progress:  [ 23 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (sqrt (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))) (sqrt (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (72 enodes)
* * [misc]simplify:  iters left: 3 (255 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0)))
* [exit]simplify:  Simplified to (sqrt (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0)))
* [enter]simplify:  Simplifying (sqrt (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (72 enodes)
* * [misc]simplify:  iters left: 3 (255 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0)))
* [exit]simplify:  Simplified to (sqrt (* (pow (* x x) 3) (+ (* x (* 256.0 x)) -3584.0)))
* * * * [misc]progress:  [ 24 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* 1 (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))))>
* * * * [misc]progress:  [ 25 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (+ (* (* (pow x 3) (pow x 3)) -3584.0) (* (* (pow x 3) (pow x 3)) (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (pow x 3)) -3584.0)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (111 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* (* x -3584.0) x))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* (* x -3584.0) x))
* [enter]simplify:  Simplifying (* (* (pow x 3) (pow x 3)) (* (* 256.0 x) x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (143 enodes)
* * [misc]simplify:  iters left: 2 (162 enodes)
* * [misc]simplify:  iters left: 1 (176 enodes)
* [exit]simplify:  Simplified to (* 256.0 (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (* 256.0 (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 26 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (+ (* -3584.0 (* (pow x 3) (pow x 3))) (* (* (* 256.0 x) x) (* (pow x 3) (pow x 3))))))>
* [enter]simplify:  Simplifying (* -3584.0 (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (62 enodes)
* * [misc]simplify:  iters left: 1 (83 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* (* -3584.0 x) x))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* (* -3584.0 x) x))
* [enter]simplify:  Simplifying (* (* (* 256.0 x) x) (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (132 enodes)
* * [misc]simplify:  iters left: 2 (151 enodes)
* * [misc]simplify:  iters left: 1 (157 enodes)
* [exit]simplify:  Simplified to (* (* 256.0 (* x x)) (pow (* x x) 3))
* [exit]simplify:  Simplified to (* (* 256.0 (* x x)) (pow (* x x) 3))
* * * * [misc]progress:  [ 27 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (* (pow x 3) (pow x 3)) (* (cbrt (+ -3584.0 (* (* 256.0 x) x))) (cbrt (+ -3584.0 (* (* 256.0 x) x))))) (cbrt (+ -3584.0 (* (* 256.0 x) x))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (pow x 3)) (* (cbrt (+ -3584.0 (* (* 256.0 x) x))) (cbrt (+ -3584.0 (* (* 256.0 x) x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (107 enodes)
* * [misc]simplify:  iters left: 2 (193 enodes)
* * [misc]simplify:  iters left: 1 (294 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* x (* 256.0 x)) -3584.0)) (* x x)) (* (cbrt (+ (* x (* 256.0 x)) -3584.0)) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* x (* 256.0 x)) -3584.0)) (* x x)) (* (cbrt (+ (* x (* 256.0 x)) -3584.0)) (* (* x x) (* x x))))
* * * * [misc]progress:  [ 28 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (* (pow x 3) (pow x 3)) (sqrt (+ -3584.0 (* (* 256.0 x) x)))) (sqrt (+ -3584.0 (* (* 256.0 x) x))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (pow x 3)) (sqrt (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (126 enodes)
* * [misc]simplify:  iters left: 1 (136 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* x (* 256.0 x)) -3584.0)) (pow (* x x) 3))
* [exit]simplify:  Simplified to (* (sqrt (+ (* x (* 256.0 x)) -3584.0)) (pow (* x x) 3))
* * * * [misc]progress:  [ 29 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (* (pow x 3) (pow x 3)) 1) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (pow x 3)) 1)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* * [misc]simplify:  iters left: 1 (54 enodes)
* [exit]simplify:  Simplified to (pow (* x x) 3)
* [exit]simplify:  Simplified to (pow (* x x) 3)
* * * * [misc]progress:  [ 30 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow x 3) (* (pow x 3) (+ -3584.0 (* (* 256.0 x) x))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (+ -3584.0 (* (* 256.0 x) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (107 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (131 enodes)
* [exit]simplify:  Simplified to (* (+ (* -3584.0 x) (* (* x x) (* x 256.0))) (* x x))
* [exit]simplify:  Simplified to (* (+ (* -3584.0 x) (* (* x x) (* x 256.0))) (* x x))
* * * * [misc]progress:  [ 31 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (* (* (pow x 3) (pow x 3)) (+ (pow -3584.0 3) (pow (* (* 256.0 x) x) 3))) (+ (* -3584.0 -3584.0) (- (* (* (* 256.0 x) x) (* (* 256.0 x) x)) (* -3584.0 (* (* 256.0 x) x)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (pow x 3)) (+ (pow -3584.0 3) (pow (* (* 256.0 x) x) 3)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* [exit]simplify:  Simplified to (+ (* (pow (* x 256.0) 3) (pow (pow x 3) 3)) (* (* (pow -3584.0 3) (* x x)) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (+ (* (pow (* x 256.0) 3) (pow (pow x 3) 3)) (* (* (pow -3584.0 3) (* x x)) (* (* x x) (* x x))))
* * * * [misc]progress:  [ 32 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (/ (* (* (pow x 3) (pow x 3)) (- (* -3584.0 -3584.0) (* (* (* 256.0 x) x) (* (* 256.0 x) x)))) (- -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (pow x 3)) (- (* -3584.0 -3584.0) (* (* (* 256.0 x) x) (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (425 enodes)
* [exit]simplify:  Simplified to (* (* (- -3584.0 (* (* x 256.0) x)) (* x x)) (* (* (* x x) (* x x)) (+ -3584.0 (* (* x 256.0) x))))
* [exit]simplify:  Simplified to (* (* (- -3584.0 (* (* x 256.0) x)) (* x x)) (* (* (* x x) (* x x)) (+ -3584.0 (* (* x 256.0) x))))
* * * * [misc]progress:  [ 33 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (+ -3584.0 (* (* 256.0 x) x)) (* (pow x 3) (pow x 3)))))>
* * * * [misc]progress:  [ 34 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (pow (* (* x 13440.0) (pow x 3)) 1) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 35 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (exp (+ (log (* x 13440.0)) (* (log x) 3))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (log (* x 13440.0)) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (25 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x 13440.0)))
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x 13440.0)))
* * * * [misc]progress:  [ 36 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (exp (+ (log (* x 13440.0)) (log (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (log (* x 13440.0)) (log (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* * [misc]simplify:  iters left: 1 (56 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (* x 13440.0)))
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (* x 13440.0)))
* * * * [misc]progress:  [ 37 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (exp (log (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (log (* (* x 13440.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (81 enodes)
* * [misc]simplify:  iters left: 1 (90 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x 13440.0)))
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x 13440.0)))
* * * * [misc]progress:  [ 38 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (log (exp (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (exp (* (* x 13440.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* * [misc]simplify:  iters left: 1 (48 enodes)
* [exit]simplify:  Simplified to (exp (* (pow x 3) (* x 13440.0)))
* [exit]simplify:  Simplified to (exp (* (pow x 3) (* x 13440.0)))
* * * * [misc]progress:  [ 39 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (cbrt (* (* (* (* x 13440.0) (* x 13440.0)) (* x 13440.0)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* (* (* x 13440.0) (* x 13440.0)) (* x 13440.0)) (* (* (pow x 3) (pow x 3)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (378 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (* x 13440.0) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (* x 13440.0) 3))
* * * * [misc]progress:  [ 40 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0))))
* [enter]simplify:  Simplifying (cbrt (* (* x 13440.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (43 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x 13440.0)))
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x 13440.0)))
* * * * [misc]progress:  [ 41 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (cbrt (* (* (* (* x 13440.0) (pow x 3)) (* (* x 13440.0) (pow x 3))) (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* (* (* x 13440.0) (pow x 3)) (* (* x 13440.0) (pow x 3))) (* (* x 13440.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (287 enodes)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* x 13440.0)) 3)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* x 13440.0)) 3)
* * * * [misc]progress:  [ 42 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (sqrt (* (* x 13440.0) (pow x 3))) (sqrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (sqrt (* (* x 13440.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (43 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 13440.0)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 13440.0)))
* [enter]simplify:  Simplifying (sqrt (* (* x 13440.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (43 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 13440.0)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 13440.0)))
* * * * [misc]progress:  [ 43 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* 1 (* (* x 13440.0) (pow x 3))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 44 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x 13440.0) (* x x)) x) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* x 13440.0) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x 13440.0) (* x x))
* [exit]simplify:  Simplified to (* (* x 13440.0) (* x x))
* * * * [misc]progress:  [ 45 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x 13440.0) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* x 13440.0) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* * [misc]simplify:  iters left: 1 (89 enodes)
* [exit]simplify:  Simplified to (* (* x 13440.0) (* x x))
* [exit]simplify:  Simplified to (* (* x 13440.0) (* x x))
* * * * [misc]progress:  [ 46 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x 13440.0) x) (* x x)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* x 13440.0) x)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (* x (* x 13440.0))
* [exit]simplify:  Simplified to (* x (* x 13440.0))
* * * * [misc]progress:  [ 47 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x 13440.0) (sqrt (pow x 3))) (sqrt (pow x 3))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* x 13440.0) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (* x 13440.0) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (* x 13440.0) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 48 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x 13440.0) 1) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* x 13440.0) 1)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (19 enodes)
* [exit]simplify:  Simplified to (* x 13440.0)
* [exit]simplify:  Simplified to (* x 13440.0)
* * * * [misc]progress:  [ 49 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* x (* 13440.0 (pow x 3))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* 13440.0 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* 13440.0 x) (* x x))
* [exit]simplify:  Simplified to (* (* 13440.0 x) (* x x))
* * * * [misc]progress:  [ 50 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (pow x 3) (* x 13440.0)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 51 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow x (+ 3 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ 3 3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 3 3)
* [exit]simplify:  Simplified to (+ 3 3)
* * * * [misc]progress:  [ 52 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow (* x x) 3) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 53 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow (pow x 3) 2) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 54 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow (* (pow x 3) (pow x 3)) 1) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 55 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (exp (+ (* (log x) 3) (* (log x) 3))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 56 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (exp (+ (* (log x) 3) (log (pow x 3)))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (log (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 57 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (exp (+ (log (pow x 3)) (* (log x) 3))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 58 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (exp (+ (log (pow x 3)) (log (pow x 3)))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (log (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 59 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (exp (log (* (pow x 3) (pow x 3)))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (log (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 60 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (log (exp (* (pow x 3) (pow x 3)))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (exp (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (22 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 61 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (cbrt (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (251 enodes)
* * [misc]simplify:  iters left: 1 (258 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 62 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (* (cbrt (* (pow x 3) (pow x 3))) (cbrt (* (pow x 3) (pow x 3)))) (cbrt (* (pow x 3) (pow x 3)))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 3) (pow x 3))) (cbrt (* (pow x 3) (pow x 3))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (32 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (16 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (* x x) 3))
* [exit]simplify:  Simplified to (cbrt (pow (* x x) 3))
* * * * [misc]progress:  [ 63 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (cbrt (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (165 enodes)
* * [misc]simplify:  iters left: 2 (291 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 64 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (sqrt (* (pow x 3) (pow x 3))) (sqrt (* (pow x 3) (pow x 3)))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 65 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* 1 (* (pow x 3) (pow x 3))) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 66 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (* (pow x 3) (* x x)) x) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 67 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (* (pow x 3) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* * * * [misc]progress:  [ 68 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (* (pow x 3) x) (* x x)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (pow x 3) x)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 69 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (* (pow x 3) (sqrt (pow x 3))) (sqrt (pow x 3))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 70 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (* (pow x 3) 1) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (pow x 3) 1)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 71 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (* x x) (* x (pow x 3))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* x (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 72 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (* (cbrt (pow x 3)) (cbrt (pow x 3))) (* (cbrt (pow x 3)) (pow x 3))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 73 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* x (* (* x x) (pow x 3))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* x x) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 74 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (sqrt (pow x 3)) (* (sqrt (pow x 3)) (pow x 3))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (sqrt (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 75 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* 1 (* (pow x 3) (pow x 3))) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 76 / 88 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 77 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (458 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* x x) 256.0))) (+ 1680.0 (+ (* (* x -13440.0) x) (* (pow x 3) (* x 13440.0)))))
* * * * [misc]progress:  [ 78 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (458 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* x x) 256.0))) (+ 1680.0 (+ (* (* x -13440.0) x) (* (pow x 3) (* x 13440.0)))))
* * * * [misc]progress:  [ 79 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* -13440.0 (pow x 2))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* * [misc]simplify:  iters left: 3 (458 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* x x) 256.0))) (+ 1680.0 (+ (* (* x -13440.0) x) (* (pow x 3) (* x 13440.0)))))
* * * * [misc]progress:  [ 80 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (- (* 256.0 (pow x 8)) (* 3584.0 (pow x 6)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (- (* 256.0 (pow x 8)) (* 3584.0 (pow x 6))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (223 enodes)
* * [misc]simplify:  iters left: 2 (443 enodes)
* [exit]simplify:  Simplified to (- (+ (* 256.0 (pow x 8)) (- 1680.0 (* 3584.0 (pow x 6)))) (* (- (* x x)) (+ (* (* x x) 13440.0) -13440.0)))
* * * * [misc]progress:  [ 81 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (- (* 256.0 (pow x 8)) (* 3584.0 (pow x 6)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (- (* 256.0 (pow x 8)) (* 3584.0 (pow x 6))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (223 enodes)
* * [misc]simplify:  iters left: 2 (443 enodes)
* [exit]simplify:  Simplified to (- (+ (* 256.0 (pow x 8)) (- 1680.0 (* 3584.0 (pow x 6)))) (* (- (* x x)) (+ (* (* x x) 13440.0) -13440.0)))
* * * * [misc]progress:  [ 82 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (- (* 256.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (pow x 2))) (* 3584.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (- (* 256.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (pow x 2))) (* 3584.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x -13440.0) x) (+ (* (* x 13440.0) (pow x 3)) 1680.0)) (* (- (* (* 256.0 x) x) 3584.0) (* (pow x 3) (pow x 3))))
* * * * [misc]progress:  [ 83 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* 13440.0 (pow x 4)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* 13440.0 (pow x 4)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (399 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* 256.0 (* x x)))) (+ (* (pow x 4) 13440.0) (+ 1680.0 (* (* x x) -13440.0))))
* * * * [misc]progress:  [ 84 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* 13440.0 (pow x 4)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* 13440.0 (pow x 4)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (399 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* 256.0 (* x x)))) (+ (* (pow x 4) 13440.0) (+ 1680.0 (* (* x x) -13440.0))))
* * * * [misc]progress:  [ 85 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* 13440.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* 13440.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* * [misc]simplify:  iters left: 3 (494 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* x -13440.0)) (+ 1680.0 (* (* x 13440.0) (pow x 3)))) (* (+ -3584.0 (* 256.0 (* x x))) (* (pow x 3) (pow x 3))))
* * * * [misc]progress:  [ 86 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow x 6) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow x 6) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (237 enodes)
* * [misc]simplify:  iters left: 2 (436 enodes)
* [exit]simplify:  Simplified to (+ (+ 1680.0 (+ (* (pow x 6) -3584.0) (* (* x -13440.0) x))) (* (* x x) (+ (* x (* x 13440.0)) (* 256.0 (pow x 6)))))
* * * * [misc]progress:  [ 87 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow x 6) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow x 6) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (237 enodes)
* * [misc]simplify:  iters left: 2 (436 enodes)
* [exit]simplify:  Simplified to (+ (+ 1680.0 (+ (* (pow x 6) -3584.0) (* (* x -13440.0) x))) (* (* x x) (+ (* x (* x 13440.0)) (* 256.0 (pow x 6)))))
* * * * [misc]progress:  [ 88 / 88 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x 13440.0) (pow x 3)) (* x (* x -13440.0))) 1680.0) (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow x 3) (* 13440.0 x)) 1680.0) (* -13440.0 (* x x))) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* 256.0 (* x x)))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 1 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1 1 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1 1 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 1 1 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 1 1 2)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* x 13440.0) (pow x 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* x 13440.0) (pow x 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* x 13440.0) (pow x 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* x 13440.0) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* x 13440.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* x 13440.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 13440.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 13440.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 13440.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 13440.0)) into 13440.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 13440.0 1)) into 13440.0
* [misc]backup-simplify:  Simplify (log 13440.0) into (log 13440.0)
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 4 (log x)) (log 13440.0))) into (* 1/3 (+ (* 4 (log x)) (log 13440.0)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) into (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* x 13440.0) (pow x 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* x 13440.0) (pow x 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* x 13440.0) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* x 13440.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* x 13440.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 13440.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 13440.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 13440.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 13440.0)) into 13440.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 13440.0 1)) into 13440.0
* [misc]backup-simplify:  Simplify (log 13440.0) into (log 13440.0)
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 4 (log x)) (log 13440.0))) into (* 1/3 (+ (* 4 (log x)) (log 13440.0)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) into (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) into (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 13440.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (* 4 (log x)) (log 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 13440.0 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 13440.0 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 13440.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 13440.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 13440.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 13440.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 13440.0 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 13440.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 13440.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 13440.0 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 13440.0 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 13440.0 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 13440.0 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 13440.0 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 13440.0 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 13440.0 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 13440.0 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 13440.0 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 13440.0 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 13440.0 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 13440.0 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 13440.0 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 13440.0 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 13440.0 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 13440.0 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 13440.0 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 13440.0 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 13440.0 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) into (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 13440.0) into 13440.0
* [misc]backup-simplify:  Simplify (* 13440.0 (pow x -3)) into (/ 13440.0 (pow x 3))
* [misc]backup-simplify:  Simplify (log (/ 13440.0 (pow x 3))) into (log (/ 13440.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))) into (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) into (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 13440.0) into 13440.0
* [misc]backup-simplify:  Simplify (* 13440.0 (pow x -3)) into (/ 13440.0 (pow x 3))
* [misc]backup-simplify:  Simplify (log (/ 13440.0 (pow x 3))) into (log (/ 13440.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))) into (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) into (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) into (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 13440.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 13440.0 (pow x 3)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 13440.0 (pow x 3)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ 13440.0 (pow x 3)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (/ 13440.0 (pow x 3)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (/ 13440.0 (pow x 3)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (/ 13440.0 (pow x 3)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (/ 13440.0 (pow x 3)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (/ 13440.0 (pow x 3)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (/ 13440.0 (pow x 3)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (/ 13440.0 (pow x 3)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 13440.0 (pow (/ 1 x) 3))) (log (/ 1 x))))) into (exp (* 1/3 (- (log (* 13440.0 (pow x 3))) (log (/ 1 x)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 13440.0) into -13440.0
* [misc]backup-simplify:  Simplify (* -13440.0 (exp (* 3 (- (log -1) (log x))))) into (* -13440.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) into (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))) into (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 13440.0) into -13440.0
* [misc]backup-simplify:  Simplify (* -13440.0 (exp (* 3 (- (log -1) (log x))))) into (* -13440.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) into (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))) into (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 13440.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (log (/ 1 (- x)))))) into (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x)))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1 1 1 2)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* x 13440.0) (pow x 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* x 13440.0) (pow x 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* x 13440.0) (pow x 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* x 13440.0) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* x 13440.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* x 13440.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 13440.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 13440.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 13440.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 13440.0)) into 13440.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 13440.0 1)) into 13440.0
* [misc]backup-simplify:  Simplify (log 13440.0) into (log 13440.0)
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 4 (log x)) (log 13440.0))) into (* 1/3 (+ (* 4 (log x)) (log 13440.0)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) into (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* x 13440.0) (pow x 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* x 13440.0) (pow x 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* x 13440.0) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* x 13440.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* x 13440.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 13440.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 13440.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 13440.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 13440.0)) into 13440.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 13440.0 1)) into 13440.0
* [misc]backup-simplify:  Simplify (log 13440.0) into (log 13440.0)
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 4 (log x)) (log 13440.0))) into (* 1/3 (+ (* 4 (log x)) (log 13440.0)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) into (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) into (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 13440.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (* 4 (log x)) (log 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 13440.0 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 13440.0 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 13440.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 13440.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 13440.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 13440.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 13440.0 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 13440.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 13440.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 13440.0 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 13440.0 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 13440.0 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 13440.0 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 13440.0 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 13440.0 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 13440.0 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 13440.0 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 13440.0 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 13440.0 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 13440.0 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 13440.0 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 13440.0 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 13440.0 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 13440.0 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 13440.0 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 13440.0 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 13440.0 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 13440.0 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) into (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 13440.0) into 13440.0
* [misc]backup-simplify:  Simplify (* 13440.0 (pow x -3)) into (/ 13440.0 (pow x 3))
* [misc]backup-simplify:  Simplify (log (/ 13440.0 (pow x 3))) into (log (/ 13440.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))) into (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) into (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 13440.0) into 13440.0
* [misc]backup-simplify:  Simplify (* 13440.0 (pow x -3)) into (/ 13440.0 (pow x 3))
* [misc]backup-simplify:  Simplify (log (/ 13440.0 (pow x 3))) into (log (/ 13440.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))) into (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) into (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) into (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 13440.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 13440.0 (pow x 3)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 13440.0 (pow x 3)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ 13440.0 (pow x 3)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (/ 13440.0 (pow x 3)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (/ 13440.0 (pow x 3)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (/ 13440.0 (pow x 3)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (/ 13440.0 (pow x 3)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (/ 13440.0 (pow x 3)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (/ 13440.0 (pow x 3)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (/ 13440.0 (pow x 3)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 13440.0 (pow (/ 1 x) 3))) (log (/ 1 x))))) into (exp (* 1/3 (- (log (* 13440.0 (pow x 3))) (log (/ 1 x)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 13440.0) into -13440.0
* [misc]backup-simplify:  Simplify (* -13440.0 (exp (* 3 (- (log -1) (log x))))) into (* -13440.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) into (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))) into (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 13440.0) into -13440.0
* [misc]backup-simplify:  Simplify (* -13440.0 (exp (* 3 (- (log -1) (log x))))) into (* -13440.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) into (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))) into (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 13440.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (log (/ 1 (- x)))))) into (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x)))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1 1 1 1)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* x 13440.0) (pow x 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* x 13440.0) (pow x 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* x 13440.0) (pow x 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* x 13440.0) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* x 13440.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* x 13440.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 13440.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 13440.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 13440.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 13440.0)) into 13440.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 13440.0 1)) into 13440.0
* [misc]backup-simplify:  Simplify (log 13440.0) into (log 13440.0)
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 4 (log x)) (log 13440.0))) into (* 1/3 (+ (* 4 (log x)) (log 13440.0)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) into (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* x 13440.0) (pow x 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* x 13440.0) (pow x 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* x 13440.0) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* x 13440.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* x 13440.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 13440.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 13440.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 13440.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 13440.0)) into 13440.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 13440.0 1)) into 13440.0
* [misc]backup-simplify:  Simplify (log 13440.0) into (log 13440.0)
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 4 (log x)) (log 13440.0))) into (* 1/3 (+ (* 4 (log x)) (log 13440.0)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) into (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) into (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 13440.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (* 4 (log x)) (log 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 13440.0 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 13440.0 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 13440.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 13440.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 13440.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 13440.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 13440.0 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 13440.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 13440.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 13440.0 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 13440.0 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 13440.0 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 13440.0 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 13440.0 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 13440.0 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 13440.0 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 13440.0 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 13440.0 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 13440.0 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 13440.0 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 13440.0 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 13440.0 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 13440.0 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 13440.0 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 13440.0 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 13440.0 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 13440.0 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 13440.0 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) into (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 13440.0) into 13440.0
* [misc]backup-simplify:  Simplify (* 13440.0 (pow x -3)) into (/ 13440.0 (pow x 3))
* [misc]backup-simplify:  Simplify (log (/ 13440.0 (pow x 3))) into (log (/ 13440.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))) into (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) into (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 13440.0) into 13440.0
* [misc]backup-simplify:  Simplify (* 13440.0 (pow x -3)) into (/ 13440.0 (pow x 3))
* [misc]backup-simplify:  Simplify (log (/ 13440.0 (pow x 3))) into (log (/ 13440.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))) into (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) into (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) into (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 13440.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 13440.0 (pow x 3)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 13440.0 (pow x 3)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ 13440.0 (pow x 3)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (/ 13440.0 (pow x 3)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (/ 13440.0 (pow x 3)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (/ 13440.0 (pow x 3)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (/ 13440.0 (pow x 3)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (/ 13440.0 (pow x 3)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (/ 13440.0 (pow x 3)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (/ 13440.0 (pow x 3)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 13440.0 (pow (/ 1 x) 3))) (log (/ 1 x))))) into (exp (* 1/3 (- (log (* 13440.0 (pow x 3))) (log (/ 1 x)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 13440.0) into -13440.0
* [misc]backup-simplify:  Simplify (* -13440.0 (exp (* 3 (- (log -1) (log x))))) into (* -13440.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) into (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))) into (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 13440.0) into -13440.0
* [misc]backup-simplify:  Simplify (* -13440.0 (exp (* 3 (- (log -1) (log x))))) into (* -13440.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) into (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))) into (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 13440.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (log (/ 1 (- x)))))) into (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x)))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 1 1 1)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* x 13440.0) (pow x 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* x 13440.0) (pow x 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* x 13440.0) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* x 13440.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* x 13440.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 13440.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 13440.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 13440.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 13440.0)) into 13440.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 13440.0 1)) into 13440.0
* [misc]backup-simplify:  Simplify (log 13440.0) into (log 13440.0)
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 4 (log x)) (log 13440.0))) into (* 1/3 (+ (* 4 (log x)) (log 13440.0)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) into (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* x 13440.0) (pow x 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* x 13440.0) (pow x 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* x 13440.0) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* x 13440.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* x 13440.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 13440.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 13440.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 13440.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 13440.0)) into 13440.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 13440.0 1)) into 13440.0
* [misc]backup-simplify:  Simplify (log 13440.0) into (log 13440.0)
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 4 (log x)) (log 13440.0))) into (* 1/3 (+ (* 4 (log x)) (log 13440.0)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) into (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* x 13440.0) (pow x 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* x 13440.0) (pow x 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* x 13440.0) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* x 13440.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* x 13440.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 13440.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 13440.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 13440.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 13440.0)) into 13440.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 13440.0 1)) into 13440.0
* [misc]backup-simplify:  Simplify (log 13440.0) into (log 13440.0)
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 4 (log x)) (log 13440.0))) into (* 1/3 (+ (* 4 (log x)) (log 13440.0)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) into (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* x 13440.0) (pow x 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* x 13440.0) (pow x 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* x 13440.0) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* x 13440.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* x 13440.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 13440.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 13440.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 13440.0) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 13440.0)) into 13440.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 13440.0 1)) into 13440.0
* [misc]backup-simplify:  Simplify (log 13440.0) into (log 13440.0)
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 4 (log x)) (log 13440.0))) into (* 1/3 (+ (* 4 (log x)) (log 13440.0)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) into (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))) into (pow (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) 2) into (pow (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) 2)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 13440.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (* 4 (log x)) (log 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 13440.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (* 4 (log x)) (log 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) 0) (* 0 (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 13440.0 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 13440.0 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 13440.0 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 13440.0 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 13440.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 13440.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 13440.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 13440.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 13440.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 13440.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 13440.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 13440.0 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 13440.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 13440.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 13440.0 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 13440.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 13440.0 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 13440.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 13440.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 13440.0 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 13440.0 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 13440.0 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 13440.0 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 13440.0 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 13440.0 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 13440.0 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 13440.0 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 13440.0 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 13440.0 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 13440.0 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 13440.0 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 13440.0 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 13440.0 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 13440.0 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 13440.0 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 13440.0 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 13440.0 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 13440.0 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 13440.0 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 13440.0 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 13440.0 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 13440.0 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 13440.0 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 13440.0 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 13440.0 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 13440.0 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 13440.0 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 13440.0 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 13440.0 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 13440.0 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 13440.0 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 13440.0 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 13440.0 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 13440.0 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 13440.0 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 13440.0 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -4) (log x)) (log 13440.0)) into (+ (* 4 (log x)) (log 13440.0))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (* 4 (log x)) (log 13440.0))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) 2) into (pow (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) 2)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) (cbrt (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) (cbrt (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 13440.0) into 13440.0
* [misc]backup-simplify:  Simplify (* 13440.0 (pow x -3)) into (/ 13440.0 (pow x 3))
* [misc]backup-simplify:  Simplify (log (/ 13440.0 (pow x 3))) into (log (/ 13440.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))) into (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) into (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 13440.0) into 13440.0
* [misc]backup-simplify:  Simplify (* 13440.0 (pow x -3)) into (/ 13440.0 (pow x 3))
* [misc]backup-simplify:  Simplify (log (/ 13440.0 (pow x 3))) into (log (/ 13440.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))) into (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) into (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) (cbrt (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 13440.0) into 13440.0
* [misc]backup-simplify:  Simplify (* 13440.0 (pow x -3)) into (/ 13440.0 (pow x 3))
* [misc]backup-simplify:  Simplify (log (/ 13440.0 (pow x 3))) into (log (/ 13440.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))) into (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) into (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 13440.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 13440.0) into 13440.0
* [misc]backup-simplify:  Simplify (* 13440.0 (pow x -3)) into (/ 13440.0 (pow x 3))
* [misc]backup-simplify:  Simplify (log (/ 13440.0 (pow x 3))) into (log (/ 13440.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))) into (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) into (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))))) into (pow (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) 2) into (pow (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) 2)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 13440.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 13440.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) 0) (* 0 (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 13440.0 (pow x 3)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 13440.0 (pow x 3)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 13440.0 (pow x 3)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ 13440.0 (pow x 3)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 13440.0 (pow x 3)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ 13440.0 (pow x 3)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (/ 13440.0 (pow x 3)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (/ 13440.0 (pow x 3)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (/ 13440.0 (pow x 3)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (/ 13440.0 (pow x 3)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (/ 13440.0 (pow x 3)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (/ 13440.0 (pow x 3)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (/ 13440.0 (pow x 3)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (/ 13440.0 (pow x 3)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (/ 13440.0 (pow x 3)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (/ 13440.0 (pow x 3)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (/ 13440.0 (pow x 3)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (/ 13440.0 (pow x 3)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (/ 13440.0 (pow x 3)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 13440.0 (pow x 3)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (/ 13440.0 (pow x 3)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (/ 13440.0 (pow x 3)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (/ 13440.0 (pow x 3)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (/ 13440.0 (pow x 3)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (/ 13440.0 (pow x 3)))) into (- (log (/ 13440.0 (pow x 3))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (/ 13440.0 (pow x 3))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (/ 13440.0 (pow x 3))) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (/ 13440.0 (pow (/ 1 x) 3))) (log (/ 1 x))))) 2) into (pow (exp (* 1/3 (- (log (* 13440.0 (pow x 3))) (log (/ 1 x))))) 2)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) (cbrt (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) (cbrt (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 13440.0) into -13440.0
* [misc]backup-simplify:  Simplify (* -13440.0 (exp (* 3 (- (log -1) (log x))))) into (* -13440.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) into (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))) into (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 13440.0) into -13440.0
* [misc]backup-simplify:  Simplify (* -13440.0 (exp (* 3 (- (log -1) (log x))))) into (* -13440.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) into (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))) into (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) (cbrt (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 13440.0) into -13440.0
* [misc]backup-simplify:  Simplify (* -13440.0 (exp (* 3 (- (log -1) (log x))))) into (* -13440.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) into (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))) into (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 13440.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 13440.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 13440.0 in x
* [misc]backup-simplify:  Simplify 13440.0 into 13440.0
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 13440.0) into -13440.0
* [misc]backup-simplify:  Simplify (* -13440.0 (exp (* 3 (- (log -1) (log x))))) into (* -13440.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) into (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))) into (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) into (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))) into (pow (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) 2) into (pow (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 13440.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 13440.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) 0) (* 0 (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 13440.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 13440.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -13440.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* -13440.0 (exp (* 3 (- (log -1) (log x))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (* -13440.0 (exp (* 3 (- (log -1) (log x))))))) into (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log x)))))) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (log (/ 1 (- x)))))) 2) into (pow (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x))))) 2)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (pow (* (* x 13440.0) (pow x 3)) 1/3)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 2 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (pow (cbrt (* (* x 13440.0) (pow x 3))) 1)) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 3 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (exp (log (cbrt (* (* x 13440.0) (pow x 3)))))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (log (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (log (cbrt (* (pow x 3) (* x 13440.0))))
* * * * [misc]progress:  [ 4 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (log (exp (cbrt (* (* x 13440.0) (pow x 3)))))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (exp (cbrt (* (pow x 3) (* x 13440.0))))
* * * * [misc]progress:  [ 5 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (* (cbrt (* x 13440.0)) (cbrt (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (cbrt (* x 13440.0))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (5 enodes)
* [exit]simplify:  Simplified to (cbrt (* x 13440.0))
* [exit]simplify:  Simplified to (cbrt (* x 13440.0))
* [enter]simplify:  Simplifying (cbrt (pow x 3))
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 6 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (* (* (cbrt (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (cbrt (* (* x 13440.0) (pow x 3))))) (cbrt (cbrt (* (* x 13440.0) (pow x 3)))))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (cbrt (* (* x 13440.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow x 3) (* x 13440.0)))) (cbrt (cbrt (* (pow x 3) (* x 13440.0)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow x 3) (* x 13440.0)))) (cbrt (cbrt (* (pow x 3) (* x 13440.0)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* (pow x 3) (* x 13440.0))))
* * * * [misc]progress:  [ 7 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x 13440.0))
* [exit]simplify:  Simplified to (* (pow x 3) (* x 13440.0))
* * * * [misc]progress:  [ 8 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (* (sqrt (cbrt (* (* x 13440.0) (pow x 3)))) (sqrt (cbrt (* (* x 13440.0) (pow x 3)))))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x 13440.0))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x 13440.0))))
* * * * [misc]progress:  [ 9 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (* 1 (cbrt (* (* x 13440.0) (pow x 3))))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 10 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (pow (* (* x 13440.0) (pow x 3)) 1/3)) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 11 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (pow (cbrt (* (* x 13440.0) (pow x 3))) 1)) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 12 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (exp (log (cbrt (* (* x 13440.0) (pow x 3)))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (log (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (log (cbrt (* (pow x 3) (* x 13440.0))))
* * * * [misc]progress:  [ 13 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (log (exp (cbrt (* (* x 13440.0) (pow x 3)))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (exp (cbrt (* (pow x 3) (* x 13440.0))))
* * * * [misc]progress:  [ 14 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (* (cbrt (* x 13440.0)) (cbrt (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (cbrt (* x 13440.0))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (5 enodes)
* [exit]simplify:  Simplified to (cbrt (* x 13440.0))
* [exit]simplify:  Simplified to (cbrt (* x 13440.0))
* [enter]simplify:  Simplifying (cbrt (pow x 3))
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 15 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (* (* (cbrt (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (cbrt (* (* x 13440.0) (pow x 3))))) (cbrt (cbrt (* (* x 13440.0) (pow x 3)))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (cbrt (* (* x 13440.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow x 3) (* x 13440.0)))) (cbrt (cbrt (* (pow x 3) (* x 13440.0)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow x 3) (* x 13440.0)))) (cbrt (cbrt (* (pow x 3) (* x 13440.0)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* (pow x 3) (* x 13440.0))))
* * * * [misc]progress:  [ 16 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x 13440.0))
* [exit]simplify:  Simplified to (* (pow x 3) (* x 13440.0))
* * * * [misc]progress:  [ 17 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (* (sqrt (cbrt (* (* x 13440.0) (pow x 3)))) (sqrt (cbrt (* (* x 13440.0) (pow x 3)))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x 13440.0))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x 13440.0))))
* * * * [misc]progress:  [ 18 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (* 1 (cbrt (* (* x 13440.0) (pow x 3))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 19 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (pow (* (* x 13440.0) (pow x 3)) 1/3) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 20 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (pow (cbrt (* (* x 13440.0) (pow x 3))) 1) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 21 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (exp (log (cbrt (* (* x 13440.0) (pow x 3))))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (log (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (log (cbrt (* (pow x 3) (* x 13440.0))))
* * * * [misc]progress:  [ 22 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (log (exp (cbrt (* (* x 13440.0) (pow x 3))))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (exp (cbrt (* (pow x 3) (* x 13440.0))))
* * * * [misc]progress:  [ 23 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* (cbrt (* x 13440.0)) (cbrt (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (cbrt (* x 13440.0))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (5 enodes)
* [exit]simplify:  Simplified to (cbrt (* x 13440.0))
* [exit]simplify:  Simplified to (cbrt (* x 13440.0))
* [enter]simplify:  Simplifying (cbrt (pow x 3))
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 24 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* (* (cbrt (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (cbrt (* (* x 13440.0) (pow x 3))))) (cbrt (cbrt (* (* x 13440.0) (pow x 3))))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (cbrt (* (* x 13440.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow x 3) (* x 13440.0)))) (cbrt (cbrt (* (pow x 3) (* x 13440.0)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow x 3) (* x 13440.0)))) (cbrt (cbrt (* (pow x 3) (* x 13440.0)))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* (pow x 3) (* x 13440.0))))
* * * * [misc]progress:  [ 25 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3))))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x 13440.0))
* [exit]simplify:  Simplified to (* (pow x 3) (* x 13440.0))
* * * * [misc]progress:  [ 26 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* (sqrt (cbrt (* (* x 13440.0) (pow x 3)))) (sqrt (cbrt (* (* x 13440.0) (pow x 3))))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x 13440.0))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow x 3) (* x 13440.0))))
* * * * [misc]progress:  [ 27 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* 1 (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 28 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (pow (* (* x 13440.0) (pow x 3)) (+ 1/3 1/3)) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ 1/3 1/3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* * * * [misc]progress:  [ 29 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (pow (cbrt (* (* x 13440.0) (pow x 3))) (+ 1 1)) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 30 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (pow (* (* (* x 13440.0) (pow x 3)) (* (* x 13440.0) (pow x 3))) 1/3) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* (* x 13440.0) (pow x 3)) (* (* x 13440.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (171 enodes)
* * [misc]simplify:  iters left: 2 (314 enodes)
* * [misc]simplify:  iters left: 1 (352 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (* x 13440.0)) (* (pow x 3) (* x 13440.0)))
* [exit]simplify:  Simplified to (* (* (pow x 3) (* x 13440.0)) (* (pow x 3) (* x 13440.0)))
* * * * [misc]progress:  [ 31 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (pow (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) 1) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0))))
* * * * [misc]progress:  [ 32 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (pow (cbrt (* (* x 13440.0) (pow x 3))) 2) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 33 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (pow (cbrt (* (* x 13440.0) (pow x 3))) (+ 1 1)) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 34 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (pow (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) 1) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 35 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (exp (+ (log (cbrt (* (* x 13440.0) (pow x 3)))) (log (cbrt (* (* x 13440.0) (pow x 3)))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (* (* x 13440.0) (pow x 3)))) (log (cbrt (* (* x 13440.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (* (pow x 3) (* x 13440.0)))) (log (cbrt (* (pow x 3) (* x 13440.0)))))
* [exit]simplify:  Simplified to (+ (log (cbrt (* (pow x 3) (* x 13440.0)))) (log (cbrt (* (pow x 3) (* x 13440.0)))))
* * * * [misc]progress:  [ 36 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (exp (log (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (log (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (log (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0)))))
* [exit]simplify:  Simplified to (log (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0)))))
* * * * [misc]progress:  [ 37 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (log (exp (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0)))))
* [exit]simplify:  Simplified to (exp (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0)))))
* * * * [misc]progress:  [ 38 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (cbrt (* (* (* x 13440.0) (pow x 3)) (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* (* x 13440.0) (pow x 3)) (* (* x 13440.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (171 enodes)
* * [misc]simplify:  iters left: 2 (314 enodes)
* * [misc]simplify:  iters left: 1 (352 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (* x 13440.0)) (* (pow x 3) (* x 13440.0)))
* [exit]simplify:  Simplified to (* (* (pow x 3) (* x 13440.0)) (* (pow x 3) (* x 13440.0)))
* * * * [misc]progress:  [ 39 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* (cbrt (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3))))) (cbrt (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))))) (cbrt (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3))))) (cbrt (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3))))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0))))) (cbrt (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0))))) (cbrt (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0))))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0)))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0)))))
* * * * [misc]progress:  [ 40 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (cbrt (* (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3))))) (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3))))) (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (408 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (* x 13440.0)) (* (pow x 3) (* x 13440.0)))
* [exit]simplify:  Simplified to (* (* (pow x 3) (* x 13440.0)) (* (pow x 3) (* x 13440.0)))
* * * * [misc]progress:  [ 41 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (sqrt (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3))))) (sqrt (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (fabs (cbrt (* (pow x 3) (* x 13440.0))))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (fabs (cbrt (* (pow x 3) (* x 13440.0))))
* * * * [misc]progress:  [ 42 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* 1 (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 43 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* x 13440.0))) (cbrt (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* x 13440.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x 13440.0)) (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (* (cbrt (* x 13440.0)) (cbrt (* (pow x 3) (* x 13440.0))))
* * * * [misc]progress:  [ 44 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* (cbrt (* (* x 13440.0) (pow x 3))) (* (cbrt (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (cbrt (* (* x 13440.0) (pow x 3)))))) (cbrt (cbrt (* (* x 13440.0) (pow x 3))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x 13440.0) (pow x 3))) (* (cbrt (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (cbrt (* (* x 13440.0) (pow x 3))))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (45 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (* (pow x 3) (* x 13440.0)))) (cbrt (* (pow x 3) (* x 13440.0)))) (cbrt (cbrt (* (pow x 3) (* x 13440.0)))))
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (* (pow x 3) (* x 13440.0)))) (cbrt (* (pow x 3) (* x 13440.0)))) (cbrt (cbrt (* (pow x 3) (* x 13440.0)))))
* * * * [misc]progress:  [ 45 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* (cbrt (* (* x 13440.0) (pow x 3))) (sqrt (cbrt (* (* x 13440.0) (pow x 3))))) (sqrt (cbrt (* (* x 13440.0) (pow x 3))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x 13440.0) (pow x 3))) (sqrt (cbrt (* (* x 13440.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (pow x 3) (* x 13440.0)))) (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (pow x 3) (* x 13440.0)))) (cbrt (* (pow x 3) (* x 13440.0))))
* * * * [misc]progress:  [ 46 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* (cbrt (* (* x 13440.0) (pow x 3))) 1) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x 13440.0) (pow x 3))) 1)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x 13440.0)))
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x 13440.0)))
* * * * [misc]progress:  [ 47 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* x 13440.0)) (* (cbrt (pow x 3)) (cbrt (* (* x 13440.0) (pow x 3))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow x 3)) (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (* x (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (* x (cbrt (* (pow x 3) (* x 13440.0))))
* * * * [misc]progress:  [ 48 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* (cbrt (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (cbrt (* (* x 13440.0) (pow x 3))))) (* (cbrt (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow x 3) (* x 13440.0)))) (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow x 3) (* x 13440.0)))) (cbrt (* (pow x 3) (* x 13440.0))))
* * * * [misc]progress:  [ 49 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (sqrt (cbrt (* (* x 13440.0) (pow x 3)))) (* (sqrt (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (pow x 3) (* x 13440.0)))) (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (pow x 3) (* x 13440.0)))) (cbrt (* (pow x 3) (* x 13440.0))))
* * * * [misc]progress:  [ 50 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* 1 (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0))))
* * * * [misc]progress:  [ 51 / 63 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* * * * [misc]progress:  [ 52 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (75 enodes)
* * [misc]simplify:  iters left: 4 (185 enodes)
* * [misc]simplify:  iters left: 3 (480 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) -13440.0) 1680.0) (* (+ (* 256.0 (* x x)) -3584.0) (pow (* x x) 3))) (* (cbrt (* (pow x 3) (* x 13440.0))) (* (cbrt (* 13440.0 (pow x 4))) (cbrt (* (pow x 3) (* x 13440.0))))))
* * * * [misc]progress:  [ 53 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (exp (* 1/3 (- (log (* 13440.0 (pow x 3))) (log (/ 1 x)))))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (exp (* 1/3 (- (log (* 13440.0 (pow x 3))) (log (/ 1 x)))))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (79 enodes)
* * [misc]simplify:  iters left: 4 (195 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0)))) (pow (exp 1/3) (+ (* 3 (log x)) (+ (log 13440.0) (log x))))) (+ (* (+ -3584.0 (* (* x 256.0) x)) (* (pow x 3) (pow x 3))) (+ 1680.0 (* -13440.0 (* x x)))))
* * * * [misc]progress:  [ 54 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x)))))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3)))) (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x)))))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (84 enodes)
* * [misc]simplify:  iters left: 4 (207 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* x x) 256.0))) (+ (* x (* -13440.0 x)) 1680.0)) (* (pow (exp 1/3) (+ (* 3 (+ 0 (log x))) (- (log -13440.0) (log (/ -1 x))))) (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0))))))
* * * * [misc]progress:  [ 55 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (74 enodes)
* * [misc]simplify:  iters left: 4 (184 enodes)
* * [misc]simplify:  iters left: 3 (470 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (* 13440.0 (pow x 4))) (cbrt (* (pow x 3) (* x 13440.0)))) (cbrt (* (pow x 3) (* x 13440.0)))) (+ (+ (* (* x x) -13440.0) 1680.0) (* (+ (* 256.0 (* x x)) -3584.0) (pow (* x x) 3))))
* * * * [misc]progress:  [ 56 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (exp (* 1/3 (- (log (* 13440.0 (pow x 3))) (log (/ 1 x)))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (exp (* 1/3 (- (log (* 13440.0 (pow x 3))) (log (/ 1 x)))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (79 enodes)
* * [misc]simplify:  iters left: 4 (196 enodes)
* [exit]simplify:  Simplified to (+ (* (pow (exp 1/3) (+ (+ (log x) (log 13440.0)) (* 3 (log x)))) (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0))))) (+ (* (+ -3584.0 (* (* x 256.0) x)) (* (pow x 3) (pow x 3))) (+ 1680.0 (* -13440.0 (* x x)))))
* * * * [misc]progress:  [ 57 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x)))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (cbrt (* (* x 13440.0) (pow x 3))) (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x)))))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (84 enodes)
* * [misc]simplify:  iters left: 4 (208 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* x x) 256.0))) (+ (* x (* x -13440.0)) 1680.0)) (* (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0)))) (pow (exp 1/3) (+ (* 3 (+ 0 (log x))) (- (log -13440.0) (log (/ -1 x)))))))
* * * * [misc]progress:  [ 58 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (185 enodes)
* * [misc]simplify:  iters left: 3 (479 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (* (pow x 3) (* x 13440.0))) (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* 13440.0 (pow x 4))))) (+ (+ (* (* x x) -13440.0) 1680.0) (* (+ (* 256.0 (* x x)) -3584.0) (* (pow x 3) (pow x 3)))))
* * * * [misc]progress:  [ 59 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (exp (* 1/3 (- (log (* 13440.0 (pow x 3))) (log (/ 1 x))))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (exp (* 1/3 (- (log (* 13440.0 (pow x 3))) (log (/ 1 x))))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (193 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ -3584.0 (* (* 256.0 x) x)) (* (pow x 3) (pow x 3))) (+ 1680.0 (* -13440.0 (* x x)))) (* (pow (exp 1/3) (+ (+ (log x) (log 13440.0)) (* 3 (log x)))) (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0))))))
* * * * [misc]progress:  [ 60 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x))))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x))))) (cbrt (* (* x 13440.0) (pow x 3)))) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (85 enodes)
* * [misc]simplify:  iters left: 4 (207 enodes)
* [exit]simplify:  Simplified to (+ (* (pow (exp 1/3) (+ (* (+ 0 (log x)) 3) (- (log -13440.0) (log (/ -1 x))))) (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0))))) (+ (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* x 256.0) x))) (+ (* (* x x) -13440.0) 1680.0)))
* * * * [misc]progress:  [ 61 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (pow (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) 2) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (pow (exp (* 1/3 (+ (* 4 (log x)) (log 13440.0)))) 2) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (75 enodes)
* * [misc]simplify:  iters left: 4 (189 enodes)
* * [misc]simplify:  iters left: 3 (493 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow (* 13440.0 (pow x 4)) (+ 1/3 1/3)) (cbrt (* (* x 13440.0) (pow x 3)))) 1680.0) (+ (* -13440.0 (* x x)) (* (+ -3584.0 (* (* 256.0 x) x)) (pow (* x x) 3))))
* * * * [misc]progress:  [ 62 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (pow (exp (* 1/3 (- (log (* 13440.0 (pow x 3))) (log (/ 1 x))))) 2) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (pow (exp (* 1/3 (- (log (* 13440.0 (pow x 3))) (log (/ 1 x))))) 2) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (79 enodes)
* * [misc]simplify:  iters left: 4 (197 enodes)
* [exit]simplify:  Simplified to (+ (* (exp (* (+ (* 3 (log x)) (+ (log 13440.0) (log x))) (+ 1/3 1/3))) (cbrt (* (* x 13440.0) (pow x 3)))) (+ (+ 1680.0 (* (* x x) -13440.0)) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))
* * * * [misc]progress:  [ 63 / 63 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (pow (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x))))) 2) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (pow (exp (* 1/3 (- (log (* -13440.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (log (/ -1 x))))) 2) (cbrt (* (* x 13440.0) (pow x 3)))) (* x (* x -13440.0))) 1680.0) (* (* (pow x 3) (pow x 3)) (+ -3584.0 (* (* 256.0 x) x))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (84 enodes)
* * [misc]simplify:  iters left: 4 (211 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (* (* 13440.0 x) (pow x 3))) (exp (* (+ (* (+ 0 (log x)) 3) (- (log -13440.0) (log (/ -1 x)))) (+ 1/3 1/3)))) (+ (+ 1680.0 (* (* x x) -13440.0)) (* (* (pow x 3) (pow x 3)) (+ (* x (* 256.0 x)) -3584.0))))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* [enter]simplify:  Simplifying (* (cbrt (* (* x 13440.0) (pow x 3))) (cbrt (* (* x 13440.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x 13440.0))) (cbrt (* (pow x 3) (* x 13440.0))))
* [enter]simplify:  Simplifying (cbrt (* (* x 13440.0) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x 13440.0)))
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x 13440.0)))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
