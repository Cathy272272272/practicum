* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (103 enodes)
* * [misc]simplify:  iters left: 1 (110 enodes)
* [exit]simplify:  Simplified to (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 4.375) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 4.375) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -3.75) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.75) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 4.375) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 4.375) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -3.75) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.75) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -3.75) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 3.75) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 1) (* 0 0))) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (* 0 4.375) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 4.375)) into 4.375
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 4.375 1)) into 4.375
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 4.375 0) into 4.375
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 4.375)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 (pow x 4)) (* (- 3.75) (pow x 2))) into (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (+ (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) (* (* (/ 1 x) -3.75) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) (* (* (/ 1 x) -3.75) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -3.75) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) (* (* (/ 1 x) -3.75) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -3.75) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (* 1 4.375) into 4.375
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -3)) into (/ 4.375 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (/ 4.375 (pow x 3)) 0) into (* 4.375 (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (* 4.375 (/ 1 (pow x 3))) into (/ 4.375 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 4.375)) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 4.375 (pow (/ 1 x) 3)) (/ 1 (/ 1 x))) (* (- 3.75) (pow (/ 1 (/ 1 x)) 2))) into (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -3.75) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -3.75) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -3.75) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -3.75) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -3.75) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -3.75) into 3.75
* [misc]backup-simplify:  Simplify (* 3.75 -1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (* -1 4.375) into -4.375
* [misc]backup-simplify:  Simplify (* -4.375 (exp (* 3 (- (log -1) (log x))))) into (* -4.375 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 (exp (* 3 (- (log -1) (log x))))) 0) into (- (* 4.375 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- (* 4.375 (exp (* 3 (- (log -1) (log x)))))) into (- (* 4.375 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 4.375)) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 4.375 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (/ 1 (/ 1 (- x)))) (* (- 3.75) (pow (/ 1 (/ 1 (- x))) 2))) into (- (* 4.375 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 3.75 (pow x 2)))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* x 4.375) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x 4.375) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 4.375) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 4.375) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 4.375) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 4.375) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 4.375)) into 4.375
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 4.375 1)) into 4.375
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 4.375)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 4.375 (pow x 4)) into (* 4.375 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 4.375) into 4.375
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -3)) into (/ 4.375 (pow x 3))
* [misc]backup-simplify:  Simplify (/ 4.375 (pow x 3)) into (/ 4.375 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 4.375)) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (/ 4.375 (pow (/ 1 x) 3)) (/ 1 (/ 1 x))) into (* 4.375 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 4.375) into -4.375
* [misc]backup-simplify:  Simplify (* -4.375 (exp (* 3 (- (log -1) (log x))))) into (* -4.375 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* -4.375 (exp (* 3 (- (log -1) (log x))))) into (* -4.375 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 4.375)) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (* -4.375 (exp (* 3 (- (log -1) (log (/ 1 (- x))))))) (/ 1 (/ 1 (- x)))) into (* 4.375 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x -3.75) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x -3.75) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.75) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x -3.75) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.75) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -3.75) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 3.75) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 1) (* 0 0))) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 3.75) (pow x 2)) into (* -3.75 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) -3.75) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -3.75) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -3.75) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -3.75 (pow (/ 1 (/ 1 x)) 2)) into (* -3.75 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) -3.75) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -3.75) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -3.75) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -3.75) into 3.75
* [misc]backup-simplify:  Simplify (* 3.75 -1) into -3.75
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -3.75 (pow (/ 1 (/ 1 (- x))) 2)) into (* -3.75 (pow x 2))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 4.375) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 4.375) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -3.75) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.75) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 4.375) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 4.375) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -3.75) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.75) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -3.75) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 3.75) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 1) (* 0 0))) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (* 0 4.375) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 4.375)) into 4.375
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 4.375 1)) into 4.375
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 4.375 0) into 4.375
* [misc]backup-simplify:  Simplify (+ 0 4.375) into 4.375
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (+ (* 4.375 (pow x 4)) (+ (* (- 3.75) (pow x 2)) 0.375)) into (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (+ 0.375 (+ (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) (* (* (/ 1 x) -3.75) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (+ (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) (* (* (/ 1 x) -3.75) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) (* (* (/ 1 x) -3.75) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -3.75) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (+ (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) (* (* (/ 1 x) -3.75) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) (* (* (/ 1 x) -3.75) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -3.75) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (* 1 4.375) into 4.375
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -3)) into (/ 4.375 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (/ 4.375 (pow x 3)) 0) into (* 4.375 (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (+ 0 (* 4.375 (/ 1 (pow x 3)))) into (* 4.375 (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (* 4.375 (/ 1 (pow x 3))) into (/ 4.375 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 4.375)) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]backup-simplify:  Simplify (+ 0.375 (+ (* (/ 4.375 (pow (/ 1 x) 3)) (/ 1 (/ 1 x))) (* (- 3.75) (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (+ 0.375 (+ (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -3.75) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (+ (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -3.75) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -3.75) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -3.75) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (+ (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -3.75) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -3.75) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -3.75) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -3.75) into 3.75
* [misc]backup-simplify:  Simplify (* 3.75 -1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (* -1 4.375) into -4.375
* [misc]backup-simplify:  Simplify (* -4.375 (exp (* 3 (- (log -1) (log x))))) into (* -4.375 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 (exp (* 3 (- (log -1) (log x))))) 0) into (- (* 4.375 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ 0 (- (* 4.375 (exp (* 3 (- (log -1) (log x))))))) into (- (* 4.375 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- (* 4.375 (exp (* 3 (- (log -1) (log x)))))) into (- (* 4.375 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 4.375)) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]backup-simplify:  Simplify (+ 0.375 (+ (* (- (* 4.375 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (/ 1 (/ 1 (- x)))) (* (- 3.75) (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 4.375 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) 0.375) (* 3.75 (pow x 2)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (log (* (exp (* (* x 4.375) (pow x 3))) (exp (* (* x -3.75) x))))))>
* [enter]simplify:  Simplifying (* (exp (* (* x 4.375) (pow x 3))) (exp (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (82 enodes)
* * [misc]simplify:  iters left: 2 (99 enodes)
* * [misc]simplify:  iters left: 1 (103 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (+ (* (* x 4.375) (* x x)) (* -3.75 x)))
* [exit]simplify:  Simplified to (pow (exp x) (+ (* (* x 4.375) (* x x)) (* -3.75 x)))
* * * * [misc]progress:  [ 2 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 1)))>
* * * * [misc]progress:  [ 3 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (exp (log (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))>
* [enter]simplify:  Simplifying (log (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (146 enodes)
* [exit]simplify:  Simplified to (log (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [exit]simplify:  Simplified to (log (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* * * * [misc]progress:  [ 4 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (log (exp (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))>
* [enter]simplify:  Simplifying (exp (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (134 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (+ (* x -3.75) (* (* x x) (* x 4.375))))
* [exit]simplify:  Simplified to (pow (exp x) (+ (* x -3.75) (* (* x x) (* x 4.375))))
* * * * [misc]progress:  [ 5 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))) (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))) (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))))
* [enter]simplify:  Simplifying (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* * * * [misc]progress:  [ 6 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (cbrt (* (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))>
* [enter]simplify:  Simplifying (* (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x)) 3)
* * * * [misc]progress:  [ 7 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))>
* [enter]simplify:  Simplifying (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [enter]simplify:  Simplifying (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* * * * [misc]progress:  [ 8 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (/ (+ (pow (* (* x 4.375) (pow x 3)) 3) (pow (* (* x -3.75) x) 3)) (+ (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (- (* (* (* x -3.75) x) (* (* x -3.75) x)) (* (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (+ (pow (* (* x 4.375) (pow x 3)) 3) (pow (* (* x -3.75) x) 3))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (466 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (pow x 3) (* x 4.375)) 3) (pow (* x (* -3.75 x)) 3))
* [exit]simplify:  Simplified to (+ (pow (* (pow x 3) (* x 4.375)) 3) (pow (* x (* -3.75 x)) 3))
* [enter]simplify:  Simplifying (+ (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (- (* (* (* x -3.75) x) (* (* x -3.75) x)) (* (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (- (* (* x (* -3.75 x)) (* x (* -3.75 x))) (* (* (* (* x x) (* x 4.375)) (* x x)) (- (* -3.75 x) (* (* x x) (* x 4.375)))))
* [exit]simplify:  Simplified to (- (* (* x (* -3.75 x)) (* x (* -3.75 x))) (* (* (* (* x x) (* x 4.375)) (* x x)) (- (* -3.75 x) (* (* x x) (* x 4.375)))))
* * * * [misc]progress:  [ 9 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* 1 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))>
* * * * [misc]progress:  [ 10 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (/ (- (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (* (* (* x -3.75) x) (* (* x -3.75) x))) (- (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))>
* [enter]simplify:  Simplifying (- (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (* (* (* x -3.75) x) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (322 enodes)
* [exit]simplify:  Simplified to (* (- (* (pow x 3) (* x 4.375)) (* x (* -3.75 x))) (+ (* x (* -3.75 x)) (* (pow x 3) (* x 4.375))))
* [exit]simplify:  Simplified to (* (- (* (pow x 3) (* x 4.375)) (* x (* -3.75 x))) (+ (* x (* -3.75 x)) (* (pow x 3) (* x 4.375))))
* [enter]simplify:  Simplifying (- (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (109 enodes)
* * [misc]simplify:  iters left: 1 (112 enodes)
* [exit]simplify:  Simplified to (- (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))
* [exit]simplify:  Simplified to (- (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))
* * * * [misc]progress:  [ 11 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* (* x -3.75) x) (* (* x 4.375) (pow x 3)))))>
* * * * [misc]progress:  [ 12 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (pow (* (* x 4.375) (pow x 3)) 1) (* (* x -3.75) x))))>
* * * * [misc]progress:  [ 13 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (exp (+ (log (* x 4.375)) (* (log x) 3))) (* (* x -3.75) x))))>
* [enter]simplify:  Simplifying (+ (log (* x 4.375)) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (25 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x 4.375)))
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x 4.375)))
* * * * [misc]progress:  [ 14 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (exp (+ (log (* x 4.375)) (log (pow x 3)))) (* (* x -3.75) x))))>
* [enter]simplify:  Simplifying (+ (log (* x 4.375)) (log (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* * [misc]simplify:  iters left: 1 (56 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (* x 4.375)))
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (* x 4.375)))
* * * * [misc]progress:  [ 15 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (exp (log (* (* x 4.375) (pow x 3)))) (* (* x -3.75) x))))>
* [enter]simplify:  Simplifying (log (* (* x 4.375) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (81 enodes)
* * [misc]simplify:  iters left: 1 (90 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x 4.375)))
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x 4.375)))
* * * * [misc]progress:  [ 16 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (log (exp (* (* x 4.375) (pow x 3)))) (* (* x -3.75) x))))>
* [enter]simplify:  Simplifying (exp (* (* x 4.375) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* * [misc]simplify:  iters left: 1 (48 enodes)
* [exit]simplify:  Simplified to (exp (* (pow x 3) (* x 4.375)))
* [exit]simplify:  Simplified to (exp (* (pow x 3) (* x 4.375)))
* * * * [misc]progress:  [ 17 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (cbrt (* (* (* (* x 4.375) (* x 4.375)) (* x 4.375)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (* (* x -3.75) x))))>
* [enter]simplify:  Simplifying (* (* (* (* x 4.375) (* x 4.375)) (* x 4.375)) (* (* (pow x 3) (pow x 3)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (378 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (* x 4.375) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (* x 4.375) 3))
* * * * [misc]progress:  [ 18 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* (* (cbrt (* (* x 4.375) (pow x 3))) (cbrt (* (* x 4.375) (pow x 3)))) (cbrt (* (* x 4.375) (pow x 3)))) (* (* x -3.75) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x 4.375) (pow x 3))) (cbrt (* (* x 4.375) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x 4.375))) (cbrt (* (pow x 3) (* x 4.375))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x 4.375))) (cbrt (* (pow x 3) (* x 4.375))))
* [enter]simplify:  Simplifying (cbrt (* (* x 4.375) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (43 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x 4.375)))
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x 4.375)))
* * * * [misc]progress:  [ 19 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (cbrt (* (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (* (* x 4.375) (pow x 3)))) (* (* x -3.75) x))))>
* [enter]simplify:  Simplifying (* (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (* (* x 4.375) (pow x 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (287 enodes)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* x 4.375)) 3)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* x 4.375)) 3)
* * * * [misc]progress:  [ 20 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* (sqrt (* (* x 4.375) (pow x 3))) (sqrt (* (* x 4.375) (pow x 3)))) (* (* x -3.75) x))))>
* [enter]simplify:  Simplifying (sqrt (* (* x 4.375) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (43 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 4.375)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 4.375)))
* [enter]simplify:  Simplifying (sqrt (* (* x 4.375) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (43 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 4.375)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x 4.375)))
* * * * [misc]progress:  [ 21 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* 1 (* (* x 4.375) (pow x 3))) (* (* x -3.75) x))))>
* * * * [misc]progress:  [ 22 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* (* (* x 4.375) (* x x)) x) (* (* x -3.75) x))))>
* [enter]simplify:  Simplifying (* (* x 4.375) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x 4.375) (* x x))
* [exit]simplify:  Simplified to (* (* x 4.375) (* x x))
* * * * [misc]progress:  [ 23 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* (* (* x 4.375) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3))) (* (* x -3.75) x))))>
* [enter]simplify:  Simplifying (* (* x 4.375) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* * [misc]simplify:  iters left: 1 (89 enodes)
* [exit]simplify:  Simplified to (* (* x 4.375) (* x x))
* [exit]simplify:  Simplified to (* (* x 4.375) (* x x))
* * * * [misc]progress:  [ 24 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* (* (* x 4.375) x) (* x x)) (* (* x -3.75) x))))>
* [enter]simplify:  Simplifying (* (* x 4.375) x)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (* x (* x 4.375))
* [exit]simplify:  Simplified to (* x (* x 4.375))
* * * * [misc]progress:  [ 25 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* (* (* x 4.375) (sqrt (pow x 3))) (sqrt (pow x 3))) (* (* x -3.75) x))))>
* [enter]simplify:  Simplifying (* (* x 4.375) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (* x 4.375) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (* x 4.375) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 26 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* (* (* x 4.375) 1) (pow x 3)) (* (* x -3.75) x))))>
* [enter]simplify:  Simplifying (* (* x 4.375) 1)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (19 enodes)
* [exit]simplify:  Simplified to (* x 4.375)
* [exit]simplify:  Simplified to (* x 4.375)
* * * * [misc]progress:  [ 27 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* x (* 4.375 (pow x 3))) (* (* x -3.75) x))))>
* [enter]simplify:  Simplifying (* 4.375 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* 4.375 x) (* x x))
* [exit]simplify:  Simplified to (* (* 4.375 x) (* x x))
* * * * [misc]progress:  [ 28 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))))>
* * * * [misc]progress:  [ 29 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (pow (* (* x -3.75) x) 1))))>
* * * * [misc]progress:  [ 30 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (exp (log (* (* x -3.75) x))))))>
* [enter]simplify:  Simplifying (log (* (* x -3.75) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* [exit]simplify:  Simplified to (log (* x (* x -3.75)))
* [exit]simplify:  Simplified to (log (* x (* x -3.75)))
* * * * [misc]progress:  [ 31 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (log (exp (* (* x -3.75) x))))))>
* [enter]simplify:  Simplifying (exp (* (* x -3.75) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* [exit]simplify:  Simplified to (exp (* x (* x -3.75)))
* [exit]simplify:  Simplified to (exp (* x (* x -3.75)))
* * * * [misc]progress:  [ 32 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* (cbrt (* (* x -3.75) x)) (cbrt (* (* x -3.75) x))) (cbrt (* (* x -3.75) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x -3.75) x)) (cbrt (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -3.75))) (cbrt (* x (* x -3.75))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x -3.75))) (cbrt (* x (* x -3.75))))
* [enter]simplify:  Simplifying (cbrt (* (* x -3.75) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (* x (* x -3.75)))
* [exit]simplify:  Simplified to (cbrt (* x (* x -3.75)))
* * * * [misc]progress:  [ 33 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (cbrt (* (* (* (* x -3.75) x) (* (* x -3.75) x)) (* (* x -3.75) x))))))>
* [enter]simplify:  Simplifying (* (* (* (* x -3.75) x) (* (* x -3.75) x)) (* (* x -3.75) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (335 enodes)
* [exit]simplify:  Simplified to (pow (* x (* x -3.75)) 3)
* [exit]simplify:  Simplified to (pow (* x (* x -3.75)) 3)
* * * * [misc]progress:  [ 34 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (sqrt (* (* x -3.75) x)) (sqrt (* (* x -3.75) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x -3.75) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x -3.75)))
* [exit]simplify:  Simplified to (sqrt (* x (* x -3.75)))
* [enter]simplify:  Simplifying (sqrt (* (* x -3.75) x))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x -3.75)))
* [exit]simplify:  Simplified to (sqrt (* x (* x -3.75)))
* * * * [misc]progress:  [ 35 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* 1 (* (* x -3.75) x)))))>
* * * * [misc]progress:  [ 36 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* x (* -3.75 x)))))>
* [enter]simplify:  Simplifying (* -3.75 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* -3.75 x)
* [exit]simplify:  Simplified to (* -3.75 x)
* * * * [misc]progress:  [ 37 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* x (* x -3.75)))))>
* * * * [misc]progress:  [ 38 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) 1))>
* * * * [misc]progress:  [ 39 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))>
* [enter]simplify:  Simplifying (log (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (124 enodes)
* [exit]simplify:  Simplified to (log (+ (+ (* (* x x) -3.75) (* (* 4.375 x) (pow x 3))) 0.375))
* [exit]simplify:  Simplified to (log (+ (+ (* (* x x) -3.75) (* (* 4.375 x) (pow x 3))) 0.375))
* * * * [misc]progress:  [ 40 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))>
* [enter]simplify:  Simplifying (exp (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (161 enodes)
* * [misc]simplify:  iters left: 1 (191 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 4.375) (* (* x x) (* x x))) (* (pow (exp x) (* -3.75 x)) (exp 0.375)))
* [exit]simplify:  Simplified to (* (pow (exp 4.375) (* (* x x) (* x x))) (* (pow (exp x) (* -3.75 x)) (exp 0.375)))
* * * * [misc]progress:  [ 41 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) (cbrt (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))) (cbrt (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) (cbrt (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (89 enodes)
* * [misc]simplify:  iters left: 1 (90 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* x (* -3.75 x)) 0.375) (* (* 4.375 x) (pow x 3)))) (cbrt (+ (+ (* x (* -3.75 x)) 0.375) (* (* 4.375 x) (pow x 3)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* x (* -3.75 x)) 0.375) (* (* 4.375 x) (pow x 3)))) (cbrt (+ (+ (* x (* -3.75 x)) 0.375) (* (* 4.375 x) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (124 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ (* (* x x) -3.75) (* (* 4.375 x) (pow x 3))) 0.375))
* [exit]simplify:  Simplified to (cbrt (+ (+ (* (* x x) -3.75) (* (* 4.375 x) (pow x 3))) 0.375))
* * * * [misc]progress:  [ 42 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))>
* [enter]simplify:  Simplifying (* (* (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ (* x (* -3.75 x)) 0.375) (* (* 4.375 x) (pow x 3))) 3)
* [exit]simplify:  Simplified to (pow (+ (+ (* x (* -3.75 x)) 0.375) (* (* 4.375 x) (pow x 3))) 3)
* * * * [misc]progress:  [ 43 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) (sqrt (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))>
* [enter]simplify:  Simplifying (sqrt (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (124 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (* x x) -3.75) (* (* 4.375 x) (pow x 3))) 0.375))
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (* x x) -3.75) (* (* 4.375 x) (pow x 3))) 0.375))
* [enter]simplify:  Simplifying (sqrt (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (124 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (* x x) -3.75) (* (* 4.375 x) (pow x 3))) 0.375))
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (* x x) -3.75) (* (* 4.375 x) (pow x 3))) 0.375))
* * * * [misc]progress:  [ 44 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (266 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* (* x -3.75) x) (* (pow x 3) (* x 4.375))) 3) (pow 0.375 3))
* [exit]simplify:  Simplified to (+ (pow (+ (* (* x -3.75) x) (* (pow x 3) (* x 4.375))) 3) (pow 0.375 3))
* [enter]simplify:  Simplifying (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* [exit]simplify:  Simplified to (- (* (+ (* (* -3.75 x) x) (* (pow x 3) (* x 4.375))) (+ (* (* -3.75 x) x) (* (pow x 3) (* x 4.375)))) (+ (* (* 0.375 4.375) (* (* x x) (* x x))) (- (* (* -3.75 x) (* 0.375 x)) (* 0.375 0.375))))
* [exit]simplify:  Simplified to (- (* (+ (* (* -3.75 x) x) (* (pow x 3) (* x 4.375))) (+ (* (* -3.75 x) x) (* (pow x 3) (* x 4.375)))) (+ (* (* 0.375 4.375) (* (* x x) (* x x))) (- (* (* -3.75 x) (* 0.375 x)) (* 0.375 0.375))))
* * * * [misc]progress:  [ 45 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))>
* * * * [misc]progress:  [ 46 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* 0.375 0.375) (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) (- 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))>
* [enter]simplify:  Simplifying (- (* 0.375 0.375) (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (495 enodes)
* [exit]simplify:  Simplified to (- (* 0.375 0.375) (* (+ (* (* -3.75 x) x) (* (pow x 3) (* x 4.375))) (+ (* (* -3.75 x) x) (* (pow x 3) (* x 4.375)))))
* [exit]simplify:  Simplified to (- (* 0.375 0.375) (* (+ (* (* -3.75 x) x) (* (pow x 3) (* x 4.375))) (+ (* (* -3.75 x) x) (* (pow x 3) (* x 4.375)))))
* [enter]simplify:  Simplifying (- 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (124 enodes)
* * [misc]simplify:  iters left: 2 (220 enodes)
* * [misc]simplify:  iters left: 1 (326 enodes)
* [exit]simplify:  Simplified to (+ (- 0.375 (* (* x x) -3.75)) (* (* (* x x) (* x x)) (- 4.375)))
* [exit]simplify:  Simplified to (+ (- 0.375 (* (* x x) -3.75)) (* (* (* x x) (* x x)) (- 4.375)))
* * * * [misc]progress:  [ 47 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* (* x 4.375) (pow x 3))) (* (* x -3.75) x)))>
* [enter]simplify:  Simplifying (+ 0.375 (* (* x 4.375) (pow x 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (+ (* (* 4.375 x) (pow x 3)) 0.375)
* [exit]simplify:  Simplified to (+ (* (* 4.375 x) (pow x 3)) 0.375)
* * * * [misc]progress:  [ 48 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 0.375))>
* * * * [misc]progress:  [ 49 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (63 enodes)
* * [misc]simplify:  iters left: 1 (74 enodes)
* [exit]simplify:  Simplified to (+ (- (* 4.375 (pow x 4)) (* x (* x 3.75))) 0.375)
* * * * [misc]progress:  [ 50 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (63 enodes)
* * [misc]simplify:  iters left: 1 (74 enodes)
* [exit]simplify:  Simplified to (+ (- (* 4.375 (pow x 4)) (* x (* x 3.75))) 0.375)
* * * * [misc]progress:  [ 51 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (- (* 4.375 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 0.375 (- (* 4.375 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (130 enodes)
* * [misc]simplify:  iters left: 2 (357 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 4.375) (pow x 3)) (- 0.375 (* x (* 3.75 x))))
* * * * [misc]progress:  [ 52 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (+ (* 4.375 (pow x 4)) (* (* x -3.75) x))))>
* [enter]simplify:  Simplifying (+ 0.375 (+ (* 4.375 (pow x 4)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* [exit]simplify:  Simplified to (+ (+ 0.375 (* 4.375 (pow x 4))) (* (* x -3.75) x))
* * * * [misc]progress:  [ 53 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (+ (* 4.375 (pow x 4)) (* (* x -3.75) x))))>
* [enter]simplify:  Simplifying (+ 0.375 (+ (* 4.375 (pow x 4)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* [exit]simplify:  Simplified to (+ (+ 0.375 (* 4.375 (pow x 4))) (* (* x -3.75) x))
* * * * [misc]progress:  [ 54 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (+ (* 4.375 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* (* x -3.75) x))))>
* [enter]simplify:  Simplifying (+ 0.375 (+ (* 4.375 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (109 enodes)
* * [misc]simplify:  iters left: 2 (274 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (* 4.375 x)) (+ (* -3.75 (* x x)) 0.375))
* * * * [misc]progress:  [ 55 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* -3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* -3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (137 enodes)
* * [misc]simplify:  iters left: 1 (188 enodes)
* [exit]simplify:  Simplified to (+ 0.375 (+ (* (* 4.375 x) (pow x 3)) (* x (* -3.75 x))))
* * * * [misc]progress:  [ 56 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* -3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* -3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (137 enodes)
* * [misc]simplify:  iters left: 1 (188 enodes)
* [exit]simplify:  Simplified to (+ 0.375 (+ (* (* 4.375 x) (pow x 3)) (* x (* -3.75 x))))
* * * * [misc]progress:  [ 57 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* -3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* -3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (137 enodes)
* * [misc]simplify:  iters left: 1 (188 enodes)
* [exit]simplify:  Simplified to (+ 0.375 (+ (* (* 4.375 x) (pow x 3)) (* x (* -3.75 x))))
* * * * [misc]progress:  [ 58 / 60 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2))))>
* [enter]simplify:  Simplifying (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (69 enodes)
* [exit]simplify:  Simplified to (+ (- 0.375 (* x (* 3.75 x))) (* (pow x 4) 4.375))
* * * * [misc]progress:  [ 59 / 60 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2))))>
* [enter]simplify:  Simplifying (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (69 enodes)
* [exit]simplify:  Simplified to (+ (- 0.375 (* x (* 3.75 x))) (* (pow x 4) 4.375))
* * * * [misc]progress:  [ 60 / 60 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 4.375 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) 0.375) (* 3.75 (pow x 2))))>
* [enter]simplify:  Simplifying (- (+ (* 4.375 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) 0.375) (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (131 enodes)
* * [misc]simplify:  iters left: 2 (360 enodes)
* [exit]simplify:  Simplified to (- (- 0.375 (* x (* 3.75 x))) (* (* (* x x) (* x x)) (- 4.375)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 2 2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 2 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 2 2 2)
* [misc]approximate:  Taking taylor expansion of (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 4.375) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 4.375) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -3.75) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.75) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 4.375) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 4.375) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -3.75) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.75) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -3.75) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 3.75) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 1) (* 0 0))) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (* 0 4.375) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 4.375)) into 4.375
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 4.375 1)) into 4.375
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 4.375 0) into 4.375
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 4.375)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 (pow x 4)) (* (- 3.75) (pow x 2))) into (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (+ (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) (* (* (/ 1 x) -3.75) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) (* (* (/ 1 x) -3.75) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -3.75) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) (* (* (/ 1 x) -3.75) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -3.75) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (* 1 4.375) into 4.375
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -3)) into (/ 4.375 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (/ 4.375 (pow x 3)) 0) into (* 4.375 (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (* 4.375 (/ 1 (pow x 3))) into (/ 4.375 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 4.375)) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 4.375 (pow (/ 1 x) 3)) (/ 1 (/ 1 x))) (* (- 3.75) (pow (/ 1 (/ 1 x)) 2))) into (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -3.75) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -3.75) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -3.75) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -3.75) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -3.75) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -3.75) into 3.75
* [misc]backup-simplify:  Simplify (* 3.75 -1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (* -1 4.375) into -4.375
* [misc]backup-simplify:  Simplify (* -4.375 (exp (* 3 (- (log -1) (log x))))) into (* -4.375 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 (exp (* 3 (- (log -1) (log x))))) 0) into (- (* 4.375 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- (* 4.375 (exp (* 3 (- (log -1) (log x)))))) into (- (* 4.375 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 4.375)) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 4.375 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (/ 1 (/ 1 (- x)))) (* (- 3.75) (pow (/ 1 (/ 1 (- x))) 2))) into (- (* 4.375 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 3.75 (pow x 2)))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 4.375) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 4.375) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -3.75) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.75) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 4.375) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 4.375) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -3.75) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.75) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -3.75) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 3.75) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 1) (* 0 0))) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (* 0 4.375) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 4.375)) into 4.375
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 4.375 1)) into 4.375
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 4.375 0) into 4.375
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 4.375)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 (pow x 4)) (* (- 3.75) (pow x 2))) into (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (+ (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) (* (* (/ 1 x) -3.75) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) (* (* (/ 1 x) -3.75) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -3.75) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) (* (* (/ 1 x) -3.75) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -3.75) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (* 1 4.375) into 4.375
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -3)) into (/ 4.375 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (/ 4.375 (pow x 3)) 0) into (* 4.375 (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (* 4.375 (/ 1 (pow x 3))) into (/ 4.375 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 4.375)) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 4.375 (pow (/ 1 x) 3)) (/ 1 (/ 1 x))) (* (- 3.75) (pow (/ 1 (/ 1 x)) 2))) into (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -3.75) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -3.75) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -3.75) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -3.75) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -3.75) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -3.75) into 3.75
* [misc]backup-simplify:  Simplify (* 3.75 -1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (* -1 4.375) into -4.375
* [misc]backup-simplify:  Simplify (* -4.375 (exp (* 3 (- (log -1) (log x))))) into (* -4.375 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 (exp (* 3 (- (log -1) (log x))))) 0) into (- (* 4.375 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- (* 4.375 (exp (* 3 (- (log -1) (log x)))))) into (- (* 4.375 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 4.375)) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 4.375 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (/ 1 (/ 1 (- x)))) (* (- 3.75) (pow (/ 1 (/ 1 (- x))) 2))) into (- (* 4.375 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 3.75 (pow x 2)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 4.375) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 4.375) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -3.75) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.75) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 4.375) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 4.375) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -3.75) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.75) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -3.75) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 3.75) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 1) (* 0 0))) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (* 0 4.375) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 4.375)) into 4.375
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 4.375 1)) into 4.375
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 4.375 0) into 4.375
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 4.375)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 (pow x 4)) (* (- 3.75) (pow x 2))) into (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (+ (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) (* (* (/ 1 x) -3.75) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) (* (* (/ 1 x) -3.75) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -3.75) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) (* (* (/ 1 x) -3.75) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -3.75) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (* 1 4.375) into 4.375
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -3)) into (/ 4.375 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (/ 4.375 (pow x 3)) 0) into (* 4.375 (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (* 4.375 (/ 1 (pow x 3))) into (/ 4.375 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 4.375)) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 4.375 (pow (/ 1 x) 3)) (/ 1 (/ 1 x))) (* (- 3.75) (pow (/ 1 (/ 1 x)) 2))) into (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -3.75) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -3.75) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -3.75) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -3.75) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -3.75) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -3.75) into 3.75
* [misc]backup-simplify:  Simplify (* 3.75 -1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (* -1 4.375) into -4.375
* [misc]backup-simplify:  Simplify (* -4.375 (exp (* 3 (- (log -1) (log x))))) into (* -4.375 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 (exp (* 3 (- (log -1) (log x))))) 0) into (- (* 4.375 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- (* 4.375 (exp (* 3 (- (log -1) (log x)))))) into (- (* 4.375 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 4.375)) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 4.375 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (/ 1 (/ 1 (- x)))) (* (- 3.75) (pow (/ 1 (/ 1 (- x))) 2))) into (- (* 4.375 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 3.75 (pow x 2)))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 2 1)
* [misc]approximate:  Taking taylor expansion of (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 4.375) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 4.375) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -3.75) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.75) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 4.375) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x 4.375) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -3.75) x) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.75) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -3.75) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* (- 3.75) 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 1) (* 0 0))) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (* 0 4.375) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 4.375)) into 4.375
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 4.375 1)) into 4.375
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 4.375 0) into 4.375
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 4.375)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 (pow x 4)) (* (- 3.75) (pow x 2))) into (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (+ (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) (* (* (/ 1 x) -3.75) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) (* (* (/ 1 x) -3.75) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -3.75) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) (* (* (/ 1 x) -3.75) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 4.375) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -3.75) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (* 1 4.375) into 4.375
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -3)) into (/ 4.375 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (/ 4.375 (pow x 3)) 0) into (* 4.375 (/ 1 (pow x 3)))
* [misc]backup-simplify:  Simplify (* 4.375 (/ 1 (pow x 3))) into (/ 4.375 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 4.375)) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 4.375 (pow (/ 1 x) 3)) (/ 1 (/ 1 x))) (* (- 3.75) (pow (/ 1 (/ 1 x)) 2))) into (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -3.75) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -3.75) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -3.75) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) (* (* (/ 1 (- x)) -3.75) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 4.375) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -3.75) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -3.75) into 3.75
* [misc]backup-simplify:  Simplify (* 3.75 -1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (* -1 4.375) into -4.375
* [misc]backup-simplify:  Simplify (* -4.375 (exp (* 3 (- (log -1) (log x))))) into (* -4.375 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 (exp (* 3 (- (log -1) (log x))))) 0) into (- (* 4.375 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- (* 4.375 (exp (* 3 (- (log -1) (log x)))))) into (- (* 4.375 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 4.375)) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 4.375 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (/ 1 (/ 1 (- x)))) (* (- 3.75) (pow (/ 1 (/ 1 (- x))) 2))) into (- (* 4.375 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 3.75 (pow x 2)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (log (* (exp (* (* x 4.375) (pow x 3))) (exp (* (* x -3.75) x)))))))))>
* [enter]simplify:  Simplifying (* (exp (* (* x 4.375) (pow x 3))) (exp (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (82 enodes)
* * [misc]simplify:  iters left: 2 (99 enodes)
* * [misc]simplify:  iters left: 1 (103 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (+ (* (* x 4.375) (* x x)) (* -3.75 x)))
* [exit]simplify:  Simplified to (pow (exp x) (+ (* (* x 4.375) (* x x)) (* -3.75 x)))
* * * * [misc]progress:  [ 2 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 1))))))>
* * * * [misc]progress:  [ 3 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (exp (log (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))))>
* [enter]simplify:  Simplifying (log (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (146 enodes)
* [exit]simplify:  Simplified to (log (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [exit]simplify:  Simplified to (log (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* * * * [misc]progress:  [ 4 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (log (exp (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))))>
* [enter]simplify:  Simplifying (exp (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (134 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (+ (* x -3.75) (* (* x x) (* x 4.375))))
* [exit]simplify:  Simplified to (pow (exp x) (+ (* x -3.75) (* (* x x) (* x 4.375))))
* * * * [misc]progress:  [ 5 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (* (* (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))) (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))) (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))))
* [enter]simplify:  Simplifying (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* * * * [misc]progress:  [ 6 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (cbrt (* (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))))>
* [enter]simplify:  Simplifying (* (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x)) 3)
* * * * [misc]progress:  [ 7 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (* (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))))>
* [enter]simplify:  Simplifying (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [enter]simplify:  Simplifying (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* * * * [misc]progress:  [ 8 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (/ (+ (pow (* (* x 4.375) (pow x 3)) 3) (pow (* (* x -3.75) x) 3)) (+ (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (- (* (* (* x -3.75) x) (* (* x -3.75) x)) (* (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))))))>
* [enter]simplify:  Simplifying (+ (pow (* (* x 4.375) (pow x 3)) 3) (pow (* (* x -3.75) x) 3))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (466 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (pow x 3) (* x 4.375)) 3) (pow (* x (* -3.75 x)) 3))
* [exit]simplify:  Simplified to (+ (pow (* (pow x 3) (* x 4.375)) 3) (pow (* x (* -3.75 x)) 3))
* [enter]simplify:  Simplifying (+ (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (- (* (* (* x -3.75) x) (* (* x -3.75) x)) (* (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (- (* (* x (* -3.75 x)) (* x (* -3.75 x))) (* (* (* (* x x) (* x 4.375)) (* x x)) (- (* -3.75 x) (* (* x x) (* x 4.375)))))
* [exit]simplify:  Simplified to (- (* (* x (* -3.75 x)) (* x (* -3.75 x))) (* (* (* (* x x) (* x 4.375)) (* x x)) (- (* -3.75 x) (* (* x x) (* x 4.375)))))
* * * * [misc]progress:  [ 9 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (* 1 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))))>
* * * * [misc]progress:  [ 10 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (/ (- (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (* (* (* x -3.75) x) (* (* x -3.75) x))) (- (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))))>
* [enter]simplify:  Simplifying (- (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (* (* (* x -3.75) x) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (322 enodes)
* [exit]simplify:  Simplified to (* (- (* (pow x 3) (* x 4.375)) (* x (* -3.75 x))) (+ (* x (* -3.75 x)) (* (pow x 3) (* x 4.375))))
* [exit]simplify:  Simplified to (* (- (* (pow x 3) (* x 4.375)) (* x (* -3.75 x))) (+ (* x (* -3.75 x)) (* (pow x 3) (* x 4.375))))
* [enter]simplify:  Simplifying (- (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (109 enodes)
* * [misc]simplify:  iters left: 1 (112 enodes)
* [exit]simplify:  Simplified to (- (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))
* [exit]simplify:  Simplified to (- (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))
* * * * [misc]progress:  [ 11 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x -3.75) x) (* (* x 4.375) (pow x 3))))))))>
* * * * [misc]progress:  [ 12 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (log (* (exp (* (* x 4.375) (pow x 3))) (exp (* (* x -3.75) x))))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (* (exp (* (* x 4.375) (pow x 3))) (exp (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (82 enodes)
* * [misc]simplify:  iters left: 2 (99 enodes)
* * [misc]simplify:  iters left: 1 (103 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (+ (* (* x 4.375) (* x x)) (* -3.75 x)))
* [exit]simplify:  Simplified to (pow (exp x) (+ (* (* x 4.375) (* x x)) (* -3.75 x)))
* * * * [misc]progress:  [ 13 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 1)) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* * * * [misc]progress:  [ 14 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (exp (log (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (log (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (146 enodes)
* [exit]simplify:  Simplified to (log (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [exit]simplify:  Simplified to (log (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* * * * [misc]progress:  [ 15 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (log (exp (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (exp (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (134 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (+ (* x -3.75) (* (* x x) (* x 4.375))))
* [exit]simplify:  Simplified to (pow (exp x) (+ (* x -3.75) (* (* x x) (* x 4.375))))
* * * * [misc]progress:  [ 16 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (* (* (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))) (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))) (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))))
* [enter]simplify:  Simplifying (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* * * * [misc]progress:  [ 17 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (cbrt (* (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (* (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x)) 3)
* * * * [misc]progress:  [ 18 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (* (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [enter]simplify:  Simplifying (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* * * * [misc]progress:  [ 19 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (/ (+ (pow (* (* x 4.375) (pow x 3)) 3) (pow (* (* x -3.75) x) 3)) (+ (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (- (* (* (* x -3.75) x) (* (* x -3.75) x)) (* (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (+ (pow (* (* x 4.375) (pow x 3)) 3) (pow (* (* x -3.75) x) 3))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (466 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (pow x 3) (* x 4.375)) 3) (pow (* x (* -3.75 x)) 3))
* [exit]simplify:  Simplified to (+ (pow (* (pow x 3) (* x 4.375)) 3) (pow (* x (* -3.75 x)) 3))
* [enter]simplify:  Simplifying (+ (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (- (* (* (* x -3.75) x) (* (* x -3.75) x)) (* (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (- (* (* x (* -3.75 x)) (* x (* -3.75 x))) (* (* (* (* x x) (* x 4.375)) (* x x)) (- (* -3.75 x) (* (* x x) (* x 4.375)))))
* [exit]simplify:  Simplified to (- (* (* x (* -3.75 x)) (* x (* -3.75 x))) (* (* (* (* x x) (* x 4.375)) (* x x)) (- (* -3.75 x) (* (* x x) (* x 4.375)))))
* * * * [misc]progress:  [ 20 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (* 1 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* * * * [misc]progress:  [ 21 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (/ (- (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (* (* (* x -3.75) x) (* (* x -3.75) x))) (- (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (- (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (* (* (* x -3.75) x) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (322 enodes)
* [exit]simplify:  Simplified to (* (- (* (pow x 3) (* x 4.375)) (* x (* -3.75 x))) (+ (* x (* -3.75 x)) (* (pow x 3) (* x 4.375))))
* [exit]simplify:  Simplified to (* (- (* (pow x 3) (* x 4.375)) (* x (* -3.75 x))) (+ (* x (* -3.75 x)) (* (pow x 3) (* x 4.375))))
* [enter]simplify:  Simplifying (- (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (109 enodes)
* * [misc]simplify:  iters left: 1 (112 enodes)
* [exit]simplify:  Simplified to (- (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))
* [exit]simplify:  Simplified to (- (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))
* * * * [misc]progress:  [ 22 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x -3.75) x) (* (* x 4.375) (pow x 3)))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* * * * [misc]progress:  [ 23 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (log (* (exp (* (* x 4.375) (pow x 3))) (exp (* (* x -3.75) x)))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (* (exp (* (* x 4.375) (pow x 3))) (exp (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (82 enodes)
* * [misc]simplify:  iters left: 2 (99 enodes)
* * [misc]simplify:  iters left: 1 (103 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (+ (* (* x 4.375) (* x x)) (* -3.75 x)))
* [exit]simplify:  Simplified to (pow (exp x) (+ (* (* x 4.375) (* x x)) (* -3.75 x)))
* * * * [misc]progress:  [ 24 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 1) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* * * * [misc]progress:  [ 25 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (exp (log (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (log (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (146 enodes)
* [exit]simplify:  Simplified to (log (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [exit]simplify:  Simplified to (log (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* * * * [misc]progress:  [ 26 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (log (exp (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (exp (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (134 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (+ (* x -3.75) (* (* x x) (* x 4.375))))
* [exit]simplify:  Simplified to (pow (exp x) (+ (* x -3.75) (* (* x x) (* x 4.375))))
* * * * [misc]progress:  [ 27 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (* (* (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))) (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))) (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))))
* [enter]simplify:  Simplifying (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* * * * [misc]progress:  [ 28 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (cbrt (* (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (* (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x)) 3)
* * * * [misc]progress:  [ 29 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (* (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [enter]simplify:  Simplifying (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* * * * [misc]progress:  [ 30 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (/ (+ (pow (* (* x 4.375) (pow x 3)) 3) (pow (* (* x -3.75) x) 3)) (+ (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (- (* (* (* x -3.75) x) (* (* x -3.75) x)) (* (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (+ (pow (* (* x 4.375) (pow x 3)) 3) (pow (* (* x -3.75) x) 3))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (466 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (pow x 3) (* x 4.375)) 3) (pow (* x (* -3.75 x)) 3))
* [exit]simplify:  Simplified to (+ (pow (* (pow x 3) (* x 4.375)) 3) (pow (* x (* -3.75 x)) 3))
* [enter]simplify:  Simplifying (+ (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (- (* (* (* x -3.75) x) (* (* x -3.75) x)) (* (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (- (* (* x (* -3.75 x)) (* x (* -3.75 x))) (* (* (* (* x x) (* x 4.375)) (* x x)) (- (* -3.75 x) (* (* x x) (* x 4.375)))))
* [exit]simplify:  Simplified to (- (* (* x (* -3.75 x)) (* x (* -3.75 x))) (* (* (* (* x x) (* x 4.375)) (* x x)) (- (* -3.75 x) (* (* x x) (* x 4.375)))))
* * * * [misc]progress:  [ 31 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (* 1 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* * * * [misc]progress:  [ 32 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (/ (- (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (* (* (* x -3.75) x) (* (* x -3.75) x))) (- (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (- (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (* (* (* x -3.75) x) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (322 enodes)
* [exit]simplify:  Simplified to (* (- (* (pow x 3) (* x 4.375)) (* x (* -3.75 x))) (+ (* x (* -3.75 x)) (* (pow x 3) (* x 4.375))))
* [exit]simplify:  Simplified to (* (- (* (pow x 3) (* x 4.375)) (* x (* -3.75 x))) (+ (* x (* -3.75 x)) (* (pow x 3) (* x 4.375))))
* [enter]simplify:  Simplifying (- (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (109 enodes)
* * [misc]simplify:  iters left: 1 (112 enodes)
* [exit]simplify:  Simplified to (- (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))
* [exit]simplify:  Simplified to (- (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))
* * * * [misc]progress:  [ 33 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x -3.75) x) (* (* x 4.375) (pow x 3))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* * * * [misc]progress:  [ 34 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (log (* (exp (* (* x 4.375) (pow x 3))) (exp (* (* x -3.75) x)))) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (* (exp (* (* x 4.375) (pow x 3))) (exp (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (82 enodes)
* * [misc]simplify:  iters left: 2 (99 enodes)
* * [misc]simplify:  iters left: 1 (103 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (+ (* (* x 4.375) (* x x)) (* -3.75 x)))
* [exit]simplify:  Simplified to (pow (exp x) (+ (* (* x 4.375) (* x x)) (* -3.75 x)))
* * * * [misc]progress:  [ 35 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 1) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* * * * [misc]progress:  [ 36 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (exp (log (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (log (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (146 enodes)
* [exit]simplify:  Simplified to (log (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [exit]simplify:  Simplified to (log (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* * * * [misc]progress:  [ 37 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (log (exp (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (exp (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (134 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (+ (* x -3.75) (* (* x x) (* x 4.375))))
* [exit]simplify:  Simplified to (pow (exp x) (+ (* x -3.75) (* (* x x) (* x 4.375))))
* * * * [misc]progress:  [ 38 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (* (* (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))) (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))) (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))))
* [enter]simplify:  Simplifying (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* * * * [misc]progress:  [ 39 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (cbrt (* (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (* (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x)) 3)
* * * * [misc]progress:  [ 40 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (* (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [enter]simplify:  Simplifying (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (80 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x 3) (* x 4.375)) (* (* x x) -3.75)))
* * * * [misc]progress:  [ 41 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (/ (+ (pow (* (* x 4.375) (pow x 3)) 3) (pow (* (* x -3.75) x) 3)) (+ (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (- (* (* (* x -3.75) x) (* (* x -3.75) x)) (* (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (+ (pow (* (* x 4.375) (pow x 3)) 3) (pow (* (* x -3.75) x) 3))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (466 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (pow x 3) (* x 4.375)) 3) (pow (* x (* -3.75 x)) 3))
* [exit]simplify:  Simplified to (+ (pow (* (pow x 3) (* x 4.375)) 3) (pow (* x (* -3.75 x)) 3))
* [enter]simplify:  Simplifying (+ (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (- (* (* (* x -3.75) x) (* (* x -3.75) x)) (* (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (- (* (* x (* -3.75 x)) (* x (* -3.75 x))) (* (* (* (* x x) (* x 4.375)) (* x x)) (- (* -3.75 x) (* (* x x) (* x 4.375)))))
* [exit]simplify:  Simplified to (- (* (* x (* -3.75 x)) (* x (* -3.75 x))) (* (* (* (* x x) (* x 4.375)) (* x x)) (- (* -3.75 x) (* (* x x) (* x 4.375)))))
* * * * [misc]progress:  [ 42 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (* 1 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* * * * [misc]progress:  [ 43 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (/ (- (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (* (* (* x -3.75) x) (* (* x -3.75) x))) (- (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (- (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (* (* (* x -3.75) x) (* (* x -3.75) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (322 enodes)
* [exit]simplify:  Simplified to (* (- (* (pow x 3) (* x 4.375)) (* x (* -3.75 x))) (+ (* x (* -3.75 x)) (* (pow x 3) (* x 4.375))))
* [exit]simplify:  Simplified to (* (- (* (pow x 3) (* x 4.375)) (* x (* -3.75 x))) (+ (* x (* -3.75 x)) (* (pow x 3) (* x 4.375))))
* [enter]simplify:  Simplifying (- (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (109 enodes)
* * [misc]simplify:  iters left: 1 (112 enodes)
* [exit]simplify:  Simplified to (- (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))
* [exit]simplify:  Simplified to (- (* (pow x 3) (* x 4.375)) (* (* x -3.75) x))
* * * * [misc]progress:  [ 44 / 56 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x -3.75) x) (* (* x 4.375) (pow x 3))) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* * * * [misc]progress:  [ 45 / 56 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))))>
* [enter]simplify:  Simplifying (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (180 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x -3.75) x) (* (pow x 3) (* x 4.375))) 3) (pow 0.375 3)) (- (* (+ (* (* x -3.75) x) (* (pow x 3) (* x 4.375))) (+ (* (* x -3.75) x) (* (pow x 3) (* x 4.375)))) (* 0.375 (- (- (* 4.375 (pow x 4)) (* (* x x) 3.75)) 0.375))))
* * * * [misc]progress:  [ 46 / 56 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))))>
* [enter]simplify:  Simplifying (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (180 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x -3.75) x) (* (pow x 3) (* x 4.375))) 3) (pow 0.375 3)) (- (* (+ (* (* x -3.75) x) (* (pow x 3) (* x 4.375))) (+ (* (* x -3.75) x) (* (pow x 3) (* x 4.375)))) (* 0.375 (- (- (* 4.375 (pow x 4)) (* (* x x) 3.75)) 0.375))))
* * * * [misc]progress:  [ 47 / 56 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (- (* 4.375 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 3.75 (pow x 2))))))))>
* [enter]simplify:  Simplifying (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (- (* 4.375 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 3.75 (pow x 2)))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (213 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x -3.75) x) (* (pow x 3) (* x 4.375))) 3) (pow 0.375 3)) (- (+ (* 0.375 0.375) (* (+ (* (* x -3.75) x) (* (pow x 3) (* x 4.375))) (+ (* (* x -3.75) x) (* (pow x 3) (* x 4.375))))) (+ (* (* (- x) x) (* 3.75 0.375)) (* (pow (exp 3) (+ 0 (log x))) (* (* x 4.375) 0.375)))))
* * * * [misc]progress:  [ 48 / 56 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (178 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x x) -3.75) (* (pow x 3) (* x 4.375))) 3) (pow 0.375 3)) (- (* (+ (* (* x x) -3.75) (* (pow x 3) (* x 4.375))) (- (* (pow x 4) 4.375) (* (* x x) 3.75))) (+ (* (* 0.375 4.375) (* (* x x) (* x x))) (- (* (* 0.375 -3.75) (* x x)) (* 0.375 0.375)))))
* * * * [misc]progress:  [ 49 / 56 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (178 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x x) -3.75) (* (pow x 3) (* x 4.375))) 3) (pow 0.375 3)) (- (* (+ (* (* x x) -3.75) (* (pow x 3) (* x 4.375))) (- (* (pow x 4) 4.375) (* (* x x) 3.75))) (+ (* (* 0.375 4.375) (* (* x x) (* x x))) (- (* (* 0.375 -3.75) (* x x)) (* 0.375 0.375)))))
* * * * [misc]progress:  [ 50 / 56 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (- (* 4.375 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 3.75 (pow x 2)))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (- (* 4.375 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 3.75 (pow x 2)))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (78 enodes)
* * [misc]simplify:  iters left: 4 (211 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x -3.75) x) (* (pow x 3) (* x 4.375))) 3) (pow 0.375 3)) (+ (* (- (* (pow (exp 3) (+ 0 (log x))) (* x 4.375)) (+ (* (* 3.75 x) x) 0.375)) (+ (* (* x -3.75) x) (* (pow x 3) (* x 4.375)))) (* 0.375 0.375)))
* * * * [misc]progress:  [ 51 / 56 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (227 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x x) -3.75) (* (pow x 3) (* x 4.375))) 3) (pow 0.375 3)) (- (* (+ (* (* x x) -3.75) (* (pow x 3) (* x 4.375))) (- (* (pow x 4) 4.375) (* (* x x) 3.75))) (+ (* (* (* x x) (* x x)) (* 4.375 0.375)) (- (* (* 0.375 -3.75) (* x x)) (* 0.375 0.375)))))
* * * * [misc]progress:  [ 52 / 56 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (227 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x x) -3.75) (* (pow x 3) (* x 4.375))) 3) (pow 0.375 3)) (- (* (+ (* (* x x) -3.75) (* (pow x 3) (* x 4.375))) (- (* (pow x 4) 4.375) (* (* x x) 3.75))) (+ (* (* (* x x) (* x x)) (* 4.375 0.375)) (- (* (* 0.375 -3.75) (* x x)) (* 0.375 0.375)))))
* * * * [misc]progress:  [ 53 / 56 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (- (* 4.375 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 3.75 (pow x 2))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (- (* 4.375 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 3.75 (pow x 2))) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (86 enodes)
* * [misc]simplify:  iters left: 4 (260 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x -3.75) x) (* (pow x 3) (* x 4.375))) 3) (pow 0.375 3)) (+ (* (- (* (pow (exp 3) (+ 0 (log x))) (* x 4.375)) (+ (* x (* 3.75 x)) 0.375)) (+ (* (* x -3.75) x) (* (pow x 3) (* x 4.375)))) (* 0.375 0.375)))
* * * * [misc]progress:  [ 54 / 56 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow 0.375 3) (pow (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow 0.375 3) (pow (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (216 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow 0.375 3) (pow (- (* 4.375 (pow x 4)) (* (* 3.75 x) x)) 3)) (- (* (+ (* -3.75 (* x x)) (* (* 4.375 x) (pow x 3))) (+ (* -3.75 (* x x)) (* (* 4.375 x) (pow x 3)))) (+ (* (* (* x x) (* x x)) (* 4.375 0.375)) (- (* (* x -3.75) (* 0.375 x)) (* 0.375 0.375)))))
* * * * [misc]progress:  [ 55 / 56 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow 0.375 3) (pow (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow 0.375 3) (pow (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (216 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow 0.375 3) (pow (- (* 4.375 (pow x 4)) (* (* 3.75 x) x)) 3)) (- (* (+ (* -3.75 (* x x)) (* (* 4.375 x) (pow x 3))) (+ (* -3.75 (* x x)) (* (* 4.375 x) (pow x 3)))) (+ (* (* (* x x) (* x x)) (* 4.375 0.375)) (- (* (* x -3.75) (* 0.375 x)) (* 0.375 0.375)))))
* * * * [misc]progress:  [ 56 / 56 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow 0.375 3) (pow (- (* 4.375 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 3.75 (pow x 2))) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow 0.375 3) (pow (- (* 4.375 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (* 3.75 (pow x 2))) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (85 enodes)
* * [misc]simplify:  iters left: 4 (249 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (- (* (pow (exp 3) (+ 0 (log x))) (* 4.375 x)) (* x (* 3.75 x))) 3) (pow 0.375 3)) (- (* (+ (* (* x x) -3.75) (* (pow x 3) (* 4.375 x))) (+ (* (* x x) -3.75) (* (pow x 3) (* 4.375 x)))) (+ (* (* 0.375 (* x x)) (* 4.375 (* x x))) (- (* (* 0.375 -3.75) (* x x)) (* 0.375 0.375)))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-event (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 4) in x
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow x 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow x 2) in x
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 4) in x
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow x 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow x 2) in x
* [misc]backup-simplify:  Simplify (* 3.75 1) into 3.75
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 4.375 1) into 4.375
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 4.375 0) into 4.375
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 (pow x 4)) (* (- 3.75) (pow x 2))) into (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 x) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log x))) into (* -2 (log x))
* [misc]backup-simplify:  Simplify (exp (* -2 (log x))) into (pow x -2)
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 x) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log x))) into (* -2 (log x))
* [misc]backup-simplify:  Simplify (exp (* -2 (log x))) into (pow x -2)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -4)) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (* 3.75 (pow x -2)) into (/ 3.75 (pow x 2))
* [misc]backup-simplify:  Simplify (- (/ 3.75 (pow x 2))) into (- (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (+ (/ 4.375 (pow x 4)) (- (* 3.75 (/ 1 (pow x 2))))) into (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) into (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x -4))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 (pow x -2))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x -4)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 (pow x -2)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (* 4.375 (/ 1 (pow (/ 1 x) 4))) (* 3.75 (/ 1 (pow (/ 1 x) 2)))) into (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 (- x)) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log -1) (log x))) into (* 2 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 2 (- (log -1) (log x)))) into (exp (* 2 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 (- x)) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log -1) (log x))) into (* 2 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 2 (- (log -1) (log x)))) into (exp (* 2 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 4.375 (exp (* 4 (- (log -1) (log x))))) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* 3.75 (exp (* 2 (- (log -1) (log x))))) into (* 3.75 (exp (* 2 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- (* 3.75 (exp (* 2 (- (log -1) (log x)))))) into (- (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* 4.375 (exp (* 4 (- (log -1) (log x))))) (- (* 3.75 (exp (* 2 (- (log -1) (log x))))))) into (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) into (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (exp (* 4 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 (exp (* 2 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (* 4.375 (exp (* 4 (- (log -1) (log (/ 1 (- x))))))) (* 3.75 (exp (* 2 (- (log -1) (log (/ 1 (- x)))))))) into (- (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) (* 3.75 (exp (* 2 (- (log -1) (log (/ -1 x)))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (* 3.75 (pow x 2)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow x 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow x 2) in x
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow x 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow x 2) in x
* [misc]backup-simplify:  Simplify (* 3.75 1) into 3.75
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.75 (pow x 2)) into (* 3.75 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 3.75 (pow (/ 1 x) 2)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 x) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log x))) into (* -2 (log x))
* [misc]backup-simplify:  Simplify (exp (* -2 (log x))) into (pow x -2)
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 x) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log x))) into (* -2 (log x))
* [misc]backup-simplify:  Simplify (exp (* -2 (log x))) into (pow x -2)
* [misc]backup-simplify:  Simplify (* 3.75 (pow x -2)) into (/ 3.75 (pow x 2))
* [misc]backup-simplify:  Simplify (/ 3.75 (pow x 2)) into (/ 3.75 (pow x 2))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 (pow x -2))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 (pow x -2)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ 3.75 (pow (/ 1 x) 2)) into (* 3.75 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 3.75 (pow (/ 1 (- x)) 2)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 (- x)) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log -1) (log x))) into (* 2 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 2 (- (log -1) (log x)))) into (exp (* 2 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 (- x)) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log -1) (log x))) into (* 2 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 2 (- (log -1) (log x)))) into (exp (* 2 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 3.75 (exp (* 2 (- (log -1) (log x))))) into (* 3.75 (exp (* 2 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* 3.75 (exp (* 2 (- (log -1) (log x))))) into (* 3.75 (exp (* 2 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 (exp (* 2 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.75 (exp (* 2 (- (log -1) (log (/ 1 (- x))))))) into (* 3.75 (exp (* 2 (- (log -1) (log (/ -1 x))))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* 4.375 (pow x 4)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 4) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 4) in x
* [misc]backup-simplify:  Simplify (* 4.375 1) into 4.375
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 4.375 (pow x 4)) into (* 4.375 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) 4)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -4)) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (/ 4.375 (pow x 4)) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x -4))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x -4)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ 4.375 (pow (/ 1 x) 4)) into (* 4.375 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) 4)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 4.375 (exp (* 4 (- (log -1) (log x))))) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* 4.375 (exp (* 4 (- (log -1) (log x))))) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (exp (* 4 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 4.375 (exp (* 4 (- (log -1) (log (/ 1 (- x))))))) into (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x))))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 4) in x
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow x 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow x 2) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 4) in x
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow x 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow x 2) in x
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 3.75 1) into 3.75
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 4.375 1) into 4.375
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 4.375 0) into 4.375
* [misc]backup-simplify:  Simplify (+ 0 4.375) into 4.375
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (+ (* 4.375 (pow x 4)) (+ (* (- 3.75) (pow x 2)) 0.375)) into (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (+ 0.375 (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 x) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log x))) into (* -2 (log x))
* [misc]backup-simplify:  Simplify (exp (* -2 (log x))) into (pow x -2)
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 x) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log x))) into (* -2 (log x))
* [misc]backup-simplify:  Simplify (exp (* -2 (log x))) into (pow x -2)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -4)) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (* 3.75 (pow x -2)) into (/ 3.75 (pow x 2))
* [misc]backup-simplify:  Simplify (- (/ 3.75 (pow x 2))) into (- (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (+ (/ 4.375 (pow x 4)) (- (* 3.75 (/ 1 (pow x 2))))) into (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (+ 0.375 (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))) into (- (+ 0.375 (* 4.375 (/ 1 (pow x 4)))) (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (- (+ 0.375 (* 4.375 (/ 1 (pow x 4)))) (* 3.75 (/ 1 (pow x 2)))) into (- (+ 0.375 (* 4.375 (/ 1 (pow x 4)))) (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x -4))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 (pow x -2))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x -4)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 (pow x -2)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ 0.375 (* 4.375 (/ 1 (pow (/ 1 x) 4)))) (* 3.75 (/ 1 (pow (/ 1 x) 2)))) into (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (+ 0.375 (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 (- x)) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log -1) (log x))) into (* 2 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 2 (- (log -1) (log x)))) into (exp (* 2 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 (- x)) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log -1) (log x))) into (* 2 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 2 (- (log -1) (log x)))) into (exp (* 2 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 4.375 (exp (* 4 (- (log -1) (log x))))) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* 3.75 (exp (* 2 (- (log -1) (log x))))) into (* 3.75 (exp (* 2 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- (* 3.75 (exp (* 2 (- (log -1) (log x)))))) into (- (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* 4.375 (exp (* 4 (- (log -1) (log x))))) (- (* 3.75 (exp (* 2 (- (log -1) (log x))))))) into (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ 0.375 (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))) into (- (+ 0.375 (* 4.375 (exp (* 4 (- (log -1) (log x)))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- (+ 0.375 (* 4.375 (exp (* 4 (- (log -1) (log x)))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) into (- (+ 0.375 (* 4.375 (exp (* 4 (- (log -1) (log x)))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (exp (* 4 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 (exp (* 2 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ 0.375 (* 4.375 (exp (* 4 (- (log -1) (log (/ 1 (- x)))))))) (* 3.75 (exp (* 2 (- (log -1) (log (/ 1 (- x)))))))) into (- (+ (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) 0.375) (* 3.75 (exp (* 2 (- (log -1) (log (/ -1 x)))))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (log (/ (exp (* 4.375 (pow x 4))) (exp (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (/ (exp (* 4.375 (pow x 4))) (exp (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (68 enodes)
* * [misc]simplify:  iters left: 1 (87 enodes)
* [exit]simplify:  Simplified to (/ (pow (exp 4.375) (pow x 4)) (pow (exp 3.75) (* x x)))
* [exit]simplify:  Simplified to (/ (pow (exp 4.375) (pow x 4)) (pow (exp 3.75) (* x x)))
* * * * [misc]progress:  [ 2 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (pow (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) 1)))>
* * * * [misc]progress:  [ 3 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (exp (log (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (log (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (log (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [exit]simplify:  Simplified to (log (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* * * * [misc]progress:  [ 4 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (log (exp (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (exp (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (82 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (/ (pow (exp 4.375) (pow x 4)) (pow (exp 3.75) (* x x)))
* [exit]simplify:  Simplified to (/ (pow (exp 4.375) (pow x 4)) (pow (exp 3.75) (* x x)))
* * * * [misc]progress:  [ 5 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))
* [enter]simplify:  Simplifying (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* * * * [misc]progress:  [ 6 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (cbrt (* (* (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (* (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (158 enodes)
* [exit]simplify:  Simplified to (pow (- (* (pow x 4) 4.375) (* (* 3.75 x) x)) 3)
* [exit]simplify:  Simplified to (pow (- (* (pow x 4) 4.375) (* (* 3.75 x) x)) 3)
* * * * [misc]progress:  [ 7 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (sqrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (sqrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (sqrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [exit]simplify:  Simplified to (sqrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [enter]simplify:  Simplifying (sqrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [exit]simplify:  Simplified to (sqrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* * * * [misc]progress:  [ 8 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (/ (- (pow (* 4.375 (pow x 4)) 3) (pow (* 3.75 (pow x 2)) 3)) (+ (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (+ (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))) (* (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))))>
* [enter]simplify:  Simplifying (- (pow (* 4.375 (pow x 4)) 3) (pow (* 3.75 (pow x 2)) 3))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (295 enodes)
* [exit]simplify:  Simplified to (- (pow (* (pow x 4) 4.375) 3) (pow (* (* 3.75 x) x) 3))
* [exit]simplify:  Simplified to (- (pow (* (pow x 4) 4.375) 3) (pow (* (* 3.75 x) x) 3))
* [enter]simplify:  Simplifying (+ (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (+ (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))) (* (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (230 enodes)
* * [misc]simplify:  iters left: 2 (425 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* x (* 3.75 x)) (* (pow x 4) 4.375)) (* x (* 3.75 x))) (* (* (pow x 4) 4.375) (* (pow x 4) 4.375)))
* [exit]simplify:  Simplified to (+ (* (+ (* x (* 3.75 x)) (* (pow x 4) 4.375)) (* x (* 3.75 x))) (* (* (pow x 4) 4.375) (* (pow x 4) 4.375)))
* * * * [misc]progress:  [ 9 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* 4.375 (pow x 4)) (- (* 3.75 (pow x 2))))))>
* [enter]simplify:  Simplifying (- (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* [exit]simplify:  Simplified to (* (* x x) (- 3.75))
* [exit]simplify:  Simplified to (* (* x x) (- 3.75))
* * * * [misc]progress:  [ 10 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* 1 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))>
* * * * [misc]progress:  [ 11 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (/ (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2)))) (+ (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))>
* [enter]simplify:  Simplifying (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (170 enodes)
* * [misc]simplify:  iters left: 2 (424 enodes)
* [exit]simplify:  Simplified to (* (+ (* (pow x 4) 4.375) (* (* 3.75 x) x)) (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [exit]simplify:  Simplified to (* (+ (* (pow x 4) 4.375) (* (* 3.75 x) x)) (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [enter]simplify:  Simplifying (+ (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 4) 4.375) (* 3.75 (* x x)))
* [exit]simplify:  Simplified to (+ (* (pow x 4) 4.375) (* 3.75 (* x x)))
* * * * [misc]progress:  [ 12 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* 4.375 (pow x 4)) (- (* 3.75 (pow x 2))))))>
* [enter]simplify:  Simplifying (- (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* [exit]simplify:  Simplified to (* (* x x) (- 3.75))
* [exit]simplify:  Simplified to (* (* x x) (- 3.75))
* * * * [misc]progress:  [ 13 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (pow (* 3.75 (pow x 2)) 1))))>
* * * * [misc]progress:  [ 14 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (exp (log (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (log (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) 3.75))
* [exit]simplify:  Simplified to (log (* (* x x) 3.75))
* * * * [misc]progress:  [ 15 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (log (exp (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (exp (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (pow (exp 3.75) (* x x))
* [exit]simplify:  Simplified to (pow (exp 3.75) (* x x))
* * * * [misc]progress:  [ 16 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (* (* (cbrt (* 3.75 (pow x 2))) (cbrt (* 3.75 (pow x 2)))) (cbrt (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* 3.75 (pow x 2))) (cbrt (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) 3.75)) (cbrt (* (* x x) 3.75)))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) 3.75)) (cbrt (* (* x x) 3.75)))
* [enter]simplify:  Simplifying (cbrt (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (12 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (cbrt (* x (* 3.75 x)))
* [exit]simplify:  Simplified to (cbrt (* x (* 3.75 x)))
* * * * [misc]progress:  [ 17 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (cbrt (* (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))) (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (120 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (394 enodes)
* [exit]simplify:  Simplified to (pow (* (* x x) 3.75) 3)
* [exit]simplify:  Simplified to (pow (* (* x x) 3.75) 3)
* * * * [misc]progress:  [ 18 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (* (sqrt (* 3.75 (pow x 2))) (sqrt (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (sqrt (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (12 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* 3.75 x)))
* [exit]simplify:  Simplified to (sqrt (* x (* 3.75 x)))
* [enter]simplify:  Simplifying (sqrt (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (12 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* 3.75 x)))
* [exit]simplify:  Simplified to (sqrt (* x (* 3.75 x)))
* * * * [misc]progress:  [ 19 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (* 1 (* 3.75 (pow x 2))))))>
* * * * [misc]progress:  [ 20 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (* (* 3.75 x) x))))>
* [enter]simplify:  Simplifying (* 3.75 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 3.75 x)
* [exit]simplify:  Simplified to (* 3.75 x)
* * * * [misc]progress:  [ 21 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (* (* 3.75 (* (cbrt (pow x 2)) (cbrt (pow x 2)))) (cbrt (pow x 2))))))>
* [enter]simplify:  Simplifying (* 3.75 (* (cbrt (pow x 2)) (cbrt (pow x 2))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (* (* 3.75 (cbrt (* x x))) (cbrt (* x x)))
* [exit]simplify:  Simplified to (* (* 3.75 (cbrt (* x x))) (cbrt (* x x)))
* * * * [misc]progress:  [ 22 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (* (* 3.75 (sqrt (pow x 2))) (sqrt (pow x 2))))))>
* [enter]simplify:  Simplifying (* 3.75 (sqrt (pow x 2)))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* 3.75 (fabs x))
* [exit]simplify:  Simplified to (* 3.75 (fabs x))
* * * * [misc]progress:  [ 23 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (* (* 3.75 1) (pow x 2)))))>
* [enter]simplify:  Simplifying (* 3.75 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3.75
* [exit]simplify:  Simplified to 3.75
* * * * [misc]progress:  [ 24 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (* (pow x 2) 3.75))))>
* * * * [misc]progress:  [ 25 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (pow (* 4.375 (pow x 4)) 1) (* 3.75 (pow x 2)))))>
* * * * [misc]progress:  [ 26 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (exp (log (* 4.375 (pow x 4)))) (* 3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (log (* 4.375 (pow x 4)))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (+ (* 4 (log x)) (log 4.375))
* [exit]simplify:  Simplified to (+ (* 4 (log x)) (log 4.375))
* * * * [misc]progress:  [ 27 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (log (exp (* 4.375 (pow x 4)))) (* 3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (exp (* 4.375 (pow x 4)))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp 4.375) (pow x 4))
* [exit]simplify:  Simplified to (pow (exp 4.375) (pow x 4))
* * * * [misc]progress:  [ 28 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (* (* (cbrt (* 4.375 (pow x 4))) (cbrt (* 4.375 (pow x 4)))) (cbrt (* 4.375 (pow x 4)))) (* 3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (* (cbrt (* 4.375 (pow x 4))) (cbrt (* 4.375 (pow x 4))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 4) 4.375)) (cbrt (* (pow x 4) 4.375)))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 4) 4.375)) (cbrt (* (pow x 4) 4.375)))
* [enter]simplify:  Simplifying (cbrt (* 4.375 (pow x 4)))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x 4) 4.375))
* [exit]simplify:  Simplified to (cbrt (* (pow x 4) 4.375))
* * * * [misc]progress:  [ 29 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (cbrt (* (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* 4.375 (pow x 4)))) (* 3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (* (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* 4.375 (pow x 4)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (87 enodes)
* * [misc]simplify:  iters left: 1 (90 enodes)
* [exit]simplify:  Simplified to (pow (* (pow x 4) 4.375) 3)
* [exit]simplify:  Simplified to (pow (* (pow x 4) 4.375) 3)
* * * * [misc]progress:  [ 30 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (* (sqrt (* 4.375 (pow x 4))) (sqrt (* 4.375 (pow x 4)))) (* 3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (sqrt (* 4.375 (pow x 4)))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 4) 4.375))
* [exit]simplify:  Simplified to (sqrt (* (pow x 4) 4.375))
* [enter]simplify:  Simplifying (sqrt (* 4.375 (pow x 4)))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 4) 4.375))
* [exit]simplify:  Simplified to (sqrt (* (pow x 4) 4.375))
* * * * [misc]progress:  [ 31 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (* 1 (* 4.375 (pow x 4))) (* 3.75 (pow x 2)))))>
* * * * [misc]progress:  [ 32 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (* (* 4.375 (* (cbrt (pow x 4)) (cbrt (pow x 4)))) (cbrt (pow x 4))) (* 3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (* 4.375 (* (cbrt (pow x 4)) (cbrt (pow x 4))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (* (* 4.375 (cbrt (pow x 4))) (cbrt (pow x 4)))
* [exit]simplify:  Simplified to (* (* 4.375 (cbrt (pow x 4))) (cbrt (pow x 4)))
* * * * [misc]progress:  [ 33 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (* (* 4.375 (sqrt (pow x 4))) (sqrt (pow x 4))) (* 3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (* 4.375 (sqrt (pow x 4)))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (* 4.375 (sqrt (pow x 4)))
* [exit]simplify:  Simplified to (* 4.375 (sqrt (pow x 4)))
* * * * [misc]progress:  [ 34 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (* (* 4.375 1) (pow x 4)) (* 3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (* 4.375 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 4.375
* [exit]simplify:  Simplified to 4.375
* * * * [misc]progress:  [ 35 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (- (* (pow x 4) 4.375) (* 3.75 (pow x 2)))))>
* * * * [misc]progress:  [ 36 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) 1))>
* * * * [misc]progress:  [ 37 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (log (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (75 enodes)
* [exit]simplify:  Simplified to (log (+ (- (* 4.375 (pow x 4)) (* x (* x 3.75))) 0.375))
* [exit]simplify:  Simplified to (log (+ (- (* 4.375 (pow x 4)) (* x (* x 3.75))) 0.375))
* * * * [misc]progress:  [ 38 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (exp (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (97 enodes)
* * [misc]simplify:  iters left: 2 (138 enodes)
* * [misc]simplify:  iters left: 1 (192 enodes)
* [exit]simplify:  Simplified to (* (exp (* (* x x) (- 3.75))) (* (exp 0.375) (pow (exp 4.375) (pow x 4))))
* [exit]simplify:  Simplified to (* (exp (* (* x x) (- 3.75))) (* (exp 0.375) (pow (exp 4.375) (pow x 4))))
* * * * [misc]progress:  [ 39 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (77 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (- (* 4.375 (pow x 4)) (* (* x 3.75) x)) 0.375)) (cbrt (+ (- (* 4.375 (pow x 4)) (* (* x 3.75) x)) 0.375)))
* [exit]simplify:  Simplified to (* (cbrt (+ (- (* 4.375 (pow x 4)) (* (* x 3.75) x)) 0.375)) (cbrt (+ (- (* 4.375 (pow x 4)) (* (* x 3.75) x)) 0.375)))
* [enter]simplify:  Simplifying (cbrt (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (75 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (- (* 4.375 (pow x 4)) (* x (* x 3.75))) 0.375))
* [exit]simplify:  Simplified to (cbrt (+ (- (* 4.375 (pow x 4)) (* x (* x 3.75))) 0.375))
* * * * [misc]progress:  [ 40 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (* (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* [exit]simplify:  Simplified to (pow (+ (- (* 4.375 (pow x 4)) (* (* x 3.75) x)) 0.375) 3)
* [exit]simplify:  Simplified to (pow (+ (- (* 4.375 (pow x 4)) (* (* x 3.75) x)) 0.375) 3)
* * * * [misc]progress:  [ 41 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (sqrt (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (sqrt (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (75 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (- (* 4.375 (pow x 4)) (* x (* x 3.75))) 0.375))
* [exit]simplify:  Simplified to (sqrt (+ (- (* 4.375 (pow x 4)) (* x (* x 3.75))) 0.375))
* [enter]simplify:  Simplifying (sqrt (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (75 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (- (* 4.375 (pow x 4)) (* x (* x 3.75))) 0.375))
* [exit]simplify:  Simplified to (sqrt (+ (- (* 4.375 (pow x 4)) (* x (* x 3.75))) 0.375))
* * * * [misc]progress:  [ 42 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) 3)) (+ (* 0.375 0.375) (- (* (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (* 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))))>
* [enter]simplify:  Simplifying (+ (pow 0.375 3) (pow (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) 3))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (173 enodes)
* [exit]simplify:  Simplified to (+ (pow 0.375 3) (pow (- (* 4.375 (pow x 4)) (* x (* 3.75 x))) 3))
* [exit]simplify:  Simplified to (+ (pow 0.375 3) (pow (- (* 4.375 (pow x 4)) (* x (* 3.75 x))) 3))
* [enter]simplify:  Simplifying (+ (* 0.375 0.375) (- (* (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (* 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (242 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 4.375 (* (pow x 4) (- 0.375))) (+ (* (* 3.75 0.375) (* x x)) (* 0.375 0.375))) (* (- (* 4.375 (pow x 4)) (* (* x 3.75) x)) (- (* 4.375 (pow x 4)) (* (* x 3.75) x))))
* [exit]simplify:  Simplified to (+ (+ (* 4.375 (* (pow x 4) (- 0.375))) (+ (* (* 3.75 0.375) (* x x)) (* 0.375 0.375))) (* (- (* 4.375 (pow x 4)) (* (* x 3.75) x)) (- (* 4.375 (pow x 4)) (* (* x 3.75) x))))
* * * * [misc]progress:  [ 43 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))>
* * * * [misc]progress:  [ 44 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* 0.375 0.375) (* (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (- 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))>
* [enter]simplify:  Simplifying (- (* 0.375 0.375) (* (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (169 enodes)
* [exit]simplify:  Simplified to (- (* 0.375 0.375) (* (- (* 4.375 (pow x 4)) (* (* x 3.75) x)) (- (* 4.375 (pow x 4)) (* (* x 3.75) x))))
* [exit]simplify:  Simplified to (- (* 0.375 0.375) (* (- (* 4.375 (pow x 4)) (* (* x 3.75) x)) (- (* 4.375 (pow x 4)) (* (* x 3.75) x))))
* [enter]simplify:  Simplifying (- 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (72 enodes)
* * [misc]simplify:  iters left: 2 (95 enodes)
* * [misc]simplify:  iters left: 1 (101 enodes)
* [exit]simplify:  Simplified to (+ (- 0.375 (* 4.375 (pow x 4))) (* x (* x 3.75)))
* [exit]simplify:  Simplified to (+ (- 0.375 (* 4.375 (pow x 4))) (* x (* x 3.75)))
* * * * [misc]progress:  [ 45 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* 4.375 (pow x 4))) (- (* 3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 0.375 (* 4.375 (pow x 4)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* [exit]simplify:  Simplified to (+ 0.375 (* 4.375 (pow x 4)))
* [exit]simplify:  Simplified to (+ 0.375 (* 4.375 (pow x 4)))
* * * * [misc]progress:  [ 46 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* 4.375 (pow x 4))) (- (* 3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 0.375 (* 4.375 (pow x 4)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* [exit]simplify:  Simplified to (+ 0.375 (* 4.375 (pow x 4)))
* [exit]simplify:  Simplified to (+ 0.375 (* 4.375 (pow x 4)))
* * * * [misc]progress:  [ 47 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (- (+ 0.375 (* 4.375 (pow x 4))) (* 3.75 (pow x 2))))>
* [enter]simplify:  Simplifying (+ 0.375 (* 4.375 (pow x 4)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* [exit]simplify:  Simplified to (+ 0.375 (* 4.375 (pow x 4)))
* [exit]simplify:  Simplified to (+ 0.375 (* 4.375 (pow x 4)))
* * * * [misc]progress:  [ 48 / 60 ] simplifiying candidate #<alt-delta (Î» (x) (+ (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) 0.375))>
* * * * [misc]progress:  [ 49 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (63 enodes)
* * [misc]simplify:  iters left: 1 (74 enodes)
* [exit]simplify:  Simplified to (+ (- (* 4.375 (pow x 4)) (* x (* x 3.75))) 0.375)
* * * * [misc]progress:  [ 50 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (63 enodes)
* * [misc]simplify:  iters left: 1 (74 enodes)
* [exit]simplify:  Simplified to (+ (- (* 4.375 (pow x 4)) (* x (* x 3.75))) 0.375)
* * * * [misc]progress:  [ 51 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (- (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) (* 3.75 (exp (* 2 (- (log -1) (log (/ -1 x)))))))))>
* [enter]simplify:  Simplifying (+ 0.375 (- (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) (* 3.75 (exp (* 2 (- (log -1) (log (/ -1 x))))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (336 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 4) 4.375) (- 0.375 (* (* x x) 3.75)))
* * * * [misc]progress:  [ 52 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (63 enodes)
* * [misc]simplify:  iters left: 1 (74 enodes)
* [exit]simplify:  Simplified to (+ (- (* 4.375 (pow x 4)) (* x (* x 3.75))) 0.375)
* * * * [misc]progress:  [ 53 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (63 enodes)
* * [misc]simplify:  iters left: 1 (74 enodes)
* [exit]simplify:  Simplified to (+ (- (* 4.375 (pow x 4)) (* x (* x 3.75))) 0.375)
* * * * [misc]progress:  [ 54 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (exp (* 2 (- (log -1) (log (/ -1 x)))))))))>
* [enter]simplify:  Simplifying (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (exp (* 2 (- (log -1) (log (/ -1 x))))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (108 enodes)
* * [misc]simplify:  iters left: 2 (290 enodes)
* [exit]simplify:  Simplified to (+ (* 4.375 (pow x 4)) (- 0.375 (* (* x x) 3.75)))
* * * * [misc]progress:  [ 55 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (63 enodes)
* * [misc]simplify:  iters left: 1 (74 enodes)
* [exit]simplify:  Simplified to (+ (- (* 4.375 (pow x 4)) (* x (* x 3.75))) 0.375)
* * * * [misc]progress:  [ 56 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (63 enodes)
* * [misc]simplify:  iters left: 1 (74 enodes)
* [exit]simplify:  Simplified to (+ (- (* 4.375 (pow x 4)) (* x (* x 3.75))) 0.375)
* * * * [misc]progress:  [ 57 / 60 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (- (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) (* 3.75 (pow x 2)))))>
* [enter]simplify:  Simplifying (+ 0.375 (- (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (147 enodes)
* * [misc]simplify:  iters left: 1 (283 enodes)
* [exit]simplify:  Simplified to (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (* x x)))
* * * * [misc]progress:  [ 58 / 60 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2))))>
* [enter]simplify:  Simplifying (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (69 enodes)
* [exit]simplify:  Simplified to (+ (- 0.375 (* x (* 3.75 x))) (* (pow x 4) 4.375))
* * * * [misc]progress:  [ 59 / 60 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2))))>
* [enter]simplify:  Simplifying (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (69 enodes)
* [exit]simplify:  Simplified to (+ (- 0.375 (* x (* 3.75 x))) (* (pow x 4) 4.375))
* * * * [misc]progress:  [ 60 / 60 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) 0.375) (* 3.75 (exp (* 2 (- (log -1) (log (/ -1 x))))))))>
* [enter]simplify:  Simplifying (- (+ (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) 0.375) (* 3.75 (exp (* 2 (- (log -1) (log (/ -1 x)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (335 enodes)
* [exit]simplify:  Simplified to (- 0.375 (- (* x (* x 3.75)) (* (pow x 4) 4.375)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1 2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 1 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 2 1)
* [misc]approximate:  Taking taylor expansion of (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 4) in x
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow x 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow x 2) in x
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 4) in x
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow x 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow x 2) in x
* [misc]backup-simplify:  Simplify (* 3.75 1) into 3.75
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 4.375 1) into 4.375
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 4.375 0) into 4.375
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 (pow x 4)) (* (- 3.75) (pow x 2))) into (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 x) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log x))) into (* -2 (log x))
* [misc]backup-simplify:  Simplify (exp (* -2 (log x))) into (pow x -2)
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 x) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log x))) into (* -2 (log x))
* [misc]backup-simplify:  Simplify (exp (* -2 (log x))) into (pow x -2)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -4)) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (* 3.75 (pow x -2)) into (/ 3.75 (pow x 2))
* [misc]backup-simplify:  Simplify (- (/ 3.75 (pow x 2))) into (- (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (+ (/ 4.375 (pow x 4)) (- (* 3.75 (/ 1 (pow x 2))))) into (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) into (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x -4))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 (pow x -2))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x -4)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 (pow x -2)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (* 4.375 (/ 1 (pow (/ 1 x) 4))) (* 3.75 (/ 1 (pow (/ 1 x) 2)))) into (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 (- x)) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log -1) (log x))) into (* 2 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 2 (- (log -1) (log x)))) into (exp (* 2 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 (- x)) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log -1) (log x))) into (* 2 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 2 (- (log -1) (log x)))) into (exp (* 2 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 4.375 (exp (* 4 (- (log -1) (log x))))) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* 3.75 (exp (* 2 (- (log -1) (log x))))) into (* 3.75 (exp (* 2 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- (* 3.75 (exp (* 2 (- (log -1) (log x)))))) into (- (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* 4.375 (exp (* 4 (- (log -1) (log x))))) (- (* 3.75 (exp (* 2 (- (log -1) (log x))))))) into (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) into (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (exp (* 4 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 (exp (* 2 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (* 4.375 (exp (* 4 (- (log -1) (log (/ 1 (- x))))))) (* 3.75 (exp (* 2 (- (log -1) (log (/ 1 (- x)))))))) into (- (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) (* 3.75 (exp (* 2 (- (log -1) (log (/ -1 x)))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1 2 1)
* [misc]approximate:  Taking taylor expansion of (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 4) in x
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow x 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow x 2) in x
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 4) in x
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow x 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow x 2) in x
* [misc]backup-simplify:  Simplify (* 3.75 1) into 3.75
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 4.375 1) into 4.375
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 4.375 0) into 4.375
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 (pow x 4)) (* (- 3.75) (pow x 2))) into (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 x) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log x))) into (* -2 (log x))
* [misc]backup-simplify:  Simplify (exp (* -2 (log x))) into (pow x -2)
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 x) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log x))) into (* -2 (log x))
* [misc]backup-simplify:  Simplify (exp (* -2 (log x))) into (pow x -2)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -4)) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (* 3.75 (pow x -2)) into (/ 3.75 (pow x 2))
* [misc]backup-simplify:  Simplify (- (/ 3.75 (pow x 2))) into (- (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (+ (/ 4.375 (pow x 4)) (- (* 3.75 (/ 1 (pow x 2))))) into (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) into (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x -4))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 (pow x -2))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x -4)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 (pow x -2)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (* 4.375 (/ 1 (pow (/ 1 x) 4))) (* 3.75 (/ 1 (pow (/ 1 x) 2)))) into (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 (- x)) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log -1) (log x))) into (* 2 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 2 (- (log -1) (log x)))) into (exp (* 2 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 (- x)) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log -1) (log x))) into (* 2 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 2 (- (log -1) (log x)))) into (exp (* 2 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 4.375 (exp (* 4 (- (log -1) (log x))))) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* 3.75 (exp (* 2 (- (log -1) (log x))))) into (* 3.75 (exp (* 2 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- (* 3.75 (exp (* 2 (- (log -1) (log x)))))) into (- (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* 4.375 (exp (* 4 (- (log -1) (log x))))) (- (* 3.75 (exp (* 2 (- (log -1) (log x))))))) into (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) into (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (exp (* 4 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 (exp (* 2 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (* 4.375 (exp (* 4 (- (log -1) (log (/ 1 (- x))))))) (* 3.75 (exp (* 2 (- (log -1) (log (/ 1 (- x)))))))) into (- (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) (* 3.75 (exp (* 2 (- (log -1) (log (/ -1 x)))))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 4) in x
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow x 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow x 2) in x
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 4) in x
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow x 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow x 2) in x
* [misc]backup-simplify:  Simplify (* 3.75 1) into 3.75
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 4.375 1) into 4.375
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 4.375 0) into 4.375
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 (pow x 4)) (* (- 3.75) (pow x 2))) into (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 x) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log x))) into (* -2 (log x))
* [misc]backup-simplify:  Simplify (exp (* -2 (log x))) into (pow x -2)
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 x) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log x))) into (* -2 (log x))
* [misc]backup-simplify:  Simplify (exp (* -2 (log x))) into (pow x -2)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -4)) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (* 3.75 (pow x -2)) into (/ 3.75 (pow x 2))
* [misc]backup-simplify:  Simplify (- (/ 3.75 (pow x 2))) into (- (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (+ (/ 4.375 (pow x 4)) (- (* 3.75 (/ 1 (pow x 2))))) into (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) into (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x -4))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 (pow x -2))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x -4)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 (pow x -2)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (* 4.375 (/ 1 (pow (/ 1 x) 4))) (* 3.75 (/ 1 (pow (/ 1 x) 2)))) into (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 (- x)) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log -1) (log x))) into (* 2 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 2 (- (log -1) (log x)))) into (exp (* 2 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 (- x)) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log -1) (log x))) into (* 2 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 2 (- (log -1) (log x)))) into (exp (* 2 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 4.375 (exp (* 4 (- (log -1) (log x))))) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* 3.75 (exp (* 2 (- (log -1) (log x))))) into (* 3.75 (exp (* 2 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- (* 3.75 (exp (* 2 (- (log -1) (log x)))))) into (- (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* 4.375 (exp (* 4 (- (log -1) (log x))))) (- (* 3.75 (exp (* 2 (- (log -1) (log x))))))) into (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) into (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (exp (* 4 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 (exp (* 2 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (* 4.375 (exp (* 4 (- (log -1) (log (/ 1 (- x))))))) (* 3.75 (exp (* 2 (- (log -1) (log (/ 1 (- x)))))))) into (- (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) (* 3.75 (exp (* 2 (- (log -1) (log (/ -1 x)))))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) in x
* [misc]taylor:  Rewrote expression to (pow (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 4) in x
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow x 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow x 2) in x
* [misc]backup-simplify:  Simplify (* 3.75 1) into 3.75
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 3.75))) into (+ (* 2 (log x)) (log (- 3.75)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log (- 3.75)))) into (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) in x
* [misc]taylor:  Rewrote expression to (pow (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 4) in x
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow x 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow x 2) in x
* [misc]backup-simplify:  Simplify (* 3.75 1) into 3.75
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 3.75))) into (+ (* 2 (log x)) (log (- 3.75)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log (- 3.75)))) into (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) in x
* [misc]taylor:  Rewrote expression to (pow (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 4) in x
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow x 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow x 2) in x
* [misc]backup-simplify:  Simplify (* 3.75 1) into 3.75
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 3.75))) into (+ (* 2 (log x)) (log (- 3.75)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log (- 3.75)))) into (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) in x
* [misc]taylor:  Rewrote expression to (pow (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x 4) in x
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow x 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow x 2) in x
* [misc]backup-simplify:  Simplify (* 3.75 1) into 3.75
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 3.75))) into (+ (* 2 (log x)) (log (- 3.75)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (* 2 (log x)) (log (- 3.75)))) into (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) into (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75)))))) into (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2) into (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2)
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 3.75) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 3.75))) into (+ (* 2 (log x)) (log (- 3.75)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (* 2 (log x)) (log (- 3.75))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 3.75) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 3.75))) into (+ (* 2 (log x)) (log (- 3.75)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (* 2 (log x)) (log (- 3.75))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 0) (* 0 (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 4.375 1) into 4.375
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 4.375 0) into 4.375
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 3.75) 2))) (* 1 (/ (* 1 (pow (* 2 4.375) 1)) (pow (- 3.75) 1)))) 2) into -1.1666666666666667
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 3.75))) into (+ (* 2 (log x)) (log (- 3.75)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.1666666666666667) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 3.75)))))) into (- 0.3888888888888889)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.3888888888888889) 1) 1)))) into (* -0.3888888888888889 (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))))
* [misc]backup-simplify:  Simplify (* 4.375 1) into 4.375
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 4.375 0) into 4.375
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 3.75) 2))) (* 1 (/ (* 1 (pow (* 2 4.375) 1)) (pow (- 3.75) 1)))) 2) into -1.1666666666666667
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 3.75))) into (+ (* 2 (log x)) (log (- 3.75)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -1.1666666666666667) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 3.75)))))) into (- 0.3888888888888889)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.3888888888888889) 1) 1)))) into (* -0.3888888888888889 (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) (* -0.3888888888888889 (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))))) (+ (* 0 0) (* (* -0.3888888888888889 (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75)))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75)))))))) into (- (* 0.7777777777777778 (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2)))
* [misc]backup-simplify:  Simplify (- (* 0.7777777777777778 (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2))) into (- (* 0.7777777777777778 (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2)))
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 3.75) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 4.375) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 3.75) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 3.75))) into (+ (* 2 (log x)) (log (- 3.75)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.1666666666666667) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 3.75))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.3888888888888889) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 3.75) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 4.375) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 3.75) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 3.75))) into (+ (* 2 (log x)) (log (- 3.75)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -1.1666666666666667) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 3.75))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.3888888888888889) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 0) (+ (* 0 (* -0.3888888888888889 (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))))) (+ (* (* -0.3888888888888889 (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75)))))) 0) (* 0 (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 3.75) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 4.375) 1)) (pow (- 3.75) 3))) (* -3 (/ (* 1 (pow (* 2 4.375) 2)) (pow (- 3.75) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 3.75) 1)))) 24) into (/ -9.5703125 (pow -3.75 2))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 3.75))) into (+ (* 2 (log x)) (log (- 3.75)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -9.5703125 (pow -3.75 2))) (+ (* 0 0) (+ (* 0 -1.1666666666666667) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 3.75)))))))) into (- (* 3.1901041666666665 (/ 1 (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.3888888888888889) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.3888888888888889) 2) 2)) (* (/ (pow (- (* 3.1901041666666665 (/ 1 (pow -3.75 2)))) 1) 1)))) into (* (- 0.07561728395061729 (* 3.1901041666666665 (/ 1 (pow -3.75 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))))
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 3.75) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 4.375) 1)) (pow (- 3.75) 3))) (* -3 (/ (* 1 (pow (* 2 4.375) 2)) (pow (- 3.75) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 3.75) 1)))) 24) into (/ -9.5703125 (pow -3.75 2))
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) (log (- 3.75))) into (+ (* 2 (log x)) (log (- 3.75)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -9.5703125 (pow -3.75 2))) (+ (* 0 0) (+ (* 0 -1.1666666666666667) (+ (* 0 0) (* 0 (+ (* 2 (log x)) (log (- 3.75)))))))) into (- (* 3.1901041666666665 (/ 1 (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.3888888888888889) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.3888888888888889) 2) 2)) (* (/ (pow (- (* 3.1901041666666665 (/ 1 (pow -3.75 2)))) 1) 1)))) into (* (- 0.07561728395061729 (* 3.1901041666666665 (/ 1 (pow -3.75 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) (* (- 0.07561728395061729 (* 3.1901041666666665 (/ 1 (pow -3.75 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))))) (+ (* 0 0) (+ (* (* -0.3888888888888889 (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75)))))) (* -0.3888888888888889 (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))))) (+ (* 0 0) (* (* (- 0.07561728395061729 (* 3.1901041666666665 (/ 1 (pow -3.75 2)))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75)))))) (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75)))))))))) into (- (* 0.30246913580246915 (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2)) (* 6.380208333333333 (/ (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2) (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (- (* 0.30246913580246915 (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2)) (* 6.380208333333333 (/ (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2) (pow -3.75 2)))) into (- (* 0.30246913580246915 (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2)) (* 6.380208333333333 (/ (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2) (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.30246913580246915 (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2)) (* 6.380208333333333 (/ (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2) (pow -3.75 2)))) (pow x 4)) (+ (* (- (* 0.7777777777777778 (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2))) (pow x 2)) (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2))) into (- (+ (* 0.30246913580246915 (* (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2) (pow x 4))) (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2)) (+ (* 0.7777777777777778 (* (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2) (pow x 2))) (* 6.380208333333333 (/ (* (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2) (pow x 4)) (pow -3.75 2)))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2)))) (cbrt (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2)))) (cbrt (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2)))) in x
* [misc]taylor:  Rewrote expression to (pow (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 x) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log x))) into (* -2 (log x))
* [misc]backup-simplify:  Simplify (exp (* -2 (log x))) into (pow x -2)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -4)) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (* 3.75 (pow x -2)) into (/ 3.75 (pow x 2))
* [misc]backup-simplify:  Simplify (- (/ 3.75 (pow x 2))) into (- (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (+ (/ 4.375 (pow x 4)) (- (* 3.75 (/ 1 (pow x 2))))) into (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))) into (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))))) into (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))) into (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2)))) in x
* [misc]taylor:  Rewrote expression to (pow (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 x) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log x))) into (* -2 (log x))
* [misc]backup-simplify:  Simplify (exp (* -2 (log x))) into (pow x -2)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -4)) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (* 3.75 (pow x -2)) into (/ 3.75 (pow x 2))
* [misc]backup-simplify:  Simplify (- (/ 3.75 (pow x 2))) into (- (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (+ (/ 4.375 (pow x 4)) (- (* 3.75 (/ 1 (pow x 2))))) into (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))) into (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))))) into (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))) into (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (* (cbrt (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2)))) (cbrt (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2)))) in x
* [misc]taylor:  Rewrote expression to (pow (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 x) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log x))) into (* -2 (log x))
* [misc]backup-simplify:  Simplify (exp (* -2 (log x))) into (pow x -2)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -4)) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (* 3.75 (pow x -2)) into (/ 3.75 (pow x 2))
* [misc]backup-simplify:  Simplify (- (/ 3.75 (pow x 2))) into (- (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (+ (/ 4.375 (pow x 4)) (- (* 3.75 (/ 1 (pow x 2))))) into (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))) into (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))))) into (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))) into (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2)))) in x
* [misc]taylor:  Rewrote expression to (pow (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 x) 4)) (* 3.75 (pow (/ 1 x) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 x) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log x))) into (* -2 (log x))
* [misc]backup-simplify:  Simplify (exp (* -2 (log x))) into (pow x -2)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -4)) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (* 3.75 (pow x -2)) into (/ 3.75 (pow x 2))
* [misc]backup-simplify:  Simplify (- (/ 3.75 (pow x 2))) into (- (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (+ (/ 4.375 (pow x 4)) (- (* 3.75 (/ 1 (pow x 2))))) into (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))
* [misc]backup-simplify:  Simplify (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))) into (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))))) into (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))) into (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1/3)
* [misc]backup-simplify:  Simplify (* (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1/3) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1/3)) into (pow (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 2) 1/3)
* [misc]backup-simplify:  Simplify (pow (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 2) 1/3) into (pow (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 2) 1/3)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x -4))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 (pow x -2))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x -4))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 (pow x -2))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1/3) 0) (* 0 (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1/3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x -4)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 (pow x -2)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x -4)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 (pow x -2)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1/3) 0) (+ (* 0 0) (* 0 (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1/3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1/3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1/3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1/3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1/3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1/3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1/3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -2 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -2)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2))))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1/3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (- (* 4.375 (/ 1 (pow x 4))) (* 3.75 (/ 1 (pow x 2)))) 1/3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (pow (- (* 4.375 (/ 1 (pow (/ 1 x) 4))) (* 3.75 (/ 1 (pow (/ 1 x) 2)))) 2) 1/3) into (pow (pow (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) 2) 1/3)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2)))) (cbrt (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2)))) (cbrt (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2)))) in x
* [misc]taylor:  Rewrote expression to (pow (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 (- x)) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log -1) (log x))) into (* 2 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 2 (- (log -1) (log x)))) into (exp (* 2 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 4.375 (exp (* 4 (- (log -1) (log x))))) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* 3.75 (exp (* 2 (- (log -1) (log x))))) into (* 3.75 (exp (* 2 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- (* 3.75 (exp (* 2 (- (log -1) (log x)))))) into (- (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* 4.375 (exp (* 4 (- (log -1) (log x))))) (- (* 3.75 (exp (* 2 (- (log -1) (log x))))))) into (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))) into (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))))) into (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))) into (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2)))) in x
* [misc]taylor:  Rewrote expression to (pow (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 (- x)) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log -1) (log x))) into (* 2 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 2 (- (log -1) (log x)))) into (exp (* 2 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 4.375 (exp (* 4 (- (log -1) (log x))))) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* 3.75 (exp (* 2 (- (log -1) (log x))))) into (* 3.75 (exp (* 2 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- (* 3.75 (exp (* 2 (- (log -1) (log x)))))) into (- (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* 4.375 (exp (* 4 (- (log -1) (log x))))) (- (* 3.75 (exp (* 2 (- (log -1) (log x))))))) into (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))) into (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))))) into (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))) into (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (* (cbrt (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2)))) (cbrt (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2)))) in x
* [misc]taylor:  Rewrote expression to (pow (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 (- x)) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log -1) (log x))) into (* 2 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 2 (- (log -1) (log x)))) into (exp (* 2 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 4.375 (exp (* 4 (- (log -1) (log x))))) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* 3.75 (exp (* 2 (- (log -1) (log x))))) into (* 3.75 (exp (* 2 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- (* 3.75 (exp (* 2 (- (log -1) (log x)))))) into (- (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* 4.375 (exp (* 4 (- (log -1) (log x))))) (- (* 3.75 (exp (* 2 (- (log -1) (log x))))))) into (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))) into (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))))) into (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))) into (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2)))) in x
* [misc]taylor:  Rewrote expression to (pow (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2)))) in x
* [misc]taylor:  Taking taylor expansion of (- (* 4.375 (pow (/ 1 (- x)) 4)) (* 3.75 (pow (/ 1 (- x)) 2))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) 4)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 4) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 4 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 4 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4 in x
* [misc]backup-simplify:  Simplify 4 into 4
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* 3.75 (pow (/ 1 (- x)) 2)) in x
* [misc]taylor:  Taking taylor expansion of 3.75 in x
* [misc]backup-simplify:  Simplify 3.75 into 3.75
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 2) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 2 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 2 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2 in x
* [misc]backup-simplify:  Simplify 2 into 2
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 2 (- (log -1) (log x))) into (* 2 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 2 (- (log -1) (log x)))) into (exp (* 2 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 4.375 (exp (* 4 (- (log -1) (log x))))) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* 3.75 (exp (* 2 (- (log -1) (log x))))) into (* 3.75 (exp (* 2 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- (* 3.75 (exp (* 2 (- (log -1) (log x)))))) into (- (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* 4.375 (exp (* 4 (- (log -1) (log x))))) (- (* 3.75 (exp (* 2 (- (log -1) (log x))))))) into (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))) into (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))))) into (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))) into (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1/3)
* [misc]backup-simplify:  Simplify (* (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1/3) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1/3)) into (pow (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 2) 1/3)
* [misc]backup-simplify:  Simplify (pow (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 2) 1/3) into (pow (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 2) 1/3)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (exp (* 4 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 (exp (* 2 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (exp (* 4 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (* 0 (exp (* 2 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1/3) 0) (* 0 (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1/3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1/3) 0) (+ (* 0 0) (* 0 (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1/3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1/3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1/3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1/3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1/3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1/3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1/3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 2 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x))))))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1/3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) (* 3.75 (exp (* 2 (- (log -1) (log x)))))) 1/3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (pow (- (* 4.375 (exp (* 4 (- (log -1) (log (/ 1 (- x))))))) (* 3.75 (exp (* 2 (- (log -1) (log (/ 1 (- x)))))))) 2) 1/3) into (pow (pow (- (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) (* 3.75 (exp (* 2 (- (log -1) (log (/ -1 x))))))) 2) 1/3)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (log (/ (exp (* 4.375 (pow x 4))) (exp (* 3.75 (pow x 2)))))))))>
* [enter]simplify:  Simplifying (/ (exp (* 4.375 (pow x 4))) (exp (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (68 enodes)
* * [misc]simplify:  iters left: 1 (87 enodes)
* [exit]simplify:  Simplified to (/ (pow (exp 4.375) (pow x 4)) (pow (exp 3.75) (* x x)))
* [exit]simplify:  Simplified to (/ (pow (exp 4.375) (pow x 4)) (pow (exp 3.75) (* x x)))
* * * * [misc]progress:  [ 2 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (pow (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) 1)))))>
* * * * [misc]progress:  [ 3 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (exp (log (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))))>
* [enter]simplify:  Simplifying (log (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (log (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [exit]simplify:  Simplified to (log (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* * * * [misc]progress:  [ 4 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (log (exp (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))))>
* [enter]simplify:  Simplifying (exp (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (82 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (/ (pow (exp 4.375) (pow x 4)) (pow (exp 3.75) (* x x)))
* [exit]simplify:  Simplified to (/ (pow (exp 4.375) (pow x 4)) (pow (exp 3.75) (* x x)))
* * * * [misc]progress:  [ 5 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))
* [enter]simplify:  Simplifying (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* * * * [misc]progress:  [ 6 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (cbrt (* (* (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))))>
* [enter]simplify:  Simplifying (* (* (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (158 enodes)
* [exit]simplify:  Simplified to (pow (- (* (pow x 4) 4.375) (* (* 3.75 x) x)) 3)
* [exit]simplify:  Simplified to (pow (- (* (pow x 4) 4.375) (* (* 3.75 x) x)) 3)
* * * * [misc]progress:  [ 7 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (* (sqrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (sqrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))))>
* [enter]simplify:  Simplifying (sqrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [exit]simplify:  Simplified to (sqrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [enter]simplify:  Simplifying (sqrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [exit]simplify:  Simplified to (sqrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* * * * [misc]progress:  [ 8 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (/ (- (pow (* 4.375 (pow x 4)) 3) (pow (* 3.75 (pow x 2)) 3)) (+ (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (+ (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))) (* (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))))))>
* [enter]simplify:  Simplifying (- (pow (* 4.375 (pow x 4)) 3) (pow (* 3.75 (pow x 2)) 3))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (295 enodes)
* [exit]simplify:  Simplified to (- (pow (* (pow x 4) 4.375) 3) (pow (* (* 3.75 x) x) 3))
* [exit]simplify:  Simplified to (- (pow (* (pow x 4) 4.375) 3) (pow (* (* 3.75 x) x) 3))
* [enter]simplify:  Simplifying (+ (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (+ (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))) (* (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (230 enodes)
* * [misc]simplify:  iters left: 2 (425 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* x (* 3.75 x)) (* (pow x 4) 4.375)) (* x (* 3.75 x))) (* (* (pow x 4) 4.375) (* (pow x 4) 4.375)))
* [exit]simplify:  Simplified to (+ (* (+ (* x (* 3.75 x)) (* (pow x 4) 4.375)) (* x (* 3.75 x))) (* (* (pow x 4) 4.375) (* (pow x 4) 4.375)))
* * * * [misc]progress:  [ 9 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (+ (* 4.375 (pow x 4)) (- (* 3.75 (pow x 2))))))))>
* [enter]simplify:  Simplifying (- (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* [exit]simplify:  Simplified to (* (* x x) (- 3.75))
* [exit]simplify:  Simplified to (* (* x x) (- 3.75))
* * * * [misc]progress:  [ 10 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (* 1 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))))>
* * * * [misc]progress:  [ 11 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (/ (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2)))) (+ (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))))>
* [enter]simplify:  Simplifying (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (170 enodes)
* * [misc]simplify:  iters left: 2 (424 enodes)
* [exit]simplify:  Simplified to (* (+ (* (pow x 4) 4.375) (* (* 3.75 x) x)) (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [exit]simplify:  Simplified to (* (+ (* (pow x 4) 4.375) (* (* 3.75 x) x)) (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [enter]simplify:  Simplifying (+ (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 4) 4.375) (* 3.75 (* x x)))
* [exit]simplify:  Simplified to (+ (* (pow x 4) 4.375) (* 3.75 (* x x)))
* * * * [misc]progress:  [ 12 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (+ (* 4.375 (pow x 4)) (- (* 3.75 (pow x 2))))))))>
* [enter]simplify:  Simplifying (- (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* [exit]simplify:  Simplified to (* (* x x) (- 3.75))
* [exit]simplify:  Simplified to (* (* x x) (- 3.75))
* * * * [misc]progress:  [ 13 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (log (/ (exp (* 4.375 (pow x 4))) (exp (* 3.75 (pow x 2))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (/ (exp (* 4.375 (pow x 4))) (exp (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (68 enodes)
* * [misc]simplify:  iters left: 1 (87 enodes)
* [exit]simplify:  Simplified to (/ (pow (exp 4.375) (pow x 4)) (pow (exp 3.75) (* x x)))
* [exit]simplify:  Simplified to (/ (pow (exp 4.375) (pow x 4)) (pow (exp 3.75) (* x x)))
* * * * [misc]progress:  [ 14 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (pow (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) 1))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* * * * [misc]progress:  [ 15 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (exp (log (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (log (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (log (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [exit]simplify:  Simplified to (log (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* * * * [misc]progress:  [ 16 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (log (exp (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (exp (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (82 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (/ (pow (exp 4.375) (pow x 4)) (pow (exp 3.75) (* x x)))
* [exit]simplify:  Simplified to (/ (pow (exp 4.375) (pow x 4)) (pow (exp 3.75) (* x x)))
* * * * [misc]progress:  [ 17 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))
* [enter]simplify:  Simplifying (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* * * * [misc]progress:  [ 18 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (cbrt (* (* (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (* (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (158 enodes)
* [exit]simplify:  Simplified to (pow (- (* (pow x 4) 4.375) (* (* 3.75 x) x)) 3)
* [exit]simplify:  Simplified to (pow (- (* (pow x 4) 4.375) (* (* 3.75 x) x)) 3)
* * * * [misc]progress:  [ 19 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (* (sqrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (sqrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (sqrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [exit]simplify:  Simplified to (sqrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [enter]simplify:  Simplifying (sqrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [exit]simplify:  Simplified to (sqrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* * * * [misc]progress:  [ 20 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (/ (- (pow (* 4.375 (pow x 4)) 3) (pow (* 3.75 (pow x 2)) 3)) (+ (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (+ (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))) (* (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (- (pow (* 4.375 (pow x 4)) 3) (pow (* 3.75 (pow x 2)) 3))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (295 enodes)
* [exit]simplify:  Simplified to (- (pow (* (pow x 4) 4.375) 3) (pow (* (* 3.75 x) x) 3))
* [exit]simplify:  Simplified to (- (pow (* (pow x 4) 4.375) 3) (pow (* (* 3.75 x) x) 3))
* [enter]simplify:  Simplifying (+ (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (+ (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))) (* (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (230 enodes)
* * [misc]simplify:  iters left: 2 (425 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* x (* 3.75 x)) (* (pow x 4) 4.375)) (* x (* 3.75 x))) (* (* (pow x 4) 4.375) (* (pow x 4) 4.375)))
* [exit]simplify:  Simplified to (+ (* (+ (* x (* 3.75 x)) (* (pow x 4) 4.375)) (* x (* 3.75 x))) (* (* (pow x 4) 4.375) (* (pow x 4) 4.375)))
* * * * [misc]progress:  [ 21 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (+ (* 4.375 (pow x 4)) (- (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (- (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* [exit]simplify:  Simplified to (* (* x x) (- 3.75))
* [exit]simplify:  Simplified to (* (* x x) (- 3.75))
* * * * [misc]progress:  [ 22 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (* 1 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* * * * [misc]progress:  [ 23 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (/ (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2)))) (+ (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (170 enodes)
* * [misc]simplify:  iters left: 2 (424 enodes)
* [exit]simplify:  Simplified to (* (+ (* (pow x 4) 4.375) (* (* 3.75 x) x)) (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [exit]simplify:  Simplified to (* (+ (* (pow x 4) 4.375) (* (* 3.75 x) x)) (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [enter]simplify:  Simplifying (+ (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 4) 4.375) (* 3.75 (* x x)))
* [exit]simplify:  Simplified to (+ (* (pow x 4) 4.375) (* 3.75 (* x x)))
* * * * [misc]progress:  [ 24 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (+ (* 4.375 (pow x 4)) (- (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (- (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* [exit]simplify:  Simplified to (* (* x x) (- 3.75))
* [exit]simplify:  Simplified to (* (* x x) (- 3.75))
* * * * [misc]progress:  [ 25 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (log (/ (exp (* 4.375 (pow x 4))) (exp (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (/ (exp (* 4.375 (pow x 4))) (exp (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (68 enodes)
* * [misc]simplify:  iters left: 1 (87 enodes)
* [exit]simplify:  Simplified to (/ (pow (exp 4.375) (pow x 4)) (pow (exp 3.75) (* x x)))
* [exit]simplify:  Simplified to (/ (pow (exp 4.375) (pow x 4)) (pow (exp 3.75) (* x x)))
* * * * [misc]progress:  [ 26 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (pow (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) 1)) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* * * * [misc]progress:  [ 27 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (exp (log (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (log (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (log (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [exit]simplify:  Simplified to (log (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* * * * [misc]progress:  [ 28 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (log (exp (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (exp (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (82 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (/ (pow (exp 4.375) (pow x 4)) (pow (exp 3.75) (* x x)))
* [exit]simplify:  Simplified to (/ (pow (exp 4.375) (pow x 4)) (pow (exp 3.75) (* x x)))
* * * * [misc]progress:  [ 29 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))
* [enter]simplify:  Simplifying (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* * * * [misc]progress:  [ 30 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (cbrt (* (* (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (* (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (158 enodes)
* [exit]simplify:  Simplified to (pow (- (* (pow x 4) 4.375) (* (* 3.75 x) x)) 3)
* [exit]simplify:  Simplified to (pow (- (* (pow x 4) 4.375) (* (* 3.75 x) x)) 3)
* * * * [misc]progress:  [ 31 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (* (sqrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (sqrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (sqrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [exit]simplify:  Simplified to (sqrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [enter]simplify:  Simplifying (sqrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [exit]simplify:  Simplified to (sqrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* * * * [misc]progress:  [ 32 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (/ (- (pow (* 4.375 (pow x 4)) 3) (pow (* 3.75 (pow x 2)) 3)) (+ (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (+ (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))) (* (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (- (pow (* 4.375 (pow x 4)) 3) (pow (* 3.75 (pow x 2)) 3))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (295 enodes)
* [exit]simplify:  Simplified to (- (pow (* (pow x 4) 4.375) 3) (pow (* (* 3.75 x) x) 3))
* [exit]simplify:  Simplified to (- (pow (* (pow x 4) 4.375) 3) (pow (* (* 3.75 x) x) 3))
* [enter]simplify:  Simplifying (+ (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (+ (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))) (* (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (230 enodes)
* * [misc]simplify:  iters left: 2 (425 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* x (* 3.75 x)) (* (pow x 4) 4.375)) (* x (* 3.75 x))) (* (* (pow x 4) 4.375) (* (pow x 4) 4.375)))
* [exit]simplify:  Simplified to (+ (* (+ (* x (* 3.75 x)) (* (pow x 4) 4.375)) (* x (* 3.75 x))) (* (* (pow x 4) 4.375) (* (pow x 4) 4.375)))
* * * * [misc]progress:  [ 33 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (+ (* 4.375 (pow x 4)) (- (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (- (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* [exit]simplify:  Simplified to (* (* x x) (- 3.75))
* [exit]simplify:  Simplified to (* (* x x) (- 3.75))
* * * * [misc]progress:  [ 34 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (* 1 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* * * * [misc]progress:  [ 35 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (/ (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2)))) (+ (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (170 enodes)
* * [misc]simplify:  iters left: 2 (424 enodes)
* [exit]simplify:  Simplified to (* (+ (* (pow x 4) 4.375) (* (* 3.75 x) x)) (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [exit]simplify:  Simplified to (* (+ (* (pow x 4) 4.375) (* (* 3.75 x) x)) (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [enter]simplify:  Simplifying (+ (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 4) 4.375) (* 3.75 (* x x)))
* [exit]simplify:  Simplified to (+ (* (pow x 4) 4.375) (* 3.75 (* x x)))
* * * * [misc]progress:  [ 36 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (+ (* 4.375 (pow x 4)) (- (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (- (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* [exit]simplify:  Simplified to (* (* x x) (- 3.75))
* [exit]simplify:  Simplified to (* (* x x) (- 3.75))
* * * * [misc]progress:  [ 37 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (pow (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (+ 1/3 1/3)) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (+ 1/3 1/3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* * * * [misc]progress:  [ 38 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (pow (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (+ 1 1)) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 39 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (pow (* (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) 1/3) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (86 enodes)
* * [misc]simplify:  iters left: 2 (269 enodes)
* [exit]simplify:  Simplified to (* (- (* (pow x 4) 4.375) (* x (* 3.75 x))) (- (* (pow x 4) 4.375) (* x (* 3.75 x))))
* [exit]simplify:  Simplified to (* (- (* (pow x 4) 4.375) (* x (* 3.75 x))) (- (* (pow x 4) 4.375) (* x (* 3.75 x))))
* * * * [misc]progress:  [ 40 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (pow (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) 1) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))
* * * * [misc]progress:  [ 41 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (pow (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) 2) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* * * * [misc]progress:  [ 42 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (pow (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (+ 1 1)) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 43 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (pow (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) 1) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* * * * [misc]progress:  [ 44 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (exp (+ (log (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (log (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (log (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))) (log (cbrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))))
* [exit]simplify:  Simplified to (+ (log (cbrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))) (log (cbrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))))
* * * * [misc]progress:  [ 45 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (exp (log (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x))))) (log (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x))))))
* [exit]simplify:  Simplified to (+ (log (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x))))) (log (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x))))))
* * * * [misc]progress:  [ 46 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (log (exp (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x))))))
* [exit]simplify:  Simplified to (exp (* (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x))))))
* * * * [misc]progress:  [ 47 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (cbrt (* (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (86 enodes)
* * [misc]simplify:  iters left: 2 (269 enodes)
* [exit]simplify:  Simplified to (* (- (* (pow x 4) 4.375) (* x (* 3.75 x))) (- (* (pow x 4) 4.375) (* x (* 3.75 x))))
* [exit]simplify:  Simplified to (* (- (* (pow x 4) 4.375) (* x (* 3.75 x))) (- (* (pow x 4) 4.375) (* x (* 3.75 x))))
* * * * [misc]progress:  [ 48 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (* (cbrt (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))) (cbrt (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x)))) (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x)))))) (cbrt (* (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x)))) (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x)))) (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x)))))) (cbrt (* (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x)))) (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x)))))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x))) (cbrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x))) (cbrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))))
* * * * [misc]progress:  [ 49 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (cbrt (* (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (64 enodes)
* * [misc]simplify:  iters left: 2 (97 enodes)
* * [misc]simplify:  iters left: 1 (276 enodes)
* [exit]simplify:  Simplified to (* (- (* (pow x 4) 4.375) (* (* 3.75 x) x)) (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* [exit]simplify:  Simplified to (* (- (* (pow x 4) 4.375) (* (* 3.75 x) x)) (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))
* * * * [misc]progress:  [ 50 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (sqrt (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (sqrt (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x)))))
* [exit]simplify:  Simplified to (fabs (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x)))))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x)))))
* [exit]simplify:  Simplified to (fabs (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x)))))
* * * * [misc]progress:  [ 51 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (/ (* (cbrt (- (pow (* 4.375 (pow x 4)) 3) (pow (* 3.75 (pow x 2)) 3))) (cbrt (- (pow (* 4.375 (pow x 4)) 3) (pow (* 3.75 (pow x 2)) 3)))) (* (cbrt (+ (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (+ (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))) (* (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (+ (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (+ (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))) (* (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (pow (* 4.375 (pow x 4)) 3) (pow (* 3.75 (pow x 2)) 3))) (cbrt (- (pow (* 4.375 (pow x 4)) 3) (pow (* 3.75 (pow x 2)) 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (299 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (pow (* (pow x 4) 4.375) 3) (pow (* (* 3.75 x) x) 3))) (cbrt (- (pow (* (pow x 4) 4.375) 3) (pow (* (* 3.75 x) x) 3))))
* [exit]simplify:  Simplified to (* (cbrt (- (pow (* (pow x 4) 4.375) 3) (pow (* (* 3.75 x) x) 3))) (cbrt (- (pow (* (pow x 4) 4.375) 3) (pow (* (* 3.75 x) x) 3))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (+ (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))) (* (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (+ (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (+ (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))) (* (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (232 enodes)
* * [misc]simplify:  iters left: 2 (408 enodes)
* * [misc]simplify:  iters left: 1 (488 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* (* 3.75 x) x) (* (pow x 4) 4.375)) (* (* 3.75 x) x)) (* (* (pow x 4) 4.375) (* (pow x 4) 4.375)))) (cbrt (+ (* (+ (* (* 3.75 x) x) (* (pow x 4) 4.375)) (* (* 3.75 x) x)) (* (* (pow x 4) 4.375) (* (pow x 4) 4.375)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* (* 3.75 x) x) (* (pow x 4) 4.375)) (* (* 3.75 x) x)) (* (* (pow x 4) 4.375) (* (pow x 4) 4.375)))) (cbrt (+ (* (+ (* (* 3.75 x) x) (* (pow x 4) 4.375)) (* (* 3.75 x) x)) (* (* (pow x 4) 4.375) (* (pow x 4) 4.375)))))
* * * * [misc]progress:  [ 52 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (/ (* (cbrt (- (pow (* 4.375 (pow x 4)) 3) (pow (* 3.75 (pow x 2)) 3))) (cbrt (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2)))))) (* (cbrt (+ (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (+ (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))) (* (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (+ (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (pow (* 4.375 (pow x 4)) 3) (pow (* 3.75 (pow x 2)) 3))) (cbrt (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (* (pow x 4) 4.375) (* (pow x 4) 4.375)) (* (* (* 3.75 x) x) (* (* 3.75 x) x)))) (cbrt (- (pow (* (pow x 4) 4.375) 3) (pow (* (* 3.75 x) x) 3))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (* (pow x 4) 4.375) (* (pow x 4) 4.375)) (* (* (* 3.75 x) x) (* (* 3.75 x) x)))) (cbrt (- (pow (* (pow x 4) 4.375) 3) (pow (* (* 3.75 x) x) 3))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (+ (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))) (* (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (+ (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (215 enodes)
* * [misc]simplify:  iters left: 2 (399 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* x (* 3.75 x)) (* (pow x 4) 4.375)) (* x (* 3.75 x))) (* (* (pow x 4) 4.375) (* (pow x 4) 4.375)))) (cbrt (+ (* x (* 3.75 x)) (* (pow x 4) 4.375))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* x (* 3.75 x)) (* (pow x 4) 4.375)) (* x (* 3.75 x))) (* (* (pow x 4) 4.375) (* (pow x 4) 4.375)))) (cbrt (+ (* x (* 3.75 x)) (* (pow x 4) 4.375))))
* * * * [misc]progress:  [ 53 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (/ (* (cbrt (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))))) (cbrt (- (pow (* 4.375 (pow x 4)) 3) (pow (* 3.75 (pow x 2)) 3)))) (* (cbrt (+ (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (+ (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (+ (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))) (* (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))))) (cbrt (- (pow (* 4.375 (pow x 4)) 3) (pow (* 3.75 (pow x 2)) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (402 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (pow (* (pow x 4) 4.375) 3) (pow (* (* 3.75 x) x) 3))) (cbrt (* (+ (* (* 3.75 x) x) (* (pow x 4) 4.375)) (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))))
* [exit]simplify:  Simplified to (* (cbrt (- (pow (* (pow x 4) 4.375) 3) (pow (* (* 3.75 x) x) 3))) (cbrt (* (+ (* (* 3.75 x) x) (* (pow x 4) 4.375)) (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (+ (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (+ (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))) (* (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (214 enodes)
* * [misc]simplify:  iters left: 2 (387 enodes)
* * [misc]simplify:  iters left: 1 (479 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 4) 4.375) (* 3.75 (* x x)))) (cbrt (+ (* (* (pow x 4) 4.375) (* (pow x 4) 4.375)) (* (+ (* (pow x 4) 4.375) (* 3.75 (* x x))) (* 3.75 (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 4) 4.375) (* 3.75 (* x x)))) (cbrt (+ (* (* (pow x 4) 4.375) (* (pow x 4) 4.375)) (* (+ (* (pow x 4) 4.375) (* 3.75 (* x x))) (* 3.75 (* x x))))))
* * * * [misc]progress:  [ 54 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (/ (* (cbrt (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))))) (cbrt (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2)))))) (* (cbrt (+ (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (+ (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))))) (cbrt (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (172 enodes)
* * [misc]simplify:  iters left: 2 (424 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- (* (pow x 4) 4.375) (* x (* 3.75 x))) (+ (* (pow x 4) 4.375) (* x (* 3.75 x))))) (cbrt (* (- (* (pow x 4) 4.375) (* x (* 3.75 x))) (+ (* (pow x 4) 4.375) (* x (* 3.75 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (- (* (pow x 4) 4.375) (* x (* 3.75 x))) (+ (* (pow x 4) 4.375) (* x (* 3.75 x))))) (cbrt (* (- (* (pow x 4) 4.375) (* x (* 3.75 x))) (+ (* (pow x 4) 4.375) (* x (* 3.75 x))))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (+ (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 4) 4.375) (* 3.75 (* x x)))) (cbrt (+ (* (pow x 4) 4.375) (* 3.75 (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x 4) 4.375) (* 3.75 (* x x)))) (cbrt (+ (* (pow x 4) 4.375) (* 3.75 (* x x)))))
* * * * [misc]progress:  [ 55 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* 1 (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* * * * [misc]progress:  [ 56 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))) (cbrt (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))
* * * * [misc]progress:  [ 57 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (sqrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (sqrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (sqrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (- (* (pow x 4) 4.375) (* x (* 3.75 x))))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (- (* (pow x 4) 4.375) (* x (* 3.75 x))))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))
* * * * [misc]progress:  [ 58 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt 1)) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt 1))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (* (cbrt 1) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))
* [exit]simplify:  Simplified to (* (cbrt 1) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))
* * * * [misc]progress:  [ 59 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (* (cbrt (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))) (cbrt (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (* (cbrt (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (49 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x))))) (* (cbrt (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x))))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x))))) (* (cbrt (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x))))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x))))))
* * * * [misc]progress:  [ 60 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (sqrt (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (sqrt (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (sqrt (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x))))) (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x)))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x))))) (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x)))))
* * * * [misc]progress:  [ 61 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) 1) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) 1)
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (45 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x))))
* [exit]simplify:  Simplified to (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x))))
* * * * [misc]progress:  [ 62 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (* (cbrt (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x))))) (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x))))) (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x)))))
* * * * [misc]progress:  [ 63 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (sqrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (* (cbrt (sqrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (- (* (pow x 4) 4.375) (* x (* 3.75 x))))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (- (* (pow x 4) 4.375) (* x (* 3.75 x))))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))
* * * * [misc]progress:  [ 64 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt 1) (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))
* * * * [misc]progress:  [ 65 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (* (cbrt (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (* (cbrt (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x))))) (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x))))) (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x)))))
* * * * [misc]progress:  [ 66 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (sqrt (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (* (sqrt (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x))))) (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x)))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x))))) (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x)))))
* * * * [misc]progress:  [ 67 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* 1 (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))) (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))))
* * * * [misc]progress:  [ 68 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (/ (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (pow (* 4.375 (pow x 4)) 3) (pow (* 3.75 (pow x 2)) 3)))) (cbrt (+ (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (+ (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))) (* (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (pow (* 4.375 (pow x 4)) 3) (pow (* 3.75 (pow x 2)) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (106 enodes)
* * [misc]simplify:  iters left: 3 (310 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))) (cbrt (- (pow (* (pow x 4) 4.375) 3) (pow (* x (* 3.75 x)) 3))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 4) 4.375) (* x (* 3.75 x)))) (cbrt (- (pow (* (pow x 4) 4.375) 3) (pow (* x (* 3.75 x)) 3))))
* * * * [misc]progress:  [ 69 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (/ (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2)))))) (cbrt (+ (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (214 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x))) (cbrt (- (* (* (pow x 4) 4.375) (* (pow x 4) 4.375)) (* (* (* 3.75 x) x) (* (* 3.75 x) x)))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x))) (cbrt (- (* (* (pow x 4) 4.375) (* (pow x 4) 4.375)) (* (* (* 3.75 x) x) (* (* 3.75 x) x)))))
* * * * [misc]progress:  [ 70 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (/ (* (cbrt (- (pow (* 4.375 (pow x 4)) 3) (pow (* 3.75 (pow x 2)) 3))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (+ (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (+ (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))) (* (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (pow (* 4.375 (pow x 4)) 3) (pow (* 3.75 (pow x 2)) 3))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (106 enodes)
* * [misc]simplify:  iters left: 3 (309 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x))) (cbrt (- (pow (* (pow x 4) 4.375) 3) (pow (* (* 3.75 x) x) 3))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x))) (cbrt (- (pow (* (pow x 4) 4.375) 3) (pow (* (* 3.75 x) x) 3))))
* * * * [misc]progress:  [ 71 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (/ (* (cbrt (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (+ (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (214 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* 3.75 x) x) (* (pow x 4) 4.375)) (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))) (cbrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* 3.75 x) x) (* (pow x 4) 4.375)) (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))) (cbrt (- (* (pow x 4) 4.375) (* (* 3.75 x) x))))
* * * * [misc]progress:  [ 72 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* * * * [misc]progress:  [ 73 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (60 enodes)
* * [misc]simplify:  iters left: 1 (67 enodes)
* [exit]simplify:  Simplified to (+ (* 4.375 (pow x 4)) (- 0.375 (* x (* x 3.75))))
* * * * [misc]progress:  [ 74 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (60 enodes)
* * [misc]simplify:  iters left: 1 (67 enodes)
* [exit]simplify:  Simplified to (+ (* 4.375 (pow x 4)) (- 0.375 (* x (* x 3.75))))
* * * * [misc]progress:  [ 75 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) (* 3.75 (exp (* 2 (- (log -1) (log (/ -1 x)))))))))))>
* [enter]simplify:  Simplifying (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) (* 3.75 (exp (* 2 (- (log -1) (log (/ -1 x))))))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (160 enodes)
* * [misc]simplify:  iters left: 2 (370 enodes)
* [exit]simplify:  Simplified to (+ 0.375 (pow (cbrt (- (* 4.375 (pow x 4)) (* (* x x) 3.75))) 3))
* * * * [misc]progress:  [ 76 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (60 enodes)
* * [misc]simplify:  iters left: 1 (67 enodes)
* [exit]simplify:  Simplified to (+ (* 4.375 (pow x 4)) (- 0.375 (* x (* x 3.75))))
* * * * [misc]progress:  [ 77 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (60 enodes)
* * [misc]simplify:  iters left: 1 (67 enodes)
* [exit]simplify:  Simplified to (+ (* 4.375 (pow x 4)) (- 0.375 (* x (* x 3.75))))
* * * * [misc]progress:  [ 78 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) (* 3.75 (exp (* 2 (- (log -1) (log (/ -1 x))))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) (* 3.75 (exp (* 2 (- (log -1) (log (/ -1 x))))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (160 enodes)
* * [misc]simplify:  iters left: 2 (358 enodes)
* [exit]simplify:  Simplified to (+ 0.375 (* (* (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x)))) (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x))))) (cbrt (- (* (pow x 4) 4.375) (* 3.75 (* x x))))))
* * * * [misc]progress:  [ 79 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (60 enodes)
* * [misc]simplify:  iters left: 1 (67 enodes)
* [exit]simplify:  Simplified to (+ (* 4.375 (pow x 4)) (- 0.375 (* x (* x 3.75))))
* * * * [misc]progress:  [ 80 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (60 enodes)
* * [misc]simplify:  iters left: 1 (67 enodes)
* [exit]simplify:  Simplified to (+ (* 4.375 (pow x 4)) (- 0.375 (* x (* x 3.75))))
* * * * [misc]progress:  [ 81 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) (* 3.75 (exp (* 2 (- (log -1) (log (/ -1 x)))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (+ 0.375 (* (* (cbrt (- (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) (* 3.75 (exp (* 2 (- (log -1) (log (/ -1 x)))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (159 enodes)
* * [misc]simplify:  iters left: 2 (351 enodes)
* [exit]simplify:  Simplified to (+ 0.375 (* (cbrt (- (* (pow x 4) 4.375) (* (* x x) 3.75))) (* (cbrt (- (* (pow x 4) 4.375) (* (* x x) 3.75))) (cbrt (- (* (pow x 4) 4.375) (* (* x x) 3.75))))))
* * * * [misc]progress:  [ 82 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (* (- (+ (* 0.30246913580246915 (* (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2) (pow x 4))) (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2)) (+ (* 0.7777777777777778 (* (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2) (pow x 2))) (* 6.380208333333333 (/ (* (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2) (pow x 4)) (pow -3.75 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (+ 0.375 (* (- (+ (* 0.30246913580246915 (* (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2) (pow x 4))) (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2)) (+ (* 0.7777777777777778 (* (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2) (pow x 2))) (* 6.380208333333333 (/ (* (pow (exp (* 1/3 (+ (* 2 (log x)) (log (- 3.75))))) 2) (pow x 4)) (pow -3.75 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (78 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (+ 0.375 (* (- (+ (* (* (* (pow x (* 1/3 2)) (pow (- 3.75) 1/3)) (* (pow x (* 1/3 2)) (pow (- 3.75) 1/3))) (- (* 0.30246913580246915 (pow x 4)) (* 0.7777777777777778 (* x x)))) (* (* (pow x (* 1/3 2)) (pow (- 3.75) 1/3)) (* (pow x (* 1/3 2)) (pow (- 3.75) 1/3)))) (* (* (/ (* (pow x (* 1/3 2)) (pow (- 3.75) 1/3)) -3.75) (/ (* (pow x (* 1/3 2)) (pow (- 3.75) 1/3)) -3.75)) (* 6.380208333333333 (pow x 4)))) (cbrt (- (* 4.375 (pow x 4)) (* (* 3.75 x) x)))))
* * * * [misc]progress:  [ 83 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (* (pow (pow (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) 2) 1/3) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (+ 0.375 (* (pow (pow (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) 2) 1/3) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (96 enodes)
* * [misc]simplify:  iters left: 2 (279 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (* (- (* 4.375 (pow x 4)) (* (* x 3.75) x)) (- (* 4.375 (pow x 4)) (* (* x 3.75) x)))) (cbrt (- (* 4.375 (pow x 4)) (* (* x 3.75) x)))) 0.375)
* * * * [misc]progress:  [ 84 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ 0.375 (* (pow (pow (- (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) (* 3.75 (exp (* 2 (- (log -1) (log (/ -1 x))))))) 2) 1/3) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>
* [enter]simplify:  Simplifying (+ 0.375 (* (pow (pow (- (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) (* 3.75 (exp (* 2 (- (log -1) (log (/ -1 x))))))) 2) 1/3) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (206 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (* (- (* (pow x 4) 4.375) (* (* x x) 3.75)) (- (* (pow x 4) 4.375) (* (* x x) 3.75)))) (cbrt (- (* (pow x 4) 4.375) (* (* x x) 3.75)))) 0.375)
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (* (* (cbrt (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) (cbrt (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))) (cbrt (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))> #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (* (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))> #<alt-delta (Î» (x) (+ 0.375 (+ (* (* (* x 4.375) x) (* x x)) (* (* x -3.75) x))))> #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (log (pow (exp x) (+ (* (* x 4.375) (* x x)) (* -3.75 x))))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))> #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (/ (- (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (* (* (* x -3.75) x) (* (* x -3.75) x))) (- (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))> #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (* (* (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) (cbrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))> #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (* (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (sqrt (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))))> #<alt-delta (Î» (x) (log (exp (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))> #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (log (exp (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))))> #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (/ (- (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (* (* (* x -3.75) x) (* (* x -3.75) x))) (- (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))))))))> #<alt-delta (Î» (x) (+ 0.375 (log (/ (exp (* 4.375 (pow x 4))) (exp (* 3.75 (pow x 2)))))))> #<alt-delta (Î» (x) (+ 0.375 (* (* (* (cbrt (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))) (cbrt (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))> #<alt-delta (Î» (x) (+ 0.375 (* (* (* (cbrt (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (* (cbrt (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))> #<alt-delta (Î» (x) (log (exp (+ 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))> #<alt-delta (Î» (x) (+ 0.375 (/ (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2)))) (+ (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))> #<alt-delta (Î» (x) (+ 0.375 (* (/ (* (cbrt (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2))))) (cbrt (- (* (* 4.375 (pow x 4)) (* 4.375 (pow x 4))) (* (* 3.75 (pow x 2)) (* 3.75 (pow x 2)))))) (* (cbrt (+ (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (+ (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))> #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) 3)) (+ (* 0.375 0.375) (- (* (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (* 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))))> #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (/ (+ (pow (* (* x 4.375) (pow x 3)) 3) (pow (* (* x -3.75) x) 3)) (- (* (* x (* -3.75 x)) (* x (* -3.75 x))) (* (* (* (* x x) (* x 4.375)) (* x x)) (- (* -3.75 x) (* (* x x) (* x 4.375))))))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))> #<alt-delta (Î» (x) (+ 0.375 (/ (- (* (* (* x 4.375) (pow x 3)) (* (* x 4.375) (pow x 3))) (* (* (* x -3.75) x) (* (* x -3.75) x))) (- (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))> #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (/ (+ (pow (* (* x 4.375) (pow x 3)) 3) (pow (* (* x -3.75) x) 3)) (- (* (* x (* -3.75 x)) (* x (* -3.75 x))) (* (* (* (* x x) (* x 4.375)) (* x x)) (- (* -3.75 x) (* (* x x) (* x 4.375)))))) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))> #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (log (pow (exp x) (+ (* (* x 4.375) (* x x)) (* -3.75 x)))))))))> #<alt-delta (Î» (x) (+ 0.375 (log (pow (exp x) (+ (* (* x 4.375) (* x x)) (* -3.75 x))))))> #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (/ (+ (pow (* (* x 4.375) (pow x 3)) 3) (pow (* (* x -3.75) x) 3)) (- (* (* x (* -3.75 x)) (* x (* -3.75 x))) (* (* (* (* x x) (* x 4.375)) (* x x)) (- (* -3.75 x) (* (* x x) (* x 4.375)))))))))))> #<alt-delta (Î» (x) (+ 0.375 (/ (+ (pow (* (* x 4.375) (pow x 3)) 3) (pow (* (* x -3.75) x) 3)) (- (* (* x (* -3.75 x)) (* x (* -3.75 x))) (* (* (* (* x x) (* x 4.375)) (* x x)) (- (* -3.75 x) (* (* x x) (* x 4.375))))))))> #<alt-delta (Î» (x) (/ (+ (pow 0.375 3) (pow (log (pow (exp x) (+ (* (* x 4.375) (* x x)) (* -3.75 x)))) 3)) (+ (* 0.375 0.375) (- (* (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x))) (* 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))))))> #<alt-delta (Î» (x) (/ (- (* 0.375 0.375) (* (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))) (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (- 0.375 (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))))> #<alt-delta (Î» (x) (+ 0.375 (- (* 4.375 (pow x 4)) (* (sqrt (* 3.75 (pow x 2))) (sqrt (* 3.75 (pow x 2)))))))> #<alt-delta (Î» (x) (+ 0.375 (* (cbrt (* (- (* (pow x 4) 4.375) (* (* 3.75 x) x)) (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))> #<alt-delta (Î» (x) (+ 0.375 (* (* (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2))))) (cbrt (cbrt (pow (- (* (pow x 4) 4.375) (* (* 3.75 x) x)) 3))))))> #<alt-delta (Î» (x) (+ 0.375 (/ (- (pow (* 4.375 (pow x 4)) 3) (pow (* 3.75 (pow x 2)) 3)) (+ (* (+ (* x (* 3.75 x)) (* (pow x 4) 4.375)) (* x (* 3.75 x))) (* (* (pow x 4) 4.375) (* (pow x 4) 4.375))))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x))) +nan.0)) , with alts (#<alt-delta (Î» (x) (+ 0.375 (* (cbrt (* (- (* (pow x 4) 4.375) (* (* 3.75 x) x)) (- (* (pow x 4) 4.375) (* (* 3.75 x) x)))) (cbrt (- (* 4.375 (pow x 4)) (* 3.75 (pow x 2)))))))>)
* [enter]simplify:  Simplifying (- (* (pow x 4) 4.375) (* (* 3.75 x) x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (- (* (pow x 4) 4.375) (* x (* 3.75 x)))
* [exit]simplify:  Simplified to (- (* (pow x 4) 4.375) (* x (* 3.75 x)))
* [enter]simplify:  Simplifying (- (* (pow x 4) 4.375) (* (* 3.75 x) x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (- (* (pow x 4) 4.375) (* x (* 3.75 x)))
* [exit]simplify:  Simplified to (- (* (pow x 4) 4.375) (* x (* 3.75 x)))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
