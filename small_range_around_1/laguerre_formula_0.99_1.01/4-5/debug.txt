* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ 1.0 (* -5.0 x)) (* 5.0 (* x x))) (* -1.666667 (* (* x x) x))) (* 0.208333 (* (* (* x x) x) x))) (* -0.008333 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (446 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -5.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -5.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.008333 x) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* -0.008333 x) in x
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (* (* x x) (+ (* -1.666667 x) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 x) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 x) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -5.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -5.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.008333 x) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* -0.008333 x) in x
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (* (* x x) (+ (* -1.666667 x) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 x) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 x) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]backup-simplify:  Simplify (* 0 -5.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.008333 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.208333) into 0.208333
* [misc]backup-simplify:  Simplify (* 0 0.208333) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -1.666667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (* 0 5.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -5.0)) into (- 5.0)
* [misc]backup-simplify:  Simplify (+ (- 5.0) 0) into (- 5.0)
* [misc]backup-simplify:  Simplify (+ (* -0.008333 1) (* 0 0)) into (- 0.008333)
* [misc]backup-simplify:  Simplify (+ (- 0.008333) 0) into (- 0.008333)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 (- 0.008333)) (* 0 0.208333)) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 1) (* 0 0)) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (- 1.666667) 0) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 (- 1.666667)) (* 0 5.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (- 5.0) 0) into (- 5.0)
* [misc]backup-simplify:  Simplify (- 5.0) into (- 5.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -5.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 (- 0.008333)) (* 0 0.208333))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 (- 1.666667)) (* 1 5.0))) into 5.0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]backup-simplify:  Simplify (+ (* 5.0 (pow x 2)) (+ (* (- 5.0) x) 1.0)) into (- (+ (* 5.0 (pow x 2)) 1.0) (* 5.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (/ 1 x) -5.0) 1.0) (+ (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.008333 (/ 1 x)) 0.208333)) (* (* (/ 1 x) (/ 1 x)) (+ (* -1.666667 (/ 1 x)) 5.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -5.0) 1.0) (+ (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.008333 (/ 1 x)) 0.208333)) (* (* (/ 1 x) (/ 1 x)) (+ (* -1.666667 (/ 1 x)) 5.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -5.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.008333 (/ 1 x)) 0.208333)) (* (* (/ 1 x) (/ 1 x)) (+ (* -1.666667 (/ 1 x)) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.008333 (/ 1 x)) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.008333 (/ 1 x)) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* -0.008333 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (+ (* -1.666667 (/ 1 x)) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 (/ 1 x)) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -5.0) 1.0) (+ (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.008333 (/ 1 x)) 0.208333)) (* (* (/ 1 x) (/ 1 x)) (+ (* -1.666667 (/ 1 x)) 5.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -5.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.008333 (/ 1 x)) 0.208333)) (* (* (/ 1 x) (/ 1 x)) (+ (* -1.666667 (/ 1 x)) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.008333 (/ 1 x)) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.008333 (/ 1 x)) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* -0.008333 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (+ (* -1.666667 (/ 1 x)) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 (/ 1 x)) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.008333 1) into -0.008333
* [misc]backup-simplify:  Simplify (+ -0.008333 0) into (- 0.008333)
* [misc]backup-simplify:  Simplify (* 1 (- 0.008333)) into -0.008333
* [misc]backup-simplify:  Simplify (+ -0.008333 0) into (- 0.008333)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.008333)) into (- 0.008333)
* [misc]backup-simplify:  Simplify (- 0.008333) into (- 0.008333)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.208333) into 0.208333
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0.208333) (* 0 (- 0.008333))) into 0.208333
* [misc]backup-simplify:  Simplify (+ 0.208333 0) into 0.208333
* [misc]backup-simplify:  Simplify (+ 0 0.208333) into 0.208333
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0.208333) (* 0 (- 0.008333)))) into 0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -1.666667 1) into -1.666667
* [misc]backup-simplify:  Simplify (+ -1.666667 0) into (- 1.666667)
* [misc]backup-simplify:  Simplify (* 1 (- 1.666667)) into -1.666667
* [misc]backup-simplify:  Simplify (+ 0 -1.666667) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ 0 (- 1.666667)) into (- 1.666667)
* [misc]backup-simplify:  Simplify (- 1.666667) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (* (- 1.666667) (pow (/ 1 (/ 1 x)) 3)) (+ (* 0.208333 (pow (/ 1 (/ 1 x)) 4)) (* (- 0.008333) (pow (/ 1 (/ 1 x)) 5)))) into (- (* 0.208333 (pow x 4)) (+ (* 1.666667 (pow x 3)) (* 0.008333 (pow x 5))))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -5.0) 1.0) (+ (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.008333 (/ 1 (- x))) 0.208333)) (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -1.666667 (/ 1 (- x))) 5.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -5.0) 1.0) (+ (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.008333 (/ 1 (- x))) 0.208333)) (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -1.666667 (/ 1 (- x))) 5.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -5.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.008333 (/ 1 (- x))) 0.208333)) (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -1.666667 (/ 1 (- x))) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.008333 (/ 1 (- x))) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.008333 (/ 1 (- x))) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* -0.008333 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -1.666667 (/ 1 (- x))) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 (/ 1 (- x))) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -5.0) 1.0) (+ (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.008333 (/ 1 (- x))) 0.208333)) (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -1.666667 (/ 1 (- x))) 5.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -5.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.008333 (/ 1 (- x))) 0.208333)) (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -1.666667 (/ 1 (- x))) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.008333 (/ 1 (- x))) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.008333 (/ 1 (- x))) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* -0.008333 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -1.666667 (/ 1 (- x))) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 (/ 1 (- x))) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.008333 -1) into 0.008333
* [misc]backup-simplify:  Simplify (+ 0.008333 0) into 0.008333
* [misc]backup-simplify:  Simplify (* 1 0.008333) into 0.008333
* [misc]backup-simplify:  Simplify (+ 0.008333 0) into 0.008333
* [misc]backup-simplify:  Simplify (+ 0 0.008333) into 0.008333
* [misc]backup-simplify:  Simplify 0.008333 into 0.008333
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.208333) into 0.208333
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0.208333) (* 0 0.008333)) into 0.208333
* [misc]backup-simplify:  Simplify (+ 0.208333 0) into 0.208333
* [misc]backup-simplify:  Simplify (+ 0 0.208333) into 0.208333
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0.208333) (* 0 0.008333))) into 0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1.666667 -1) into 1.666667
* [misc]backup-simplify:  Simplify (+ 1.666667 0) into 1.666667
* [misc]backup-simplify:  Simplify (* 1 1.666667) into 1.666667
* [misc]backup-simplify:  Simplify (+ 0 1.666667) into 1.666667
* [misc]backup-simplify:  Simplify (+ 0 1.666667) into 1.666667
* [misc]backup-simplify:  Simplify 1.666667 into 1.666667
* [misc]backup-simplify:  Simplify (+ (* 1.666667 (pow (/ 1 (/ 1 (- x))) 3)) (+ (* 0.208333 (pow (/ 1 (/ 1 (- x))) 4)) (* 0.008333 (pow (/ 1 (/ 1 (- x))) 5)))) into (- (* 0.208333 (pow x 4)) (+ (* 1.666667 (pow x 3)) (* 0.008333 (pow x 5))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.008333 x) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* -0.008333 x) in x
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.008333 x) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* -0.008333 x) in x
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.008333 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.208333) into 0.208333
* [misc]backup-simplify:  Simplify (* 0 0.208333) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 1) (* 0 0)) into (- 0.008333)
* [misc]backup-simplify:  Simplify (+ (- 0.008333) 0) into (- 0.008333)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 (- 0.008333)) (* 0 0.208333)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 (- 0.008333)) (* 0 0.208333))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.008333)) (* 0 0.208333)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.008333)) (* 1 0.208333))))) into 0.208333
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 (- 0.008333)) (* 0 0.208333)))))) into (- 0.008333)
* [misc]backup-simplify:  Simplify (- 0.008333) into (- 0.008333)
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 (- 0.008333)) (* 0 0.208333))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 (- 0.008333)) (* 0 0.208333)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.008333)) (* 0 0.208333))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.008333)) (* 0 0.208333)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.008333)) (* 0 0.208333))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 0.008333)) (* 0 0.208333)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.008333) (pow x 5)) (* 0.208333 (pow x 4))) into (- (* 0.208333 (pow x 4)) (* 0.008333 (pow x 5)))
* [misc]approximate:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.008333 (/ 1 x)) 0.208333)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.008333 (/ 1 x)) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.008333 (/ 1 x)) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* -0.008333 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ (* -0.008333 (/ 1 x)) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.008333 (/ 1 x)) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* -0.008333 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.008333 1) into -0.008333
* [misc]backup-simplify:  Simplify (+ -0.008333 0) into (- 0.008333)
* [misc]backup-simplify:  Simplify (* 1 (- 0.008333)) into -0.008333
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.208333) into 0.208333
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0.208333) (* 0 (- 0.008333))) into 0.208333
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0.208333) (* 0 (- 0.008333)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0.208333) (* 0 (- 0.008333))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.208333) (* 0 (- 0.008333)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.208333) (* 0 (- 0.008333))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.208333) (* 0 (- 0.008333)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.208333) (* 0 (- 0.008333))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 (pow (/ 1 (/ 1 x)) 4)) (* -0.008333 (pow (/ 1 (/ 1 x)) 5))) into (- (* 0.208333 (pow x 4)) (* 0.008333 (pow x 5)))
* [misc]approximate:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.008333 (/ 1 (- x))) 0.208333)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.008333 (/ 1 (- x))) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.008333 (/ 1 (- x))) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* -0.008333 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -0.008333 (/ 1 (- x))) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -0.008333 (/ 1 (- x))) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* -0.008333 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.008333 -1) into 0.008333
* [misc]backup-simplify:  Simplify (+ 0.008333 0) into 0.008333
* [misc]backup-simplify:  Simplify (* 1 0.008333) into 0.008333
* [misc]backup-simplify:  Simplify 0.008333 into 0.008333
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.208333) into 0.208333
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0.208333) (* 0 0.008333)) into 0.208333
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0.208333) (* 0 0.008333))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0.208333) (* 0 0.008333)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.208333) (* 0 0.008333))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.208333) (* 0 0.008333)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.208333) (* 0 0.008333))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.008333 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0.208333) (* 0 0.008333)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 (pow (/ 1 (/ 1 (- x))) 4)) (* 0.008333 (pow (/ 1 (/ 1 (- x))) 5))) into (- (* 0.208333 (pow x 4)) (* 0.008333 (pow x 5)))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (+ (* -1.666667 x) 5.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (+ (* -1.666667 x) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 x) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 x) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (+ (* -1.666667 x) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 x) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 x) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -1.666667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (* 0 5.0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 1) (* 0 0)) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (- 1.666667) 0) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 (- 1.666667)) (* 0 5.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 (- 1.666667)) (* 1 5.0))) into 5.0
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 (- 1.666667)) (* 0 5.0)))) into (- 1.666667)
* [misc]backup-simplify:  Simplify (- 1.666667) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 (- 1.666667)) (* 0 5.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 (- 1.666667)) (* 0 5.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1.666667)) (* 0 5.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1.666667)) (* 0 5.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1.666667)) (* 0 5.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1.666667)) (* 0 5.0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1.666667) (pow x 3)) (* 5.0 (pow x 2))) into (- (* 5.0 (pow x 2)) (* 1.666667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (+ (* -1.666667 (/ 1 x)) 5.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (+ (* -1.666667 (/ 1 x)) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 (/ 1 x)) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (+ (* -1.666667 (/ 1 x)) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 (/ 1 x)) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -1.666667 1) into -1.666667
* [misc]backup-simplify:  Simplify (+ -1.666667 0) into (- 1.666667)
* [misc]backup-simplify:  Simplify (* 1 (- 1.666667)) into -1.666667
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 5.0) (* 0 (- 1.666667))) into 5.0
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 5.0) (* 0 (- 1.666667)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 5.0) (* 0 (- 1.666667))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 5.0) (* 0 (- 1.666667)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 5.0) (* 0 (- 1.666667))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 5.0) (* 0 (- 1.666667)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 5.0) (* 0 (- 1.666667))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 (pow (/ 1 (/ 1 x)) 2)) (* -1.666667 (pow (/ 1 (/ 1 x)) 3))) into (- (* 5.0 (pow x 2)) (* 1.666667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -1.666667 (/ 1 (- x))) 5.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -1.666667 (/ 1 (- x))) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 (/ 1 (- x))) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -1.666667 (/ 1 (- x))) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 (/ 1 (- x))) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1.666667 -1) into 1.666667
* [misc]backup-simplify:  Simplify (+ 1.666667 0) into 1.666667
* [misc]backup-simplify:  Simplify (* 1 1.666667) into 1.666667
* [misc]backup-simplify:  Simplify 1.666667 into 1.666667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 5.0) (* 0 1.666667)) into 5.0
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 5.0) (* 0 1.666667))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 5.0) (* 0 1.666667)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 5.0) (* 0 1.666667))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 5.0) (* 0 1.666667)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 5.0) (* 0 1.666667))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 5.0) (* 0 1.666667)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 (pow (/ 1 (/ 1 (- x))) 2)) (* 1.666667 (pow (/ 1 (/ 1 (- x))) 3))) into (- (* 5.0 (pow x 2)) (* 1.666667 (pow x 3)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (+ (* x -5.0) 1.0)) (* (exp (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (exp (* (* x x) (+ (* -1.666667 x) 5.0)))))))>
* [enter]simplify:  Simplifying (* (exp (+ (* x -5.0) 1.0)) (* (exp (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (exp (* (* x x) (+ (* -1.666667 x) 5.0)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (190 enodes)
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ 5.0 (* -1.666667 x))) (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)) (exp (+ 1.0 (* x -5.0)))))
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ 5.0 (* -1.666667 x))) (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)) (exp (+ 1.0 (* x -5.0)))))
* * * * [misc]progress:  [ 2 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (+ (* x -5.0) 1.0)) (exp (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))))>
* [enter]simplify:  Simplifying (* (exp (+ (* x -5.0) 1.0)) (exp (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (195 enodes)
* [exit]simplify:  Simplified to (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))
* [exit]simplify:  Simplified to (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))
* * * * [misc]progress:  [ 3 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))) 1))>
* * * * [misc]progress:  [ 4 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))))>
* [enter]simplify:  Simplifying (log (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* * [misc]simplify:  iters left: 3 (491 enodes)
* [exit]simplify:  Simplified to (log (+ (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) 1.0) (+ (* x -5.0) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))))))
* [exit]simplify:  Simplified to (log (+ (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) 1.0) (+ (* x -5.0) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))))))
* * * * [misc]progress:  [ 5 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))))>
* [enter]simplify:  Simplifying (exp (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ 5.0 (* -1.666667 x)))) (exp (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ 5.0 (* -1.666667 x)))) (exp (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 6 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))) (cbrt (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))) (cbrt (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))) (cbrt (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (172 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ 1.0 (* x -5.0)) (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x)))))) (cbrt (+ (+ 1.0 (* x -5.0)) (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ 1.0 (* x -5.0)) (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x)))))) (cbrt (+ (+ 1.0 (* x -5.0)) (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x)))))))
* [enter]simplify:  Simplifying (cbrt (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* * [misc]simplify:  iters left: 3 (491 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) 1.0) (+ (* x -5.0) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))))))
* [exit]simplify:  Simplified to (cbrt (+ (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) 1.0) (+ (* x -5.0) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))))))
* * * * [misc]progress:  [ 7 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (68 enodes)
* * [misc]simplify:  iters left: 4 (304 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ 1.0 (* x -5.0)) (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))))) 3)
* [exit]simplify:  Simplified to (pow (+ (+ 1.0 (* x -5.0)) (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))))) 3)
* * * * [misc]progress:  [ 8 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))) (sqrt (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* * [misc]simplify:  iters left: 3 (491 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) 1.0) (+ (* x -5.0) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))))))
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) 1.0) (+ (* x -5.0) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))))))
* [enter]simplify:  Simplifying (sqrt (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* * [misc]simplify:  iters left: 3 (491 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) 1.0) (+ (* x -5.0) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))))))
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) 1.0) (+ (* x -5.0) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))))))
* * * * [misc]progress:  [ 9 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0))))) (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (+ (* (* (* (* x x) (* x x)) (+ (pow (* -0.008333 x) 3) (pow 0.208333 3))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0)))) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (* (* x x) (+ (pow (* -1.666667 x) 3) (pow 5.0 3))))))) (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0))))) (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (+ (* (* (* (* x x) (* x x)) (+ (pow (* -0.008333 x) 3) (pow 0.208333 3))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0)))) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (* (* x x) (+ (pow (* -1.666667 x) 3) (pow 5.0 3)))))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (166 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* 5.0 (- 5.0 (* -1.666667 x))) (* (* -1.666667 x) (* -1.666667 x))) (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (+ (* (- 0.208333 (* x -0.008333)) 0.208333) (* (* x -0.008333) (* x -0.008333))))) (* (+ (* (* x -5.0) (* x -5.0)) (* (- 1.0 (* x -5.0)) 1.0)) (+ (* (+ (* (- 0.208333 (* x -0.008333)) 0.208333) (* (* x -0.008333) (* x -0.008333))) (+ (* (* (* x x) (* -1.666667 x)) (* (* -1.666667 x) (* -1.666667 x))) (* (pow 5.0 3) (* x x)))) (* (+ (* 5.0 (- 5.0 (* -1.666667 x))) (* (* -1.666667 x) (* -1.666667 x))) (* (+ (pow (* x -0.008333) 3) (pow 0.208333 3)) (* (* x x) (* x x)))))))
* [exit]simplify:  Simplified to (+ (* (+ (* 5.0 (- 5.0 (* -1.666667 x))) (* (* -1.666667 x) (* -1.666667 x))) (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (+ (* (- 0.208333 (* x -0.008333)) 0.208333) (* (* x -0.008333) (* x -0.008333))))) (* (+ (* (* x -5.0) (* x -5.0)) (* (- 1.0 (* x -5.0)) 1.0)) (+ (* (+ (* (- 0.208333 (* x -0.008333)) 0.208333) (* (* x -0.008333) (* x -0.008333))) (+ (* (* (* x x) (* -1.666667 x)) (* (* -1.666667 x) (* -1.666667 x))) (* (pow 5.0 3) (* x x)))) (* (+ (* 5.0 (- 5.0 (* -1.666667 x))) (* (* -1.666667 x) (* -1.666667 x))) (* (+ (pow (* x -0.008333) 3) (pow 0.208333 3)) (* (* x x) (* x x)))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (82 enodes)
* * [misc]simplify:  iters left: 4 (266 enodes)
* [exit]simplify:  Simplified to (* (+ (* (- 0.208333 (* -0.008333 x)) 0.208333) (* (* -0.008333 x) (* -0.008333 x))) (* (+ (* (* x -5.0) (* x -5.0)) (* (- 1.0 (* x -5.0)) 1.0)) (- (* 5.0 5.0) (* (* x -1.666667) (- 5.0 (* x -1.666667))))))
* [exit]simplify:  Simplified to (* (+ (* (- 0.208333 (* -0.008333 x)) 0.208333) (* (* -0.008333 x) (* -0.008333 x))) (* (+ (* (* x -5.0) (* x -5.0)) (* (- 1.0 (* x -5.0)) 1.0)) (- (* 5.0 5.0) (* (* x -1.666667) (- 5.0 (* x -1.666667))))))
* * * * [misc]progress:  [ 10 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (- (* -1.666667 x) 5.0))) (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (+ (* (* (* (* x x) (* x x)) (+ (pow (* -0.008333 x) 3) (pow 0.208333 3))) (- (* -1.666667 x) 5.0)) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (* (* x x) (- (* (* -1.666667 x) (* -1.666667 x)) (* 5.0 5.0))))))) (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (- (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (- (* -1.666667 x) 5.0))) (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (+ (* (* (* (* x x) (* x x)) (+ (pow (* -0.008333 x) 3) (pow 0.208333 3))) (- (* -1.666667 x) 5.0)) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (* (* x x) (- (* (* -1.666667 x) (* -1.666667 x)) (* 5.0 5.0)))))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (133 enodes)
* * [misc]simplify:  iters left: 4 (471 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* (- 1.0 (* x -5.0)) 1.0) (* (* x -5.0) (* x -5.0))) (* (* (* (* x x) (* x x)) (- (* -1.666667 x) 5.0)) (+ (pow 0.208333 3) (pow (* x -0.008333) 3)))) (* (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (- (* -1.666667 x) 5.0)) (- (* 0.208333 0.208333) (* (* x -0.008333) (- 0.208333 (* x -0.008333)))))) (* (* (- (* 0.208333 0.208333) (* (* x -0.008333) (- 0.208333 (* x -0.008333)))) (* (* (- (* -1.666667 x) 5.0) (* x x)) (+ 5.0 (* -1.666667 x)))) (+ (* (- 1.0 (* x -5.0)) 1.0) (* (* x -5.0) (* x -5.0)))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* (- 1.0 (* x -5.0)) 1.0) (* (* x -5.0) (* x -5.0))) (* (* (* (* x x) (* x x)) (- (* -1.666667 x) 5.0)) (+ (pow 0.208333 3) (pow (* x -0.008333) 3)))) (* (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (- (* -1.666667 x) 5.0)) (- (* 0.208333 0.208333) (* (* x -0.008333) (- 0.208333 (* x -0.008333)))))) (* (* (- (* 0.208333 0.208333) (* (* x -0.008333) (- 0.208333 (* x -0.008333)))) (* (* (- (* -1.666667 x) 5.0) (* x x)) (+ 5.0 (* -1.666667 x)))) (+ (* (- 1.0 (* x -5.0)) 1.0) (* (* x -5.0) (* x -5.0)))))
* [enter]simplify:  Simplifying (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (- (* -1.666667 x) 5.0)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* [exit]simplify:  Simplified to (* (+ (* 0.208333 (- 0.208333 (* -0.008333 x))) (* (* -0.008333 x) (* -0.008333 x))) (* (- (* x -1.666667) 5.0) (+ (* (* x -5.0) (* x -5.0)) (* (- 1.0 (* x -5.0)) 1.0))))
* [exit]simplify:  Simplified to (* (+ (* 0.208333 (- 0.208333 (* -0.008333 x))) (* (* -0.008333 x) (* -0.008333 x))) (* (- (* x -1.666667) 5.0) (+ (* (* x -5.0) (* x -5.0)) (* (- 1.0 (* x -5.0)) 1.0))))
* * * * [misc]progress:  [ 11 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (* (- (* -0.008333 x) 0.208333) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0))))) (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (+ (* (* (* (* x x) (* x x)) (- (* (* -0.008333 x) (* -0.008333 x)) (* 0.208333 0.208333))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0)))) (* (- (* -0.008333 x) 0.208333) (* (* x x) (+ (pow (* -1.666667 x) 3) (pow 5.0 3))))))) (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (* (- (* -0.008333 x) 0.208333) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (* (- (* -0.008333 x) 0.208333) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0))))) (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (+ (* (* (* (* x x) (* x x)) (- (* (* -0.008333 x) (* -0.008333 x)) (* 0.208333 0.208333))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0)))) (* (- (* -0.008333 x) 0.208333) (* (* x x) (+ (pow (* -1.666667 x) 3) (pow 5.0 3)))))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (145 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (- 5.0 (* -1.666667 x)) 5.0) (* (* -1.666667 x) (* -1.666667 x))) (* (* (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333)) (- (* x -0.008333) 0.208333)) (+ (* 1.0 (- 1.0 (* x -5.0))) (* (* x -5.0) (* x -5.0))))) (+ (* (* (* (* x x) (- (* x -0.008333) 0.208333)) (+ (pow (* -1.666667 x) 3) (pow 5.0 3))) (+ (* 1.0 (- 1.0 (* x -5.0))) (* (* x -5.0) (* x -5.0)))) (* (* (- (* x -0.008333) 0.208333) (+ (pow (* x -5.0) 3) (pow 1.0 3))) (+ (* (- 5.0 (* -1.666667 x)) 5.0) (* (* -1.666667 x) (* -1.666667 x))))))
* [exit]simplify:  Simplified to (+ (* (+ (* (- 5.0 (* -1.666667 x)) 5.0) (* (* -1.666667 x) (* -1.666667 x))) (* (* (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333)) (- (* x -0.008333) 0.208333)) (+ (* 1.0 (- 1.0 (* x -5.0))) (* (* x -5.0) (* x -5.0))))) (+ (* (* (* (* x x) (- (* x -0.008333) 0.208333)) (+ (pow (* -1.666667 x) 3) (pow 5.0 3))) (+ (* 1.0 (- 1.0 (* x -5.0))) (* (* x -5.0) (* x -5.0)))) (* (* (- (* x -0.008333) 0.208333) (+ (pow (* x -5.0) 3) (pow 1.0 3))) (+ (* (- 5.0 (* -1.666667 x)) 5.0) (* (* -1.666667 x) (* -1.666667 x))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (* (- (* -0.008333 x) 0.208333) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (212 enodes)
* [exit]simplify:  Simplified to (* (- (* -0.008333 x) 0.208333) (* (+ (* (* -1.666667 x) (* -1.666667 x)) (* 5.0 (- 5.0 (* -1.666667 x)))) (+ (* (* x -5.0) (* x -5.0)) (* 1.0 (- 1.0 (* x -5.0))))))
* [exit]simplify:  Simplified to (* (- (* -0.008333 x) 0.208333) (* (+ (* (* -1.666667 x) (* -1.666667 x)) (* 5.0 (- 5.0 (* -1.666667 x)))) (+ (* (* x -5.0) (* x -5.0)) (* 1.0 (- 1.0 (* x -5.0))))))
* * * * [misc]progress:  [ 12 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (* (- (* -0.008333 x) 0.208333) (- (* -1.666667 x) 5.0))) (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (+ (* (* (* (* x x) (* x x)) (- (* (* -0.008333 x) (* -0.008333 x)) (* 0.208333 0.208333))) (- (* -1.666667 x) 5.0)) (* (- (* -0.008333 x) 0.208333) (* (* x x) (- (* (* -1.666667 x) (* -1.666667 x)) (* 5.0 5.0))))))) (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (* (- (* -0.008333 x) 0.208333) (- (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (* (- (* -0.008333 x) 0.208333) (- (* -1.666667 x) 5.0))) (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (+ (* (* (* (* x x) (* x x)) (- (* (* -0.008333 x) (* -0.008333 x)) (* 0.208333 0.208333))) (- (* -1.666667 x) 5.0)) (* (- (* -0.008333 x) 0.208333) (* (* x x) (- (* (* -1.666667 x) (* -1.666667 x)) (* 5.0 5.0)))))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* * [misc]simplify:  iters left: 4 (388 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) (* (- (* x -0.008333) 0.208333) (- (* -1.666667 x) 5.0))) (* (* (- (* -1.666667 x) 5.0) (+ 5.0 (* -1.666667 x))) (* (* x x) (- (* x -0.008333) 0.208333)))) (+ (* 1.0 (- 1.0 (* x -5.0))) (* (* x -5.0) (* x -5.0)))) (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (* (- (* x -0.008333) 0.208333) (- (* -1.666667 x) 5.0))))
* [exit]simplify:  Simplified to (+ (* (+ (* (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) (* (- (* x -0.008333) 0.208333) (- (* -1.666667 x) 5.0))) (* (* (- (* -1.666667 x) 5.0) (+ 5.0 (* -1.666667 x))) (* (* x x) (- (* x -0.008333) 0.208333)))) (+ (* 1.0 (- 1.0 (* x -5.0))) (* (* x -5.0) (* x -5.0)))) (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (* (- (* x -0.008333) 0.208333) (- (* -1.666667 x) 5.0))))
* [enter]simplify:  Simplifying (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (* (- (* -0.008333 x) 0.208333) (- (* -1.666667 x) 5.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (499 enodes)
* [exit]simplify:  Simplified to (* (* (- (* -1.666667 x) 5.0) (- (* -0.008333 x) 0.208333)) (- (* 1.0 1.0) (* (* x -5.0) (- 1.0 (* x -5.0)))))
* [exit]simplify:  Simplified to (* (* (- (* -1.666667 x) 5.0) (- (* -0.008333 x) 0.208333)) (- (* 1.0 1.0) (* (* x -5.0) (- 1.0 (* x -5.0)))))
* * * * [misc]progress:  [ 13 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (+ (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (- (* (* (* x x) (+ (* -1.666667 x) 5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))) (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (+ (pow (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) 3) (pow (* (* x x) (+ (* -1.666667 x) 5.0)) 3)))) (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (+ (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (- (* (* (* x x) (+ (* -1.666667 x) 5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (+ (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (- (* (* (* x x) (+ (* -1.666667 x) 5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))) (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (+ (pow (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) 3) (pow (* (* x x) (+ (* -1.666667 x) 5.0)) 3))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (131 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* x -5.0) (* x -5.0)) (* 1.0 (- 1.0 (* x -5.0)))) (+ (pow (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) 3) (pow (* (+ 5.0 (* -1.666667 x)) (* x x)) 3))) (+ (* (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (* (+ 5.0 (* -1.666667 x)) (* x x))) (- (* (+ 5.0 (* -1.666667 x)) (* x x)) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))))) (* (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))))))
* [exit]simplify:  Simplified to (+ (* (+ (* (* x -5.0) (* x -5.0)) (* 1.0 (- 1.0 (* x -5.0)))) (+ (pow (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) 3) (pow (* (+ 5.0 (* -1.666667 x)) (* x x)) 3))) (+ (* (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (* (+ 5.0 (* -1.666667 x)) (* x x))) (- (* (+ 5.0 (* -1.666667 x)) (* x x)) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))))) (* (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (+ (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (- (* (* (* x x) (+ (* -1.666667 x) 5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (95 enodes)
* * [misc]simplify:  iters left: 4 (460 enodes)
* [exit]simplify:  Simplified to (* (- (* (* (* x x) (+ (* x -1.666667) 5.0)) (* (* x x) (+ (* x -1.666667) 5.0))) (* (* (* (* x x) (* x x)) (+ 0.208333 (* x -0.008333))) (- (* (* x x) (+ (* x -1.666667) 5.0)) (* (* (* x x) (* x x)) (+ 0.208333 (* x -0.008333)))))) (+ (* (* x -5.0) (* x -5.0)) (* 1.0 (- 1.0 (* x -5.0)))))
* [exit]simplify:  Simplified to (* (- (* (* (* x x) (+ (* x -1.666667) 5.0)) (* (* x x) (+ (* x -1.666667) 5.0))) (* (* (* (* x x) (* x x)) (+ 0.208333 (* x -0.008333))) (- (* (* x x) (+ (* x -1.666667) 5.0)) (* (* (* x x) (* x x)) (+ 0.208333 (* x -0.008333)))))) (+ (* (* x -5.0) (* x -5.0)) (* 1.0 (- 1.0 (* x -5.0)))))
* * * * [misc]progress:  [ 14 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (- (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))) (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (- (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (* (* (* x x) (+ (* -1.666667 x) 5.0)) (* (* x x) (+ (* -1.666667 x) 5.0)))))) (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (- (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (- (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))) (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (- (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (* (* (* x x) (+ (* -1.666667 x) 5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (98 enodes)
* * [misc]simplify:  iters left: 4 (389 enodes)
* [exit]simplify:  Simplified to (* (- (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) (* (* x x) (+ (* -1.666667 x) 5.0))) (+ (+ (pow (* x -5.0) 3) (pow 1.0 3)) (* (+ (* 1.0 (- 1.0 (* x -5.0))) (* (* x -5.0) (* x -5.0))) (+ (* (* x x) (+ (* -1.666667 x) 5.0)) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))))))
* [exit]simplify:  Simplified to (* (- (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) (* (* x x) (+ (* -1.666667 x) 5.0))) (+ (+ (pow (* x -5.0) 3) (pow 1.0 3)) (* (+ (* 1.0 (- 1.0 (* x -5.0))) (* (* x -5.0) (* x -5.0))) (+ (* (* x x) (+ (* -1.666667 x) 5.0)) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (- (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (217 enodes)
* [exit]simplify:  Simplified to (* (- (* (* (* x x) (* x x)) (+ 0.208333 (* x -0.008333))) (* (+ 5.0 (* -1.666667 x)) (* x x))) (+ (* (* x -5.0) (* x -5.0)) (* (- 1.0 (* x -5.0)) 1.0)))
* [exit]simplify:  Simplified to (* (- (* (* (* x x) (* x x)) (+ 0.208333 (* x -0.008333))) (* (+ 5.0 (* -1.666667 x)) (* x x))) (+ (* (* x -5.0) (* x -5.0)) (* (- 1.0 (* x -5.0)) 1.0)))
* * * * [misc]progress:  [ 15 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -5.0) (* x -5.0)) (* 1.0 1.0)) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0))))) (* (- (* x -5.0) 1.0) (+ (* (* (* (* x x) (* x x)) (+ (pow (* -0.008333 x) 3) (pow 0.208333 3))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0)))) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (* (* x x) (+ (pow (* -1.666667 x) 3) (pow 5.0 3))))))) (* (- (* x -5.0) 1.0) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0)))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -5.0) (* x -5.0)) (* 1.0 1.0)) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0))))) (* (- (* x -5.0) 1.0) (+ (* (* (* (* x x) (* x x)) (+ (pow (* -0.008333 x) 3) (pow 0.208333 3))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0)))) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (* (* x x) (+ (pow (* -1.666667 x) 3) (pow 5.0 3)))))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (151 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* 0.208333 (- 0.208333 (* -0.008333 x))) (* (* -0.008333 x) (* -0.008333 x))) (* (+ (* (- 5.0 (* -1.666667 x)) 5.0) (* (* -1.666667 x) (* -1.666667 x))) (- (* (* x -5.0) (* x -5.0)) (* 1.0 1.0)))) (* (- (* x -5.0) 1.0) (+ (* (* (* (* x x) (* x x)) (+ (pow 0.208333 3) (pow (* -0.008333 x) 3))) (+ (* (- 5.0 (* -1.666667 x)) 5.0) (* (* -1.666667 x) (* -1.666667 x)))) (* (+ (* (* (* -1.666667 x) (* -1.666667 x)) (* (* -1.666667 x) (* x x))) (* (pow 5.0 3) (* x x))) (+ (* 0.208333 (- 0.208333 (* -0.008333 x))) (* (* -0.008333 x) (* -0.008333 x)))))))
* [exit]simplify:  Simplified to (+ (* (+ (* 0.208333 (- 0.208333 (* -0.008333 x))) (* (* -0.008333 x) (* -0.008333 x))) (* (+ (* (- 5.0 (* -1.666667 x)) 5.0) (* (* -1.666667 x) (* -1.666667 x))) (- (* (* x -5.0) (* x -5.0)) (* 1.0 1.0)))) (* (- (* x -5.0) 1.0) (+ (* (* (* (* x x) (* x x)) (+ (pow 0.208333 3) (pow (* -0.008333 x) 3))) (+ (* (- 5.0 (* -1.666667 x)) 5.0) (* (* -1.666667 x) (* -1.666667 x)))) (* (+ (* (* (* -1.666667 x) (* -1.666667 x)) (* (* -1.666667 x) (* x x))) (* (pow 5.0 3) (* x x))) (+ (* 0.208333 (- 0.208333 (* -0.008333 x))) (* (* -0.008333 x) (* -0.008333 x)))))))
* [enter]simplify:  Simplifying (* (- (* x -5.0) 1.0) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (218 enodes)
* [exit]simplify:  Simplified to (* (- (* x -5.0) 1.0) (* (+ (* (* -1.666667 x) (* -1.666667 x)) (* (- 5.0 (* -1.666667 x)) 5.0)) (+ (* (- 0.208333 (* -0.008333 x)) 0.208333) (* (* -0.008333 x) (* -0.008333 x)))))
* [exit]simplify:  Simplified to (* (- (* x -5.0) 1.0) (* (+ (* (* -1.666667 x) (* -1.666667 x)) (* (- 5.0 (* -1.666667 x)) 5.0)) (+ (* (- 0.208333 (* -0.008333 x)) 0.208333) (* (* -0.008333 x) (* -0.008333 x)))))
* * * * [misc]progress:  [ 16 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -5.0) (* x -5.0)) (* 1.0 1.0)) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (- (* -1.666667 x) 5.0))) (* (- (* x -5.0) 1.0) (+ (* (* (* (* x x) (* x x)) (+ (pow (* -0.008333 x) 3) (pow 0.208333 3))) (- (* -1.666667 x) 5.0)) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (* (* x x) (- (* (* -1.666667 x) (* -1.666667 x)) (* 5.0 5.0))))))) (* (- (* x -5.0) 1.0) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (- (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -5.0) (* x -5.0)) (* 1.0 1.0)) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (- (* -1.666667 x) 5.0))) (* (- (* x -5.0) 1.0) (+ (* (* (* (* x x) (* x x)) (+ (pow (* -0.008333 x) 3) (pow 0.208333 3))) (- (* -1.666667 x) 5.0)) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (* (* x x) (- (* (* -1.666667 x) (* -1.666667 x)) (* 5.0 5.0)))))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (118 enodes)
* * [misc]simplify:  iters left: 4 (432 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* 0.208333 (- 0.208333 (* -0.008333 x))) (* (* -0.008333 x) (* -0.008333 x))) (+ (* (* (+ (* -1.666667 x) 5.0) (* x x)) (* (- (* x -5.0) 1.0) (- (* -1.666667 x) 5.0))) (* (* (- (* x -5.0) 1.0) (- (* -1.666667 x) 5.0)) (+ 1.0 (* x -5.0))))) (* (* (- (* x -5.0) 1.0) (* (* x x) (- (* -1.666667 x) 5.0))) (+ (* (* (* x x) (* -0.008333 x)) (* (* -0.008333 x) (* -0.008333 x))) (* (* x x) (pow 0.208333 3)))))
* [exit]simplify:  Simplified to (+ (* (+ (* 0.208333 (- 0.208333 (* -0.008333 x))) (* (* -0.008333 x) (* -0.008333 x))) (+ (* (* (+ (* -1.666667 x) 5.0) (* x x)) (* (- (* x -5.0) 1.0) (- (* -1.666667 x) 5.0))) (* (* (- (* x -5.0) 1.0) (- (* -1.666667 x) 5.0)) (+ 1.0 (* x -5.0))))) (* (* (- (* x -5.0) 1.0) (* (* x x) (- (* -1.666667 x) 5.0))) (+ (* (* (* x x) (* -0.008333 x)) (* (* -0.008333 x) (* -0.008333 x))) (* (* x x) (pow 0.208333 3)))))
* [enter]simplify:  Simplifying (* (- (* x -5.0) 1.0) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (- (* -1.666667 x) 5.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* [exit]simplify:  Simplified to (* (* (- (* -1.666667 x) 5.0) (- (* x -5.0) 1.0)) (+ (* (- 0.208333 (* -0.008333 x)) 0.208333) (* (* -0.008333 x) (* -0.008333 x))))
* [exit]simplify:  Simplified to (* (* (- (* -1.666667 x) 5.0) (- (* x -5.0) 1.0)) (+ (* (- 0.208333 (* -0.008333 x)) 0.208333) (* (* -0.008333 x) (* -0.008333 x))))
* * * * [misc]progress:  [ 17 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -5.0) (* x -5.0)) (* 1.0 1.0)) (* (- (* -0.008333 x) 0.208333) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0))))) (* (- (* x -5.0) 1.0) (+ (* (* (* (* x x) (* x x)) (- (* (* -0.008333 x) (* -0.008333 x)) (* 0.208333 0.208333))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0)))) (* (- (* -0.008333 x) 0.208333) (* (* x x) (+ (pow (* -1.666667 x) 3) (pow 5.0 3))))))) (* (- (* x -5.0) 1.0) (* (- (* -0.008333 x) 0.208333) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0)))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -5.0) (* x -5.0)) (* 1.0 1.0)) (* (- (* -0.008333 x) 0.208333) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0))))) (* (- (* x -5.0) 1.0) (+ (* (* (* (* x x) (* x x)) (- (* (* -0.008333 x) (* -0.008333 x)) (* 0.208333 0.208333))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0)))) (* (- (* -0.008333 x) 0.208333) (* (* x x) (+ (pow (* -1.666667 x) 3) (pow 5.0 3)))))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (130 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (* (* x x) (* x x)) (* (- (* -0.008333 x) 0.208333) (+ (* -0.008333 x) 0.208333))) (+ (* (* x -1.666667) (* x -1.666667)) (* (- 5.0 (* x -1.666667)) 5.0))) (- (* x -5.0) 1.0)) (+ (* (* (- (* x -5.0) 1.0) (- (* -0.008333 x) 0.208333)) (+ (* (* (* x -1.666667) (* x -1.666667)) (* (* x -1.666667) (* x x))) (* (* x x) (pow 5.0 3)))) (* (* (+ 1.0 (* x -5.0)) (* (- (* x -5.0) 1.0) (- (* -0.008333 x) 0.208333))) (+ (* (* x -1.666667) (* x -1.666667)) (* (- 5.0 (* x -1.666667)) 5.0)))))
* [exit]simplify:  Simplified to (+ (* (* (* (* (* x x) (* x x)) (* (- (* -0.008333 x) 0.208333) (+ (* -0.008333 x) 0.208333))) (+ (* (* x -1.666667) (* x -1.666667)) (* (- 5.0 (* x -1.666667)) 5.0))) (- (* x -5.0) 1.0)) (+ (* (* (- (* x -5.0) 1.0) (- (* -0.008333 x) 0.208333)) (+ (* (* (* x -1.666667) (* x -1.666667)) (* (* x -1.666667) (* x x))) (* (* x x) (pow 5.0 3)))) (* (* (+ 1.0 (* x -5.0)) (* (- (* x -5.0) 1.0) (- (* -0.008333 x) 0.208333))) (+ (* (* x -1.666667) (* x -1.666667)) (* (- 5.0 (* x -1.666667)) 5.0)))))
* [enter]simplify:  Simplifying (* (- (* x -5.0) 1.0) (* (- (* -0.008333 x) 0.208333) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (164 enodes)
* [exit]simplify:  Simplified to (* (* (- (* -0.008333 x) 0.208333) (- (* x -5.0) 1.0)) (- (* 5.0 5.0) (* (* -1.666667 x) (- 5.0 (* -1.666667 x)))))
* [exit]simplify:  Simplified to (* (* (- (* -0.008333 x) 0.208333) (- (* x -5.0) 1.0)) (- (* 5.0 5.0) (* (* -1.666667 x) (- 5.0 (* -1.666667 x)))))
* * * * [misc]progress:  [ 18 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -5.0) (* x -5.0)) (* 1.0 1.0)) (* (- (* -0.008333 x) 0.208333) (- (* -1.666667 x) 5.0))) (* (- (* x -5.0) 1.0) (+ (* (* (* (* x x) (* x x)) (- (* (* -0.008333 x) (* -0.008333 x)) (* 0.208333 0.208333))) (- (* -1.666667 x) 5.0)) (* (- (* -0.008333 x) 0.208333) (* (* x x) (- (* (* -1.666667 x) (* -1.666667 x)) (* 5.0 5.0))))))) (* (- (* x -5.0) 1.0) (* (- (* -0.008333 x) 0.208333) (- (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -5.0) (* x -5.0)) (* 1.0 1.0)) (* (- (* -0.008333 x) 0.208333) (- (* -1.666667 x) 5.0))) (* (- (* x -5.0) 1.0) (+ (* (* (* (* x x) (* x x)) (- (* (* -0.008333 x) (* -0.008333 x)) (* 0.208333 0.208333))) (- (* -1.666667 x) 5.0)) (* (- (* -0.008333 x) 0.208333) (* (* x x) (- (* (* -1.666667 x) (* -1.666667 x)) (* 5.0 5.0)))))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (95 enodes)
* * [misc]simplify:  iters left: 4 (348 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- (* x -1.666667) 5.0) (- (* x -5.0) 1.0)) (* (* (* (* x x) (* x x)) (- (* -0.008333 x) 0.208333)) (+ (* -0.008333 x) 0.208333))) (* (- (* -0.008333 x) 0.208333) (+ (* (* (* x x) (+ 5.0 (* x -1.666667))) (* (- (* x -1.666667) 5.0) (- (* x -5.0) 1.0))) (* (+ 1.0 (* x -5.0)) (* (- (* x -1.666667) 5.0) (- (* x -5.0) 1.0))))))
* [exit]simplify:  Simplified to (+ (* (* (- (* x -1.666667) 5.0) (- (* x -5.0) 1.0)) (* (* (* (* x x) (* x x)) (- (* -0.008333 x) 0.208333)) (+ (* -0.008333 x) 0.208333))) (* (- (* -0.008333 x) 0.208333) (+ (* (* (* x x) (+ 5.0 (* x -1.666667))) (* (- (* x -1.666667) 5.0) (- (* x -5.0) 1.0))) (* (+ 1.0 (* x -5.0)) (* (- (* x -1.666667) 5.0) (- (* x -5.0) 1.0))))))
* [enter]simplify:  Simplifying (* (- (* x -5.0) 1.0) (* (- (* -0.008333 x) 0.208333) (- (* -1.666667 x) 5.0)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (331 enodes)
* [exit]simplify:  Simplified to (* (- (* x -5.0) 1.0) (* (- (* -0.008333 x) 0.208333) (- (* -1.666667 x) 5.0)))
* [exit]simplify:  Simplified to (* (- (* x -5.0) 1.0) (* (- (* -0.008333 x) 0.208333) (- (* -1.666667 x) 5.0)))
* * * * [misc]progress:  [ 19 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -5.0) (* x -5.0)) (* 1.0 1.0)) (+ (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (- (* (* (* x x) (+ (* -1.666667 x) 5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))) (* (- (* x -5.0) 1.0) (+ (pow (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) 3) (pow (* (* x x) (+ (* -1.666667 x) 5.0)) 3)))) (* (- (* x -5.0) 1.0) (+ (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (- (* (* (* x x) (+ (* -1.666667 x) 5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -5.0) (* x -5.0)) (* 1.0 1.0)) (+ (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (- (* (* (* x x) (+ (* -1.666667 x) 5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))) (* (- (* x -5.0) 1.0) (+ (pow (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) 3) (pow (* (* x x) (+ (* -1.666667 x) 5.0)) 3))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* x -5.0) 1.0) (+ (pow (* (+ (* -1.666667 x) 5.0) (* x x)) 3) (pow (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x))) 3))) (+ (* (* (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x))) (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x)))) (- (* (* x -5.0) (* x -5.0)) (* 1.0 1.0))) (* (* (- (* (* x -5.0) (* x -5.0)) (* 1.0 1.0)) (* (+ (* -1.666667 x) 5.0) (* x x))) (- (* (+ (* -1.666667 x) 5.0) (* x x)) (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x)))))))
* [exit]simplify:  Simplified to (+ (* (- (* x -5.0) 1.0) (+ (pow (* (+ (* -1.666667 x) 5.0) (* x x)) 3) (pow (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x))) 3))) (+ (* (* (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x))) (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x)))) (- (* (* x -5.0) (* x -5.0)) (* 1.0 1.0))) (* (* (- (* (* x -5.0) (* x -5.0)) (* 1.0 1.0)) (* (+ (* -1.666667 x) 5.0) (* x x))) (- (* (+ (* -1.666667 x) 5.0) (* x x)) (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x)))))))
* [enter]simplify:  Simplifying (* (- (* x -5.0) 1.0) (+ (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (- (* (* (* x x) (+ (* -1.666667 x) 5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (79 enodes)
* * [misc]simplify:  iters left: 4 (408 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (- (* x -5.0) 1.0) (* x x)) (+ (* -1.666667 x) 5.0)) (- (* (* x x) (+ (* -1.666667 x) 5.0)) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))))) (* (* (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))) (- (* x -5.0) 1.0)) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (+ (* (* (* (- (* x -5.0) 1.0) (* x x)) (+ (* -1.666667 x) 5.0)) (- (* (* x x) (+ (* -1.666667 x) 5.0)) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))))) (* (* (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))) (- (* x -5.0) 1.0)) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 20 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -5.0) (* x -5.0)) (* 1.0 1.0)) (- (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))) (* (- (* x -5.0) 1.0) (- (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (* (* (* x x) (+ (* -1.666667 x) 5.0)) (* (* x x) (+ (* -1.666667 x) 5.0)))))) (* (- (* x -5.0) 1.0) (- (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -5.0) (* x -5.0)) (* 1.0 1.0)) (- (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))) (* (- (* x -5.0) 1.0) (- (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (* (* (* x x) (+ (* -1.666667 x) 5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (81 enodes)
* * [misc]simplify:  iters left: 4 (352 enodes)
* [exit]simplify:  Simplified to (* (- (* x -5.0) 1.0) (+ (* (- (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x))) (* (+ 5.0 (* -1.666667 x)) (* x x))) (+ 1.0 (* x -5.0))) (* (- (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x))) (* (+ 5.0 (* -1.666667 x)) (* x x))) (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x)))))))
* [exit]simplify:  Simplified to (* (- (* x -5.0) 1.0) (+ (* (- (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x))) (* (+ 5.0 (* -1.666667 x)) (* x x))) (+ 1.0 (* x -5.0))) (* (- (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x))) (* (+ 5.0 (* -1.666667 x)) (* x x))) (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x)))))))
* [enter]simplify:  Simplifying (* (- (* x -5.0) 1.0) (- (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* [exit]simplify:  Simplified to (* (* (- (* x -5.0) 1.0) (* x x)) (- (* (+ (* -0.008333 x) 0.208333) (* x x)) (+ 5.0 (* -1.666667 x))))
* [exit]simplify:  Simplified to (* (* (- (* x -5.0) 1.0) (* x x)) (- (* (+ (* -0.008333 x) 0.208333) (* x x)) (+ 5.0 (* -1.666667 x))))
* * * * [misc]progress:  [ 21 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ (* x -5.0) 1.0) 3) (pow (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))) 3)) (+ (* (+ (* x -5.0) 1.0) (+ (* x -5.0) 1.0)) (- (* (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))) (* (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))))))>
* [enter]simplify:  Simplifying (+ (pow (+ (* x -5.0) 1.0) 3) (pow (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))) 3))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ 1.0 (* x -5.0)) 3) (pow (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x)))) 3))
* [exit]simplify:  Simplified to (+ (pow (+ 1.0 (* x -5.0)) 3) (pow (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x)))) 3))
* [enter]simplify:  Simplifying (+ (* (+ (* x -5.0) 1.0) (+ (* x -5.0) 1.0)) (- (* (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))) (* (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (78 enodes)
* * [misc]simplify:  iters left: 4 (382 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (- (* (+ (* -1.666667 x) 5.0) (* x x)) (+ 1.0 (* x -5.0))) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (+ (* (+ (* -1.666667 x) 5.0) (* x x)) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))))) (* (+ 1.0 (* x -5.0)) (+ 1.0 (* x -5.0))))
* [exit]simplify:  Simplified to (+ (* (+ (- (* (+ (* -1.666667 x) 5.0) (* x x)) (+ 1.0 (* x -5.0))) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (+ (* (+ (* -1.666667 x) 5.0) (* x x)) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))))) (* (+ 1.0 (* x -5.0)) (+ 1.0 (* x -5.0))))
* * * * [misc]progress:  [ 22 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))))>
* * * * [misc]progress:  [ 23 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ (* x -5.0) 1.0) (+ (* x -5.0) 1.0)) (* (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))) (- (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))))>
* [enter]simplify:  Simplifying (- (* (+ (* x -5.0) 1.0) (+ (* x -5.0) 1.0)) (* (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (279 enodes)
* [exit]simplify:  Simplified to (- (* (+ 1.0 (* x -5.0)) (+ 1.0 (* x -5.0))) (* (+ (* (+ (* -1.666667 x) 5.0) (* x x)) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (+ (* (+ (* -1.666667 x) 5.0) (* x x)) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))))))
* [exit]simplify:  Simplified to (- (* (+ 1.0 (* x -5.0)) (+ 1.0 (* x -5.0))) (* (+ (* (+ (* -1.666667 x) 5.0) (* x x)) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (+ (* (+ (* -1.666667 x) 5.0) (* x x)) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))))))
* [enter]simplify:  Simplifying (- (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (172 enodes)
* [exit]simplify:  Simplified to (- (+ 1.0 (* x -5.0)) (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (- (+ 1.0 (* x -5.0)) (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 24 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -5.0)) (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -5.0)) (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 25 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* x -5.0) 1.0) (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (* (* x x) (+ (* -1.666667 x) 5.0))))>
* [enter]simplify:  Simplifying (+ (+ (* x -5.0) 1.0) (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (255 enodes)
* * [misc]simplify:  iters left: 2 (369 enodes)
* * [misc]simplify:  iters left: 1 (454 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -5.0)) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -5.0)) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))))
* * * * [misc]progress:  [ 26 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* x -5.0) (+ 1.0 (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))))>
* [enter]simplify:  Simplifying (+ 1.0 (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (374 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* (* x x) (+ 5.0 (* -1.666667 x)))) (* (* (* x x) (* x x)) (+ 0.208333 (* x -0.008333))))
* [exit]simplify:  Simplified to (+ (+ 1.0 (* (* x x) (+ 5.0 (* -1.666667 x)))) (* (* (* x x) (* x x)) (+ 0.208333 (* x -0.008333))))
* * * * [misc]progress:  [ 27 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))) (+ (* x -5.0) 1.0)))>
* * * * [misc]progress:  [ 28 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (pow x (+ 2 2)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (+ 2 2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 2 2)
* [exit]simplify:  Simplified to (+ 2 2)
* * * * [misc]progress:  [ 29 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (pow (* x x) (+ 1 1)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 30 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (pow (* x x) 2) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 31 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (pow (* (* x x) (* x x)) 1) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 32 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (pow (* x x) 2) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* * * * [misc]progress:  [ 33 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (pow (* x x) (+ 1 1)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 34 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (pow (* (* x x) (* x x)) 1) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* * * * [misc]progress:  [ 35 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (exp (+ (log (* x x)) (log (* x x)))) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 36 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (exp (log (* (* x x) (* x x)))) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (log (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* * * * [misc]progress:  [ 37 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (log (exp (* (* x x) (* x x)))) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (20 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 38 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (129 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* * * * [misc]progress:  [ 39 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x)))) (cbrt (* (* x x) (* x x)))) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 40 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (cbrt (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (153 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 41 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (sqrt (* (* x x) (* x x))) (sqrt (* (* x x) (* x x)))) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 42 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* 1 (* (* x x) (* x x))) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* * * * [misc]progress:  [ 43 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* (* x x) x) x) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* (* x x) x)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 44 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* x (* x (* x x))) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* x (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 45 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* * * * [misc]progress:  [ 46 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (pow (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) 1) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (168 enodes)
* * [misc]simplify:  iters left: 2 (223 enodes)
* * [misc]simplify:  iters left: 1 (240 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))
* * * * [misc]progress:  [ 47 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (pow (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) 1) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (168 enodes)
* * [misc]simplify:  iters left: 2 (223 enodes)
* * [misc]simplify:  iters left: 1 (240 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))
* * * * [misc]progress:  [ 48 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (pow (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) 1) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* * * * [misc]progress:  [ 49 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (exp (+ (+ (log (* x x)) (log (* x x))) (log (+ (* -0.008333 x) 0.208333)))) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (+ (+ (log (* x x)) (log (* x x))) (log (+ (* -0.008333 x) 0.208333)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* [exit]simplify:  Simplified to (+ (log (+ 0.208333 (* x -0.008333))) (+ (log (* x x)) (log (* x x))))
* [exit]simplify:  Simplified to (+ (log (+ 0.208333 (* x -0.008333))) (+ (log (* x x)) (log (* x x))))
* * * * [misc]progress:  [ 50 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (exp (+ (log (* (* x x) (* x x))) (log (+ (* -0.008333 x) 0.208333)))) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (+ (log (* (* x x) (* x x))) (log (+ (* -0.008333 x) 0.208333)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (62 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (+ (log (+ 0.208333 (* x -0.008333))) (* (+ 3 1) (log x)))
* [exit]simplify:  Simplified to (+ (log (+ 0.208333 (* x -0.008333))) (* (+ 3 1) (log x)))
* * * * [misc]progress:  [ 51 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (exp (log (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)))) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (log (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (212 enodes)
* * [misc]simplify:  iters left: 2 (276 enodes)
* * [misc]simplify:  iters left: 1 (307 enodes)
* [exit]simplify:  Simplified to (log (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)))
* [exit]simplify:  Simplified to (log (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)))
* * * * [misc]progress:  [ 52 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (log (exp (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)))) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (exp (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (230 enodes)
* * [misc]simplify:  iters left: 2 (359 enodes)
* * [misc]simplify:  iters left: 1 (399 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (+ (* -0.008333 x) 0.208333))
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (+ (* -0.008333 x) 0.208333))
* * * * [misc]progress:  [ 53 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (cbrt (* (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))) (* (* (+ (* -0.008333 x) 0.208333) (+ (* -0.008333 x) 0.208333)) (+ (* -0.008333 x) 0.208333)))) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))) (* (* (+ (* -0.008333 x) 0.208333) (+ (* -0.008333 x) 0.208333)) (+ (* -0.008333 x) 0.208333)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (220 enodes)
* [exit]simplify:  Simplified to (* (pow (+ 0.208333 (* -0.008333 x)) 3) (pow (* (* x x) (* x x)) 3))
* [exit]simplify:  Simplified to (* (pow (+ 0.208333 (* -0.008333 x)) 3) (pow (* (* x x) (* x x)) 3))
* * * * [misc]progress:  [ 54 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (cbrt (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (+ (* -0.008333 x) 0.208333) (+ (* -0.008333 x) 0.208333)) (+ (* -0.008333 x) 0.208333)))) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (+ (* -0.008333 x) 0.208333) (+ (* -0.008333 x) 0.208333)) (+ (* -0.008333 x) 0.208333)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (220 enodes)
* [exit]simplify:  Simplified to (* (pow (+ 0.208333 (* -0.008333 x)) 3) (pow (* (* x x) (* x x)) 3))
* [exit]simplify:  Simplified to (* (pow (+ 0.208333 (* -0.008333 x)) 3) (pow (* (* x x) (* x x)) 3))
* * * * [misc]progress:  [ 55 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (cbrt (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (cbrt (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)))) (cbrt (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)))) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (cbrt (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (168 enodes)
* * [misc]simplify:  iters left: 2 (207 enodes)
* * [misc]simplify:  iters left: 1 (210 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (cbrt (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))))
* [exit]simplify:  Simplified to (* (cbrt (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (cbrt (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))))
* [enter]simplify:  Simplifying (cbrt (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (153 enodes)
* * [misc]simplify:  iters left: 2 (201 enodes)
* * [misc]simplify:  iters left: 1 (220 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)))
* [exit]simplify:  Simplified to (cbrt (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)))
* * * * [misc]progress:  [ 56 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (cbrt (* (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)))) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (pow (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) 3)
* [exit]simplify:  Simplified to (pow (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) 3)
* * * * [misc]progress:  [ 57 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (sqrt (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (sqrt (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)))) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (sqrt (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (153 enodes)
* * [misc]simplify:  iters left: 2 (201 enodes)
* * [misc]simplify:  iters left: 1 (220 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)))
* [exit]simplify:  Simplified to (sqrt (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)))
* [enter]simplify:  Simplifying (sqrt (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (153 enodes)
* * [misc]simplify:  iters left: 2 (201 enodes)
* * [misc]simplify:  iters left: 1 (220 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)))
* [exit]simplify:  Simplified to (sqrt (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)))
* * * * [misc]progress:  [ 58 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* 1 (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* * * * [misc]progress:  [ 59 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (+ (* (* (* x x) (* x x)) (* -0.008333 x)) (* (* (* x x) (* x x)) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* (* (* x x) (* x x)) (* -0.008333 x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (65 enodes)
* * [misc]simplify:  iters left: 2 (70 enodes)
* * [misc]simplify:  iters left: 1 (73 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* -0.008333 x)) (* x x))
* [exit]simplify:  Simplified to (* (* (* x x) (* -0.008333 x)) (* x x))
* [enter]simplify:  Simplifying (* (* (* x x) (* x x)) 0.208333)
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (45 enodes)
* * [misc]simplify:  iters left: 2 (56 enodes)
* [exit]simplify:  Simplified to (* (* 0.208333 x) (pow x 3))
* [exit]simplify:  Simplified to (* (* 0.208333 x) (pow x 3))
* * * * [misc]progress:  [ 60 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (+ (* (* -0.008333 x) (* (* x x) (* x x))) (* 0.208333 (* (* x x) (* x x)))) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* (* -0.008333 x) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (59 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (67 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* -0.008333 x))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* -0.008333 x))
* [enter]simplify:  Simplifying (* 0.208333 (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (* 0.208333 x) (pow x 3))
* [exit]simplify:  Simplified to (* (* 0.208333 x) (pow x 3))
* * * * [misc]progress:  [ 61 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* (* x x) (* x x)) (* (cbrt (+ (* -0.008333 x) 0.208333)) (cbrt (+ (* -0.008333 x) 0.208333)))) (cbrt (+ (* -0.008333 x) 0.208333))) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* (* (* x x) (* x x)) (* (cbrt (+ (* -0.008333 x) 0.208333)) (cbrt (+ (* -0.008333 x) 0.208333))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (76 enodes)
* * [misc]simplify:  iters left: 2 (96 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* -0.008333 x) 0.208333)) (* x x)) (* (cbrt (+ (* -0.008333 x) 0.208333)) (* x x)))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* -0.008333 x) 0.208333)) (* x x)) (* (cbrt (+ (* -0.008333 x) 0.208333)) (* x x)))
* * * * [misc]progress:  [ 62 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* (* x x) (* x x)) (sqrt (+ (* -0.008333 x) 0.208333))) (sqrt (+ (* -0.008333 x) 0.208333))) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* (* (* x x) (* x x)) (sqrt (+ (* -0.008333 x) 0.208333)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (56 enodes)
* * [misc]simplify:  iters left: 1 (59 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* -0.008333 x) 0.208333)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (sqrt (+ (* -0.008333 x) 0.208333)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 63 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* (* x x) (* x x)) 1) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* (* (* x x) (* x x)) 1)
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 64 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* x x) (* (* x x) (+ (* -0.008333 x) 0.208333))) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* (* x x) (+ (* -0.008333 x) 0.208333))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.008333) 0.208333) (* x x))
* [exit]simplify:  Simplified to (* (+ (* x -0.008333) 0.208333) (* x x))
* * * * [misc]progress:  [ 65 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (/ (* (* (* x x) (* x x)) (+ (pow (* -0.008333 x) 3) (pow 0.208333 3))) (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333)))) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* (* (* x x) (* x x)) (+ (pow (* -0.008333 x) 3) (pow 0.208333 3)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (323 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (pow (* -0.008333 x) 3)) (* (* (* x x) (* 0.208333 x)) (* 0.208333 (* 0.208333 x))))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (pow (* -0.008333 x) 3)) (* (* (* x x) (* 0.208333 x)) (* 0.208333 (* 0.208333 x))))
* * * * [misc]progress:  [ 66 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (/ (* (* (* x x) (* x x)) (- (* (* -0.008333 x) (* -0.008333 x)) (* 0.208333 0.208333))) (- (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* (* (* x x) (* x x)) (- (* (* -0.008333 x) (* -0.008333 x)) (* 0.208333 0.208333)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (269 enodes)
* [exit]simplify:  Simplified to (* (* (- (* -0.008333 x) 0.208333) (+ (* -0.008333 x) 0.208333)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (* (- (* -0.008333 x) 0.208333) (+ (* -0.008333 x) 0.208333)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 67 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* * * * [misc]progress:  [ 68 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (pow (* (* x x) (+ (* -1.666667 x) 5.0)) 1))))>
* [enter]simplify:  Simplifying (* (* x x) (+ (* -1.666667 x) 5.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -1.666667) 5.0) (* x x))
* [exit]simplify:  Simplified to (* (+ (* x -1.666667) 5.0) (* x x))
* * * * [misc]progress:  [ 69 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (pow (* (* x x) (+ (* -1.666667 x) 5.0)) 1))))>
* * * * [misc]progress:  [ 70 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (exp (+ (log (* x x)) (log (+ (* -1.666667 x) 5.0)))))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (+ (* -1.666667 x) 5.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* -1.666667 x) 5.0)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (log (+ (* -1.666667 x) 5.0)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 71 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (exp (log (* (* x x) (+ (* -1.666667 x) 5.0)))))))>
* [enter]simplify:  Simplifying (log (* (* x x) (+ (* -1.666667 x) 5.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (77 enodes)
* * [misc]simplify:  iters left: 2 (81 enodes)
* [exit]simplify:  Simplified to (log (* (+ (* x -1.666667) 5.0) (* x x)))
* [exit]simplify:  Simplified to (log (* (+ (* x -1.666667) 5.0) (* x x)))
* * * * [misc]progress:  [ 72 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (log (exp (* (* x x) (+ (* -1.666667 x) 5.0)))))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (+ (* -1.666667 x) 5.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (132 enodes)
* * [misc]simplify:  iters left: 1 (134 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -1.666667) 5.0))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -1.666667) 5.0))
* * * * [misc]progress:  [ 73 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (+ (* -1.666667 x) 5.0) (+ (* -1.666667 x) 5.0)) (+ (* -1.666667 x) 5.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (+ (* -1.666667 x) 5.0) (+ (* -1.666667 x) 5.0)) (+ (* -1.666667 x) 5.0)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (+ 5.0 (* x -1.666667))) (* (+ 5.0 (* x -1.666667)) (+ 5.0 (* x -1.666667))))
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (+ 5.0 (* x -1.666667))) (* (+ 5.0 (* x -1.666667)) (+ 5.0 (* x -1.666667))))
* * * * [misc]progress:  [ 74 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* (cbrt (* (* x x) (+ (* -1.666667 x) 5.0))) (cbrt (* (* x x) (+ (* -1.666667 x) 5.0)))) (cbrt (* (* x x) (+ (* -1.666667 x) 5.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (+ (* -1.666667 x) 5.0))) (cbrt (* (* x x) (+ (* -1.666667 x) 5.0))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (64 enodes)
* * [misc]simplify:  iters left: 2 (68 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* x -1.666667) 5.0) (* x x))) (cbrt (* (+ (* x -1.666667) 5.0) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* x -1.666667) 5.0) (* x x))) (cbrt (* (+ (* x -1.666667) 5.0) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (+ (* -1.666667 x) 5.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* x -1.666667) 5.0) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (+ (* x -1.666667) 5.0) (* x x)))
* * * * [misc]progress:  [ 75 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (cbrt (* (* (* (* x x) (+ (* -1.666667 x) 5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (* x x) (+ (* -1.666667 x) 5.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (+ (* -1.666667 x) 5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (* x x) (+ (* -1.666667 x) 5.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (128 enodes)
* [exit]simplify:  Simplified to (pow (* (+ (* x -1.666667) 5.0) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (+ (* x -1.666667) 5.0) (* x x)) 3)
* * * * [misc]progress:  [ 76 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (sqrt (* (* x x) (+ (* -1.666667 x) 5.0))) (sqrt (* (* x x) (+ (* -1.666667 x) 5.0)))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (+ (* -1.666667 x) 5.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* x -1.666667) 5.0) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (+ (* x -1.666667) 5.0) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (+ (* -1.666667 x) 5.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* x -1.666667) 5.0) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (+ (* x -1.666667) 5.0) (* x x)))
* * * * [misc]progress:  [ 77 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* 1 (* (* x x) (+ (* -1.666667 x) 5.0))))))>
* * * * [misc]progress:  [ 78 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (+ (* (* x x) (* -1.666667 x)) (* (* x x) 5.0)))))>
* [enter]simplify:  Simplifying (* (* x x) (* -1.666667 x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x -1.666667) (* x x))
* [exit]simplify:  Simplified to (* (* x -1.666667) (* x x))
* [enter]simplify:  Simplifying (* (* x x) 5.0)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to (* x (* x 5.0))
* [exit]simplify:  Simplified to (* x (* x 5.0))
* * * * [misc]progress:  [ 79 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (+ (* (* -1.666667 x) (* x x)) (* 5.0 (* x x))))))>
* [enter]simplify:  Simplifying (* (* -1.666667 x) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* [exit]simplify:  Simplified to (* (* -1.666667 x) (* x x))
* [exit]simplify:  Simplified to (* (* -1.666667 x) (* x x))
* [enter]simplify:  Simplifying (* 5.0 (* x x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* 5.0 (* x x))
* [exit]simplify:  Simplified to (* 5.0 (* x x))
* * * * [misc]progress:  [ 80 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* (* x x) (* (cbrt (+ (* -1.666667 x) 5.0)) (cbrt (+ (* -1.666667 x) 5.0)))) (cbrt (+ (* -1.666667 x) 5.0))))))>
* [enter]simplify:  Simplifying (* (* x x) (* (cbrt (+ (* -1.666667 x) 5.0)) (cbrt (+ (* -1.666667 x) 5.0))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* [exit]simplify:  Simplified to (* (* x (cbrt (+ (* x -1.666667) 5.0))) (* x (cbrt (+ (* x -1.666667) 5.0))))
* [exit]simplify:  Simplified to (* (* x (cbrt (+ (* x -1.666667) 5.0))) (* x (cbrt (+ (* x -1.666667) 5.0))))
* * * * [misc]progress:  [ 81 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* (* x x) (sqrt (+ (* -1.666667 x) 5.0))) (sqrt (+ (* -1.666667 x) 5.0))))))>
* [enter]simplify:  Simplifying (* (* x x) (sqrt (+ (* -1.666667 x) 5.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* x -1.666667) 5.0)) (* x x))
* [exit]simplify:  Simplified to (* (sqrt (+ (* x -1.666667) 5.0)) (* x x))
* * * * [misc]progress:  [ 82 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* (* x x) 1) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* (* x x) 1)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 83 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* x (* x (+ (* -1.666667 x) 5.0))))))>
* [enter]simplify:  Simplifying (* x (+ (* -1.666667 x) 5.0))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* [exit]simplify:  Simplified to (* x (+ 5.0 (* x -1.666667)))
* [exit]simplify:  Simplified to (* x (+ 5.0 (* x -1.666667)))
* * * * [misc]progress:  [ 84 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (/ (* (* x x) (+ (pow (* -1.666667 x) 3) (pow 5.0 3))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0)))))))>
* [enter]simplify:  Simplifying (* (* x x) (+ (pow (* -1.666667 x) 3) (pow 5.0 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (219 enodes)
* * [misc]simplify:  iters left: 2 (326 enodes)
* * [misc]simplify:  iters left: 1 (360 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x -1.666667) (* x x)) (* (* x -1.666667) (* x -1.666667))) (* (pow 5.0 3) (* x x)))
* [exit]simplify:  Simplified to (+ (* (* (* x -1.666667) (* x x)) (* (* x -1.666667) (* x -1.666667))) (* (pow 5.0 3) (* x x)))
* * * * [misc]progress:  [ 85 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (/ (* (* x x) (- (* (* -1.666667 x) (* -1.666667 x)) (* 5.0 5.0))) (- (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (* (* x x) (- (* (* -1.666667 x) (* -1.666667 x)) (* 5.0 5.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (168 enodes)
* * [misc]simplify:  iters left: 2 (486 enodes)
* [exit]simplify:  Simplified to (* (* x (- (* x -1.666667) 5.0)) (* (+ 5.0 (* x -1.666667)) x))
* [exit]simplify:  Simplified to (* (* x (- (* x -1.666667) 5.0)) (* (+ 5.0 (* x -1.666667)) x))
* * * * [misc]progress:  [ 86 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (+ (* -1.666667 x) 5.0) (* x x)))))>
* * * * [misc]progress:  [ 87 / 98 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 5.0 (pow x 2)) 1.0) (* 5.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 5.0 (pow x 2)) 1.0) (* 5.0 x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (60 enodes)
* * [misc]simplify:  iters left: 1 (75 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) 5.0) (- 1.0 (* 5.0 x)))
* * * * [misc]progress:  [ 88 / 98 ] simplifiying candidate #<alt-event (Î» (x) (- (* 0.208333 (pow x 4)) (+ (* 1.666667 (pow x 3)) (* 0.008333 (pow x 5)))))>
* [enter]simplify:  Simplifying (- (* 0.208333 (pow x 4)) (+ (* 1.666667 (pow x 3)) (* 0.008333 (pow x 5))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (112 enodes)
* * [misc]simplify:  iters left: 1 (127 enodes)
* [exit]simplify:  Simplified to (- (- (* (pow x 4) 0.208333) (* (* x x) (* 1.666667 x))) (* (pow x 5) 0.008333))
* * * * [misc]progress:  [ 89 / 98 ] simplifiying candidate #<alt-event (Î» (x) (- (* 0.208333 (pow x 4)) (+ (* 1.666667 (pow x 3)) (* 0.008333 (pow x 5)))))>
* [enter]simplify:  Simplifying (- (* 0.208333 (pow x 4)) (+ (* 1.666667 (pow x 3)) (* 0.008333 (pow x 5))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (112 enodes)
* * [misc]simplify:  iters left: 1 (127 enodes)
* [exit]simplify:  Simplified to (- (- (* (pow x 4) 0.208333) (* (* x x) (* 1.666667 x))) (* (pow x 5) 0.008333))
* * * * [misc]progress:  [ 90 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (pow x 4) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -5.0) 1.0) (+ (* (pow x 4) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (309 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* -0.008333 x) 0.208333) (pow x 4)) 1.0) (+ (* x -5.0) (* (+ (* -1.666667 x) 5.0) (* x x))))
* * * * [misc]progress:  [ 91 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (pow x 4) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -5.0) 1.0) (+ (* (pow x 4) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (309 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* -0.008333 x) 0.208333) (pow x 4)) 1.0) (+ (* x -5.0) (* (+ (* -1.666667 x) 5.0) (* x x))))
* * * * [misc]progress:  [ 92 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (pow x 4) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -5.0) 1.0) (+ (* (pow x 4) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (309 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* -0.008333 x) 0.208333) (pow x 4)) 1.0) (+ (* x -5.0) (* (+ (* -1.666667 x) 5.0) (* x x))))
* * * * [misc]progress:  [ 93 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (- (* 0.208333 (pow x 4)) (* 0.008333 (pow x 5))) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -5.0) 1.0) (+ (- (* 0.208333 (pow x 4)) (* 0.008333 (pow x 5))) (* (* x x) (+ (* -1.666667 x) 5.0))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (130 enodes)
* * [misc]simplify:  iters left: 3 (396 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 0.208333 (pow x 4)) (* x -5.0)) (+ (* (* x x) (+ (* -1.666667 x) 5.0)) (- 1.0 (* (pow x 5) 0.008333))))
* * * * [misc]progress:  [ 94 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (- (* 0.208333 (pow x 4)) (* 0.008333 (pow x 5))) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -5.0) 1.0) (+ (- (* 0.208333 (pow x 4)) (* 0.008333 (pow x 5))) (* (* x x) (+ (* -1.666667 x) 5.0))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (130 enodes)
* * [misc]simplify:  iters left: 3 (396 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 0.208333 (pow x 4)) (* x -5.0)) (+ (* (* x x) (+ (* -1.666667 x) 5.0)) (- 1.0 (* (pow x 5) 0.008333))))
* * * * [misc]progress:  [ 95 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (- (* 0.208333 (pow x 4)) (* 0.008333 (pow x 5))) (* (* x x) (+ (* -1.666667 x) 5.0)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -5.0) 1.0) (+ (- (* 0.208333 (pow x 4)) (* 0.008333 (pow x 5))) (* (* x x) (+ (* -1.666667 x) 5.0))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (130 enodes)
* * [misc]simplify:  iters left: 3 (396 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 0.208333 (pow x 4)) (* x -5.0)) (+ (* (* x x) (+ (* -1.666667 x) 5.0)) (- 1.0 (* (pow x 5) 0.008333))))
* * * * [misc]progress:  [ 96 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (- (* 5.0 (pow x 2)) (* 1.666667 (pow x 3))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (- (* 5.0 (pow x 2)) (* 1.666667 (pow x 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (173 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -5.0)) (+ (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))) (* (* x x) (- 5.0 (* 1.666667 x)))))
* * * * [misc]progress:  [ 97 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (- (* 5.0 (pow x 2)) (* 1.666667 (pow x 3))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (- (* 5.0 (pow x 2)) (* 1.666667 (pow x 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (173 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -5.0)) (+ (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))) (* (* x x) (- 5.0 (* 1.666667 x)))))
* * * * [misc]progress:  [ 98 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (- (* 5.0 (pow x 2)) (* 1.666667 (pow x 3))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (- (* 5.0 (pow x 2)) (* 1.666667 (pow x 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (173 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -5.0)) (+ (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))) (* (* x x) (- 5.0 (* 1.666667 x)))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* -1.666667 x) 5.0) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* -1.666667 x) 5.0) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 x) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 x) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* -1.666667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (* 5.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 1) (* 0 0)) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (- 1.666667) 0) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (* (- 1.666667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 1) (+ (* (- 1.666667) 0) (* 0 0))) into 5.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* -1.666667 x) 5.0) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* -1.666667 x) 5.0) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 x) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 x) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* -1.666667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (* 5.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 1) (* 0 0)) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (- 1.666667) 0) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (* (- 1.666667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 1) (+ (* (- 1.666667) 0) (* 0 0))) into 5.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 5.0 1) 1)))) into 5.0
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* (- 1.666667) 1) (+ (* 0 0) (* 0 0)))) into (- 1.666667)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 5.0 1) 1)) (* (/ (pow (- 1.666667) 1) 1)))) into -1.666667
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]backup-simplify:  Simplify (+ (* -1.666667 (pow x 3)) (+ (* 5.0 (pow x 2)) 1)) into (- (+ (* 5.0 (pow x 2)) 1) (* 1.666667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* -1.666667 (/ 1 x)) 5.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* -1.666667 (/ 1 x)) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* -1.666667 (/ 1 x)) 5.0) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* -1.666667 (/ 1 x)) 5.0) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 (/ 1 x)) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 1) into -1.666667
* [misc]backup-simplify:  Simplify (+ -1.666667 0) into (- 1.666667)
* [misc]backup-simplify:  Simplify (* (- 1.666667) (/ 1 (pow x 2))) into (/ -1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* -1.666667 (/ 1 x)) 5.0) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* -1.666667 (/ 1 x)) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* -1.666667 (/ 1 x)) 5.0) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* -1.666667 (/ 1 x)) 5.0) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 (/ 1 x)) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 1) into -1.666667
* [misc]backup-simplify:  Simplify (+ -1.666667 0) into (- 1.666667)
* [misc]backup-simplify:  Simplify (* (- 1.666667) (/ 1 (pow x 2))) into (/ -1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* -1.666667 (/ 1 x)) 5.0) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))) into (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (- 5.0 (* 1.666667 (/ 1 (/ 1 x)))) (pow (/ 1 x) 2))) into (exp (* (- 5.0 (* 1.666667 x)) (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -1.666667 (/ 1 (- x))) 5.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -1.666667 (/ 1 (- x))) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* -1.666667 (/ 1 (- x))) 5.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* -1.666667 (/ 1 (- x))) 5.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 (/ 1 (- x))) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 -1) into 1.666667
* [misc]backup-simplify:  Simplify (+ 1.666667 0) into 1.666667
* [misc]backup-simplify:  Simplify (* 1.666667 (/ 1 (pow x 2))) into (/ 1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* -1.666667 (/ 1 (- x))) 5.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -1.666667 (/ 1 (- x))) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* -1.666667 (/ 1 (- x))) 5.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* -1.666667 (/ 1 (- x))) 5.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 (/ 1 (- x))) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 -1) into 1.666667
* [misc]backup-simplify:  Simplify (+ 1.666667 0) into 1.666667
* [misc]backup-simplify:  Simplify (* 1.666667 (/ 1 (pow x 2))) into (/ 1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* -1.666667 (/ 1 (- x))) 5.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))) into (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (+ (* 1.666667 (/ 1 (/ 1 (- x)))) 5.0) (pow (/ 1 (- x)) 2))) into (exp (* (- 5.0 (* 1.666667 x)) (pow x 2)))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (exp (+ 1.0 (* x -5.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* x -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* x -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* x -5.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 0 -5.0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* x -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* x -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* x -5.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 0 -5.0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -5.0)) into (- 5.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 5.0)) into (- 5.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 5.0) 1) 1)))) into (* -5.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (* -5.0 (exp 1.0)) into (* -5.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -5.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 5.0) 2) 2)) (* (/ (pow 0 1) 1)))) into (* 12.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (* 12.5 (exp 1.0)) into (* 12.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (* 12.5 (exp 1.0)) (pow x 2)) (+ (* (* -5.0 (exp 1.0)) x) (exp 1.0))) into (- (+ (exp 1.0) (* 12.5 (* (exp 1.0) (pow x 2)))) (* 5.0 (* (exp 1.0) x)))
* [misc]approximate:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -5.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 x) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 1 -5.0) into -5.0
* [misc]backup-simplify:  Simplify (+ 0 -5.0) into (- 5.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 x) -5.0))) into (exp (- 1.0 (* 5.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 x) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 1 -5.0) into -5.0
* [misc]backup-simplify:  Simplify (+ 0 -5.0) into (- 5.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 x) -5.0))) into (exp (- 1.0 (* 5.0 (/ 1 x))))
* [misc]backup-simplify:  Simplify (exp (- 1.0 (* 5.0 (/ 1 x)))) into (exp (- 1.0 (* 5.0 (/ 1 x))))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (- 1.0 (* 5.0 (/ 1 (/ 1 x))))) into (exp (- 1.0 (* 5.0 x)))
* [misc]approximate:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 (- x)) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* -1 -5.0) into 5.0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) into (exp (+ (* 5.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 (- x)) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* -1 -5.0) into 5.0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) into (exp (+ (* 5.0 (/ 1 x)) 1.0))
* [misc]backup-simplify:  Simplify (exp (+ (* 5.0 (/ 1 x)) 1.0)) into (exp (+ 1.0 (* 5.0 (/ 1 x))))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* 5.0 (/ 1 (/ 1 (- x)))))) into (exp (- 1.0 (* 5.0 x)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* x -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* x -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* x -5.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 0 -5.0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* -1.666667 x) 5.0) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* -1.666667 x) 5.0) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 x) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 x) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* -1.666667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (* 5.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 1) (* 0 0)) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (- 1.666667) 0) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (* (- 1.666667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 1) (+ (* (- 1.666667) 0) (* 0 0))) into 5.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -0.008333) 0.208333) (log (pow (exp x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -0.008333) 0.208333) (log (pow (exp x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.008333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (* 0 0)) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -0.008333) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.208333) into 0.208333
* [misc]backup-simplify:  Simplify (* 0.208333 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.008333)) into (- 0.008333)
* [misc]backup-simplify:  Simplify (+ (- 0.008333) 0) into (- 0.008333)
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (* (- 0.008333) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.008333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (+ (* (- 0.008333) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.008333)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (+ (* (- 0.008333) 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1) 1)) (pow 1 1)))) 24) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.008333))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 1) (+ (* (- 0.008333) 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0.208333
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (log (exp 1.0)) into 1.0
* [misc]taylor:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* x -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* x -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* x -5.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 0 -5.0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* -1.666667 x) 5.0) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* -1.666667 x) 5.0) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 x) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 x) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* -1.666667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (* 5.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 1) (* 0 0)) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (- 1.666667) 0) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (* (- 1.666667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 1) (+ (* (- 1.666667) 0) (* 0 0))) into 5.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -0.008333) 0.208333) (log (pow (exp x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -0.008333) 0.208333) (log (pow (exp x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.008333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (* 0 0)) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -0.008333) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.208333) into 0.208333
* [misc]backup-simplify:  Simplify (* 0.208333 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.008333)) into (- 0.008333)
* [misc]backup-simplify:  Simplify (+ (- 0.008333) 0) into (- 0.008333)
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (* (- 0.008333) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.008333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (+ (* (- 0.008333) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.008333)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (+ (* (- 0.008333) 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1) 1)) (pow 1 1)))) 24) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.008333))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 1) (+ (* (- 0.008333) 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0.208333
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (log (exp 1.0)) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -5.0)) into (- 5.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 5.0)) into (- 5.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 5.0) 1) 1)))) into (* -5.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (* (* -5.0 (exp 1.0)) 1)) into (- (* 5.0 (exp 1.0)))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (* (- (* 5.0 (exp 1.0))) 1)) into (- (* 5.0 (exp 1.0)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* 5.0 (exp 1.0)))) 1)) (pow (exp 1.0) 1)))) 1) into -5.0
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 5.0 1) 1)))) into 5.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -5.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 5.0) 2) 2)) (* (/ (pow 0 1) 1)))) into (* 12.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 5.0) (+ (* (* -5.0 (exp 1.0)) 0) (* (* 12.5 (exp 1.0)) 1))) into (* 17.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (+ (* (- (* 5.0 (exp 1.0))) 0) (* (* 17.5 (exp 1.0)) 1))) into (* 17.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* 5.0 (exp 1.0)))) 2)) (pow (exp 1.0) 2))) (* 1 (/ (* 1 (pow (* 2 (* 17.5 (exp 1.0))) 1)) (pow (exp 1.0) 1)))) 2) into 5.0
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]backup-simplify:  Simplify (+ (* 5.0 (pow x 2)) (+ (* -5.0 x) 1.0)) into (- (+ (* 5.0 (pow x 2)) 1.0) (* 5.0 x))
* [misc]approximate:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* -1.666667 (/ 1 x)) 5.0))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* -1.666667 (/ 1 x)) 5.0))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* -1.666667 (/ 1 x)) 5.0))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* -1.666667 (/ 1 x)) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 x) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 1 -5.0) into -5.0
* [misc]backup-simplify:  Simplify (+ 0 -5.0) into (- 5.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 x) -5.0))) into (exp (- 1.0 (* 5.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* -1.666667 (/ 1 x)) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* -1.666667 (/ 1 x)) 5.0) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* -1.666667 (/ 1 x)) 5.0) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 (/ 1 x)) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 1) into -1.666667
* [misc]backup-simplify:  Simplify (+ -1.666667 0) into (- 1.666667)
* [misc]backup-simplify:  Simplify (* (- 1.666667) (/ 1 (pow x 2))) into (/ -1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* -1.666667 (/ 1 x)) 5.0) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.008333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 x)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (/ 1 (pow x 4))) into (exp (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 4)))) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 1 -0.008333) into -0.008333
* [misc]backup-simplify:  Simplify (+ -0.008333 0) into (- 0.008333)
* [misc]backup-simplify:  Simplify (* (- 0.008333) (/ 1 (pow x 4))) into (/ -0.008333 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) into (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))
* [misc]backup-simplify:  Simplify (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))) into (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))
* [misc]backup-simplify:  Simplify (* (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))) into (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))
* [misc]backup-simplify:  Simplify (log (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))) into (log (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))))
* [misc]taylor:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* -1.666667 (/ 1 x)) 5.0))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* -1.666667 (/ 1 x)) 5.0))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* -1.666667 (/ 1 x)) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 x) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 1 -5.0) into -5.0
* [misc]backup-simplify:  Simplify (+ 0 -5.0) into (- 5.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 x) -5.0))) into (exp (- 1.0 (* 5.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* -1.666667 (/ 1 x)) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* -1.666667 (/ 1 x)) 5.0) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* -1.666667 (/ 1 x)) 5.0) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 (/ 1 x)) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 1) into -1.666667
* [misc]backup-simplify:  Simplify (+ -1.666667 0) into (- 1.666667)
* [misc]backup-simplify:  Simplify (* (- 1.666667) (/ 1 (pow x 2))) into (/ -1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* -1.666667 (/ 1 x)) 5.0) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.008333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 x)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (/ 1 (pow x 4))) into (exp (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 4)))) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 1 -0.008333) into -0.008333
* [misc]backup-simplify:  Simplify (+ -0.008333 0) into (- 0.008333)
* [misc]backup-simplify:  Simplify (* (- 0.008333) (/ 1 (pow x 4))) into (/ -0.008333 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) into (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))
* [misc]backup-simplify:  Simplify (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))) into (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))
* [misc]backup-simplify:  Simplify (* (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))) into (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))
* [misc]backup-simplify:  Simplify (log (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))) into (log (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))))
* [misc]backup-simplify:  Simplify (log (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))) into (log (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (* 0 (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))) 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (+ (* 0 0) (* 0 (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))) 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (log (* (pow (pow (exp (/ 1 (/ 1 x))) (pow (/ 1 (/ 1 x)) 3)) (- 0.208333 (* 0.008333 (/ 1 (/ 1 x))))) (* (exp (- 1.0 (* 5.0 (/ 1 (/ 1 x))))) (exp (/ (- 5.0 (* 1.666667 (/ 1 (/ 1 x)))) (pow (/ 1 x) 2)))))) into (log (* (exp (- 1.0 (* 5.0 x))) (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (exp (* (- 5.0 (* 1.666667 x)) (pow x 2))))))
* [misc]approximate:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -1.666667 (/ 1 (- x))) 5.0))) (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -1.666667 (/ 1 (- x))) 5.0))) (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -1.666667 (/ 1 (- x))) 5.0))) (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -1.666667 (/ 1 (- x))) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 (- x)) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* -1 -5.0) into 5.0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) into (exp (+ (* 5.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -1.666667 (/ 1 (- x))) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* -1.666667 (/ 1 (- x))) 5.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* -1.666667 (/ 1 (- x))) 5.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 (/ 1 (- x))) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 -1) into 1.666667
* [misc]backup-simplify:  Simplify (+ 1.666667 0) into 1.666667
* [misc]backup-simplify:  Simplify (* 1.666667 (/ 1 (pow x 2))) into (/ 1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* -1.666667 (/ 1 (- x))) 5.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.008333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (/ -1 x)) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* -1 -0.008333) into 0.008333
* [misc]backup-simplify:  Simplify (+ 0.008333 0) into 0.008333
* [misc]backup-simplify:  Simplify (* 0.008333 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (* -0.008333 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) into (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))
* [misc]backup-simplify:  Simplify (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))) into (* (exp (+ 1.0 (* 5.0 (/ 1 x)))) (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2))))
* [misc]backup-simplify:  Simplify (* (* (exp (+ 1.0 (* 5.0 (/ 1 x)))) (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2)))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))) into (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))
* [misc]backup-simplify:  Simplify (log (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))) into (log (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (+ 1.0 (* 5.0 (/ 1 x)))) (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2))))))
* [misc]taylor:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -1.666667 (/ 1 (- x))) 5.0))) (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -1.666667 (/ 1 (- x))) 5.0))) (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -1.666667 (/ 1 (- x))) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 (- x)) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* -1 -5.0) into 5.0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) into (exp (+ (* 5.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -1.666667 (/ 1 (- x))) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* -1.666667 (/ 1 (- x))) 5.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* -1.666667 (/ 1 (- x))) 5.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 (/ 1 (- x))) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 -1) into 1.666667
* [misc]backup-simplify:  Simplify (+ 1.666667 0) into 1.666667
* [misc]backup-simplify:  Simplify (* 1.666667 (/ 1 (pow x 2))) into (/ 1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* -1.666667 (/ 1 (- x))) 5.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.008333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (/ -1 x)) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* -1 -0.008333) into 0.008333
* [misc]backup-simplify:  Simplify (+ 0.008333 0) into 0.008333
* [misc]backup-simplify:  Simplify (* 0.008333 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (* -0.008333 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) into (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))
* [misc]backup-simplify:  Simplify (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))) into (* (exp (+ 1.0 (* 5.0 (/ 1 x)))) (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2))))
* [misc]backup-simplify:  Simplify (* (* (exp (+ 1.0 (* 5.0 (/ 1 x)))) (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2)))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))) into (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))
* [misc]backup-simplify:  Simplify (log (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))) into (log (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (+ 1.0 (* 5.0 (/ 1 x)))) (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2))))))
* [misc]backup-simplify:  Simplify (log (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (+ 1.0 (* 5.0 (/ 1 x)))) (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2)))))) into (log (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (* 0 (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (+ 1.0 (* 5.0 (/ 1 x)))) (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2)))) 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (* 0 (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (+ 1.0 (* 5.0 (/ 1 x)))) (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2)))) 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (+ 1.0 (* 5.0 (/ 1 x)))) (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (+ 1.0 (* 5.0 (/ 1 x)))) (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (+ 1.0 (* 5.0 (/ 1 x)))) (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (+ 1.0 (* 5.0 (/ 1 x)))) (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (log (* (exp (+ (* 5.0 (/ 1 (/ 1 (- x)))) 1.0)) (* (pow (pow (exp (/ -1 (/ 1 (- x)))) (pow (/ -1 (/ 1 (- x))) 3)) (+ (* 0.008333 (/ 1 (/ 1 (- x)))) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 (/ 1 (- x))))) (pow (/ 1 (- x)) 2)))))) into (log (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (* (exp (- 1.0 (* 5.0 x))) (exp (* (- 5.0 (* 1.666667 x)) (pow x 2))))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* x -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* x -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* x -5.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 0 -5.0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* -1.666667 x) 5.0) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* -1.666667 x) 5.0) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 x) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 x) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* -1.666667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (* 5.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 1) (* 0 0)) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (- 1.666667) 0) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (* (- 1.666667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 1) (+ (* (- 1.666667) 0) (* 0 0))) into 5.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -0.008333) 0.208333) (log (pow (exp x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -0.008333) 0.208333) (log (pow (exp x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.008333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (* 0 0)) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -0.008333) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.208333) into 0.208333
* [misc]backup-simplify:  Simplify (* 0.208333 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.008333)) into (- 0.008333)
* [misc]backup-simplify:  Simplify (+ (- 0.008333) 0) into (- 0.008333)
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (* (- 0.008333) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.008333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (+ (* (- 0.008333) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.008333)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (+ (* (- 0.008333) 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1) 1)) (pow 1 1)))) 24) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.008333))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 1) (+ (* (- 0.008333) 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0.208333
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* x -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* x -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* x -5.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 0 -5.0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* -1.666667 x) 5.0) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* -1.666667 x) 5.0) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 x) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 x) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* -1.666667 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (* 5.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 1) (* 0 0)) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (- 1.666667) 0) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (* (- 1.666667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 1) (+ (* (- 1.666667) 0) (* 0 0))) into 5.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -0.008333) 0.208333) (log (pow (exp x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -0.008333) 0.208333) (log (pow (exp x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.008333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (* 0 0)) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -0.008333) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.208333) into 0.208333
* [misc]backup-simplify:  Simplify (* 0.208333 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.008333)) into (- 0.008333)
* [misc]backup-simplify:  Simplify (+ (- 0.008333) 0) into (- 0.008333)
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (* (- 0.008333) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.008333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (+ (* (- 0.008333) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.008333)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (+ (* (- 0.008333) 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1) 1)) (pow 1 1)))) 24) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.008333))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 1) (+ (* (- 0.008333) 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0.208333
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -5.0)) into (- 5.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 5.0)) into (- 5.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 5.0) 1) 1)))) into (* -5.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (* (* -5.0 (exp 1.0)) 1)) into (- (* 5.0 (exp 1.0)))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (* (- (* 5.0 (exp 1.0))) 1)) into (- (* 5.0 (exp 1.0)))
* [misc]backup-simplify:  Simplify (- (* 5.0 (exp 1.0))) into (- (* 5.0 (exp 1.0)))
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 5.0 1) 1)))) into 5.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -5.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 5.0) 2) 2)) (* (/ (pow 0 1) 1)))) into (* 12.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 5.0) (+ (* (* -5.0 (exp 1.0)) 0) (* (* 12.5 (exp 1.0)) 1))) into (* 17.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (+ (* (- (* 5.0 (exp 1.0))) 0) (* (* 17.5 (exp 1.0)) 1))) into (* 17.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (* 17.5 (exp 1.0)) into (* 17.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (* 17.5 (exp 1.0)) (pow x 2)) (+ (* (- (* 5.0 (exp 1.0))) x) (exp 1.0))) into (- (+ (exp 1.0) (* 17.5 (* (exp 1.0) (pow x 2)))) (* 5.0 (* (exp 1.0) x)))
* [misc]approximate:  Taking taylor expansion of (* (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* -1.666667 (/ 1 x)) 5.0))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* -1.666667 (/ 1 x)) 5.0))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* -1.666667 (/ 1 x)) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 x) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 1 -5.0) into -5.0
* [misc]backup-simplify:  Simplify (+ 0 -5.0) into (- 5.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 x) -5.0))) into (exp (- 1.0 (* 5.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* -1.666667 (/ 1 x)) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* -1.666667 (/ 1 x)) 5.0) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* -1.666667 (/ 1 x)) 5.0) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 (/ 1 x)) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 1) into -1.666667
* [misc]backup-simplify:  Simplify (+ -1.666667 0) into (- 1.666667)
* [misc]backup-simplify:  Simplify (* (- 1.666667) (/ 1 (pow x 2))) into (/ -1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* -1.666667 (/ 1 x)) 5.0) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.008333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 x)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (/ 1 (pow x 4))) into (exp (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 4)))) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 1 -0.008333) into -0.008333
* [misc]backup-simplify:  Simplify (+ -0.008333 0) into (- 0.008333)
* [misc]backup-simplify:  Simplify (* (- 0.008333) (/ 1 (pow x 4))) into (/ -0.008333 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) into (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* -1.666667 (/ 1 x)) 5.0))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* -1.666667 (/ 1 x)) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 x) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 1 -5.0) into -5.0
* [misc]backup-simplify:  Simplify (+ 0 -5.0) into (- 5.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 x) -5.0))) into (exp (- 1.0 (* 5.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* -1.666667 (/ 1 x)) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* -1.666667 (/ 1 x)) 5.0) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* -1.666667 (/ 1 x)) 5.0) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 (/ 1 x)) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 1) into -1.666667
* [misc]backup-simplify:  Simplify (+ -1.666667 0) into (- 1.666667)
* [misc]backup-simplify:  Simplify (* (- 1.666667) (/ 1 (pow x 2))) into (/ -1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* -1.666667 (/ 1 x)) 5.0) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.008333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 x)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (/ 1 (pow x 4))) into (exp (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 4)))) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 1 -0.008333) into -0.008333
* [misc]backup-simplify:  Simplify (+ -0.008333 0) into (- 0.008333)
* [misc]backup-simplify:  Simplify (* (- 0.008333) (/ 1 (pow x 4))) into (/ -0.008333 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) into (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))
* [misc]backup-simplify:  Simplify (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))) into (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))
* [misc]backup-simplify:  Simplify (* (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))) into (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))
* [misc]backup-simplify:  Simplify (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) into (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (* 0 (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))) 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (+ (* 0 0) (* 0 (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))) 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (exp (/ (- 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (pow (pow (exp (/ 1 (/ 1 x))) (pow (/ 1 (/ 1 x)) 3)) (- 0.208333 (* 0.008333 (/ 1 (/ 1 x))))) (* (exp (- 1.0 (* 5.0 (/ 1 (/ 1 x))))) (exp (/ (- 5.0 (* 1.666667 (/ 1 (/ 1 x)))) (pow (/ 1 x) 2))))) into (* (exp (- 1.0 (* 5.0 x))) (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (exp (* (- 5.0 (* 1.666667 x)) (pow x 2)))))
* [misc]approximate:  Taking taylor expansion of (* (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -1.666667 (/ 1 (- x))) 5.0))) (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -1.666667 (/ 1 (- x))) 5.0))) (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -1.666667 (/ 1 (- x))) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 (- x)) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* -1 -5.0) into 5.0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) into (exp (+ (* 5.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -1.666667 (/ 1 (- x))) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* -1.666667 (/ 1 (- x))) 5.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* -1.666667 (/ 1 (- x))) 5.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 (/ 1 (- x))) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 -1) into 1.666667
* [misc]backup-simplify:  Simplify (+ 1.666667 0) into 1.666667
* [misc]backup-simplify:  Simplify (* 1.666667 (/ 1 (pow x 2))) into (/ 1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* -1.666667 (/ 1 (- x))) 5.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.008333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (/ -1 x)) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* -1 -0.008333) into 0.008333
* [misc]backup-simplify:  Simplify (+ 0.008333 0) into 0.008333
* [misc]backup-simplify:  Simplify (* 0.008333 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (* -0.008333 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) into (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -1.666667 (/ 1 (- x))) 5.0))) (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -1.666667 (/ 1 (- x))) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 (- x)) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* -1 -5.0) into 5.0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) into (exp (+ (* 5.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* -1.666667 (/ 1 (- x))) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* -1.666667 (/ 1 (- x))) 5.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* -1.666667 (/ 1 (- x))) 5.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* -1.666667 (/ 1 (- x))) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 -1) into 1.666667
* [misc]backup-simplify:  Simplify (+ 1.666667 0) into 1.666667
* [misc]backup-simplify:  Simplify (* 1.666667 (/ 1 (pow x 2))) into (/ 1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* -1.666667 (/ 1 (- x))) 5.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.008333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (/ -1 x)) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* -1 -0.008333) into 0.008333
* [misc]backup-simplify:  Simplify (+ 0.008333 0) into 0.008333
* [misc]backup-simplify:  Simplify (* 0.008333 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (* -0.008333 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) into (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))
* [misc]backup-simplify:  Simplify (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))) into (* (exp (+ 1.0 (* 5.0 (/ 1 x)))) (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2))))
* [misc]backup-simplify:  Simplify (* (* (exp (+ 1.0 (* 5.0 (/ 1 x)))) (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2)))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))) into (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))
* [misc]backup-simplify:  Simplify (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)) (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) into (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (+ 1.0 (* 5.0 (/ 1 x)))) (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (* 0 (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (+ 1.0 (* 5.0 (/ 1 x)))) (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2)))) 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (* 0 (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (+ 1.0 (* 5.0 (/ 1 x)))) (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2)))) 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (+ 1.0 (* 5.0 (/ 1 x)))) (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (+ 1.0 (* 5.0 (/ 1 x)))) (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (+ 1.0 (* 5.0 (/ 1 x)))) (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (+ 5.0 (* 1.666667 (/ 1 x))) (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (+ 1.0 (* 5.0 (/ 1 x)))) (exp (/ (+ (* 1.666667 (/ 1 x)) 5.0) (pow x 2)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (pow (pow (exp (/ -1 (/ 1 (- x)))) (pow (/ -1 (/ 1 (- x))) 3)) (+ 0.208333 (* 0.008333 (/ 1 (/ 1 (- x)))))) (* (exp (+ 1.0 (* 5.0 (/ 1 (/ 1 (- x)))))) (exp (/ (+ (* 1.666667 (/ 1 (/ 1 (- x)))) 5.0) (pow (/ 1 (- x)) 2))))) into (* (exp (- 1.0 (* 5.0 x))) (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (exp (* (- 5.0 (* 1.666667 x)) (pow x 2)))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (exp (* (* x x) (+ (* -1.666667 x) 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (* x x) (+ (* -1.666667 x) 5.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -1.666667) 5.0) (* x x))
* [exit]simplify:  Simplified to (* (+ (* x -1.666667) 5.0) (* x x))
* * * * [misc]progress:  [ 2 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (exp (* (log (exp (* x x))) (+ (* -1.666667 x) 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (log (exp (* x x))) (+ (* -1.666667 x) 5.0))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (77 enodes)
* * [misc]simplify:  iters left: 1 (89 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ 5.0 (* x -1.666667)))
* [exit]simplify:  Simplified to (* (* x x) (+ 5.0 (* x -1.666667)))
* * * * [misc]progress:  [ 3 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (* 1 (+ (* -1.666667 x) 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* 1 (+ (* -1.666667 x) 5.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* [exit]simplify:  Simplified to (+ (* x -1.666667) 5.0)
* [exit]simplify:  Simplified to (+ (* x -1.666667) 5.0)
* * * * [misc]progress:  [ 4 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp x) (* x (+ (* -1.666667 x) 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* x (+ (* -1.666667 x) 5.0))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* [exit]simplify:  Simplified to (* x (+ 5.0 (* x -1.666667)))
* [exit]simplify:  Simplified to (* x (+ 5.0 (* x -1.666667)))
* * * * [misc]progress:  [ 5 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (pow (exp (* x x)) (* (cbrt (+ (* -1.666667 x) 5.0)) (cbrt (+ (* -1.666667 x) 5.0)))) (cbrt (+ (* -1.666667 x) 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) (* (cbrt (+ (* -1.666667 x) 5.0)) (cbrt (+ (* -1.666667 x) 5.0))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* (cbrt (+ (* -1.666667 x) 5.0)) (cbrt (+ (* -1.666667 x) 5.0))))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* (cbrt (+ (* -1.666667 x) 5.0)) (cbrt (+ (* -1.666667 x) 5.0))))
* * * * [misc]progress:  [ 6 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (pow (exp (* x x)) (sqrt (+ (* -1.666667 x) 5.0))) (sqrt (+ (* -1.666667 x) 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) (sqrt (+ (* -1.666667 x) 5.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (sqrt (+ (* -1.666667 x) 5.0)))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (sqrt (+ (* -1.666667 x) 5.0)))
* * * * [misc]progress:  [ 7 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (pow (exp (* x x)) 1) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) 1)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* [exit]simplify:  Simplified to (exp (* x x))
* [exit]simplify:  Simplified to (exp (* x x))
* * * * [misc]progress:  [ 8 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) (* -1.666667 x))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* -1.666667 x))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* -1.666667 x))
* [enter]simplify:  Simplifying (pow (exp (* x x)) 5.0)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) 5.0)
* [exit]simplify:  Simplified to (pow (exp (* x x)) 5.0)
* * * * [misc]progress:  [ 9 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ (* -1.666667 x) 5.0)) (pow (cbrt (exp (* x x))) (+ (* -1.666667 x) 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ (* -1.666667 x) 5.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ 5.0 (* -1.666667 x)))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ 5.0 (* -1.666667 x)))
* [enter]simplify:  Simplifying (pow (cbrt (exp (* x x))) (+ (* -1.666667 x) 5.0))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp (* x x))) (+ 5.0 (* x -1.666667)))
* [exit]simplify:  Simplified to (pow (cbrt (exp (* x x))) (+ 5.0 (* x -1.666667)))
* * * * [misc]progress:  [ 10 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (sqrt (exp (* x x))) (+ (* -1.666667 x) 5.0)) (pow (sqrt (exp (* x x))) (+ (* -1.666667 x) 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp (* x x))) (+ (* -1.666667 x) 5.0))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 5.0 (* x -1.666667)))
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 5.0 (* x -1.666667)))
* [enter]simplify:  Simplifying (pow (sqrt (exp (* x x))) (+ (* -1.666667 x) 5.0))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 5.0 (* x -1.666667)))
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 5.0 (* x -1.666667)))
* * * * [misc]progress:  [ 11 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow 1 (+ (* -1.666667 x) 5.0)) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (pow 1 (+ (* -1.666667 x) 5.0))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))
* * * * [misc]progress:  [ 12 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)) 1)) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 13 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (exp (log (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* * [misc]simplify:  iters left: 1 (60 enodes)
* [exit]simplify:  Simplified to (* (+ (* -1.666667 x) 5.0) (* x x))
* [exit]simplify:  Simplified to (* (+ (* -1.666667 x) 5.0) (* x x))
* * * * [misc]progress:  [ 14 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (log (exp (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (exp (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))
* [exit]simplify:  Simplified to (exp (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))
* * * * [misc]progress:  [ 15 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (* (cbrt (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (cbrt (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (cbrt (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (cbrt (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (cbrt (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (cbrt (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))))
* [enter]simplify:  Simplifying (cbrt (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))
* [exit]simplify:  Simplified to (cbrt (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))
* * * * [misc]progress:  [ 16 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (cbrt (* (* (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (* (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)) 3)
* [exit]simplify:  Simplified to (pow (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)) 3)
* * * * [misc]progress:  [ 17 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (sqrt (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (sqrt (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))
* [enter]simplify:  Simplifying (sqrt (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))
* * * * [misc]progress:  [ 18 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* 1 (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 19 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (exp (+ 1.0 (* x -5.0))) 1) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 20 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (exp (* (cbrt (+ 1.0 (* x -5.0))) (cbrt (+ 1.0 (* x -5.0))))) (cbrt (+ 1.0 (* x -5.0)))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (+ 1.0 (* x -5.0))) (cbrt (+ 1.0 (* x -5.0)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* -5.0 x) 1.0)) (cbrt (+ (* -5.0 x) 1.0))))
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* -5.0 x) 1.0)) (cbrt (+ (* -5.0 x) 1.0))))
* * * * [misc]progress:  [ 21 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (exp (sqrt (+ 1.0 (* x -5.0)))) (sqrt (+ 1.0 (* x -5.0)))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (exp (sqrt (+ 1.0 (* x -5.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (exp (sqrt (+ (* -5.0 x) 1.0)))
* [exit]simplify:  Simplified to (exp (sqrt (+ (* -5.0 x) 1.0)))
* * * * [misc]progress:  [ 22 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (exp 1) (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (exp 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to E
* [exit]simplify:  Simplified to E
* * * * [misc]progress:  [ 23 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp 1.0) (exp (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (exp 1.0)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (exp 1.0)
* [exit]simplify:  Simplified to (exp 1.0)
* [enter]simplify:  Simplifying (exp (* x -5.0))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* [exit]simplify:  Simplified to (exp (* x -5.0))
* [exit]simplify:  Simplified to (exp (* x -5.0))
* * * * [misc]progress:  [ 24 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 25 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (log (exp (+ 1.0 (* x -5.0))))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (exp (+ 1.0 (* x -5.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* * [misc]simplify:  iters left: 1 (44 enodes)
* [exit]simplify:  Simplified to (+ 1.0 (* -5.0 x))
* [exit]simplify:  Simplified to (+ 1.0 (* -5.0 x))
* * * * [misc]progress:  [ 26 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (log (exp (exp (+ 1.0 (* x -5.0))))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (exp (exp (+ 1.0 (* x -5.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* [exit]simplify:  Simplified to (pow (exp (exp 1.0)) (exp (* -5.0 x)))
* [exit]simplify:  Simplified to (pow (exp (exp 1.0)) (exp (* -5.0 x)))
* * * * [misc]progress:  [ 27 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (* (cbrt (exp (+ 1.0 (* x -5.0)))) (cbrt (exp (+ 1.0 (* x -5.0))))) (cbrt (exp (+ 1.0 (* x -5.0))))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (cbrt (exp (+ 1.0 (* x -5.0)))) (cbrt (exp (+ 1.0 (* x -5.0)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (* (cbrt (exp (+ (* -5.0 x) 1.0))) (cbrt (exp (+ (* -5.0 x) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (exp (+ (* -5.0 x) 1.0))) (cbrt (exp (+ (* -5.0 x) 1.0))))
* [enter]simplify:  Simplifying (cbrt (exp (+ 1.0 (* x -5.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (cbrt (exp (+ (* -5.0 x) 1.0)))
* [exit]simplify:  Simplified to (cbrt (exp (+ (* -5.0 x) 1.0)))
* * * * [misc]progress:  [ 28 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (* (* (exp (+ 1.0 (* x -5.0))) (exp (+ 1.0 (* x -5.0)))) (exp (+ 1.0 (* x -5.0))))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (* (exp (+ 1.0 (* x -5.0))) (exp (+ 1.0 (* x -5.0)))) (exp (+ 1.0 (* x -5.0))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (161 enodes)
* * [misc]simplify:  iters left: 1 (228 enodes)
* [exit]simplify:  Simplified to (pow (exp (+ (* -5.0 x) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (exp (+ (* -5.0 x) 1.0)) 3)
* * * * [misc]progress:  [ 29 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (sqrt (exp (+ 1.0 (* x -5.0)))) (sqrt (exp (+ 1.0 (* x -5.0))))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (sqrt (exp (+ 1.0 (* x -5.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (sqrt (exp (+ (* -5.0 x) 1.0)))
* [exit]simplify:  Simplified to (sqrt (exp (+ (* -5.0 x) 1.0)))
* [enter]simplify:  Simplifying (sqrt (exp (+ 1.0 (* x -5.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (sqrt (exp (+ (* -5.0 x) 1.0)))
* [exit]simplify:  Simplified to (sqrt (exp (+ (* -5.0 x) 1.0)))
* * * * [misc]progress:  [ 30 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* 1 (exp (+ 1.0 (* x -5.0)))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 31 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (113 enodes)
* * [misc]simplify:  iters left: 1 (219 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* x -1.666667) 5.0) (* x x)) (+ 1.0 (* -5.0 x)))
* [exit]simplify:  Simplified to (+ (* (+ (* x -1.666667) 5.0) (* x x)) (+ 1.0 (* -5.0 x)))
* [enter]simplify:  Simplifying (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (87 enodes)
* * [misc]simplify:  iters left: 1 (208 enodes)
* [exit]simplify:  Simplified to (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 32 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))))>
* [enter]simplify:  Simplifying (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (118 enodes)
* * [misc]simplify:  iters left: 2 (201 enodes)
* * [misc]simplify:  iters left: 1 (373 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (* (+ (* x -1.666667) 5.0) (* x x))) (+ 1.0 (* -5.0 x)))
* [exit]simplify:  Simplified to (+ (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (* (+ (* x -1.666667) 5.0) (* x x))) (+ 1.0 (* -5.0 x)))
* * * * [misc]progress:  [ 33 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (pow (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) 1))>
* * * * [misc]progress:  [ 34 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 35 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 36 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 37 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 38 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 39 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (* (log (exp (* x x))) (+ (* -1.666667 x) 5.0))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 40 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (* (log (exp (* x x))) (+ (* -1.666667 x) 5.0))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 41 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (* (log (exp (* x x))) (+ (* -1.666667 x) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 42 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (* (log (exp (* x x))) (+ (* -1.666667 x) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 43 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (* (log (exp (* x x))) (+ (* -1.666667 x) 5.0))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 44 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (log (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 45 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (log (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 46 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (log (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 47 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (log (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 48 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (log (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 49 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 50 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 51 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 52 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 53 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 54 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 55 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (log (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (175 enodes)
* * [misc]simplify:  iters left: 1 (315 enodes)
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* -5.0 x)) (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (* (+ (* x -1.666667) 5.0) (* x x)))))
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* -5.0 x)) (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (* (+ (* x -1.666667) 5.0) (* x x)))))
* * * * [misc]progress:  [ 56 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (exp (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (332 enodes)
* [exit]simplify:  Simplified to (* (exp (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x)))) (* (exp (+ (* x -5.0) 1.0)) (pow (exp (* x x)) (+ (* x -1.666667) 5.0))))
* [exit]simplify:  Simplified to (* (exp (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x)))) (* (exp (+ (* x -5.0) 1.0)) (pow (exp (* x x)) (+ (* x -1.666667) 5.0))))
* * * * [misc]progress:  [ 57 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))) (cbrt (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))) (cbrt (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (* (cbrt (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))) (cbrt (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (198 enodes)
* * [misc]simplify:  iters left: 1 (373 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (* (+ (* x -1.666667) 5.0) (* x x))) (+ 1.0 (* -5.0 x)))) (cbrt (+ (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (* (+ (* x -1.666667) 5.0) (* x x))) (+ 1.0 (* -5.0 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (* (+ (* x -1.666667) 5.0) (* x x))) (+ 1.0 (* -5.0 x)))) (cbrt (+ (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (* (+ (* x -1.666667) 5.0) (* x x))) (+ 1.0 (* -5.0 x)))))
* [enter]simplify:  Simplifying (cbrt (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (175 enodes)
* * [misc]simplify:  iters left: 1 (315 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* -5.0 x)) (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (* (+ (* x -1.666667) 5.0) (* x x)))))
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* -5.0 x)) (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (* (+ (* x -1.666667) 5.0) (* x x)))))
* * * * [misc]progress:  [ 58 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))) (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (* (* (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))) (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (83 enodes)
* * [misc]simplify:  iters left: 3 (204 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (+ (* (+ (* x -1.666667) 5.0) (* x x)) (+ (* -5.0 x) 1.0))) 3)
* [exit]simplify:  Simplified to (pow (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (+ (* (+ (* x -1.666667) 5.0) (* x x)) (+ (* -5.0 x) 1.0))) 3)
* * * * [misc]progress:  [ 59 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))) (sqrt (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (sqrt (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (175 enodes)
* * [misc]simplify:  iters left: 1 (315 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* -5.0 x)) (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (* (+ (* x -1.666667) 5.0) (* x x)))))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* -5.0 x)) (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (* (+ (* x -1.666667) 5.0) (* x x)))))
* [enter]simplify:  Simplifying (sqrt (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (175 enodes)
* * [misc]simplify:  iters left: 1 (315 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* -5.0 x)) (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (* (+ (* x -1.666667) 5.0) (* x x)))))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* -5.0 x)) (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (* (+ (* x -1.666667) 5.0) (* x x)))))
* * * * [misc]progress:  [ 60 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))))>
* * * * [misc]progress:  [ 61 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (pow (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))) 1)))>
* * * * [misc]progress:  [ 62 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (+ 1.0 (* x -5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* x -5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* * [misc]simplify:  iters left: 3 (449 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* -5.0 x) 1.0) (* (+ 5.0 (* -1.666667 x)) (* x x))) (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333)))
* [exit]simplify:  Simplified to (+ (+ (+ (* -5.0 x) 1.0) (* (+ 5.0 (* -1.666667 x)) (* x x))) (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333)))
* * * * [misc]progress:  [ 63 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (+ 1.0 (* x -5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* x -5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (179 enodes)
* [exit]simplify:  Simplified to (+ (+ (* -5.0 x) 1.0) (+ (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))) (* (+ 5.0 (* -1.666667 x)) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* -5.0 x) 1.0) (+ (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))) (* (+ 5.0 (* -1.666667 x)) (* x x))))
* * * * [misc]progress:  [ 64 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (+ 1.0 (* x -5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* x -5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* * [misc]simplify:  iters left: 3 (422 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* x x) -1.666667) (+ (* x 5.0) -5.0)) x) (+ 1.0 (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (+ (* (+ (* (* x x) -1.666667) (+ (* x 5.0) -5.0)) x) (+ 1.0 (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 65 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (+ 1.0 (* x -5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* x -5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* * [misc]simplify:  iters left: 3 (422 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* x x) -1.666667) (+ (* x 5.0) -5.0)) x) (+ 1.0 (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (+ (* (+ (* (* x x) -1.666667) (+ (* x 5.0) -5.0)) x) (+ 1.0 (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 66 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (+ 1.0 (* x -5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* x -5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (242 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 5.0 (* -1.666667 x))) (+ (+ (* -5.0 x) 1.0) (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x)))))
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 5.0 (* -1.666667 x))) (+ (+ (* -5.0 x) 1.0) (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x)))))
* * * * [misc]progress:  [ 67 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (+ 1.0 (* x -5.0)) (* (log (exp (* x x))) (+ (* -1.666667 x) 5.0))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* x -5.0)) (* (log (exp (* x x))) (+ (* -1.666667 x) 5.0))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* * [misc]simplify:  iters left: 3 (458 enodes)
* [exit]simplify:  Simplified to (+ (* x (+ (+ -5.0 (* 5.0 x)) (* (* x x) -1.666667))) (+ 1.0 (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (+ (* x (+ (+ -5.0 (* 5.0 x)) (* (* x x) -1.666667))) (+ 1.0 (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 68 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (+ 1.0 (* x -5.0)) (* (log (exp (* x x))) (+ (* -1.666667 x) 5.0))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* x -5.0)) (* (log (exp (* x x))) (+ (* -1.666667 x) 5.0))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* * [misc]simplify:  iters left: 3 (499 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) (* (* x x) (+ (* x -1.666667) 5.0))) (+ (* -5.0 x) 1.0))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) (* (* x x) (+ (* x -1.666667) 5.0))) (+ (* -5.0 x) 1.0))
* * * * [misc]progress:  [ 69 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (+ 1.0 (* x -5.0)) (* (log (exp (* x x))) (+ (* -1.666667 x) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* x -5.0)) (* (log (exp (* x x))) (+ (* -1.666667 x) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (393 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) (* (+ (* x -1.666667) 5.0) (* x x))) (+ (* -5.0 x) 1.0))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) (* (+ (* x -1.666667) 5.0) (* x x))) (+ (* -5.0 x) 1.0))
* * * * [misc]progress:  [ 70 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (+ 1.0 (* x -5.0)) (* (log (exp (* x x))) (+ (* -1.666667 x) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* x -5.0)) (* (log (exp (* x x))) (+ (* -1.666667 x) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (393 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) (* (+ (* x -1.666667) 5.0) (* x x))) (+ (* -5.0 x) 1.0))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) (* (+ (* x -1.666667) 5.0) (* x x))) (+ (* -5.0 x) 1.0))
* * * * [misc]progress:  [ 71 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (+ 1.0 (* x -5.0)) (* (log (exp (* x x))) (+ (* -1.666667 x) 5.0))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* x -5.0)) (* (log (exp (* x x))) (+ (* -1.666667 x) 5.0))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (109 enodes)
* * [misc]simplify:  iters left: 3 (234 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* -5.0 x) 1.0) (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x)))) (* (+ (* x -1.666667) 5.0) (* x x)))
* [exit]simplify:  Simplified to (+ (+ (+ (* -5.0 x) 1.0) (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x)))) (* (+ (* x -1.666667) 5.0) (* x x)))
* * * * [misc]progress:  [ 72 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (+ 1.0 (* x -5.0)) (log (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* x -5.0)) (log (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (305 enodes)
* [exit]simplify:  Simplified to (+ (+ (* -5.0 x) 1.0) (+ (* (* x x) (+ (* -1.666667 x) 5.0)) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (+ (+ (* -5.0 x) 1.0) (+ (* (* x x) (+ (* -1.666667 x) 5.0)) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 73 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (+ 1.0 (* x -5.0)) (log (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* x -5.0)) (log (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (317 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) 1.0) (+ (* (+ (* -1.666667 x) 5.0) (* x x)) (* -5.0 x)))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) 1.0) (+ (* (+ (* -1.666667 x) 5.0) (* x x)) (* -5.0 x)))
* * * * [misc]progress:  [ 74 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (+ 1.0 (* x -5.0)) (log (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* x -5.0)) (log (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (246 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) (* -5.0 x)) (+ (* (+ (* -1.666667 x) 5.0) (* x x)) 1.0))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) (* -5.0 x)) (+ (* (+ (* -1.666667 x) 5.0) (* x x)) 1.0))
* * * * [misc]progress:  [ 75 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (+ 1.0 (* x -5.0)) (log (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* x -5.0)) (log (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (246 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) (* -5.0 x)) (+ (* (+ (* -1.666667 x) 5.0) (* x x)) 1.0))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) (* -5.0 x)) (+ (* (+ (* -1.666667 x) 5.0) (* x x)) 1.0))
* * * * [misc]progress:  [ 76 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (+ 1.0 (* x -5.0)) (log (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* x -5.0)) (log (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (125 enodes)
* * [misc]simplify:  iters left: 2 (416 enodes)
* [exit]simplify:  Simplified to (+ (+ (* -5.0 x) 1.0) (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (* (+ (* -1.666667 x) 5.0) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* -5.0 x) 1.0) (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (* (+ (* -1.666667 x) 5.0) (* x x))))
* * * * [misc]progress:  [ 77 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))))>
* [enter]simplify:  Simplifying (+ (log (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* * [misc]simplify:  iters left: 3 (282 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* x -1.666667) 5.0) (* x x)) (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (+ (* -5.0 x) 1.0)))
* [exit]simplify:  Simplified to (+ (* (+ (* x -1.666667) 5.0) (* x x)) (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (+ (* -5.0 x) 1.0)))
* * * * [misc]progress:  [ 78 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))))>
* [enter]simplify:  Simplifying (+ (log (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (245 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (+ (* -5.0 x) (* (* x x) (+ (* x -1.666667) 5.0))))
* [exit]simplify:  Simplified to (+ (+ 1.0 (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (+ (* -5.0 x) (* (* x x) (+ (* x -1.666667) 5.0))))
* * * * [misc]progress:  [ 79 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))))>
* [enter]simplify:  Simplifying (+ (log (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (106 enodes)
* * [misc]simplify:  iters left: 3 (243 enodes)
* * [misc]simplify:  iters left: 2 (499 enodes)
* [exit]simplify:  Simplified to (+ (+ (* -5.0 x) (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333))) (+ (* (+ (* x -1.666667) 5.0) (* x x)) 1.0))
* [exit]simplify:  Simplified to (+ (+ (* -5.0 x) (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333))) (+ (* (+ (* x -1.666667) 5.0) (* x x)) 1.0))
* * * * [misc]progress:  [ 80 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))))>
* [enter]simplify:  Simplifying (+ (log (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (106 enodes)
* * [misc]simplify:  iters left: 3 (243 enodes)
* * [misc]simplify:  iters left: 2 (499 enodes)
* [exit]simplify:  Simplified to (+ (+ (* -5.0 x) (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333))) (+ (* (+ (* x -1.666667) 5.0) (* x x)) 1.0))
* [exit]simplify:  Simplified to (+ (+ (* -5.0 x) (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333))) (+ (* (+ (* x -1.666667) 5.0) (* x x)) 1.0))
* * * * [misc]progress:  [ 81 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (+ (log (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (113 enodes)
* * [misc]simplify:  iters left: 2 (273 enodes)
* [exit]simplify:  Simplified to (+ (+ (* -5.0 x) (* (+ (* x -1.666667) 5.0) (* x x))) (+ 1.0 (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (+ (+ (* -5.0 x) (* (+ (* x -1.666667) 5.0) (* x x))) (+ 1.0 (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 82 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (log (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (118 enodes)
* * [misc]simplify:  iters left: 2 (201 enodes)
* * [misc]simplify:  iters left: 1 (373 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (* (+ (* x -1.666667) 5.0) (* x x))) (+ 1.0 (* -5.0 x)))
* [exit]simplify:  Simplified to (+ (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (* (+ (* x -1.666667) 5.0) (* x x))) (+ 1.0 (* -5.0 x)))
* * * * [misc]progress:  [ 83 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (log (exp (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (exp (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (111 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (exp (exp 1.0)) (exp (* -5.0 x))) (pow (exp (* x x)) (+ (* x -1.666667) 5.0))) (pow (pow (exp x) (pow x 3)) (+ 0.208333 (* -0.008333 x))))
* [exit]simplify:  Simplified to (pow (pow (pow (exp (exp 1.0)) (exp (* -5.0 x))) (pow (exp (* x x)) (+ (* x -1.666667) 5.0))) (pow (pow (exp x) (pow x 3)) (+ 0.208333 (* -0.008333 x))))
* * * * [misc]progress:  [ 84 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (* (exp (+ 1.0 (* x -5.0))) (exp (+ 1.0 (* x -5.0)))) (exp (+ 1.0 (* x -5.0)))) (* (* (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (exp (+ 1.0 (* x -5.0))) (exp (+ 1.0 (* x -5.0)))) (exp (+ 1.0 (* x -5.0)))) (* (* (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (490 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (* (pow (pow (exp x) (pow x 3)) (+ (* -0.008333 x) 0.208333)) (pow (pow (exp x) (pow x 3)) (+ (* -0.008333 x) 0.208333)))) (* (* (pow (pow (exp x) (pow x 3)) (+ (* -0.008333 x) 0.208333)) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (exp (+ (* -5.0 x) 1.0)) 3)))
* [exit]simplify:  Simplified to (* (* (* (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (* (pow (pow (exp x) (pow x 3)) (+ (* -0.008333 x) 0.208333)) (pow (pow (exp x) (pow x 3)) (+ (* -0.008333 x) 0.208333)))) (* (* (pow (pow (exp x) (pow x 3)) (+ (* -0.008333 x) 0.208333)) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (exp (+ (* -5.0 x) 1.0)) 3)))
* * * * [misc]progress:  [ 85 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (381 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (exp (+ (* -5.0 x) 1.0))) (pow (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)) 3)) (* (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (exp (+ (* -5.0 x) 1.0))) (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (exp (+ (* -5.0 x) 1.0)))))
* [exit]simplify:  Simplified to (* (* (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (exp (+ (* -5.0 x) 1.0))) (pow (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)) 3)) (* (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (exp (+ (* -5.0 x) 1.0))) (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (exp (+ (* -5.0 x) 1.0)))))
* * * * [misc]progress:  [ 86 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) (cbrt (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))) (cbrt (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) (cbrt (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (98 enodes)
* * [misc]simplify:  iters left: 1 (102 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (exp (+ (* -5.0 x) 1.0)) (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (pow (pow (exp x) (pow x 3)) (+ 0.208333 (* -0.008333 x)))))) (cbrt (* (exp (+ (* -5.0 x) 1.0)) (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (pow (pow (exp x) (pow x 3)) (+ 0.208333 (* -0.008333 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (exp (+ (* -5.0 x) 1.0)) (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (pow (pow (exp x) (pow x 3)) (+ 0.208333 (* -0.008333 x)))))) (cbrt (* (exp (+ (* -5.0 x) 1.0)) (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (pow (pow (exp x) (pow x 3)) (+ 0.208333 (* -0.008333 x)))))))
* [enter]simplify:  Simplifying (cbrt (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (103 enodes)
* * [misc]simplify:  iters left: 1 (109 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (pow (pow (exp x) (pow x 3)) (+ 0.208333 (* -0.008333 x)))) (exp (+ (* -5.0 x) 1.0))))
* [exit]simplify:  Simplified to (cbrt (* (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (pow (pow (exp x) (pow x 3)) (+ 0.208333 (* -0.008333 x)))) (exp (+ (* -5.0 x) 1.0))))
* * * * [misc]progress:  [ 87 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))) (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))) (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (282 enodes)
* [exit]simplify:  Simplified to (pow (* (exp (+ (* -5.0 x) 1.0)) (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (pow (pow (exp x) (pow x 3)) (+ 0.208333 (* -0.008333 x))))) 3)
* [exit]simplify:  Simplified to (pow (* (exp (+ (* -5.0 x) 1.0)) (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (pow (pow (exp x) (pow x 3)) (+ 0.208333 (* -0.008333 x))))) 3)
* * * * [misc]progress:  [ 88 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (sqrt (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) (sqrt (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (103 enodes)
* * [misc]simplify:  iters left: 1 (109 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (pow (pow (exp x) (pow x 3)) (+ 0.208333 (* -0.008333 x)))) (exp (+ (* -5.0 x) 1.0))))
* [exit]simplify:  Simplified to (sqrt (* (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (pow (pow (exp x) (pow x 3)) (+ 0.208333 (* -0.008333 x)))) (exp (+ (* -5.0 x) 1.0))))
* [enter]simplify:  Simplifying (sqrt (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (103 enodes)
* * [misc]simplify:  iters left: 1 (109 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (pow (pow (exp x) (pow x 3)) (+ 0.208333 (* -0.008333 x)))) (exp (+ (* -5.0 x) 1.0))))
* [exit]simplify:  Simplified to (sqrt (* (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (pow (pow (exp x) (pow x 3)) (+ 0.208333 (* -0.008333 x)))) (exp (+ (* -5.0 x) 1.0))))
* * * * [misc]progress:  [ 89 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* 1 (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))))>
* * * * [misc]progress:  [ 90 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (* x -0.008333))) (pow (pow (exp x) (pow x 3)) 0.208333))))>
* [enter]simplify:  Simplifying (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (* x -0.008333)))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (76 enodes)
* * [misc]simplify:  iters left: 2 (97 enodes)
* * [misc]simplify:  iters left: 1 (101 enodes)
* [exit]simplify:  Simplified to (* (* (pow (pow (exp x) (pow x 3)) (* -0.008333 x)) (pow (exp (* x x)) (+ (* x -1.666667) 5.0))) (exp (+ (* -5.0 x) 1.0)))
* [exit]simplify:  Simplified to (* (* (pow (pow (exp x) (pow x 3)) (* -0.008333 x)) (pow (exp (* x x)) (+ (* x -1.666667) 5.0))) (exp (+ (* -5.0 x) 1.0)))
* * * * [misc]progress:  [ 91 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) (pow x 3)) (+ (* x -0.008333) 0.208333))) (pow (pow (cbrt (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) (pow x 3)) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (98 enodes)
* * [misc]simplify:  iters left: 1 (102 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) (pow x 3)) (+ (* x -0.008333) 0.208333)) (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (exp (+ (* -5.0 x) 1.0))))
* [exit]simplify:  Simplified to (* (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) (pow x 3)) (+ (* x -0.008333) 0.208333)) (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (exp (+ (* -5.0 x) 1.0))))
* * * * [misc]progress:  [ 92 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (sqrt (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))) (pow (pow (sqrt (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (sqrt (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (80 enodes)
* * [misc]simplify:  iters left: 2 (97 enodes)
* * [misc]simplify:  iters left: 1 (100 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (sqrt (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333)) (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (exp (+ (* -5.0 x) 1.0))))
* [exit]simplify:  Simplified to (* (pow (pow (sqrt (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333)) (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (exp (+ (* -5.0 x) 1.0))))
* * * * [misc]progress:  [ 93 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow 1 (pow x 3)) (+ (* x -0.008333) 0.208333))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow 1 (pow x 3)) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (80 enodes)
* * [misc]simplify:  iters left: 2 (112 enodes)
* * [misc]simplify:  iters left: 1 (116 enodes)
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (exp (+ (* -5.0 x) 1.0)))
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (exp (+ (* -5.0 x) 1.0)))
* * * * [misc]progress:  [ 94 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (* (cbrt (pow (exp x) (pow x 3))) (cbrt (pow (exp x) (pow x 3)))) (+ (* x -0.008333) 0.208333))) (pow (cbrt (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (* (cbrt (pow (exp x) (pow x 3))) (cbrt (pow (exp x) (pow x 3)))) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (98 enodes)
* * [misc]simplify:  iters left: 1 (102 enodes)
* [exit]simplify:  Simplified to (* (pow (* (cbrt (pow (exp x) (pow x 3))) (cbrt (pow (exp x) (pow x 3)))) (+ (* x -0.008333) 0.208333)) (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (exp (+ (* -5.0 x) 1.0))))
* [exit]simplify:  Simplified to (* (pow (* (cbrt (pow (exp x) (pow x 3))) (cbrt (pow (exp x) (pow x 3)))) (+ (* x -0.008333) 0.208333)) (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (exp (+ (* -5.0 x) 1.0))))
* * * * [misc]progress:  [ 95 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (sqrt (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))) (pow (sqrt (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (sqrt (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (80 enodes)
* * [misc]simplify:  iters left: 2 (97 enodes)
* * [misc]simplify:  iters left: 1 (100 enodes)
* [exit]simplify:  Simplified to (* (pow (sqrt (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333)) (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (exp (+ (* -5.0 x) 1.0))))
* [exit]simplify:  Simplified to (* (pow (sqrt (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333)) (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (exp (+ (* -5.0 x) 1.0))))
* * * * [misc]progress:  [ 96 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow 1 (+ (* x -0.008333) 0.208333))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow 1 (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (64 enodes)
* * [misc]simplify:  iters left: 2 (94 enodes)
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (exp (+ (* -5.0 x) 1.0)))
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (exp (+ (* -5.0 x) 1.0)))
* * * * [misc]progress:  [ 97 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (* (cbrt (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))) (cbrt (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))) (cbrt (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))))>
* [enter]simplify:  Simplifying (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (* (cbrt (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))) (cbrt (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (166 enodes)
* * [misc]simplify:  iters left: 1 (197 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (pow (pow (exp x) (pow x 3)) (+ 0.208333 (* -0.008333 x)))) (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (exp (+ (* -5.0 x) 1.0)))) (cbrt (pow (pow (exp x) (pow x 3)) (+ 0.208333 (* -0.008333 x)))))
* [exit]simplify:  Simplified to (* (* (cbrt (pow (pow (exp x) (pow x 3)) (+ 0.208333 (* -0.008333 x)))) (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (exp (+ (* -5.0 x) 1.0)))) (cbrt (pow (pow (exp x) (pow x 3)) (+ 0.208333 (* -0.008333 x)))))
* * * * [misc]progress:  [ 98 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (sqrt (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) (sqrt (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))))>
* [enter]simplify:  Simplifying (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (sqrt (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (80 enodes)
* * [misc]simplify:  iters left: 2 (97 enodes)
* * [misc]simplify:  iters left: 1 (100 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow (pow (exp x) (pow x 3)) (+ 0.208333 (* -0.008333 x)))) (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (exp (+ (* -5.0 x) 1.0))))
* [exit]simplify:  Simplified to (* (sqrt (pow (pow (exp x) (pow x 3)) (+ 0.208333 (* -0.008333 x)))) (* (pow (exp (* x x)) (+ (* x -1.666667) 5.0)) (exp (+ (* -5.0 x) 1.0))))
* * * * [misc]progress:  [ 99 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) 1) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) 1)
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (59 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* [exit]simplify:  Simplified to (* (exp (+ (* -5.0 x) 1.0)) (pow (exp (* x x)) (+ (* x -1.666667) 5.0)))
* [exit]simplify:  Simplified to (* (exp (+ (* -5.0 x) 1.0)) (pow (exp (* x x)) (+ (* x -1.666667) 5.0)))
* * * * [misc]progress:  [ 100 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))))>
* [enter]simplify:  Simplifying (* (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)) (pow (pow (exp x) (pow x 3)) (+ 0.208333 (* -0.008333 x))))
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)) (pow (pow (exp x) (pow x 3)) (+ 0.208333 (* -0.008333 x))))
* * * * [misc]progress:  [ 101 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)) (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))))))>
* * * * [misc]progress:  [ 102 / 113 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (- (+ (* 5.0 (pow x 2)) 1) (* 1.666667 (pow x 3)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (exp (+ 1.0 (* x -5.0))) (- (+ (* 5.0 (pow x 2)) 1) (* 1.666667 (pow x 3)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (385 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ 1.0 (* -5.0 x)) (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333))) (log (- 1 (* (* x x) (- (* 1.666667 x) 5.0)))))
* * * * [misc]progress:  [ 103 / 113 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (exp (* (- 5.0 (* 1.666667 x)) (pow x 2)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (exp (+ 1.0 (* x -5.0))) (exp (* (- 5.0 (* 1.666667 x)) (pow x 2)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (244 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) 1.0) (+ (* (* x x) (- 5.0 (* 1.666667 x))) (* -5.0 x)))
* * * * [misc]progress:  [ 104 / 113 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (exp (* (- 5.0 (* 1.666667 x)) (pow x 2)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (exp (+ 1.0 (* x -5.0))) (exp (* (- 5.0 (* 1.666667 x)) (pow x 2)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (244 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) 1.0) (+ (* (* x x) (- 5.0 (* 1.666667 x))) (* -5.0 x)))
* * * * [misc]progress:  [ 105 / 113 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (- (+ (exp 1.0) (* 12.5 (* (exp 1.0) (pow x 2)))) (* 5.0 (* (exp 1.0) x))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (- (+ (exp 1.0) (* 12.5 (* (exp 1.0) (pow x 2)))) (* 5.0 (* (exp 1.0) x))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (120 enodes)
* * [misc]simplify:  iters left: 3 (324 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ 5.0 (* -1.666667 x)))) (log (+ (exp 1.0) (* (* x (exp 1.0)) (- (* 12.5 x) 5.0)))))
* * * * [misc]progress:  [ 106 / 113 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp (- 1.0 (* 5.0 x))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (exp (- 1.0 (* 5.0 x))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (143 enodes)
* * [misc]simplify:  iters left: 2 (321 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) (- 1.0 (* 5.0 x))))
* * * * [misc]progress:  [ 107 / 113 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp (- 1.0 (* 5.0 x))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (exp (- 1.0 (* 5.0 x))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (143 enodes)
* * [misc]simplify:  iters left: 2 (321 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) (- 1.0 (* 5.0 x))))
* * * * [misc]progress:  [ 108 / 113 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 5.0 (pow x 2)) 1.0) (* 5.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 5.0 (pow x 2)) 1.0) (* 5.0 x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (60 enodes)
* * [misc]simplify:  iters left: 1 (75 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) 5.0) (- 1.0 (* 5.0 x)))
* * * * [misc]progress:  [ 109 / 113 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (- 1.0 (* 5.0 x))) (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (exp (* (- 5.0 (* 1.666667 x)) (pow x 2)))))))>
* [enter]simplify:  Simplifying (log (* (exp (- 1.0 (* 5.0 x))) (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (exp (* (- 5.0 (* 1.666667 x)) (pow x 2))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (226 enodes)
* * [misc]simplify:  iters left: 2 (464 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (- 5.0 (* 1.666667 x))) (+ (- 1.0 (* x 5.0)) (* (* (* x x) (* x x)) (- 0.208333 (* 0.008333 x)))))
* * * * [misc]progress:  [ 110 / 113 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (* (exp (- 1.0 (* 5.0 x))) (exp (* (- 5.0 (* 1.666667 x)) (pow x 2)))))))>
* [enter]simplify:  Simplifying (log (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (* (exp (- 1.0 (* 5.0 x))) (exp (* (- 5.0 (* 1.666667 x)) (pow x 2))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (279 enodes)
* [exit]simplify:  Simplified to (- (+ (* (* (* x x) (* x x)) (- 0.208333 (* x 0.008333))) 1.0) (- (* 5.0 x) (* (* x x) (- 5.0 (* 1.666667 x)))))
* * * * [misc]progress:  [ 111 / 113 ] simplifiying candidate #<alt-event (Î» (x) (log (- (+ (exp 1.0) (* 17.5 (* (exp 1.0) (pow x 2)))) (* 5.0 (* (exp 1.0) x)))))>
* [enter]simplify:  Simplifying (log (- (+ (exp 1.0) (* 17.5 (* (exp 1.0) (pow x 2)))) (* 5.0 (* (exp 1.0) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (153 enodes)
* * [misc]simplify:  iters left: 1 (214 enodes)
* [exit]simplify:  Simplified to (+ (log (- (* 17.5 (* x x)) (- (* 5.0 x) 1))) 1.0)
* * * * [misc]progress:  [ 112 / 113 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (- 1.0 (* 5.0 x))) (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (exp (* (- 5.0 (* 1.666667 x)) (pow x 2)))))))>
* [enter]simplify:  Simplifying (log (* (exp (- 1.0 (* 5.0 x))) (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (exp (* (- 5.0 (* 1.666667 x)) (pow x 2))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (226 enodes)
* * [misc]simplify:  iters left: 2 (464 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (- 5.0 (* 1.666667 x))) (+ (- 1.0 (* x 5.0)) (* (* (* x x) (* x x)) (- 0.208333 (* 0.008333 x)))))
* * * * [misc]progress:  [ 113 / 113 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (- 1.0 (* 5.0 x))) (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (exp (* (- 5.0 (* 1.666667 x)) (pow x 2)))))))>
* [enter]simplify:  Simplifying (log (* (exp (- 1.0 (* 5.0 x))) (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (exp (* (- 5.0 (* 1.666667 x)) (pow x 2))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (226 enodes)
* * [misc]simplify:  iters left: 2 (464 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (- 5.0 (* 1.666667 x))) (+ (- 1.0 (* x 5.0)) (* (* (* x x) (* x x)) (- 0.208333 (* 0.008333 x)))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 1 2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 1 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 1 2 2)
* [misc]approximate:  Taking taylor expansion of (pow (exp (* x x)) 5.0) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 5.0 (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 5.0 (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 5.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 5.0 1) (+ (* 0 0) (* 0 0))) into 5.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 5.0 (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 5.0 (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 5.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 5.0 1) (+ (* 0 0) (* 0 0))) into 5.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 5.0 1) 1)))) into 5.0
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 5.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 1) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 1) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1/2) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 5.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 5.0 2) 2)) (* (/ (pow 0 1) 1)))) into 12.5
* [misc]backup-simplify:  Simplify 12.5 into 12.5
* [misc]backup-simplify:  Simplify (+ (* 12.5 (pow x 4)) (+ (* 5.0 (pow x 2)) 1)) into (+ (* 5.0 (pow x 2)) (+ (* 12.5 (pow x 4)) 1))
* [misc]approximate:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) 5.0) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 5.0 (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 5.0 (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 5.0 (/ 1 (pow x 2))) into (/ 5.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (/ 5.0 (pow x 2))) into (exp (/ 5.0 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 5.0 (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 5.0 (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 5.0 (/ 1 (pow x 2))) into (/ 5.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (/ 5.0 (pow x 2))) into (exp (/ 5.0 (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ 5.0 (pow x 2))) into (exp (/ 5.0 (pow x 2)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (* 0 (/ 1 (pow x 2)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ 1 (pow x 2))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ 1 (pow x 2))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ 1 (pow x 2))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 2))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ 1 (pow x 2))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ 1 (pow x 2))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 2))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ 1 (pow x 2))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ 1 (pow x 2))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 2))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ 1 (pow x 2))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ 1 (pow x 2))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ 1 (pow x 2))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ 1 (pow x 2))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 5.0 (pow (/ 1 x) 2))) into (exp (* 5.0 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) 5.0) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 5.0 (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 5.0 (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 5.0 (/ 1 (pow x 2))) into (/ 5.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (/ 5.0 (pow x 2))) into (exp (/ 5.0 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 5.0 (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 5.0 (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 5.0 (/ 1 (pow x 2))) into (/ 5.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (/ 5.0 (pow x 2))) into (exp (/ 5.0 (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ 5.0 (pow x 2))) into (exp (/ 5.0 (pow x 2)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (* 0 (/ 1 (pow x 2)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ 1 (pow x 2))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ 1 (pow x 2))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ 1 (pow x 2))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 2))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ 1 (pow x 2))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ 1 (pow x 2))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 2))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ 1 (pow x 2))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ 1 (pow x 2))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 2))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ 1 (pow x 2))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ 1 (pow x 2))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ 1 (pow x 2))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ 1 (pow x 2))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 5.0 (pow (/ 1 (- x)) 2))) into (exp (* 5.0 (pow x 2)))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (exp (+ 1.0 (* x -5.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* x -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* x -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* x -5.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 0 -5.0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* x -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* x -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* x -5.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 0 -5.0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -5.0)) into (- 5.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 5.0)) into (- 5.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 5.0) 1) 1)))) into (* -5.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (* -5.0 (exp 1.0)) into (* -5.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -5.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 5.0) 2) 2)) (* (/ (pow 0 1) 1)))) into (* 12.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (* 12.5 (exp 1.0)) into (* 12.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (* 12.5 (exp 1.0)) (pow x 2)) (+ (* (* -5.0 (exp 1.0)) x) (exp 1.0))) into (- (+ (exp 1.0) (* 12.5 (* (exp 1.0) (pow x 2)))) (* 5.0 (* (exp 1.0) x)))
* [misc]approximate:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -5.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 x) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 1 -5.0) into -5.0
* [misc]backup-simplify:  Simplify (+ 0 -5.0) into (- 5.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 x) -5.0))) into (exp (- 1.0 (* 5.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 x) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 1 -5.0) into -5.0
* [misc]backup-simplify:  Simplify (+ 0 -5.0) into (- 5.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 x) -5.0))) into (exp (- 1.0 (* 5.0 (/ 1 x))))
* [misc]backup-simplify:  Simplify (exp (- 1.0 (* 5.0 (/ 1 x)))) into (exp (- 1.0 (* 5.0 (/ 1 x))))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (- 1.0 (* 5.0 (/ 1 (/ 1 x))))) into (exp (- 1.0 (* 5.0 x)))
* [misc]approximate:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 (- x)) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* -1 -5.0) into 5.0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) into (exp (+ (* 5.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 (- x)) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* -1 -5.0) into 5.0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) into (exp (+ (* 5.0 (/ 1 x)) 1.0))
* [misc]backup-simplify:  Simplify (exp (+ (* 5.0 (/ 1 x)) 1.0)) into (exp (+ 1.0 (* 5.0 (/ 1 x))))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* 5.0 (/ 1 (/ 1 (- x)))))) into (exp (- 1.0 (* 5.0 x)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* x -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* x -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* x -5.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 0 -5.0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (* -1.666667 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 x) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 x) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 x) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* -1.666667 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 1) (* 0 0)) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* (- 1.666667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* (- 1.666667) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 1.666667) 1) (+ (* 0 0) (* 0 0)))) into (- 1.666667)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 5.0 (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 5.0 (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 5.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 5.0 1) (+ (* 0 0) (* 0 0))) into 5.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -0.008333) 0.208333) (log (pow (exp x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -0.008333) 0.208333) (log (pow (exp x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.008333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (* 0 0)) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -0.008333) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.208333) into 0.208333
* [misc]backup-simplify:  Simplify (* 0.208333 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.008333)) into (- 0.008333)
* [misc]backup-simplify:  Simplify (+ (- 0.008333) 0) into (- 0.008333)
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (* (- 0.008333) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.008333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (+ (* (- 0.008333) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.008333)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (+ (* (- 0.008333) 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1) 1)) (pow 1 1)))) 24) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.008333))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 1) (+ (* (- 0.008333) 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0.208333
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (log (exp 1.0)) into 1.0
* [misc]taylor:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* x -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* x -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* x -5.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 0 -5.0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (* -1.666667 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 x) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 x) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 x) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* -1.666667 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 1) (* 0 0)) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* (- 1.666667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* (- 1.666667) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 1.666667) 1) (+ (* 0 0) (* 0 0)))) into (- 1.666667)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 5.0 (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 5.0 (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 5.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 5.0 1) (+ (* 0 0) (* 0 0))) into 5.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -0.008333) 0.208333) (log (pow (exp x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -0.008333) 0.208333) (log (pow (exp x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.008333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (* 0 0)) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -0.008333) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.208333) into 0.208333
* [misc]backup-simplify:  Simplify (* 0.208333 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.008333)) into (- 0.008333)
* [misc]backup-simplify:  Simplify (+ (- 0.008333) 0) into (- 0.008333)
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (* (- 0.008333) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.008333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (+ (* (- 0.008333) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.008333)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (+ (* (- 0.008333) 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1) 1)) (pow 1 1)))) 24) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.008333))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 1) (+ (* (- 0.008333) 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0.208333
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (log (exp 1.0)) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -5.0)) into (- 5.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 5.0)) into (- 5.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 5.0) 1) 1)))) into (* -5.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (* (* -5.0 (exp 1.0)) 1)) into (- (* 5.0 (exp 1.0)))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (* (- (* 5.0 (exp 1.0))) 1)) into (- (* 5.0 (exp 1.0)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* 5.0 (exp 1.0)))) 1)) (pow (exp 1.0) 1)))) 1) into -5.0
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 5.0 1) 1)))) into 5.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 5.0) (+ (* 0 0) (* 0 1))) into 5.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -5.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 5.0) 2) 2)) (* (/ (pow 0 1) 1)))) into (* 12.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 5.0) (+ (* (* -5.0 (exp 1.0)) 0) (* (* 12.5 (exp 1.0)) 1))) into (* 17.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (+ (* (- (* 5.0 (exp 1.0))) 0) (* (* 17.5 (exp 1.0)) 1))) into (* 17.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* 5.0 (exp 1.0)))) 2)) (pow (exp 1.0) 2))) (* 1 (/ (* 1 (pow (* 2 (* 17.5 (exp 1.0))) 1)) (pow (exp 1.0) 1)))) 2) into 5.0
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]backup-simplify:  Simplify (+ (* 5.0 (pow x 2)) (+ (* -5.0 x) 1.0)) into (- (+ (* 5.0 (pow x 2)) 1.0) (* 5.0 x))
* [misc]approximate:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (* (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) (pow (exp (* (/ 1 x) (/ 1 x))) 5.0))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (* (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) (pow (exp (* (/ 1 x) (/ 1 x))) 5.0))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (* (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) (pow (exp (* (/ 1 x) (/ 1 x))) 5.0))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (* (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) (pow (exp (* (/ 1 x) (/ 1 x))) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 x) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 1 -5.0) into -5.0
* [misc]backup-simplify:  Simplify (+ 0 -5.0) into (- 5.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 x) -5.0))) into (exp (- 1.0 (* 5.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) (pow (exp (* (/ 1 x) (/ 1 x))) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 1) into -1.666667
* [misc]backup-simplify:  Simplify (* -1.666667 (/ 1 (pow x 2))) into (/ -1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ -1.666667 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 5.0 (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 5.0 (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 5.0 (/ 1 (pow x 2))) into (/ 5.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (/ 5.0 (pow x 2))) into (exp (/ 5.0 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.008333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 x)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (/ 1 (pow x 4))) into (exp (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 4)))) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 1 -0.008333) into -0.008333
* [misc]backup-simplify:  Simplify (+ -0.008333 0) into (- 0.008333)
* [misc]backup-simplify:  Simplify (* (- 0.008333) (/ 1 (pow x 4))) into (/ -0.008333 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) into (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))
* [misc]backup-simplify:  Simplify (* (exp (/ -1.666667 (pow x 3))) (exp (/ 5.0 (pow x 2)))) into (* (exp (/ 5.0 (pow x 2))) (exp (/ -1.666667 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (* (exp (/ 5.0 (pow x 2))) (exp (/ -1.666667 (pow x 3))))) into (* (exp (/ 5.0 (pow x 2))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))
* [misc]backup-simplify:  Simplify (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))) into (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))))) into (log (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))))
* [misc]taylor:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (* (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) (pow (exp (* (/ 1 x) (/ 1 x))) 5.0))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (* (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) (pow (exp (* (/ 1 x) (/ 1 x))) 5.0))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (* (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) (pow (exp (* (/ 1 x) (/ 1 x))) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 x) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 1 -5.0) into -5.0
* [misc]backup-simplify:  Simplify (+ 0 -5.0) into (- 5.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 x) -5.0))) into (exp (- 1.0 (* 5.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) (pow (exp (* (/ 1 x) (/ 1 x))) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 1) into -1.666667
* [misc]backup-simplify:  Simplify (* -1.666667 (/ 1 (pow x 2))) into (/ -1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ -1.666667 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 5.0 (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 5.0 (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 5.0 (/ 1 (pow x 2))) into (/ 5.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (/ 5.0 (pow x 2))) into (exp (/ 5.0 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.008333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 x)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (/ 1 (pow x 4))) into (exp (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 4)))) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 1 -0.008333) into -0.008333
* [misc]backup-simplify:  Simplify (+ -0.008333 0) into (- 0.008333)
* [misc]backup-simplify:  Simplify (* (- 0.008333) (/ 1 (pow x 4))) into (/ -0.008333 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) into (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))
* [misc]backup-simplify:  Simplify (* (exp (/ -1.666667 (pow x 3))) (exp (/ 5.0 (pow x 2)))) into (* (exp (/ 5.0 (pow x 2))) (exp (/ -1.666667 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (* (exp (/ 5.0 (pow x 2))) (exp (/ -1.666667 (pow x 3))))) into (* (exp (/ 5.0 (pow x 2))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))
* [misc]backup-simplify:  Simplify (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))) into (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))))) into (log (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))))) into (log (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (* 0 (/ 1 (pow x 2)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.666667 (pow x 3))) 0) (* 0 (exp (/ 5.0 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ -1.666667 (pow x 3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))) 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ 1 (pow x 2))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.666667 (pow x 3))) 0) (+ (* 0 0) (* 0 (exp (/ 5.0 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (+ (* 0 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ -1.666667 (pow x 3))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))) 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ 1 (pow x 2))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.666667 (pow x 3))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 5.0 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ -1.666667 (pow x 3)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ 1 (pow x 2))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 2))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ 1 (pow x 2))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.666667 (pow x 3))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 5.0 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ -1.666667 (pow x 3))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ 1 (pow x 2))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 2))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ 1 (pow x 2))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.666667 (pow x 3))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 5.0 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ -1.666667 (pow x 3)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ 1 (pow x 2))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 2))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ 1 (pow x 2))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ 1 (pow x 2))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ 1 (pow x 2))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ 1 (pow x 2))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.666667 (pow x 3))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 5.0 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ -1.666667 (pow x 3))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (log (* (exp (/ 5.0 (pow (/ 1 x) 2))) (* (pow (pow (exp (/ 1 (/ 1 x))) (pow (/ 1 (/ 1 x)) 3)) (- 0.208333 (* 0.008333 (/ 1 (/ 1 x))))) (* (exp (/ -1.666667 (pow (/ 1 x) 3))) (exp (- 1.0 (* 5.0 (/ 1 (/ 1 x))))))))) into (log (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (* (exp (- 1.0 (* 5.0 x))) (* (exp (* -1.666667 (pow x 3))) (exp (* 5.0 (pow x 2)))))))
* [misc]approximate:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (* (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) 5.0))) (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (* (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) 5.0))) (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (* (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) 5.0))) (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (* (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 (- x)) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* -1 -5.0) into 5.0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) into (exp (+ (* 5.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (* (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 -1) into 1.666667
* [misc]backup-simplify:  Simplify (* 1.666667 (/ 1 (pow x 2))) into (/ 1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ 1.666667 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 5.0 (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 5.0 (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 5.0 (/ 1 (pow x 2))) into (/ 5.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (/ 5.0 (pow x 2))) into (exp (/ 5.0 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.008333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (/ -1 x)) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* -1 -0.008333) into 0.008333
* [misc]backup-simplify:  Simplify (+ 0.008333 0) into 0.008333
* [misc]backup-simplify:  Simplify (* 0.008333 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (* -0.008333 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) into (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))
* [misc]backup-simplify:  Simplify (* (exp (/ 1.666667 (pow x 3))) (exp (/ 5.0 (pow x 2)))) into (* (exp (/ 5.0 (pow x 2))) (exp (/ 1.666667 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (exp (/ 5.0 (pow x 2))) (exp (/ 1.666667 (pow x 3))))) into (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (exp (+ 1.0 (* 5.0 (/ 1 x))))))
* [misc]backup-simplify:  Simplify (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (exp (+ 1.0 (* 5.0 (/ 1 x)))))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))) into (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)))))) into (log (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x)))) (exp (+ 1.0 (* 5.0 (/ 1 x))))))))
* [misc]taylor:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (* (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) 5.0))) (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (* (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) 5.0))) (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (* (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 (- x)) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* -1 -5.0) into 5.0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) into (exp (+ (* 5.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (* (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 -1) into 1.666667
* [misc]backup-simplify:  Simplify (* 1.666667 (/ 1 (pow x 2))) into (/ 1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ 1.666667 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 5.0 (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 5.0 (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 5.0 (/ 1 (pow x 2))) into (/ 5.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (/ 5.0 (pow x 2))) into (exp (/ 5.0 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.008333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (/ -1 x)) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* -1 -0.008333) into 0.008333
* [misc]backup-simplify:  Simplify (+ 0.008333 0) into 0.008333
* [misc]backup-simplify:  Simplify (* 0.008333 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (* -0.008333 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) into (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))
* [misc]backup-simplify:  Simplify (* (exp (/ 1.666667 (pow x 3))) (exp (/ 5.0 (pow x 2)))) into (* (exp (/ 5.0 (pow x 2))) (exp (/ 1.666667 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (exp (/ 5.0 (pow x 2))) (exp (/ 1.666667 (pow x 3))))) into (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (exp (+ 1.0 (* 5.0 (/ 1 x))))))
* [misc]backup-simplify:  Simplify (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (exp (+ 1.0 (* 5.0 (/ 1 x)))))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))) into (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)))))) into (log (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x)))) (exp (+ 1.0 (* 5.0 (/ 1 x))))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x)))) (exp (+ 1.0 (* 5.0 (/ 1 x)))))))) into (log (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (* 0 (/ 1 (pow x 2)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.666667 (pow x 3))) 0) (* 0 (exp (/ 5.0 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ 1.666667 (pow x 3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (exp (+ 1.0 (* 5.0 (/ 1 x)))))) 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ 1 (pow x 2))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.666667 (pow x 3))) 0) (+ (* 0 0) (* 0 (exp (/ 5.0 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ 1.666667 (pow x 3))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (exp (+ 1.0 (* 5.0 (/ 1 x)))))) 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ 1 (pow x 2))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.666667 (pow x 3))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 5.0 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ 1.666667 (pow x 3)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (exp (+ 1.0 (* 5.0 (/ 1 x)))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ 1 (pow x 2))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 2))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ 1 (pow x 2))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.666667 (pow x 3))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 5.0 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ 1.666667 (pow x 3))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (exp (+ 1.0 (* 5.0 (/ 1 x)))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ 1 (pow x 2))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 2))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ 1 (pow x 2))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.666667 (pow x 3))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 5.0 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ 1.666667 (pow x 3)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (exp (+ 1.0 (* 5.0 (/ 1 x)))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ 1 (pow x 2))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 2))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ 1 (pow x 2))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ 1 (pow x 2))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 2))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ 1 (pow x 2))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ 1 (pow x 2))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ 1 (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ 1 (pow x 2))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 5.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 5.0 (pow x 2))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.666667 (pow x 3))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 5.0 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ 1.666667 (pow x 3))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (exp (+ 1.0 (* 5.0 (/ 1 x)))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (log (* (exp (/ 5.0 (pow (/ 1 (- x)) 2))) (* (exp (/ 1.666667 (pow (/ 1 (- x)) 3))) (* (exp (+ (* 5.0 (/ 1 (/ 1 (- x)))) 1.0)) (pow (pow (exp (/ -1 (/ 1 (- x)))) (pow (/ -1 (/ 1 (- x))) 3)) (+ (* 0.008333 (/ 1 (/ 1 (- x)))) 0.208333)))))) into (log (* (exp (* -1.666667 (pow x 3))) (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (* (exp (- 1.0 (* 5.0 x))) (exp (* 5.0 (pow x 2)))))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 1 2 1)
* [misc]approximate:  Taking taylor expansion of (pow (exp (* x x)) (* -1.666667 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (* -1.666667 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 x) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 x) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 x) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* -1.666667 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 1) (* 0 0)) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* (- 1.666667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* (- 1.666667) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 1.666667) 1) (+ (* 0 0) (* 0 0)))) into (- 1.666667)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (* -1.666667 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 x) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 x) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 x) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* -1.666667 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 1) (* 0 0)) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* (- 1.666667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* (- 1.666667) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 1.666667) 1) (+ (* 0 0) (* 0 0)))) into (- 1.666667)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 1.666667) 1) 1)))) into -1.666667
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 1) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 1) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1/2) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 1.666667) 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow (- 1.666667) 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 1 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 1 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 1) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 1) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 1/2) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 1.666667) 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow (- 1.666667) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow (- 1.666667) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 1 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 1 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 1 3) 6)) (* (/ (pow 1 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 1/6
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 1) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 1) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 1) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 1/2) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 1) 1) 1 (pow (* 24 1/2) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 1/6) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 1.666667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow (- 1.666667) 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow (- 1.666667) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 1.666667) 2) 2)) (* (/ (pow 0 1) 1)))) into 1.3888894444445
* [misc]backup-simplify:  Simplify 1.3888894444445 into 1.3888894444445
* [misc]backup-simplify:  Simplify (+ (* 1.3888894444445 (pow x 6)) (+ (* -1.666667 (pow x 3)) 1)) into (- (+ 1 (* 1.3888894444445 (pow x 6))) (* 1.666667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 1) into -1.666667
* [misc]backup-simplify:  Simplify (* -1.666667 (/ 1 (pow x 2))) into (/ -1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ -1.666667 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 1) into -1.666667
* [misc]backup-simplify:  Simplify (* -1.666667 (/ 1 (pow x 2))) into (/ -1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ -1.666667 (pow x 3)))
* [misc]backup-simplify:  Simplify (exp (/ -1.666667 (pow x 3))) into (exp (/ -1.666667 (pow x 3)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ -1.666667 (pow (/ 1 x) 3))) into (exp (* -1.666667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 -1) into 1.666667
* [misc]backup-simplify:  Simplify (* 1.666667 (/ 1 (pow x 2))) into (/ 1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ 1.666667 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 -1) into 1.666667
* [misc]backup-simplify:  Simplify (* 1.666667 (/ 1 (pow x 2))) into (/ 1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ 1.666667 (pow x 3)))
* [misc]backup-simplify:  Simplify (exp (/ 1.666667 (pow x 3))) into (exp (/ 1.666667 (pow x 3)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 1.666667 (pow (/ 1 (- x)) 3))) into (exp (* -1.666667 (pow x 3)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (exp (* (* x x) 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (* x x) 5.0)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to (* x (* x 5.0))
* [exit]simplify:  Simplified to (* x (* x 5.0))
* * * * [misc]progress:  [ 2 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (exp (* (log (exp (* x x))) 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (log (exp (* x x))) 5.0)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* [exit]simplify:  Simplified to (* x (* x 5.0))
* [exit]simplify:  Simplified to (* x (* x 5.0))
* * * * [misc]progress:  [ 3 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) (* 1 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* 1 5.0)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 5.0
* [exit]simplify:  Simplified to 5.0
* * * * [misc]progress:  [ 4 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* x 5.0)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* x 5.0)
* [exit]simplify:  Simplified to (* x 5.0)
* * * * [misc]progress:  [ 5 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (* (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) 5.0) (pow (cbrt (exp (* x x))) 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) 5.0)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) 5.0)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) 5.0)
* [enter]simplify:  Simplifying (pow (cbrt (exp (* x x))) 5.0)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp (* x x))) 5.0)
* [exit]simplify:  Simplified to (pow (cbrt (exp (* x x))) 5.0)
* * * * [misc]progress:  [ 6 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (* (pow (sqrt (exp (* x x))) 5.0) (pow (sqrt (exp (* x x))) 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp (* x x))) 5.0)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) 5.0)
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) 5.0)
* [enter]simplify:  Simplifying (pow (sqrt (exp (* x x))) 5.0)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) 5.0)
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) 5.0)
* * * * [misc]progress:  [ 7 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (* (pow 1 5.0) (pow (exp (* x x)) 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (pow 1 5.0)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp (* x x)) 5.0)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) 5.0)
* [exit]simplify:  Simplified to (pow (exp (* x x)) 5.0)
* * * * [misc]progress:  [ 8 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (pow (exp (* x x)) 5.0) 1))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 9 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (exp (log (pow (exp (* x x)) 5.0))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (pow (exp (* x x)) 5.0))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* [exit]simplify:  Simplified to (* (* 5.0 x) x)
* [exit]simplify:  Simplified to (* (* 5.0 x) x)
* * * * [misc]progress:  [ 10 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (log (exp (pow (exp (* x x)) 5.0))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (exp (pow (exp (* x x)) 5.0))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp (* x x)) 5.0))
* [exit]simplify:  Simplified to (exp (pow (exp (* x x)) 5.0))
* * * * [misc]progress:  [ 11 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (* (* (cbrt (pow (exp (* x x)) 5.0)) (cbrt (pow (exp (* x x)) 5.0))) (cbrt (pow (exp (* x x)) 5.0))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp (* x x)) 5.0)) (cbrt (pow (exp (* x x)) 5.0)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp (* x x)) 5.0)) (cbrt (pow (exp (* x x)) 5.0)))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp (* x x)) 5.0)) (cbrt (pow (exp (* x x)) 5.0)))
* [enter]simplify:  Simplifying (cbrt (pow (exp (* x x)) 5.0))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp (* x x)) 5.0))
* [exit]simplify:  Simplified to (cbrt (pow (exp (* x x)) 5.0))
* * * * [misc]progress:  [ 12 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (cbrt (* (* (pow (exp (* x x)) 5.0) (pow (exp (* x x)) 5.0)) (pow (exp (* x x)) 5.0))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (* (pow (exp (* x x)) 5.0) (pow (exp (* x x)) 5.0)) (pow (exp (* x x)) 5.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp (* x x)) 5.0) 3)
* [exit]simplify:  Simplified to (pow (pow (exp (* x x)) 5.0) 3)
* * * * [misc]progress:  [ 13 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (* (sqrt (pow (exp (* x x)) 5.0)) (sqrt (pow (exp (* x x)) 5.0))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp (* x x)) 5.0))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) 5.0))
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) 5.0))
* [enter]simplify:  Simplifying (sqrt (pow (exp (* x x)) 5.0))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) 5.0))
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) 5.0))
* * * * [misc]progress:  [ 14 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (* 1 (pow (exp (* x x)) 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 15 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (exp (+ 1.0 (* x -5.0))) 1) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 16 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (exp (* (cbrt (+ 1.0 (* x -5.0))) (cbrt (+ 1.0 (* x -5.0))))) (cbrt (+ 1.0 (* x -5.0)))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (+ 1.0 (* x -5.0))) (cbrt (+ 1.0 (* x -5.0)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* -5.0 x) 1.0)) (cbrt (+ (* -5.0 x) 1.0))))
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* -5.0 x) 1.0)) (cbrt (+ (* -5.0 x) 1.0))))
* * * * [misc]progress:  [ 17 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (exp (sqrt (+ 1.0 (* x -5.0)))) (sqrt (+ 1.0 (* x -5.0)))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (exp (sqrt (+ 1.0 (* x -5.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (exp (sqrt (+ (* -5.0 x) 1.0)))
* [exit]simplify:  Simplified to (exp (sqrt (+ (* -5.0 x) 1.0)))
* * * * [misc]progress:  [ 18 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (exp 1) (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (exp 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to E
* [exit]simplify:  Simplified to E
* * * * [misc]progress:  [ 19 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp 1.0) (exp (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (exp 1.0)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (exp 1.0)
* [exit]simplify:  Simplified to (exp 1.0)
* [enter]simplify:  Simplifying (exp (* x -5.0))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* [exit]simplify:  Simplified to (exp (* x -5.0))
* [exit]simplify:  Simplified to (exp (* x -5.0))
* * * * [misc]progress:  [ 20 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 21 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (log (exp (+ 1.0 (* x -5.0))))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (exp (+ 1.0 (* x -5.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* * [misc]simplify:  iters left: 1 (44 enodes)
* [exit]simplify:  Simplified to (+ 1.0 (* -5.0 x))
* [exit]simplify:  Simplified to (+ 1.0 (* -5.0 x))
* * * * [misc]progress:  [ 22 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (log (exp (exp (+ 1.0 (* x -5.0))))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (exp (exp (+ 1.0 (* x -5.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* [exit]simplify:  Simplified to (pow (exp (exp 1.0)) (exp (* -5.0 x)))
* [exit]simplify:  Simplified to (pow (exp (exp 1.0)) (exp (* -5.0 x)))
* * * * [misc]progress:  [ 23 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (* (cbrt (exp (+ 1.0 (* x -5.0)))) (cbrt (exp (+ 1.0 (* x -5.0))))) (cbrt (exp (+ 1.0 (* x -5.0))))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (cbrt (exp (+ 1.0 (* x -5.0)))) (cbrt (exp (+ 1.0 (* x -5.0)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (* (cbrt (exp (+ (* -5.0 x) 1.0))) (cbrt (exp (+ (* -5.0 x) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (exp (+ (* -5.0 x) 1.0))) (cbrt (exp (+ (* -5.0 x) 1.0))))
* [enter]simplify:  Simplifying (cbrt (exp (+ 1.0 (* x -5.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (cbrt (exp (+ (* -5.0 x) 1.0)))
* [exit]simplify:  Simplified to (cbrt (exp (+ (* -5.0 x) 1.0)))
* * * * [misc]progress:  [ 24 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (* (* (exp (+ 1.0 (* x -5.0))) (exp (+ 1.0 (* x -5.0)))) (exp (+ 1.0 (* x -5.0))))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (* (exp (+ 1.0 (* x -5.0))) (exp (+ 1.0 (* x -5.0)))) (exp (+ 1.0 (* x -5.0))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (161 enodes)
* * [misc]simplify:  iters left: 1 (228 enodes)
* [exit]simplify:  Simplified to (pow (exp (+ (* -5.0 x) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (exp (+ (* -5.0 x) 1.0)) 3)
* * * * [misc]progress:  [ 25 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (sqrt (exp (+ 1.0 (* x -5.0)))) (sqrt (exp (+ 1.0 (* x -5.0))))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (sqrt (exp (+ 1.0 (* x -5.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (sqrt (exp (+ (* -5.0 x) 1.0)))
* [exit]simplify:  Simplified to (sqrt (exp (+ (* -5.0 x) 1.0)))
* [enter]simplify:  Simplifying (sqrt (exp (+ 1.0 (* x -5.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (sqrt (exp (+ (* -5.0 x) 1.0)))
* [exit]simplify:  Simplified to (sqrt (exp (+ (* -5.0 x) 1.0)))
* * * * [misc]progress:  [ 26 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* 1 (exp (+ 1.0 (* x -5.0)))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 27 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0)))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (109 enodes)
* * [misc]simplify:  iters left: 2 (226 enodes)
* * [misc]simplify:  iters left: 1 (314 enodes)
* [exit]simplify:  Simplified to (+ (+ (* -5.0 x) 1.0) (* (* x x) (+ 5.0 (* x -1.666667))))
* [exit]simplify:  Simplified to (+ (+ (* -5.0 x) 1.0) (* (* x x) (+ 5.0 (* x -1.666667))))
* [enter]simplify:  Simplifying (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (87 enodes)
* * [misc]simplify:  iters left: 1 (208 enodes)
* [exit]simplify:  Simplified to (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 28 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))))>
* [enter]simplify:  Simplifying (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (190 enodes)
* * [misc]simplify:  iters left: 2 (442 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) (+ (* (* x x) (+ (* x -1.666667) 5.0)) (+ (* -5.0 x) 1.0)))
* [exit]simplify:  Simplified to (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) (+ (* (* x x) (+ (* x -1.666667) 5.0)) (+ (* -5.0 x) 1.0)))
* * * * [misc]progress:  [ 29 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (pow (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) 1))>
* * * * [misc]progress:  [ 30 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (* (* x x) 5.0))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 31 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (* (* x x) 5.0))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 32 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (* (* x x) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 33 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (* (* x x) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 34 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (* (* x x) 5.0))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 35 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (* (log (exp (* x x))) 5.0))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 36 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (* (log (exp (* x x))) 5.0))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 37 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (* (log (exp (* x x))) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 38 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (* (log (exp (* x x))) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 39 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (* (log (exp (* x x))) 5.0))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 40 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (log (pow (exp (* x x)) 5.0)))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 41 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (log (pow (exp (* x x)) 5.0)))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 42 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (log (pow (exp (* x x)) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 43 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (log (pow (exp (* x x)) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 44 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (log (pow (exp (* x x)) 5.0)))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 45 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (* (* x x) 5.0))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 46 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (* (* x x) 5.0))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 47 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (* (* x x) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 48 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (* (* x x) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 49 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (* (* x x) 5.0))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 50 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (* (log (exp (* x x))) 5.0))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 51 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (* (log (exp (* x x))) 5.0))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 52 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (* (log (exp (* x x))) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 53 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (* (log (exp (* x x))) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 54 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (* (log (exp (* x x))) 5.0))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 55 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (log (pow (exp (* x x)) 5.0)))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 56 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (log (pow (exp (* x x)) 5.0)))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 57 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (log (pow (exp (* x x)) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 58 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (log (pow (exp (* x x)) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 59 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (log (pow (exp (* x x)) 5.0)))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 60 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (* (* x x) 5.0))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 61 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (* (* x x) 5.0))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 62 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (* (* x x) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 63 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (* (* x x) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 64 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (* (* x x) 5.0))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 65 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (* (log (exp (* x x))) 5.0))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 66 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (* (log (exp (* x x))) 5.0))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 67 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (* (log (exp (* x x))) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 68 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (* (log (exp (* x x))) 5.0))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 69 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (* (log (exp (* x x))) 5.0))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 70 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (log (pow (exp (* x x)) 5.0)))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 71 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (log (pow (exp (* x x)) 5.0)))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 72 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (log (pow (exp (* x x)) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 73 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (log (pow (exp (* x x)) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 74 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (log (pow (exp (* x x)) 5.0)))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 75 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (log (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0)))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 76 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (log (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0)))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 77 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (log (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 78 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (log (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 79 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (log (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0)))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 80 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0)))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 81 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0)))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 82 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 83 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 84 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0)))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 85 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 86 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (log (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (192 enodes)
* * [misc]simplify:  iters left: 2 (449 enodes)
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (+ (* x -5.0) (* (* x x) (+ 5.0 (* x -1.666667))))))
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (+ (* x -5.0) (* (* x x) (+ 5.0 (* x -1.666667))))))
* * * * [misc]progress:  [ 87 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (exp (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (222 enodes)
* [exit]simplify:  Simplified to (* (exp (+ (* 5.0 (* x x)) (* (* x -1.666667) (* x x)))) (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)) (exp (+ (* -5.0 x) 1.0))))
* [exit]simplify:  Simplified to (* (exp (+ (* 5.0 (* x x)) (* (* x -1.666667) (* x x)))) (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)) (exp (+ (* -5.0 x) 1.0))))
* * * * [misc]progress:  [ 88 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))) (cbrt (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))) (cbrt (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (* (cbrt (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))) (cbrt (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (192 enodes)
* * [misc]simplify:  iters left: 2 (446 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333)) (+ (+ 1.0 (* x -5.0)) (* (* x x) (+ 5.0 (* x -1.666667)))))) (cbrt (+ (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333)) (+ (+ 1.0 (* x -5.0)) (* (* x x) (+ 5.0 (* x -1.666667)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333)) (+ (+ 1.0 (* x -5.0)) (* (* x x) (+ 5.0 (* x -1.666667)))))) (cbrt (+ (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333)) (+ (+ 1.0 (* x -5.0)) (* (* x x) (+ 5.0 (* x -1.666667)))))))
* [enter]simplify:  Simplifying (cbrt (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (192 enodes)
* * [misc]simplify:  iters left: 2 (449 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (+ (* x -5.0) (* (* x x) (+ 5.0 (* x -1.666667))))))
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (+ (* x -5.0) (* (* x x) (+ 5.0 (* x -1.666667))))))
* * * * [misc]progress:  [ 89 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (* (* (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (291 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) (+ (+ (* (* x -1.666667) (* x x)) (* 5.0 (* x x))) (+ 1.0 (* -5.0 x)))) 3)
* [exit]simplify:  Simplified to (pow (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) (+ (+ (* (* x -1.666667) (* x x)) (* 5.0 (* x x))) (+ 1.0 (* -5.0 x)))) 3)
* * * * [misc]progress:  [ 90 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))) (sqrt (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (sqrt (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (192 enodes)
* * [misc]simplify:  iters left: 2 (449 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (+ (* x -5.0) (* (* x x) (+ 5.0 (* x -1.666667))))))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (+ (* x -5.0) (* (* x x) (+ 5.0 (* x -1.666667))))))
* [enter]simplify:  Simplifying (sqrt (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (192 enodes)
* * [misc]simplify:  iters left: 2 (449 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (+ (* x -5.0) (* (* x x) (+ 5.0 (* x -1.666667))))))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (+ (* x -5.0) (* (* x x) (+ 5.0 (* x -1.666667))))))
* * * * [misc]progress:  [ 91 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))))>
* * * * [misc]progress:  [ 92 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (exp (* (* x x) (* -1.666667 x))) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (* x x) (* -1.666667 x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x -1.666667) (* x x))
* [exit]simplify:  Simplified to (* (* x -1.666667) (* x x))
* * * * [misc]progress:  [ 93 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (exp (* (log (exp (* x x))) (* -1.666667 x))) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (log (exp (* x x))) (* -1.666667 x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x -1.666667))
* [exit]simplify:  Simplified to (* (* x x) (* x -1.666667))
* * * * [misc]progress:  [ 94 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* 1 (* -1.666667 x))) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* 1 (* -1.666667 x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* [exit]simplify:  Simplified to (* x -1.666667)
* [exit]simplify:  Simplified to (* x -1.666667)
* * * * [misc]progress:  [ 95 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp x) (* x (* -1.666667 x))) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* x (* -1.666667 x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (* x (* x -1.666667))
* [exit]simplify:  Simplified to (* x (* x -1.666667))
* * * * [misc]progress:  [ 96 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (pow (exp (* x x)) -1.666667) x) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) -1.666667)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) -1.666667)
* [exit]simplify:  Simplified to (pow (exp (* x x)) -1.666667)
* * * * [misc]progress:  [ 97 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (* (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (* -1.666667 x)) (pow (cbrt (exp (* x x))) (* -1.666667 x))) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (* -1.666667 x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (* -1.666667 x))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (* -1.666667 x))
* [enter]simplify:  Simplifying (pow (cbrt (exp (* x x))) (* -1.666667 x))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp (* x x))) (* x -1.666667))
* [exit]simplify:  Simplified to (pow (cbrt (exp (* x x))) (* x -1.666667))
* * * * [misc]progress:  [ 98 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (* (pow (sqrt (exp (* x x))) (* -1.666667 x)) (pow (sqrt (exp (* x x))) (* -1.666667 x))) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp (* x x))) (* -1.666667 x))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (* x -1.666667))
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (* x -1.666667))
* [enter]simplify:  Simplifying (pow (sqrt (exp (* x x))) (* -1.666667 x))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (* x -1.666667))
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (* x -1.666667))
* * * * [misc]progress:  [ 99 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (* (pow 1 (* -1.666667 x)) (pow (exp (* x x)) (* -1.666667 x))) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (pow 1 (* -1.666667 x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp (* x x)) (* -1.666667 x))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* -1.666667 x))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* -1.666667 x))
* * * * [misc]progress:  [ 100 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (pow (exp (* x x)) (* -1.666667 x)) 1) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 101 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (exp (log (pow (exp (* x x)) (* -1.666667 x)))) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (pow (exp (* x x)) (* -1.666667 x)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* -1.666667 x))
* [exit]simplify:  Simplified to (* (* x x) (* -1.666667 x))
* * * * [misc]progress:  [ 102 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (log (exp (pow (exp (* x x)) (* -1.666667 x)))) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (exp (pow (exp (* x x)) (* -1.666667 x)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp (* x x)) (* -1.666667 x)))
* [exit]simplify:  Simplified to (exp (pow (exp (* x x)) (* -1.666667 x)))
* * * * [misc]progress:  [ 103 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (* (* (cbrt (pow (exp (* x x)) (* -1.666667 x))) (cbrt (pow (exp (* x x)) (* -1.666667 x)))) (cbrt (pow (exp (* x x)) (* -1.666667 x)))) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp (* x x)) (* -1.666667 x))) (cbrt (pow (exp (* x x)) (* -1.666667 x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp (* x x)) (* -1.666667 x))) (cbrt (pow (exp (* x x)) (* -1.666667 x))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp (* x x)) (* -1.666667 x))) (cbrt (pow (exp (* x x)) (* -1.666667 x))))
* [enter]simplify:  Simplifying (cbrt (pow (exp (* x x)) (* -1.666667 x)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp (* x x)) (* -1.666667 x)))
* [exit]simplify:  Simplified to (cbrt (pow (exp (* x x)) (* -1.666667 x)))
* * * * [misc]progress:  [ 104 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (cbrt (* (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) (* -1.666667 x))) (pow (exp (* x x)) (* -1.666667 x)))) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) (* -1.666667 x))) (pow (exp (* x x)) (* -1.666667 x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp (* x x)) (* -1.666667 x)) 3)
* [exit]simplify:  Simplified to (pow (pow (exp (* x x)) (* -1.666667 x)) 3)
* * * * [misc]progress:  [ 105 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (* (sqrt (pow (exp (* x x)) (* -1.666667 x))) (sqrt (pow (exp (* x x)) (* -1.666667 x)))) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp (* x x)) (* -1.666667 x)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (* -1.666667 x)))
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (* -1.666667 x)))
* [enter]simplify:  Simplifying (sqrt (pow (exp (* x x)) (* -1.666667 x)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (* -1.666667 x)))
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (* -1.666667 x)))
* * * * [misc]progress:  [ 106 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (* 1 (pow (exp (* x x)) (* -1.666667 x))) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 107 / 118 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (+ (* 5.0 (pow x 2)) (+ (* 12.5 (pow x 4)) 1)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (+ (* 5.0 (pow x 2)) (+ (* 12.5 (pow x 4)) 1)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* (+ (* 12.5 (pow x 4)) (* x (* x 5.0))) (pow (exp (* x x)) (* x -1.666667))) (pow (exp (* x x)) (* x -1.666667)))) (+ (+ (* -5.0 x) 1.0) (* (+ 0.208333 (* x -0.008333)) (* (pow x 3) (log (exp x))))))
* * * * [misc]progress:  [ 108 / 118 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (exp (* 5.0 (pow x 2))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (exp (* 5.0 (pow x 2))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (215 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* 5.0 (* x x))) (+ (* (* x -1.666667) (log (exp (* x x)))) (+ 1.0 (* x -5.0))))
* * * * [misc]progress:  [ 109 / 118 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (exp (* 5.0 (pow x 2))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (exp (* 5.0 (pow x 2))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (215 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* 5.0 (* x x))) (+ (* (* x -1.666667) (log (exp (* x x)))) (+ 1.0 (* x -5.0))))
* * * * [misc]progress:  [ 110 / 118 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (- (+ (exp 1.0) (* 12.5 (* (exp 1.0) (pow x 2)))) (* 5.0 (* (exp 1.0) x))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (- (+ (exp 1.0) (* 12.5 (* (exp 1.0) (pow x 2)))) (* 5.0 (* (exp 1.0) x))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (447 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) 5.0) (* (* -1.666667 x) (* x x))) (* (+ 0.208333 (* x -0.008333)) (* (* x x) (* x x)))) (log (+ (* (* x (exp 1.0)) (- (* 12.5 x) 5.0)) (exp 1.0))))
* * * * [misc]progress:  [ 111 / 118 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp (- 1.0 (* 5.0 x))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (exp (- 1.0 (* 5.0 x))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (233 enodes)
* [exit]simplify:  Simplified to (+ (- 1.0 (* x 5.0)) (+ (+ (* (* -1.666667 x) (* x x)) (* 5.0 (* x x))) (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x)))))
* * * * [misc]progress:  [ 112 / 118 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp (- 1.0 (* 5.0 x))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (exp (- 1.0 (* 5.0 x))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (233 enodes)
* [exit]simplify:  Simplified to (+ (- 1.0 (* x 5.0)) (+ (+ (* (* -1.666667 x) (* x x)) (* 5.0 (* x x))) (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x)))))
* * * * [misc]progress:  [ 113 / 118 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 5.0 (pow x 2)) 1.0) (* 5.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 5.0 (pow x 2)) 1.0) (* 5.0 x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (60 enodes)
* * [misc]simplify:  iters left: 1 (75 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) 5.0) (- 1.0 (* 5.0 x)))
* * * * [misc]progress:  [ 114 / 118 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (* (exp (- 1.0 (* 5.0 x))) (* (exp (* -1.666667 (pow x 3))) (exp (* 5.0 (pow x 2))))))))>
* [enter]simplify:  Simplifying (log (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (* (exp (- 1.0 (* 5.0 x))) (* (exp (* -1.666667 (pow x 3))) (exp (* 5.0 (pow x 2)))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (- 1.0 (* x 5.0)) (+ (* (- 0.208333 (* x 0.008333)) (* (* x x) (* x x))) (* (+ (* -1.666667 x) 5.0) (* x x))))
* * * * [misc]progress:  [ 115 / 118 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.666667 (pow x 3))) (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (* (exp (- 1.0 (* 5.0 x))) (exp (* 5.0 (pow x 2))))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.666667 (pow x 3))) (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (* (exp (- 1.0 (* 5.0 x))) (exp (* 5.0 (pow x 2)))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (128 enodes)
* * [misc]simplify:  iters left: 3 (297 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (+ 5.0 (* -1.666667 x))) (- 1.0 (* x 5.0))) (* (- 0.208333 (* 0.008333 x)) (* (pow x 3) (log (exp x)))))
* * * * [misc]progress:  [ 116 / 118 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (- (+ 1 (* 1.3888894444445 (pow x 6))) (* 1.666667 (pow x 3))) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (exp (+ 1.0 (* x -5.0))) (* (- (+ 1 (* 1.3888894444445 (pow x 6))) (* 1.666667 (pow x 3))) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (+ (- 1 (* (* 1.666667 x) (* x x))) (* 1.3888894444445 (pow x 6)))) (* 5.0 (log (exp (* x x))))) (+ (+ (* -5.0 x) 1.0) (* (+ 0.208333 (* -0.008333 x)) (* (pow x 3) (log (exp x))))))
* * * * [misc]progress:  [ 117 / 118 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (exp (* -1.666667 (pow x 3))) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (exp (+ 1.0 (* x -5.0))) (* (exp (* -1.666667 (pow x 3))) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (214 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) 5.0) (* (* -1.666667 x) (* x x))) (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333))) (+ 1.0 (* -5.0 x)))
* * * * [misc]progress:  [ 118 / 118 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (exp (* -1.666667 (pow x 3))) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (exp (+ 1.0 (* x -5.0))) (* (exp (* -1.666667 (pow x 3))) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (214 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) 5.0) (* (* -1.666667 x) (* x x))) (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333))) (+ 1.0 (* -5.0 x)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 1 2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 1 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 1 2 2)
* [misc]approximate:  Taking taylor expansion of (pow (exp x) (* x 5.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (* x 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* x 5.0) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 5.0) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (* x 5.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 5.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 5.0)) into 5.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 5.0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1/2) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 5.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 5.0 1) (* 0 0))) into 5.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (* x 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* x 5.0) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 5.0) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (* x 5.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 5.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 5.0)) into 5.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 5.0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1/2) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 5.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 5.0 1) (* 0 0))) into 5.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 5.0 1) 1)))) into 5.0
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 3) 6)) (* (/ (pow 1 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 1/6
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 1) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 1) 1) (pow (* 2 1/2) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 1/6) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 5.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 5.0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 5.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 4) 24)) (* (/ (pow 1 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 1 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 1/24
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 1) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 1) 2) (pow (* 2 1/2) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 1/2) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 1) 1) 1 (pow (* 6 1/6) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1/24) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 5.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 5.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 5.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 5.0 2) 2)) (* (/ (pow 0 1) 1)))) into 12.5
* [misc]backup-simplify:  Simplify 12.5 into 12.5
* [misc]backup-simplify:  Simplify (+ (* 12.5 (pow x 4)) (+ (* 5.0 (pow x 2)) 1)) into (+ (* 5.0 (pow x 2)) (+ (* 12.5 (pow x 4)) 1))
* [misc]approximate:  Taking taylor expansion of (pow (exp (/ 1 x)) (* (/ 1 x) 5.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (* (/ 1 x) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 x) 5.0) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 5.0) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* 1 5.0) into 5.0
* [misc]backup-simplify:  Simplify (* 5.0 (/ 1 x)) into (/ 5.0 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 x) 5.0) (log (exp (/ 1 x))))) into (exp (/ 5.0 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (* (/ 1 x) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 x) 5.0) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 5.0) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* 1 5.0) into 5.0
* [misc]backup-simplify:  Simplify (* 5.0 (/ 1 x)) into (/ 5.0 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 x) 5.0) (log (exp (/ 1 x))))) into (exp (/ 5.0 (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ 5.0 (pow x 2))) into (exp (/ 5.0 (pow x 2)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 5.0 (pow (/ 1 x) 2))) into (exp (* 5.0 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (* (/ 1 (- x)) 5.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (* (/ 1 (- x)) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 (- x)) 5.0) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 5.0) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* -1 5.0) into -5.0
* [misc]backup-simplify:  Simplify (* -5.0 (/ -1 x)) into (/ 5.0 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 (- x)) 5.0) (log (exp (/ 1 (- x)))))) into (exp (/ 5.0 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (* (/ 1 (- x)) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 (- x)) 5.0) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 5.0) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* -1 5.0) into -5.0
* [misc]backup-simplify:  Simplify (* -5.0 (/ -1 x)) into (/ 5.0 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 (- x)) 5.0) (log (exp (/ 1 (- x)))))) into (exp (/ 5.0 (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ 5.0 (pow x 2))) into (exp (/ 5.0 (pow x 2)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 5.0 (pow (/ 1 (- x)) 2))) into (exp (* 5.0 (pow x 2)))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (exp (+ 1.0 (* x -5.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* x -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* x -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* x -5.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 0 -5.0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* x -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* x -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* x -5.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 0 -5.0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -5.0)) into (- 5.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 5.0)) into (- 5.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 5.0) 1) 1)))) into (* -5.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (* -5.0 (exp 1.0)) into (* -5.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -5.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 5.0) 2) 2)) (* (/ (pow 0 1) 1)))) into (* 12.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (* 12.5 (exp 1.0)) into (* 12.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (* 12.5 (exp 1.0)) (pow x 2)) (+ (* (* -5.0 (exp 1.0)) x) (exp 1.0))) into (- (+ (exp 1.0) (* 12.5 (* (exp 1.0) (pow x 2)))) (* 5.0 (* (exp 1.0) x)))
* [misc]approximate:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -5.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 x) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 1 -5.0) into -5.0
* [misc]backup-simplify:  Simplify (+ 0 -5.0) into (- 5.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 x) -5.0))) into (exp (- 1.0 (* 5.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 x) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 1 -5.0) into -5.0
* [misc]backup-simplify:  Simplify (+ 0 -5.0) into (- 5.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 x) -5.0))) into (exp (- 1.0 (* 5.0 (/ 1 x))))
* [misc]backup-simplify:  Simplify (exp (- 1.0 (* 5.0 (/ 1 x)))) into (exp (- 1.0 (* 5.0 (/ 1 x))))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (- 1.0 (* 5.0 (/ 1 (/ 1 x))))) into (exp (- 1.0 (* 5.0 x)))
* [misc]approximate:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 (- x)) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* -1 -5.0) into 5.0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) into (exp (+ (* 5.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 (- x)) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* -1 -5.0) into 5.0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) into (exp (+ (* 5.0 (/ 1 x)) 1.0))
* [misc]backup-simplify:  Simplify (exp (+ (* 5.0 (/ 1 x)) 1.0)) into (exp (+ 1.0 (* 5.0 (/ 1 x))))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* 5.0 (/ 1 (/ 1 (- x)))))) into (exp (- 1.0 (* 5.0 x)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* x -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* x -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* x -5.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 0 -5.0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (* -1.666667 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 x) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 x) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 x) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* -1.666667 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 1) (* 0 0)) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* (- 1.666667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* (- 1.666667) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 1.666667) 1) (+ (* 0 0) (* 0 0)))) into (- 1.666667)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (* x 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* x 5.0) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 5.0) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (* x 5.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 5.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 5.0)) into 5.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 5.0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1/2) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 5.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 5.0 1) (* 0 0))) into 5.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -0.008333) 0.208333) (log (pow (exp x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -0.008333) 0.208333) (log (pow (exp x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.008333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (* 0 0)) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -0.008333) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.208333) into 0.208333
* [misc]backup-simplify:  Simplify (* 0.208333 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.008333)) into (- 0.008333)
* [misc]backup-simplify:  Simplify (+ (- 0.008333) 0) into (- 0.008333)
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (* (- 0.008333) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.008333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (+ (* (- 0.008333) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.008333)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (+ (* (- 0.008333) 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1) 1)) (pow 1 1)))) 24) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.008333))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 1) (+ (* (- 0.008333) 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0.208333
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (log (exp 1.0)) into 1.0
* [misc]taylor:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* x -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* x -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* x -5.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 0 -5.0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (* -1.666667 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 x) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 x) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 x) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* -1.666667 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 1) (* 0 0)) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* (- 1.666667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* (- 1.666667) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 1.666667) 1) (+ (* 0 0) (* 0 0)))) into (- 1.666667)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (* x 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* x 5.0) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x 5.0) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (* x 5.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 5.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 5.0)) into 5.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 5.0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1/2) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 5.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 5.0 1) (* 0 0))) into 5.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -0.008333) 0.208333) (log (pow (exp x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -0.008333) 0.208333) (log (pow (exp x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.008333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (* 0 0)) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -0.008333) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.208333) into 0.208333
* [misc]backup-simplify:  Simplify (* 0.208333 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.008333)) into (- 0.008333)
* [misc]backup-simplify:  Simplify (+ (- 0.008333) 0) into (- 0.008333)
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (* (- 0.008333) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.008333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (+ (* (- 0.008333) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.008333)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 0) (+ (* (- 0.008333) 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1) 1)) (pow 1 1)))) 24) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.008333))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.208333 1) (+ (* (- 0.008333) 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0.208333
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (log (exp 1.0)) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -5.0)) into (- 5.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 5.0)) into (- 5.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 5.0) 1) 1)))) into (* -5.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (* (* -5.0 (exp 1.0)) 1)) into (- (* 5.0 (exp 1.0)))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (* (- (* 5.0 (exp 1.0))) 1)) into (- (* 5.0 (exp 1.0)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* 5.0 (exp 1.0)))) 1)) (pow (exp 1.0) 1)))) 1) into -5.0
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 5.0 1) 1)))) into 5.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 5.0) (+ (* 0 0) (* 0 1))) into 5.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -5.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 5.0) 2) 2)) (* (/ (pow 0 1) 1)))) into (* 12.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 5.0) (+ (* (* -5.0 (exp 1.0)) 0) (* (* 12.5 (exp 1.0)) 1))) into (* 17.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (+ (* (- (* 5.0 (exp 1.0))) 0) (* (* 17.5 (exp 1.0)) 1))) into (* 17.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* 5.0 (exp 1.0)))) 2)) (pow (exp 1.0) 2))) (* 1 (/ (* 1 (pow (* 2 (* 17.5 (exp 1.0))) 1)) (pow (exp 1.0) 1)))) 2) into 5.0
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]backup-simplify:  Simplify (+ (* 5.0 (pow x 2)) (+ (* -5.0 x) 1.0)) into (- (+ (* 5.0 (pow x 2)) 1.0) (* 5.0 x))
* [misc]approximate:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (* (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) (pow (exp (/ 1 x)) (* (/ 1 x) 5.0)))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (* (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) (pow (exp (/ 1 x)) (* (/ 1 x) 5.0)))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (* (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) (pow (exp (/ 1 x)) (* (/ 1 x) 5.0)))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (* (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) (pow (exp (/ 1 x)) (* (/ 1 x) 5.0)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 x) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 1 -5.0) into -5.0
* [misc]backup-simplify:  Simplify (+ 0 -5.0) into (- 5.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 x) -5.0))) into (exp (- 1.0 (* 5.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) (pow (exp (/ 1 x)) (* (/ 1 x) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 1) into -1.666667
* [misc]backup-simplify:  Simplify (* -1.666667 (/ 1 (pow x 2))) into (/ -1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ -1.666667 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (* (/ 1 x) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 x) 5.0) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 5.0) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* 1 5.0) into 5.0
* [misc]backup-simplify:  Simplify (* 5.0 (/ 1 x)) into (/ 5.0 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 x) 5.0) (log (exp (/ 1 x))))) into (exp (/ 5.0 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.008333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 x)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (/ 1 (pow x 4))) into (exp (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 4)))) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 1 -0.008333) into -0.008333
* [misc]backup-simplify:  Simplify (+ -0.008333 0) into (- 0.008333)
* [misc]backup-simplify:  Simplify (* (- 0.008333) (/ 1 (pow x 4))) into (/ -0.008333 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) into (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))
* [misc]backup-simplify:  Simplify (* (exp (/ -1.666667 (pow x 3))) (exp (/ 5.0 (pow x 2)))) into (* (exp (/ 5.0 (pow x 2))) (exp (/ -1.666667 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (* (exp (/ 5.0 (pow x 2))) (exp (/ -1.666667 (pow x 3))))) into (* (exp (/ 5.0 (pow x 2))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))
* [misc]backup-simplify:  Simplify (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))) into (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))))) into (log (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))))
* [misc]taylor:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (* (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) (pow (exp (/ 1 x)) (* (/ 1 x) 5.0)))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (* (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) (pow (exp (/ 1 x)) (* (/ 1 x) 5.0)))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* (/ 1 x) -5.0))) (* (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) (pow (exp (/ 1 x)) (* (/ 1 x) 5.0)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 x) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* 1 -5.0) into -5.0
* [misc]backup-simplify:  Simplify (+ 0 -5.0) into (- 5.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 x) -5.0))) into (exp (- 1.0 (* 5.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) (pow (exp (/ 1 x)) (* (/ 1 x) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 1) into -1.666667
* [misc]backup-simplify:  Simplify (* -1.666667 (/ 1 (pow x 2))) into (/ -1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ -1.666667 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (* (/ 1 x) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 x) 5.0) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) 5.0) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* 1 5.0) into 5.0
* [misc]backup-simplify:  Simplify (* 5.0 (/ 1 x)) into (/ 5.0 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 x) 5.0) (log (exp (/ 1 x))))) into (exp (/ 5.0 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.008333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 x)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (/ 1 (pow x 4))) into (exp (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 4)))) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 1 -0.008333) into -0.008333
* [misc]backup-simplify:  Simplify (+ -0.008333 0) into (- 0.008333)
* [misc]backup-simplify:  Simplify (* (- 0.008333) (/ 1 (pow x 4))) into (/ -0.008333 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -0.008333) 0.208333) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) into (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))
* [misc]backup-simplify:  Simplify (* (exp (/ -1.666667 (pow x 3))) (exp (/ 5.0 (pow x 2)))) into (* (exp (/ 5.0 (pow x 2))) (exp (/ -1.666667 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (- 1.0 (* 5.0 (/ 1 x)))) (* (exp (/ 5.0 (pow x 2))) (exp (/ -1.666667 (pow x 3))))) into (* (exp (/ 5.0 (pow x 2))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))
* [misc]backup-simplify:  Simplify (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))) into (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))))) into (log (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))))) into (log (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.666667 (pow x 3))) 0) (* 0 (exp (/ 5.0 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ -1.666667 (pow x 3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))) 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.666667 (pow x 3))) 0) (+ (* 0 0) (* 0 (exp (/ 5.0 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (+ (* 0 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ -1.666667 (pow x 3))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))) 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.666667 (pow x 3))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 5.0 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ -1.666667 (pow x 3)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.666667 (pow x 3))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 5.0 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ -1.666667 (pow x 3))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.666667 (pow x 3))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 5.0 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ -1.666667 (pow x 3)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.666667 (pow x 3))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 5.0 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 5.0 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ -1.666667 (pow x 3))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x)))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 0.208333 (* 0.008333 (/ 1 x)))) (* (exp (/ -1.666667 (pow x 3))) (exp (- 1.0 (* 5.0 (/ 1 x))))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (log (* (exp (/ 5.0 (pow (/ 1 x) 2))) (* (pow (pow (exp (/ 1 (/ 1 x))) (pow (/ 1 (/ 1 x)) 3)) (- 0.208333 (* 0.008333 (/ 1 (/ 1 x))))) (* (exp (/ -1.666667 (pow (/ 1 x) 3))) (exp (- 1.0 (* 5.0 (/ 1 (/ 1 x))))))))) into (log (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (* (exp (- 1.0 (* 5.0 x))) (* (exp (* -1.666667 (pow x 3))) (exp (* 5.0 (pow x 2)))))))
* [misc]approximate:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (* (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) (pow (exp (/ 1 (- x))) (* (/ 1 (- x)) 5.0)))) (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (* (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) (pow (exp (/ 1 (- x))) (* (/ 1 (- x)) 5.0)))) (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (* (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) (pow (exp (/ 1 (- x))) (* (/ 1 (- x)) 5.0)))) (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (* (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) (pow (exp (/ 1 (- x))) (* (/ 1 (- x)) 5.0)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 (- x)) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* -1 -5.0) into 5.0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) into (exp (+ (* 5.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (* (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) (pow (exp (/ 1 (- x))) (* (/ 1 (- x)) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 -1) into 1.666667
* [misc]backup-simplify:  Simplify (* 1.666667 (/ 1 (pow x 2))) into (/ 1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ 1.666667 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (* (/ 1 (- x)) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 (- x)) 5.0) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 5.0) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* -1 5.0) into -5.0
* [misc]backup-simplify:  Simplify (* -5.0 (/ -1 x)) into (/ 5.0 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 (- x)) 5.0) (log (exp (/ 1 (- x)))))) into (exp (/ 5.0 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.008333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (/ -1 x)) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* -1 -0.008333) into 0.008333
* [misc]backup-simplify:  Simplify (+ 0.008333 0) into 0.008333
* [misc]backup-simplify:  Simplify (* 0.008333 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (* -0.008333 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) into (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))
* [misc]backup-simplify:  Simplify (* (exp (/ 1.666667 (pow x 3))) (exp (/ 5.0 (pow x 2)))) into (* (exp (/ 5.0 (pow x 2))) (exp (/ 1.666667 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (exp (/ 5.0 (pow x 2))) (exp (/ 1.666667 (pow x 3))))) into (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (exp (+ 1.0 (* 5.0 (/ 1 x))))))
* [misc]backup-simplify:  Simplify (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (exp (+ 1.0 (* 5.0 (/ 1 x)))))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))) into (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)))))) into (log (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x)))) (exp (+ 1.0 (* 5.0 (/ 1 x))))))))
* [misc]taylor:  Taking taylor expansion of (log (* (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (* (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) (pow (exp (/ 1 (- x))) (* (/ 1 (- x)) 5.0)))) (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (* (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) (pow (exp (/ 1 (- x))) (* (/ 1 (- x)) 5.0)))) (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) (* (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) (pow (exp (/ 1 (- x))) (* (/ 1 (- x)) 5.0)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 (- x)) -5.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -5.0 in x
* [misc]backup-simplify:  Simplify -5.0 into -5.0
* [misc]backup-simplify:  Simplify (* -1 -5.0) into 5.0
* [misc]backup-simplify:  Simplify (+ 0 5.0) into 5.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 (- x)) -5.0))) into (exp (+ (* 5.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (* (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) (pow (exp (/ 1 (- x))) (* (/ 1 (- x)) 5.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 -1) into 1.666667
* [misc]backup-simplify:  Simplify (* 1.666667 (/ 1 (pow x 2))) into (/ 1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ 1.666667 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (* (/ 1 (- x)) 5.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 (- x)) 5.0) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) 5.0) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 5.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 5.0 in x
* [misc]backup-simplify:  Simplify 5.0 into 5.0
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* -1 5.0) into -5.0
* [misc]backup-simplify:  Simplify (* -5.0 (/ -1 x)) into (/ 5.0 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 (- x)) 5.0) (log (exp (/ 1 (- x)))))) into (exp (/ 5.0 (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.008333) 0.208333)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.008333) 0.208333) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.008333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.008333 in x
* [misc]backup-simplify:  Simplify -0.008333 into -0.008333
* [misc]taylor:  Taking taylor expansion of 0.208333 in x
* [misc]backup-simplify:  Simplify 0.208333 into 0.208333
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (/ -1 x)) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* -1 -0.008333) into 0.008333
* [misc]backup-simplify:  Simplify (+ 0.008333 0) into 0.008333
* [misc]backup-simplify:  Simplify (* 0.008333 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (* -0.008333 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -0.008333) 0.208333) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) into (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))
* [misc]backup-simplify:  Simplify (* (exp (/ 1.666667 (pow x 3))) (exp (/ 5.0 (pow x 2)))) into (* (exp (/ 5.0 (pow x 2))) (exp (/ 1.666667 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (* (exp (/ 5.0 (pow x 2))) (exp (/ 1.666667 (pow x 3))))) into (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (exp (+ 1.0 (* 5.0 (/ 1 x))))))
* [misc]backup-simplify:  Simplify (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (exp (+ 1.0 (* 5.0 (/ 1 x)))))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))) into (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333)))))) into (log (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x)))) (exp (+ 1.0 (* 5.0 (/ 1 x))))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x)))) (exp (+ 1.0 (* 5.0 (/ 1 x)))))))) into (log (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.666667 (pow x 3))) 0) (* 0 (exp (/ 5.0 (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ 1.666667 (pow x 3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (exp (+ 1.0 (* 5.0 (/ 1 x)))))) 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.666667 (pow x 3))) 0) (+ (* 0 0) (* 0 (exp (/ 5.0 (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ 1.666667 (pow x 3))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (exp (+ 1.0 (* 5.0 (/ 1 x)))))) 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.666667 (pow x 3))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 5.0 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ 1.666667 (pow x 3)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (exp (+ 1.0 (* 5.0 (/ 1 x)))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.666667 (pow x 3))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 5.0 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ 1.666667 (pow x 3))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (exp (+ 1.0 (* 5.0 (/ 1 x)))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.666667 (pow x 3))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 5.0 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ 1.666667 (pow x 3)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (exp (+ 1.0 (* 5.0 (/ 1 x)))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.666667 (pow x 3))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 5.0 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 5.0 (pow x 2))) (exp (/ 1.666667 (pow x 3))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (exp (+ 1.0 (* 5.0 (/ 1 x)))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 0.208333 (* 0.008333 (/ 1 x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (exp (/ 5.0 (pow x 2))) (* (exp (/ 1.666667 (pow x 3))) (* (exp (+ (* 5.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.008333 (/ 1 x)) 0.208333))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (log (* (exp (/ 5.0 (pow (/ 1 (- x)) 2))) (* (exp (/ 1.666667 (pow (/ 1 (- x)) 3))) (* (exp (+ (* 5.0 (/ 1 (/ 1 (- x)))) 1.0)) (pow (pow (exp (/ -1 (/ 1 (- x)))) (pow (/ -1 (/ 1 (- x))) 3)) (+ (* 0.008333 (/ 1 (/ 1 (- x)))) 0.208333)))))) into (log (* (exp (* -1.666667 (pow x 3))) (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (* (exp (- 1.0 (* 5.0 x))) (exp (* 5.0 (pow x 2)))))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 1 2 1)
* [misc]approximate:  Taking taylor expansion of (pow (exp (* x x)) (* -1.666667 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (* -1.666667 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 x) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 x) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 x) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* -1.666667 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 1) (* 0 0)) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* (- 1.666667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* (- 1.666667) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 1.666667) 1) (+ (* 0 0) (* 0 0)))) into (- 1.666667)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (* -1.666667 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 x) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 x) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 x) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* -1.666667 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 1) (* 0 0)) into (- 1.666667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* (- 1.666667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* (- 1.666667) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 1.666667) 1) (+ (* 0 0) (* 0 0)))) into (- 1.666667)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 1.666667) 1) 1)))) into -1.666667
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 1) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 1) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1/2) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 1.666667) 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow (- 1.666667) 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 1 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 1 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 1) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 1) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 1/2) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 1.666667) 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow (- 1.666667) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow (- 1.666667) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 1 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 1 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 1 3) 6)) (* (/ (pow 1 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 1/6
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 1) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 1) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 1) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 1/2) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 1) 1) 1 (pow (* 24 1/2) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 1/6) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.666667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 1.666667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow (- 1.666667) 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow (- 1.666667) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 1.666667) 2) 2)) (* (/ (pow 0 1) 1)))) into 1.3888894444445
* [misc]backup-simplify:  Simplify 1.3888894444445 into 1.3888894444445
* [misc]backup-simplify:  Simplify (+ (* 1.3888894444445 (pow x 6)) (+ (* -1.666667 (pow x 3)) 1)) into (- (+ 1 (* 1.3888894444445 (pow x 6))) (* 1.666667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 1) into -1.666667
* [misc]backup-simplify:  Simplify (* -1.666667 (/ 1 (pow x 2))) into (/ -1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ -1.666667 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (* -1.666667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 1) into -1.666667
* [misc]backup-simplify:  Simplify (* -1.666667 (/ 1 (pow x 2))) into (/ -1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (* -1.666667 (/ 1 x)) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ -1.666667 (pow x 3)))
* [misc]backup-simplify:  Simplify (exp (/ -1.666667 (pow x 3))) into (exp (/ -1.666667 (pow x 3)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ -1.666667 (pow (/ 1 x) 3))) into (exp (* -1.666667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 -1) into 1.666667
* [misc]backup-simplify:  Simplify (* 1.666667 (/ 1 (pow x 2))) into (/ 1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ 1.666667 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (* -1.666667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.666667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.666667 in x
* [misc]backup-simplify:  Simplify -1.666667 into -1.666667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1.666667 -1) into 1.666667
* [misc]backup-simplify:  Simplify (* 1.666667 (/ 1 (pow x 2))) into (/ 1.666667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (* -1.666667 (/ 1 (- x))) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ 1.666667 (pow x 3)))
* [misc]backup-simplify:  Simplify (exp (/ 1.666667 (pow x 3))) into (exp (/ 1.666667 (pow x 3)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 1.666667 (pow (/ 1 (- x)) 3))) into (exp (* -1.666667 (pow x 3)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (exp (* x (* x 5.0))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* x (* x 5.0))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* x (* x 5.0))
* [exit]simplify:  Simplified to (* x (* x 5.0))
* * * * [misc]progress:  [ 2 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (exp (* (log (exp x)) (* x 5.0))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (log (exp x)) (* x 5.0))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (16 enodes)
* [exit]simplify:  Simplified to (* x (* 5.0 x))
* [exit]simplify:  Simplified to (* x (* 5.0 x))
* * * * [misc]progress:  [ 3 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* 1 (* x 5.0))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* 1 (* x 5.0))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* [exit]simplify:  Simplified to (* 5.0 x)
* [exit]simplify:  Simplified to (* 5.0 x)
* * * * [misc]progress:  [ 4 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (pow (exp x) x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (pow (exp x) x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* [exit]simplify:  Simplified to (pow (exp x) x)
* [exit]simplify:  Simplified to (pow (exp x) x)
* * * * [misc]progress:  [ 5 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (* (pow (* (cbrt (exp x)) (cbrt (exp x))) (* x 5.0)) (pow (cbrt (exp x)) (* x 5.0))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp x)) (cbrt (exp x))) (* x 5.0))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp x)) (cbrt (exp x))) (* x 5.0))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp x)) (cbrt (exp x))) (* x 5.0))
* [enter]simplify:  Simplifying (pow (cbrt (exp x)) (* x 5.0))
* * [misc]simplify:  iters left: 3 (6 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp x)) (* 5.0 x))
* [exit]simplify:  Simplified to (pow (cbrt (exp x)) (* 5.0 x))
* * * * [misc]progress:  [ 6 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (* (pow (sqrt (exp x)) (* x 5.0)) (pow (sqrt (exp x)) (* x 5.0))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp x)) (* x 5.0))
* * [misc]simplify:  iters left: 3 (6 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp x)) (* 5.0 x))
* [exit]simplify:  Simplified to (pow (sqrt (exp x)) (* 5.0 x))
* [enter]simplify:  Simplifying (pow (sqrt (exp x)) (* x 5.0))
* * [misc]simplify:  iters left: 3 (6 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp x)) (* 5.0 x))
* [exit]simplify:  Simplified to (pow (sqrt (exp x)) (* 5.0 x))
* * * * [misc]progress:  [ 7 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (* (pow 1 (* x 5.0)) (pow (exp x) (* x 5.0))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (pow 1 (* x 5.0))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp x) (* x 5.0))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (* x 5.0))
* [exit]simplify:  Simplified to (pow (exp x) (* x 5.0))
* * * * [misc]progress:  [ 8 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (pow (exp x) (* x 5.0)) 1))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 9 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (exp (log (pow (exp x) (* x 5.0)))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (pow (exp x) (* x 5.0)))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (* (* x x) 5.0)
* [exit]simplify:  Simplified to (* (* x x) 5.0)
* * * * [misc]progress:  [ 10 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (log (exp (pow (exp x) (* x 5.0)))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (exp (pow (exp x) (* x 5.0)))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp x) (* x 5.0)))
* [exit]simplify:  Simplified to (exp (pow (exp x) (* x 5.0)))
* * * * [misc]progress:  [ 11 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (* (* (cbrt (pow (exp x) (* x 5.0))) (cbrt (pow (exp x) (* x 5.0)))) (cbrt (pow (exp x) (* x 5.0)))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp x) (* x 5.0))) (cbrt (pow (exp x) (* x 5.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp x) (* x 5.0))) (cbrt (pow (exp x) (* x 5.0))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp x) (* x 5.0))) (cbrt (pow (exp x) (* x 5.0))))
* [enter]simplify:  Simplifying (cbrt (pow (exp x) (* x 5.0)))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp x) (* x 5.0)))
* [exit]simplify:  Simplified to (cbrt (pow (exp x) (* x 5.0)))
* * * * [misc]progress:  [ 12 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (cbrt (* (* (pow (exp x) (* x 5.0)) (pow (exp x) (* x 5.0))) (pow (exp x) (* x 5.0)))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (* (pow (exp x) (* x 5.0)) (pow (exp x) (* x 5.0))) (pow (exp x) (* x 5.0)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) (* x 5.0)) 3)
* [exit]simplify:  Simplified to (pow (pow (exp x) (* x 5.0)) 3)
* * * * [misc]progress:  [ 13 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (* (sqrt (pow (exp x) (* x 5.0))) (sqrt (pow (exp x) (* x 5.0)))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp x) (* x 5.0)))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp x) (* x 5.0)))
* [exit]simplify:  Simplified to (sqrt (pow (exp x) (* x 5.0)))
* [enter]simplify:  Simplifying (sqrt (pow (exp x) (* x 5.0)))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp x) (* x 5.0)))
* [exit]simplify:  Simplified to (sqrt (pow (exp x) (* x 5.0)))
* * * * [misc]progress:  [ 14 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (* 1 (pow (exp x) (* x 5.0))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 15 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (exp (+ 1.0 (* x -5.0))) 1) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 16 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (exp (* (cbrt (+ 1.0 (* x -5.0))) (cbrt (+ 1.0 (* x -5.0))))) (cbrt (+ 1.0 (* x -5.0)))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (+ 1.0 (* x -5.0))) (cbrt (+ 1.0 (* x -5.0)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* -5.0 x) 1.0)) (cbrt (+ (* -5.0 x) 1.0))))
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* -5.0 x) 1.0)) (cbrt (+ (* -5.0 x) 1.0))))
* * * * [misc]progress:  [ 17 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (exp (sqrt (+ 1.0 (* x -5.0)))) (sqrt (+ 1.0 (* x -5.0)))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (exp (sqrt (+ 1.0 (* x -5.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (exp (sqrt (+ (* -5.0 x) 1.0)))
* [exit]simplify:  Simplified to (exp (sqrt (+ (* -5.0 x) 1.0)))
* * * * [misc]progress:  [ 18 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (exp 1) (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (exp 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to E
* [exit]simplify:  Simplified to E
* * * * [misc]progress:  [ 19 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp 1.0) (exp (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (exp 1.0)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (exp 1.0)
* [exit]simplify:  Simplified to (exp 1.0)
* [enter]simplify:  Simplifying (exp (* x -5.0))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* [exit]simplify:  Simplified to (exp (* x -5.0))
* [exit]simplify:  Simplified to (exp (* x -5.0))
* * * * [misc]progress:  [ 20 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 21 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (log (exp (+ 1.0 (* x -5.0))))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (exp (+ 1.0 (* x -5.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* * [misc]simplify:  iters left: 1 (44 enodes)
* [exit]simplify:  Simplified to (+ 1.0 (* -5.0 x))
* [exit]simplify:  Simplified to (+ 1.0 (* -5.0 x))
* * * * [misc]progress:  [ 22 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (log (exp (exp (+ 1.0 (* x -5.0))))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (exp (exp (+ 1.0 (* x -5.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* [exit]simplify:  Simplified to (pow (exp (exp 1.0)) (exp (* -5.0 x)))
* [exit]simplify:  Simplified to (pow (exp (exp 1.0)) (exp (* -5.0 x)))
* * * * [misc]progress:  [ 23 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (* (cbrt (exp (+ 1.0 (* x -5.0)))) (cbrt (exp (+ 1.0 (* x -5.0))))) (cbrt (exp (+ 1.0 (* x -5.0))))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (cbrt (exp (+ 1.0 (* x -5.0)))) (cbrt (exp (+ 1.0 (* x -5.0)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (* (cbrt (exp (+ (* -5.0 x) 1.0))) (cbrt (exp (+ (* -5.0 x) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (exp (+ (* -5.0 x) 1.0))) (cbrt (exp (+ (* -5.0 x) 1.0))))
* [enter]simplify:  Simplifying (cbrt (exp (+ 1.0 (* x -5.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (cbrt (exp (+ (* -5.0 x) 1.0)))
* [exit]simplify:  Simplified to (cbrt (exp (+ (* -5.0 x) 1.0)))
* * * * [misc]progress:  [ 24 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (* (* (exp (+ 1.0 (* x -5.0))) (exp (+ 1.0 (* x -5.0)))) (exp (+ 1.0 (* x -5.0))))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (* (exp (+ 1.0 (* x -5.0))) (exp (+ 1.0 (* x -5.0)))) (exp (+ 1.0 (* x -5.0))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (161 enodes)
* * [misc]simplify:  iters left: 1 (228 enodes)
* [exit]simplify:  Simplified to (pow (exp (+ (* -5.0 x) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (exp (+ (* -5.0 x) 1.0)) 3)
* * * * [misc]progress:  [ 25 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (sqrt (exp (+ 1.0 (* x -5.0)))) (sqrt (exp (+ 1.0 (* x -5.0))))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (sqrt (exp (+ 1.0 (* x -5.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (sqrt (exp (+ (* -5.0 x) 1.0)))
* [exit]simplify:  Simplified to (sqrt (exp (+ (* -5.0 x) 1.0)))
* [enter]simplify:  Simplifying (sqrt (exp (+ 1.0 (* x -5.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (sqrt (exp (+ (* -5.0 x) 1.0)))
* [exit]simplify:  Simplified to (sqrt (exp (+ (* -5.0 x) 1.0)))
* * * * [misc]progress:  [ 26 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* 1 (exp (+ 1.0 (* x -5.0)))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 27 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0))))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (110 enodes)
* * [misc]simplify:  iters left: 2 (220 enodes)
* * [misc]simplify:  iters left: 1 (315 enodes)
* [exit]simplify:  Simplified to (+ (+ (* -5.0 x) 1.0) (* (* x x) (+ (* x -1.666667) 5.0)))
* [exit]simplify:  Simplified to (+ (+ (* -5.0 x) 1.0) (* (* x x) (+ (* x -1.666667) 5.0)))
* [enter]simplify:  Simplifying (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (87 enodes)
* * [misc]simplify:  iters left: 1 (208 enodes)
* [exit]simplify:  Simplified to (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 28 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))))>
* [enter]simplify:  Simplifying (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (191 enodes)
* * [misc]simplify:  iters left: 2 (445 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* x -1.666667)) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (+ (* (* 5.0 x) x) (+ (* x -5.0) 1.0)))
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* x -1.666667)) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (+ (* (* 5.0 x) x) (+ (* x -5.0) 1.0)))
* * * * [misc]progress:  [ 29 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (pow (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) 1))>
* * * * [misc]progress:  [ 30 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (* x (* x 5.0)))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 31 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (* x (* x 5.0)))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 32 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (* x (* x 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 33 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (* x (* x 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 34 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (* x (* x 5.0)))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 35 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (* (log (exp x)) (* x 5.0)))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 36 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (* (log (exp x)) (* x 5.0)))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 37 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (* (log (exp x)) (* x 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 38 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (* (log (exp x)) (* x 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 39 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (* (log (exp x)) (* x 5.0)))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 40 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (log (pow (exp x) (* x 5.0))))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 41 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (log (pow (exp x) (* x 5.0))))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 42 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (log (pow (exp x) (* x 5.0))))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 43 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (log (pow (exp x) (* x 5.0))))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 44 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (log (pow (exp x) (* x 5.0))))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 45 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (* x (* x 5.0)))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 46 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (* x (* x 5.0)))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 47 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (* x (* x 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 48 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (* x (* x 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 49 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (* x (* x 5.0)))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 50 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (* (log (exp x)) (* x 5.0)))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 51 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (* (log (exp x)) (* x 5.0)))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 52 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (* (log (exp x)) (* x 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 53 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (* (log (exp x)) (* x 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 54 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (* (log (exp x)) (* x 5.0)))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 55 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (log (pow (exp x) (* x 5.0))))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 56 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (log (pow (exp x) (* x 5.0))))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 57 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (log (pow (exp x) (* x 5.0))))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 58 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (log (pow (exp x) (* x 5.0))))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 59 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (log (exp (* x x))) (* -1.666667 x)) (log (pow (exp x) (* x 5.0))))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 60 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (* x (* x 5.0)))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 61 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (* x (* x 5.0)))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 62 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (* x (* x 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 63 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (* x (* x 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 64 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (* x (* x 5.0)))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 65 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (* (log (exp x)) (* x 5.0)))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 66 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (* (log (exp x)) (* x 5.0)))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 67 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (* (log (exp x)) (* x 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 68 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (* (log (exp x)) (* x 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 69 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (* (log (exp x)) (* x 5.0)))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 70 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (log (pow (exp x) (* x 5.0))))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 71 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (log (pow (exp x) (* x 5.0))))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 72 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (log (pow (exp x) (* x 5.0))))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 73 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (log (pow (exp x) (* x 5.0))))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 74 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (log (pow (exp (* x x)) (* -1.666667 x))) (log (pow (exp x) (* x 5.0))))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 75 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (log (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0))))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 76 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (log (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0))))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 77 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (log (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0))))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 78 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (log (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0))))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 79 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (log (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0))))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 80 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0))))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 81 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0))))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 82 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0))))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 83 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0))))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))>
* * * * [misc]progress:  [ 84 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0))))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 85 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 86 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (log (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (192 enodes)
* * [misc]simplify:  iters left: 2 (446 enodes)
* [exit]simplify:  Simplified to (log (+ (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333)) (+ (+ (* (* x x) 5.0) (+ 1.0 (* x -5.0))) (* (* x x) (* x -1.666667)))))
* [exit]simplify:  Simplified to (log (+ (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333)) (+ (+ (* (* x x) 5.0) (+ 1.0 (* x -5.0))) (* (* x x) (* x -1.666667)))))
* * * * [misc]progress:  [ 87 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (exp (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (222 enodes)
* [exit]simplify:  Simplified to (* (* (pow (exp (* x x)) (* x -1.666667)) (exp (+ (* -5.0 x) 1.0))) (* (pow (exp x) (* 5.0 x)) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* [exit]simplify:  Simplified to (* (* (pow (exp (* x x)) (* x -1.666667)) (exp (+ (* -5.0 x) 1.0))) (* (pow (exp x) (* 5.0 x)) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * * * [misc]progress:  [ 88 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))) (cbrt (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))) (cbrt (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (* (cbrt (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))) (cbrt (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (193 enodes)
* * [misc]simplify:  iters left: 2 (421 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* (* 5.0 x) x) (+ (* (* x x) (* x -1.666667)) (* x -5.0))) (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) 1.0))) (cbrt (+ (+ (* (* 5.0 x) x) (+ (* (* x x) (* x -1.666667)) (* x -5.0))) (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* (* 5.0 x) x) (+ (* (* x x) (* x -1.666667)) (* x -5.0))) (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) 1.0))) (cbrt (+ (+ (* (* 5.0 x) x) (+ (* (* x x) (* x -1.666667)) (* x -5.0))) (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) 1.0))))
* [enter]simplify:  Simplifying (cbrt (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (192 enodes)
* * [misc]simplify:  iters left: 2 (446 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333)) (+ (+ (* (* x x) 5.0) (+ 1.0 (* x -5.0))) (* (* x x) (* x -1.666667)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333)) (+ (+ (* (* x x) 5.0) (+ 1.0 (* x -5.0))) (* (* x x) (* x -1.666667)))))
* * * * [misc]progress:  [ 89 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (* (* (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (106 enodes)
* * [misc]simplify:  iters left: 3 (293 enodes)
* [exit]simplify:  Simplified to (pow (+ (* x (* 5.0 x)) (+ (+ (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333)) (+ (* -5.0 x) 1.0)) (* (* x -1.666667) (log (exp (* x x)))))) 3)
* [exit]simplify:  Simplified to (pow (+ (* x (* 5.0 x)) (+ (+ (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333)) (+ (* -5.0 x) 1.0)) (* (* x -1.666667) (log (exp (* x x)))))) 3)
* * * * [misc]progress:  [ 90 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))) (sqrt (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))))>
* [enter]simplify:  Simplifying (sqrt (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (192 enodes)
* * [misc]simplify:  iters left: 2 (446 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333)) (+ (+ (* (* x x) 5.0) (+ 1.0 (* x -5.0))) (* (* x x) (* x -1.666667)))))
* [exit]simplify:  Simplified to (sqrt (+ (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333)) (+ (+ (* (* x x) 5.0) (+ 1.0 (* x -5.0))) (* (* x x) (* x -1.666667)))))
* [enter]simplify:  Simplifying (sqrt (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (192 enodes)
* * [misc]simplify:  iters left: 2 (446 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333)) (+ (+ (* (* x x) 5.0) (+ 1.0 (* x -5.0))) (* (* x x) (* x -1.666667)))))
* [exit]simplify:  Simplified to (sqrt (+ (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333)) (+ (+ (* (* x x) 5.0) (+ 1.0 (* x -5.0))) (* (* x x) (* x -1.666667)))))
* * * * [misc]progress:  [ 91 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))))>
* * * * [misc]progress:  [ 92 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (exp (* (* x x) (* -1.666667 x))) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (* x x) (* -1.666667 x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x -1.666667) (* x x))
* [exit]simplify:  Simplified to (* (* x -1.666667) (* x x))
* * * * [misc]progress:  [ 93 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (exp (* (log (exp (* x x))) (* -1.666667 x))) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (log (exp (* x x))) (* -1.666667 x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x -1.666667))
* [exit]simplify:  Simplified to (* (* x x) (* x -1.666667))
* * * * [misc]progress:  [ 94 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* 1 (* -1.666667 x))) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* 1 (* -1.666667 x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* [exit]simplify:  Simplified to (* x -1.666667)
* [exit]simplify:  Simplified to (* x -1.666667)
* * * * [misc]progress:  [ 95 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp x) (* x (* -1.666667 x))) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* x (* -1.666667 x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (* x (* x -1.666667))
* [exit]simplify:  Simplified to (* x (* x -1.666667))
* * * * [misc]progress:  [ 96 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (pow (exp (* x x)) -1.666667) x) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) -1.666667)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) -1.666667)
* [exit]simplify:  Simplified to (pow (exp (* x x)) -1.666667)
* * * * [misc]progress:  [ 97 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (* (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (* -1.666667 x)) (pow (cbrt (exp (* x x))) (* -1.666667 x))) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (* -1.666667 x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (* -1.666667 x))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (* -1.666667 x))
* [enter]simplify:  Simplifying (pow (cbrt (exp (* x x))) (* -1.666667 x))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp (* x x))) (* x -1.666667))
* [exit]simplify:  Simplified to (pow (cbrt (exp (* x x))) (* x -1.666667))
* * * * [misc]progress:  [ 98 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (* (pow (sqrt (exp (* x x))) (* -1.666667 x)) (pow (sqrt (exp (* x x))) (* -1.666667 x))) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp (* x x))) (* -1.666667 x))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (* x -1.666667))
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (* x -1.666667))
* [enter]simplify:  Simplifying (pow (sqrt (exp (* x x))) (* -1.666667 x))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (* x -1.666667))
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (* x -1.666667))
* * * * [misc]progress:  [ 99 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (* (pow 1 (* -1.666667 x)) (pow (exp (* x x)) (* -1.666667 x))) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (pow 1 (* -1.666667 x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp (* x x)) (* -1.666667 x))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* -1.666667 x))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* -1.666667 x))
* * * * [misc]progress:  [ 100 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (pow (exp (* x x)) (* -1.666667 x)) 1) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 101 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (exp (log (pow (exp (* x x)) (* -1.666667 x)))) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (pow (exp (* x x)) (* -1.666667 x)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* -1.666667 x))
* [exit]simplify:  Simplified to (* (* x x) (* -1.666667 x))
* * * * [misc]progress:  [ 102 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (log (exp (pow (exp (* x x)) (* -1.666667 x)))) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (exp (pow (exp (* x x)) (* -1.666667 x)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp (* x x)) (* -1.666667 x)))
* [exit]simplify:  Simplified to (exp (pow (exp (* x x)) (* -1.666667 x)))
* * * * [misc]progress:  [ 103 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (* (* (cbrt (pow (exp (* x x)) (* -1.666667 x))) (cbrt (pow (exp (* x x)) (* -1.666667 x)))) (cbrt (pow (exp (* x x)) (* -1.666667 x)))) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp (* x x)) (* -1.666667 x))) (cbrt (pow (exp (* x x)) (* -1.666667 x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp (* x x)) (* -1.666667 x))) (cbrt (pow (exp (* x x)) (* -1.666667 x))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp (* x x)) (* -1.666667 x))) (cbrt (pow (exp (* x x)) (* -1.666667 x))))
* [enter]simplify:  Simplifying (cbrt (pow (exp (* x x)) (* -1.666667 x)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp (* x x)) (* -1.666667 x)))
* [exit]simplify:  Simplified to (cbrt (pow (exp (* x x)) (* -1.666667 x)))
* * * * [misc]progress:  [ 104 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (cbrt (* (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) (* -1.666667 x))) (pow (exp (* x x)) (* -1.666667 x)))) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (* (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) (* -1.666667 x))) (pow (exp (* x x)) (* -1.666667 x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp (* x x)) (* -1.666667 x)) 3)
* [exit]simplify:  Simplified to (pow (pow (exp (* x x)) (* -1.666667 x)) 3)
* * * * [misc]progress:  [ 105 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (* (sqrt (pow (exp (* x x)) (* -1.666667 x))) (sqrt (pow (exp (* x x)) (* -1.666667 x)))) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp (* x x)) (* -1.666667 x)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (* -1.666667 x)))
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (* -1.666667 x)))
* [enter]simplify:  Simplifying (sqrt (pow (exp (* x x)) (* -1.666667 x)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (* -1.666667 x)))
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (* -1.666667 x)))
* * * * [misc]progress:  [ 106 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (* 1 (pow (exp (* x x)) (* -1.666667 x))) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* * * * [misc]progress:  [ 107 / 118 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (+ (* 5.0 (pow x 2)) (+ (* 12.5 (pow x 4)) 1)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (+ (* 5.0 (pow x 2)) (+ (* 12.5 (pow x 4)) 1)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* (+ (* 12.5 (pow x 4)) (* x (* x 5.0))) (pow (exp (* x x)) (* x -1.666667))) (pow (exp (* x x)) (* x -1.666667)))) (+ (+ (* -5.0 x) 1.0) (* (+ 0.208333 (* x -0.008333)) (* (pow x 3) (log (exp x))))))
* * * * [misc]progress:  [ 108 / 118 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (exp (* 5.0 (pow x 2))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (exp (* 5.0 (pow x 2))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (215 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* 5.0 (* x x))) (+ (* (* x -1.666667) (log (exp (* x x)))) (+ 1.0 (* x -5.0))))
* * * * [misc]progress:  [ 109 / 118 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (exp (* 5.0 (pow x 2))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (exp (* 5.0 (pow x 2))))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (215 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* 5.0 (* x x))) (+ (* (* x -1.666667) (log (exp (* x x)))) (+ 1.0 (* x -5.0))))
* * * * [misc]progress:  [ 110 / 118 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (- (+ (exp 1.0) (* 12.5 (* (exp 1.0) (pow x 2)))) (* 5.0 (* (exp 1.0) x))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (- (+ (exp 1.0) (* 12.5 (* (exp 1.0) (pow x 2)))) (* 5.0 (* (exp 1.0) x))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (443 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* -1.666667 x) (log (exp (* x x)))) (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (* (* 5.0 x) x))) (log (+ (* (* x (exp 1.0)) (- (* 12.5 x) 5.0)) (exp 1.0))))
* * * * [misc]progress:  [ 111 / 118 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp (- 1.0 (* 5.0 x))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (exp (- 1.0 (* 5.0 x))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (231 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x 5.0) x) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (+ (- 1.0 (* x 5.0)) (* (* -1.666667 x) (log (exp (* x x))))))
* * * * [misc]progress:  [ 112 / 118 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp (- 1.0 (* 5.0 x))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (exp (- 1.0 (* 5.0 x))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (231 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x 5.0) x) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (+ (- 1.0 (* x 5.0)) (* (* -1.666667 x) (log (exp (* x x))))))
* * * * [misc]progress:  [ 113 / 118 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 5.0 (pow x 2)) 1.0) (* 5.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 5.0 (pow x 2)) 1.0) (* 5.0 x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (60 enodes)
* * [misc]simplify:  iters left: 1 (75 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) 5.0) (- 1.0 (* 5.0 x)))
* * * * [misc]progress:  [ 114 / 118 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (* (exp (- 1.0 (* 5.0 x))) (* (exp (* -1.666667 (pow x 3))) (exp (* 5.0 (pow x 2))))))))>
* [enter]simplify:  Simplifying (log (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (* (exp (- 1.0 (* 5.0 x))) (* (exp (* -1.666667 (pow x 3))) (exp (* 5.0 (pow x 2)))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (- 1.0 (* x 5.0)) (+ (* (- 0.208333 (* x 0.008333)) (* (* x x) (* x x))) (* (+ (* -1.666667 x) 5.0) (* x x))))
* * * * [misc]progress:  [ 115 / 118 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.666667 (pow x 3))) (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (* (exp (- 1.0 (* 5.0 x))) (exp (* 5.0 (pow x 2))))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.666667 (pow x 3))) (* (pow (pow (exp x) (pow x 3)) (- 0.208333 (* 0.008333 x))) (* (exp (- 1.0 (* 5.0 x))) (exp (* 5.0 (pow x 2)))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (128 enodes)
* * [misc]simplify:  iters left: 3 (297 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (+ 5.0 (* -1.666667 x))) (- 1.0 (* x 5.0))) (* (- 0.208333 (* 0.008333 x)) (* (pow x 3) (log (exp x)))))
* * * * [misc]progress:  [ 116 / 118 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (- (+ 1 (* 1.3888894444445 (pow x 6))) (* 1.666667 (pow x 3))) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (exp (+ 1.0 (* x -5.0))) (* (- (+ 1 (* 1.3888894444445 (pow x 6))) (* 1.666667 (pow x 3))) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -0.008333) 0.208333) (* (pow x 3) (log (exp x)))) (+ (* -5.0 x) 1.0)) (+ (log (+ (- 1 (* (* x x) (* 1.666667 x))) (* 1.3888894444445 (pow x 6)))) (* (* 5.0 x) (log (exp x)))))
* * * * [misc]progress:  [ 117 / 118 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (exp (* -1.666667 (pow x 3))) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (exp (+ 1.0 (* x -5.0))) (* (exp (* -1.666667 (pow x 3))) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (215 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* -5.0 x)) (+ (+ (* 5.0 (* x x)) (* (* -1.666667 x) (* x x))) (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 118 / 118 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (exp (* -1.666667 (pow x 3))) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>
* [enter]simplify:  Simplifying (log (* (* (exp (+ 1.0 (* x -5.0))) (* (exp (* -1.666667 (pow x 3))) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (215 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* -5.0 x)) (+ (+ (* 5.0 (* x x)) (* (* -1.666667 x) (* x x))) (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x)))))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (log (* (* (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (sqrt (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))) (pow (pow (sqrt (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333)))))> #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (* (- (* -0.008333 x) 0.208333) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0))))) (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (+ (* (* (* (* x x) (* x x)) (- (* (* -0.008333 x) (* -0.008333 x)) (* 0.208333 0.208333))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0)))) (* (- (* -0.008333 x) 0.208333) (* (* x x) (+ (pow (* -1.666667 x) 3) (pow 5.0 3))))))) (* (- (* -0.008333 x) 0.208333) (* (+ (* (* -1.666667 x) (* -1.666667 x)) (* 5.0 (- 5.0 (* -1.666667 x)))) (+ (* (* x -5.0) (* x -5.0)) (* 1.0 (- 1.0 (* x -5.0))))))))> #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -5.0) (* x -5.0)) (* 1.0 1.0)) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0))))) (* (- (* x -5.0) 1.0) (+ (* (* (* (* x x) (* x x)) (+ (pow (* -0.008333 x) 3) (pow 0.208333 3))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0)))) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (* (* x x) (+ (pow (* -1.666667 x) 3) (pow 5.0 3))))))) (* (- (* x -5.0) 1.0) (* (+ (* (* -1.666667 x) (* -1.666667 x)) (* (- 5.0 (* -1.666667 x)) 5.0)) (+ (* (- 0.208333 (* -0.008333 x)) 0.208333) (* (* -0.008333 x) (* -0.008333 x)))))))> #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))> #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (- (* -1.666667 x) 5.0))) (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (+ (* (* (* (* x x) (* x x)) (+ (pow (* -0.008333 x) 3) (pow 0.208333 3))) (- (* -1.666667 x) 5.0)) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (* (* x x) (- (* (* -1.666667 x) (* -1.666667 x)) (* 5.0 5.0))))))) (* (+ (* 0.208333 (- 0.208333 (* -0.008333 x))) (* (* -0.008333 x) (* -0.008333 x))) (* (- (* x -1.666667) 5.0) (+ (* (* x -5.0) (* x -5.0)) (* (- 1.0 (* x -5.0)) 1.0))))))> #<alt-delta (Î» (x) (log (* (* (pow (exp (* (cbrt (+ 1.0 (* x -5.0))) (cbrt (+ 1.0 (* x -5.0))))) (cbrt (+ 1.0 (* x -5.0)))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))> #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))> #<alt-delta (Î» (x) (/ (* (- (* x -5.0) 1.0) (+ (* (- (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x))) (* (+ 5.0 (* -1.666667 x)) (* x x))) (+ 1.0 (* x -5.0))) (* (- (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x))) (* (+ 5.0 (* -1.666667 x)) (* x x))) (+ (* (+ 5.0 (* -1.666667 x)) (* x x)) (* (* (* x x) (* x x)) (+ 0.208333 (* -0.008333 x))))))) (* (* (- (* x -5.0) 1.0) (* x x)) (- (* (+ (* -0.008333 x) 0.208333) (* x x)) (+ 5.0 (* -1.666667 x))))))> #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (log (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))> #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))> #<alt-delta (Î» (x) (/ (+ (* (+ (* (* x -5.0) (* x -5.0)) (* 1.0 (- 1.0 (* x -5.0)))) (+ (pow (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) 3) (pow (* (+ 5.0 (* -1.666667 x)) (* x x)) 3))) (+ (* (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (* (+ 5.0 (* -1.666667 x)) (* x x))) (- (* (+ 5.0 (* -1.666667 x)) (* x x)) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))))) (* (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))))) (* (- (* (* (* x x) (+ (* x -1.666667) 5.0)) (* (* x x) (+ (* x -1.666667) 5.0))) (* (* (* (* x x) (* x x)) (+ 0.208333 (* x -0.008333))) (- (* (* x x) (+ (* x -1.666667) 5.0)) (* (* (* x x) (* x x)) (+ 0.208333 (* x -0.008333)))))) (+ (* (* x -5.0) (* x -5.0)) (* 1.0 (- 1.0 (* x -5.0)))))))> #<alt-delta (Î» (x) (log (* (* (pow E (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))> #<alt-delta (Î» (x) (/ (+ (pow (+ (* x -5.0) 1.0) 3) (pow (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))) 3)) (+ (* (+ (- (* (+ (* -1.666667 x) 5.0) (* x x)) (+ 1.0 (* x -5.0))) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (+ (* (+ (* -1.666667 x) 5.0) (* x x)) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))))) (* (+ 1.0 (* x -5.0)) (+ 1.0 (* x -5.0))))))> #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (pow (exp x) x) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))> #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0))))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))> #<alt-delta (Î» (x) (* (* (cbrt (+ (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333)) (+ (+ 1.0 (* x -5.0)) (* (* x x) (+ 5.0 (* x -1.666667)))))) (cbrt (+ (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333)) (+ (+ 1.0 (* x -5.0)) (* (* x x) (+ 5.0 (* x -1.666667))))))) (cbrt (+ (+ 1.0 (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (+ (* x -5.0) (* (* x x) (+ 5.0 (* x -1.666667))))))))> #<alt-delta (Î» (x) (* 1 (+ (+ (* (* x x) (* x -1.666667)) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x)))) (+ (* (* 5.0 x) x) (+ (* x -5.0) 1.0)))))> #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (log (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0))))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))> #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0)))) (* (* (log (exp x)) (pow x 3)) (+ (* x -0.008333) 0.208333))))> #<alt-event (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -5.0 x)) (* 5.0 (* x x))) (* -1.666667 (* (* x x) x))) (* 0.208333 (* (* (* x x) x) x))) (* -0.008333 (* (* (* (* x x) x) x) x))))> #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))) (cbrt (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))) (cbrt (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))))> #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (/ (* (* x x) (+ (pow (* -1.666667 x) 3) (pow 5.0 3))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0)))))))> #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -5.0) (* x -5.0)) (* 1.0 1.0)) (* (- (* -0.008333 x) 0.208333) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0))))) (* (- (* x -5.0) 1.0) (+ (* (* (* (* x x) (* x x)) (- (* (* -0.008333 x) (* -0.008333 x)) (* 0.208333 0.208333))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0)))) (* (- (* -0.008333 x) 0.208333) (* (* x x) (+ (pow (* -1.666667 x) 3) (pow 5.0 3))))))) (* (* (- (* -0.008333 x) 0.208333) (- (* x -5.0) 1.0)) (- (* 5.0 5.0) (* (* -1.666667 x) (- 5.0 (* -1.666667 x)))))))> #<alt-delta (Î» (x) (cbrt (pow (+ (* (+ 0.208333 (* -0.008333 x)) (* (* x x) (* x x))) (+ (* (+ (* x -1.666667) 5.0) (* x x)) (+ (* -5.0 x) 1.0))) 3)))> #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -5.0) 3) (pow 1.0 3)) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0))))) (* (+ (* (* x -5.0) (* x -5.0)) (- (* 1.0 1.0) (* (* x -5.0) 1.0))) (+ (* (* (* (* x x) (* x x)) (+ (pow (* -0.008333 x) 3) (pow 0.208333 3))) (+ (* (* -1.666667 x) (* -1.666667 x)) (- (* 5.0 5.0) (* (* -1.666667 x) 5.0)))) (* (+ (* (* -0.008333 x) (* -0.008333 x)) (- (* 0.208333 0.208333) (* (* -0.008333 x) 0.208333))) (* (* x x) (+ (pow (* -1.666667 x) 3) (pow 5.0 3))))))) (* (+ (* (- 0.208333 (* -0.008333 x)) 0.208333) (* (* -0.008333 x) (* -0.008333 x))) (* (+ (* (* x -5.0) (* x -5.0)) (* (- 1.0 (* x -5.0)) 1.0)) (- (* 5.0 5.0) (* (* x -1.666667) (- 5.0 (* x -1.666667))))))))> #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -5.0) (* x -5.0)) (* 1.0 1.0)) (+ (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333))) (- (* (* (* x x) (+ (* -1.666667 x) 5.0)) (* (* x x) (+ (* -1.666667 x) 5.0))) (* (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0)))))) (* (- (* x -5.0) 1.0) (+ (pow (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) 3) (pow (* (* x x) (+ (* -1.666667 x) 5.0)) 3)))) (+ (* (* (* (- (* x -5.0) 1.0) (* x x)) (+ (* -1.666667 x) 5.0)) (- (* (* x x) (+ (* -1.666667 x) 5.0)) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))))) (* (* (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x))) (- (* x -5.0) 1.0)) (* (+ (* -0.008333 x) 0.208333) (* (* x x) (* x x)))))))> #<alt-delta (Î» (x) (log (* (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (* (pow (sqrt (exp (* x x))) 5.0) (pow (sqrt (exp (* x x))) 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))> #<alt-delta (Î» (x) (/ (* (- (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) (* (* x x) (+ (* -1.666667 x) 5.0))) (+ (+ (pow (* x -5.0) 3) (pow 1.0 3)) (* (+ (* 1.0 (- 1.0 (* x -5.0))) (* (* x -5.0) (* x -5.0))) (+ (* (* x x) (+ (* -1.666667 x) 5.0)) (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))))))) (* (- (* (* (* x x) (* x x)) (+ 0.208333 (* x -0.008333))) (* (+ 5.0 (* -1.666667 x)) (* x x))) (+ (* (* x -5.0) (* x -5.0)) (* (- 1.0 (* x -5.0)) 1.0)))))> #<alt-delta (Î» (x) (log (* (* (log (exp (exp (+ 1.0 (* x -5.0))))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp (* x x)) 5.0))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))> #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (pow (exp (* x x)) (+ (* -1.666667 x) 5.0)))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))> #<alt-delta (Î» (x) (+ (* x -5.0) (+ 1.0 (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* x x) (+ (* -1.666667 x) 5.0))))))> #<alt-delta (Î» (x) (+ (+ (* x -5.0) 1.0) (+ (* (* (* x x) (* x x)) (+ (* -0.008333 x) 0.208333)) (* (* (* x x) (* (cbrt (+ (* -1.666667 x) 5.0)) (cbrt (+ (* -1.666667 x) 5.0)))) (cbrt (+ (* -1.666667 x) 5.0))))))> #<alt-delta (Î» (x) (log (* (* (pow (exp (* x x)) (* x -1.666667)) (exp (+ (* -5.0 x) 1.0))) (* (pow (exp x) (* 5.0 x)) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333))))))> #<alt-delta (Î» (x) (log (* (* (* (sqrt (exp (+ 1.0 (* x -5.0)))) (sqrt (exp (+ 1.0 (* x -5.0))))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))> #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (* x (* x 5.0)))) (* (log (pow (exp x) (pow x 3))) (+ (* x -0.008333) 0.208333))))> #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* (* 5.0 x) x) (+ (* (* x x) (* x -1.666667)) (* x -5.0))) (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) 1.0))) (cbrt (+ (+ (* (* 5.0 x) x) (+ (* (* x x) (* x -1.666667)) (* x -5.0))) (+ (* (+ (* x -0.008333) 0.208333) (* (* x x) (* x x))) 1.0)))) (cbrt (+ (* (* (* x x) (* x x)) (+ (* x -0.008333) 0.208333)) (+ (+ (* (* x x) 5.0) (+ 1.0 (* x -5.0))) (* (* x x) (* x -1.666667)))))))> #<alt-delta (Î» (x) (log (* (* (pow E (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0)))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))> #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0))))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))> #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* x -5.0)) (+ (* (* x x) (* -1.666667 x)) (* x (* x 5.0)))) (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.008333) 0.208333)))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ (+ (+ (+ 1.0 (* -5.0 x)) (* 5.0 (* x x))) (* -1.666667 (* (* x x) x))) (* 0.208333 (* (* (* x x) x) x))) (* -0.008333 (* (* (* (* x x) x) x) x))) +nan.0)) , with alts (#<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* x -5.0))) (* (pow (exp (* x x)) (* -1.666667 x)) (pow (exp x) (* x 5.0))))) (* (* x (pow x 3)) (+ (* x -0.008333) 0.208333))))>)
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
