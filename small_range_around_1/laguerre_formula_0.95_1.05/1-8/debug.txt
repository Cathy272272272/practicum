* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ (+ (+ (+ 1.0 (* -8.0 x)) (* 14.0 (* x x))) (* -9.333333 (* (* x x) x))) (* 2.916667 (* (* (* x x) x) x))) (* -0.466667 (* (* (* (* x x) x) x) x))) (* 0.038889 (* (* (* (* (* x x) x) x) x) x))) (* -0.001587 (* (* (* (* (* (* x x) x) x) x) x) x))) (* 2.5e-05 (* (* (* (* (* (* (* x x) x) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (290 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 1 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (+ (* -9.333333 x) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -9.333333 x) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* -9.333333 x) in x
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ 2.916667 (* -0.466667 x)) in x
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* -0.466667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* x -8.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -8.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (+ (* -9.333333 x) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -9.333333 x) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* -9.333333 x) in x
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ 2.916667 (* -0.466667 x)) in x
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* -0.466667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* x -8.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -8.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -9.333333 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 14.0) into 14.0
* [misc]backup-simplify:  Simplify (* 0 14.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.466667 0) into 0
* [misc]backup-simplify:  Simplify (+ 2.916667 0) into 2.916667
* [misc]backup-simplify:  Simplify (* 0 2.916667) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -8.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* -9.333333 1) (* 0 0)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (- 9.333333) 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 (- 9.333333)) (* 0 14.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 1) (* 0 0)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.466667)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 (- 0.466667)) (* 0 2.916667)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -8.0)) into (- 8.0)
* [misc]backup-simplify:  Simplify (+ (- 8.0) 0) into (- 8.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 8.0)) into (- 8.0)
* [misc]backup-simplify:  Simplify (- 8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (+ (* -9.333333 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 (- 9.333333)) (* 1 14.0))) into 14.0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 (- 0.466667)) (* 0 2.916667))) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -8.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 14.0 0) into 14.0
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]backup-simplify:  Simplify (+ (* 14.0 (pow x 2)) (+ (* (- 8.0) x) 1.0)) into (- (+ (* 14.0 (pow x 2)) 1.0) (* 8.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (* (/ 1 x) (/ 1 x)) (+ (* -9.333333 (/ 1 x)) 14.0)) (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ 2.916667 (* -0.466667 (/ 1 x))))) (+ (* (/ 1 x) -8.0) 1.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (* (/ 1 x) (/ 1 x)) (+ (* -9.333333 (/ 1 x)) 14.0)) (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ 2.916667 (* -0.466667 (/ 1 x))))) (+ (* (/ 1 x) -8.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) (/ 1 x)) (+ (* -9.333333 (/ 1 x)) 14.0)) (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ 2.916667 (* -0.466667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (+ (* -9.333333 (/ 1 x)) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -9.333333 (/ 1 x)) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* -9.333333 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ 2.916667 (* -0.466667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ 2.916667 (* -0.466667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -8.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -8.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (* (/ 1 x) (/ 1 x)) (+ (* -9.333333 (/ 1 x)) 14.0)) (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ 2.916667 (* -0.466667 (/ 1 x))))) (+ (* (/ 1 x) -8.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) (/ 1 x)) (+ (* -9.333333 (/ 1 x)) 14.0)) (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ 2.916667 (* -0.466667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (+ (* -9.333333 (/ 1 x)) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -9.333333 (/ 1 x)) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* -9.333333 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ 2.916667 (* -0.466667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ 2.916667 (* -0.466667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -8.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -8.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.466667 1) into -0.466667
* [misc]backup-simplify:  Simplify (+ 0 -0.466667) into (- 0.466667)
* [misc]backup-simplify:  Simplify (* 1 (- 0.466667)) into -0.466667
* [misc]backup-simplify:  Simplify (+ 0 -0.466667) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (- 0.466667) into (- 0.466667)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.916667 0) into 2.916667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 2.916667) (* 0 (- 0.466667))) into 2.916667
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (+ 2.916667 0) into 2.916667
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -9.333333 1) into -9.333333
* [misc]backup-simplify:  Simplify (+ -9.333333 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* 1 (- 9.333333)) into -9.333333
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 2.916667) (* 0 (- 0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ -9.333333 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (- 9.333333) 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (- 9.333333) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* (- 9.333333) (pow (/ 1 (/ 1 x)) 3)) (+ (* 2.916667 (pow (/ 1 (/ 1 x)) 4)) (* (- 0.466667) (pow (/ 1 (/ 1 x)) 5)))) into (- (* 2.916667 (pow x 4)) (+ (* 9.333333 (pow x 3)) (* 0.466667 (pow x 5))))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -9.333333 (/ 1 (- x))) 14.0)) (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ 2.916667 (* -0.466667 (/ 1 (- x)))))) (+ (* (/ 1 (- x)) -8.0) 1.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -9.333333 (/ 1 (- x))) 14.0)) (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ 2.916667 (* -0.466667 (/ 1 (- x)))))) (+ (* (/ 1 (- x)) -8.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -9.333333 (/ 1 (- x))) 14.0)) (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ 2.916667 (* -0.466667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -9.333333 (/ 1 (- x))) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -9.333333 (/ 1 (- x))) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* -9.333333 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ 2.916667 (* -0.466667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ 2.916667 (* -0.466667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -8.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -8.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -9.333333 (/ 1 (- x))) 14.0)) (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ 2.916667 (* -0.466667 (/ 1 (- x)))))) (+ (* (/ 1 (- x)) -8.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -9.333333 (/ 1 (- x))) 14.0)) (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ 2.916667 (* -0.466667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -9.333333 (/ 1 (- x))) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -9.333333 (/ 1 (- x))) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* -9.333333 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ 2.916667 (* -0.466667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ 2.916667 (* -0.466667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (* -0.466667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -8.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -8.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.466667 -1) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0 0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (* 1 0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0 0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify 0.466667 into 0.466667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 2.916667 0) into 2.916667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 2.916667) (* 0 0.466667)) into 2.916667
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (+ 2.916667 0) into 2.916667
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -9.333333 -1) into 9.333333
* [misc]backup-simplify:  Simplify (+ 9.333333 0) into 9.333333
* [misc]backup-simplify:  Simplify (* 1 9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.466667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 2.916667) (* 0 0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 9.333333 0) into 9.333333
* [misc]backup-simplify:  Simplify (+ 9.333333 0) into 9.333333
* [misc]backup-simplify:  Simplify 9.333333 into 9.333333
* [misc]backup-simplify:  Simplify (+ (* 9.333333 (pow (/ 1 (/ 1 (- x))) 3)) (+ (* 2.916667 (pow (/ 1 (/ 1 (- x))) 4)) (* 0.466667 (pow (/ 1 (/ 1 (- x))) 5)))) into (- (* 2.916667 (pow x 4)) (+ (* 9.333333 (pow x 3)) (* 0.466667 (pow x 5))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 2 1)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 1 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (* (exp (* (* x x) (+ (* -9.333333 x) 14.0))) (exp (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))) (exp (+ (* x -8.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (* (exp (* (* x x) (+ (* -9.333333 x) 14.0))) (exp (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))) (exp (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (185 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))
* [exit]simplify:  Simplified to (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))
* * * * [misc]progress:  [ 2 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (exp (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))) (exp (+ (* x -8.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (exp (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))) (exp (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (195 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (exp x) (pow x 3)) (+ 2.916667 (* -0.466667 x))) (* (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) (exp (+ (* -8.0 x) 1.0))))
* [exit]simplify:  Simplified to (* (pow (pow (exp x) (pow x 3)) (+ 2.916667 (* -0.466667 x))) (* (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) (exp (+ (* -8.0 x) 1.0))))
* * * * [misc]progress:  [ 3 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (pow (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)) 1)))>
* * * * [misc]progress:  [ 4 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (exp (log (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))))>
* [enter]simplify:  Simplifying (log (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (176 enodes)
* [exit]simplify:  Simplified to (log (+ (+ (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) 1.0) (+ (* -8.0 x) (* (+ (* x -9.333333) 14.0) (* x x)))))
* [exit]simplify:  Simplified to (log (+ (+ (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) 1.0) (+ (* -8.0 x) (* (+ (* x -9.333333) 14.0) (* x x)))))
* * * * [misc]progress:  [ 5 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (exp (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))))>
* [enter]simplify:  Simplifying (exp (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (* (exp (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (* (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) (exp (+ 1.0 (* -8.0 x)))))
* [exit]simplify:  Simplified to (* (exp (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (* (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) (exp (+ 1.0 (* -8.0 x)))))
* * * * [misc]progress:  [ 6 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (* (* (cbrt (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))) (cbrt (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))) (cbrt (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))) (cbrt (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) (+ (* (+ (* x -9.333333) 14.0) (* x x)) (+ 1.0 (* -8.0 x))))) (cbrt (+ (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) (+ (* (+ (* x -9.333333) 14.0) (* x x)) (+ 1.0 (* -8.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) (+ (* (+ (* x -9.333333) 14.0) (* x x)) (+ 1.0 (* -8.0 x))))) (cbrt (+ (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) (+ (* (+ (* x -9.333333) 14.0) (* x x)) (+ 1.0 (* -8.0 x))))))
* [enter]simplify:  Simplifying (cbrt (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (176 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) 1.0) (+ (* -8.0 x) (* (+ (* x -9.333333) 14.0) (* x x)))))
* [exit]simplify:  Simplified to (cbrt (+ (+ (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) 1.0) (+ (* -8.0 x) (* (+ (* x -9.333333) 14.0) (* x x)))))
* * * * [misc]progress:  [ 7 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (cbrt (* (* (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (68 enodes)
* * [misc]simplify:  iters left: 4 (306 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (+ 1.0 (* -8.0 x))) 3)
* [exit]simplify:  Simplified to (pow (+ (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (+ 1.0 (* -8.0 x))) 3)
* * * * [misc]progress:  [ 8 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (* (sqrt (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))) (sqrt (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (176 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) 1.0) (+ (* -8.0 x) (* (+ (* x -9.333333) 14.0) (* x x)))))
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) 1.0) (+ (* -8.0 x) (* (+ (* x -9.333333) 14.0) (* x x)))))
* [enter]simplify:  Simplifying (sqrt (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (176 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) 1.0) (+ (* -8.0 x) (* (+ (* x -9.333333) 14.0) (* x x)))))
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) 1.0) (+ (* -8.0 x) (* (+ (* x -9.333333) 14.0) (* x x)))))
* * * * [misc]progress:  [ 9 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (* (+ (* (* (* x x) (+ (pow (* -9.333333 x) 3) (pow 14.0 3))) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (* (* (* x x) (* x x)) (+ (pow 2.916667 3) (pow (* -0.466667 x) 3))))) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0)))) (* (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (+ (pow (* x -8.0) 3) (pow 1.0 3)))) (* (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (+ (pow (* -9.333333 x) 3) (pow 14.0 3))) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (* (* (* x x) (* x x)) (+ (pow 2.916667 3) (pow (* -0.466667 x) 3))))) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0)))) (* (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (+ (pow (* x -8.0) 3) (pow 1.0 3))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (172 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* 1.0 (- 1.0 (* x -8.0))) (* (* x -8.0) (* x -8.0))) (+ (* (+ (* (- (* -0.466667 x) 2.916667) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* (* (* x -9.333333) (* x -9.333333)) (* (* x -9.333333) (* x x))) (* (pow 14.0 3) (* x x)))) (* (* (+ (pow 2.916667 3) (pow (* -0.466667 x) 3)) (* (* x x) (* x x))) (+ (* (* x -9.333333) (* x -9.333333)) (* (- 14.0 (* x -9.333333)) 14.0))))) (* (* (+ (* (* x -9.333333) (* x -9.333333)) (* (- 14.0 (* x -9.333333)) 14.0)) (+ (* (- (* -0.466667 x) 2.916667) (* -0.466667 x)) (* 2.916667 2.916667))) (+ (pow 1.0 3) (pow (* x -8.0) 3))))
* [exit]simplify:  Simplified to (+ (* (+ (* 1.0 (- 1.0 (* x -8.0))) (* (* x -8.0) (* x -8.0))) (+ (* (+ (* (- (* -0.466667 x) 2.916667) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* (* (* x -9.333333) (* x -9.333333)) (* (* x -9.333333) (* x x))) (* (pow 14.0 3) (* x x)))) (* (* (+ (pow 2.916667 3) (pow (* -0.466667 x) 3)) (* (* x x) (* x x))) (+ (* (* x -9.333333) (* x -9.333333)) (* (- 14.0 (* x -9.333333)) 14.0))))) (* (* (+ (* (* x -9.333333) (* x -9.333333)) (* (- 14.0 (* x -9.333333)) 14.0)) (+ (* (- (* -0.466667 x) 2.916667) (* -0.466667 x)) (* 2.916667 2.916667))) (+ (pow 1.0 3) (pow (* x -8.0) 3))))
* [enter]simplify:  Simplifying (* (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (313 enodes)
* [exit]simplify:  Simplified to (* (- (* 1.0 1.0) (* (* -8.0 x) (- 1.0 (* -8.0 x)))) (* (- (* (* x -0.466667) (* x -0.466667)) (* 2.916667 (- (* x -0.466667) 2.916667))) (+ (* (* -9.333333 x) (* -9.333333 x)) (* 14.0 (- 14.0 (* -9.333333 x))))))
* [exit]simplify:  Simplified to (* (- (* 1.0 1.0) (* (* -8.0 x) (- 1.0 (* -8.0 x)))) (* (- (* (* x -0.466667) (* x -0.466667)) (* 2.916667 (- (* x -0.466667) 2.916667))) (+ (* (* -9.333333 x) (* -9.333333 x)) (* 14.0 (- 14.0 (* -9.333333 x))))))
* * * * [misc]progress:  [ 10 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (* (+ (* (* (* x x) (+ (pow (* -9.333333 x) 3) (pow 14.0 3))) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (* (* (* x x) (* x x)) (+ (pow 2.916667 3) (pow (* -0.466667 x) 3))))) (- (* x -8.0) 1.0)) (* (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (- (* (* x -8.0) (* x -8.0)) (* 1.0 1.0)))) (* (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (- (* x -8.0) 1.0)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (+ (pow (* -9.333333 x) 3) (pow 14.0 3))) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (* (* (* x x) (* x x)) (+ (pow 2.916667 3) (pow (* -0.466667 x) 3))))) (- (* x -8.0) 1.0)) (* (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (- (* (* x -8.0) (* x -8.0)) (* 1.0 1.0))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (145 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667)) (+ (* (* (* x x) (* x -9.333333)) (* (* x -9.333333) (* x -9.333333))) (* (pow 14.0 3) (* x x)))) (* (* (+ (pow 2.916667 3) (pow (* -0.466667 x) 3)) (* (* x x) (* x x))) (+ (* (* x -9.333333) (* x -9.333333)) (* (- 14.0 (* x -9.333333)) 14.0)))) (- (* x -8.0) 1.0)) (* (+ (* (* x -9.333333) (* x -9.333333)) (* (- 14.0 (* x -9.333333)) 14.0)) (* (* (- (* x -8.0) 1.0) (+ (* x -8.0) 1.0)) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667)))))
* [exit]simplify:  Simplified to (+ (* (+ (* (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667)) (+ (* (* (* x x) (* x -9.333333)) (* (* x -9.333333) (* x -9.333333))) (* (pow 14.0 3) (* x x)))) (* (* (+ (pow 2.916667 3) (pow (* -0.466667 x) 3)) (* (* x x) (* x x))) (+ (* (* x -9.333333) (* x -9.333333)) (* (- 14.0 (* x -9.333333)) 14.0)))) (- (* x -8.0) 1.0)) (* (+ (* (* x -9.333333) (* x -9.333333)) (* (- 14.0 (* x -9.333333)) 14.0)) (* (* (- (* x -8.0) 1.0) (+ (* x -8.0) 1.0)) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667)))))
* [enter]simplify:  Simplifying (* (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (- (* x -8.0) 1.0))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (206 enodes)
* [exit]simplify:  Simplified to (* (* (- (* -8.0 x) 1.0) (+ (* (* -9.333333 x) (* -9.333333 x)) (* 14.0 (- 14.0 (* -9.333333 x))))) (- (* (* x -0.466667) (* x -0.466667)) (* 2.916667 (- (* x -0.466667) 2.916667))))
* [exit]simplify:  Simplified to (* (* (- (* -8.0 x) 1.0) (+ (* (* -9.333333 x) (* -9.333333 x)) (* 14.0 (- 14.0 (* -9.333333 x))))) (- (* (* x -0.466667) (* x -0.466667)) (* 2.916667 (- (* x -0.466667) 2.916667))))
* * * * [misc]progress:  [ 11 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (* (+ (* (* (* x x) (+ (pow (* -9.333333 x) 3) (pow 14.0 3))) (- 2.916667 (* -0.466667 x))) (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (* (* (* x x) (* x x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (* -0.466667 x)))))) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0)))) (* (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (- 2.916667 (* -0.466667 x))) (+ (pow (* x -8.0) 3) (pow 1.0 3)))) (* (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (- 2.916667 (* -0.466667 x))) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (+ (pow (* -9.333333 x) 3) (pow 14.0 3))) (- 2.916667 (* -0.466667 x))) (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (* (* (* x x) (* x x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (* -0.466667 x)))))) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0)))) (* (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (- 2.916667 (* -0.466667 x))) (+ (pow (* x -8.0) 3) (pow 1.0 3))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (139 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* (* (* x x) (* x x)) (- (* 2.916667 2.916667) (* (* x -0.466667) (* x -0.466667)))) (+ (* (* x -9.333333) (* x -9.333333)) (* (- 14.0 (* x -9.333333)) 14.0))) (* (+ (pow (* x -9.333333) 3) (pow 14.0 3)) (* (* x x) (- 2.916667 (* x -0.466667))))) (+ (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- 1.0 (* -8.0 x))))) (* (* (+ (pow (* -8.0 x) 3) (pow 1.0 3)) (- 2.916667 (* x -0.466667))) (+ (* (* x -9.333333) (* x -9.333333)) (* (- 14.0 (* x -9.333333)) 14.0))))
* [exit]simplify:  Simplified to (+ (* (+ (* (* (* (* x x) (* x x)) (- (* 2.916667 2.916667) (* (* x -0.466667) (* x -0.466667)))) (+ (* (* x -9.333333) (* x -9.333333)) (* (- 14.0 (* x -9.333333)) 14.0))) (* (+ (pow (* x -9.333333) 3) (pow 14.0 3)) (* (* x x) (- 2.916667 (* x -0.466667))))) (+ (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- 1.0 (* -8.0 x))))) (* (* (+ (pow (* -8.0 x) 3) (pow 1.0 3)) (- 2.916667 (* x -0.466667))) (+ (* (* x -9.333333) (* x -9.333333)) (* (- 14.0 (* x -9.333333)) 14.0))))
* [enter]simplify:  Simplifying (* (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (- 2.916667 (* -0.466667 x))) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (199 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- 1.0 (* -8.0 x)))) (+ (* (* -9.333333 x) (* -9.333333 x)) (* 14.0 (- 14.0 (* -9.333333 x))))) (- 2.916667 (* -0.466667 x)))
* [exit]simplify:  Simplified to (* (* (+ (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- 1.0 (* -8.0 x)))) (+ (* (* -9.333333 x) (* -9.333333 x)) (* 14.0 (- 14.0 (* -9.333333 x))))) (- 2.916667 (* -0.466667 x)))
* * * * [misc]progress:  [ 12 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (* (+ (* (* (* x x) (+ (pow (* -9.333333 x) 3) (pow 14.0 3))) (- 2.916667 (* -0.466667 x))) (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (* (* (* x x) (* x x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (* -0.466667 x)))))) (- (* x -8.0) 1.0)) (* (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (- 2.916667 (* -0.466667 x))) (- (* (* x -8.0) (* x -8.0)) (* 1.0 1.0)))) (* (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (- 2.916667 (* -0.466667 x))) (- (* x -8.0) 1.0)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (+ (pow (* -9.333333 x) 3) (pow 14.0 3))) (- 2.916667 (* -0.466667 x))) (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (* (* (* x x) (* x x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (* -0.466667 x)))))) (- (* x -8.0) 1.0)) (* (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (- 2.916667 (* -0.466667 x))) (- (* (* x -8.0) (* x -8.0)) (* 1.0 1.0))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* * [misc]simplify:  iters left: 4 (386 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 1.0 (* -8.0 x)) (* (- (* -8.0 x) 1.0) (- 2.916667 (* x -0.466667)))) (- (* 14.0 14.0) (* (* x -9.333333) (- 14.0 (* x -9.333333))))) (* (* (- (* -8.0 x) 1.0) (* (- 2.916667 (* x -0.466667)) x)) (+ (* (* 14.0 14.0) (* x 14.0)) (* (* (* x -9.333333) (* x -9.333333)) (* -9.333333 (* x x)))))) (* (- (* 14.0 14.0) (* (* x -9.333333) (- 14.0 (* x -9.333333)))) (* (* (- 2.916667 (* x -0.466667)) (* (+ (* x -0.466667) 2.916667) (* (* x x) (* x x)))) (- (* -8.0 x) 1.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 1.0 (* -8.0 x)) (* (- (* -8.0 x) 1.0) (- 2.916667 (* x -0.466667)))) (- (* 14.0 14.0) (* (* x -9.333333) (- 14.0 (* x -9.333333))))) (* (* (- (* -8.0 x) 1.0) (* (- 2.916667 (* x -0.466667)) x)) (+ (* (* 14.0 14.0) (* x 14.0)) (* (* (* x -9.333333) (* x -9.333333)) (* -9.333333 (* x x)))))) (* (- (* 14.0 14.0) (* (* x -9.333333) (- 14.0 (* x -9.333333)))) (* (* (- 2.916667 (* x -0.466667)) (* (+ (* x -0.466667) 2.916667) (* (* x x) (* x x)))) (- (* -8.0 x) 1.0))))
* [enter]simplify:  Simplifying (* (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (- 2.916667 (* -0.466667 x))) (- (* x -8.0) 1.0))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (465 enodes)
* [exit]simplify:  Simplified to (* (* (- (* -8.0 x) 1.0) (- 2.916667 (* -0.466667 x))) (- (* 14.0 14.0) (* (* -9.333333 x) (- 14.0 (* -9.333333 x)))))
* [exit]simplify:  Simplified to (* (* (- (* -8.0 x) 1.0) (- 2.916667 (* -0.466667 x))) (- (* 14.0 14.0) (* (* -9.333333 x) (- 14.0 (* -9.333333 x)))))
* * * * [misc]progress:  [ 13 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (* (+ (* (* (* x x) (- (* (* -9.333333 x) (* -9.333333 x)) (* 14.0 14.0))) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (* (- (* -9.333333 x) 14.0) (* (* (* x x) (* x x)) (+ (pow 2.916667 3) (pow (* -0.466667 x) 3))))) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0)))) (* (* (- (* -9.333333 x) 14.0) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (+ (pow (* x -8.0) 3) (pow 1.0 3)))) (* (* (- (* -9.333333 x) 14.0) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (- (* (* -9.333333 x) (* -9.333333 x)) (* 14.0 14.0))) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (* (- (* -9.333333 x) 14.0) (* (* (* x x) (* x x)) (+ (pow 2.916667 3) (pow (* -0.466667 x) 3))))) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0)))) (* (* (- (* -9.333333 x) 14.0) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (+ (pow (* x -8.0) 3) (pow 1.0 3))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (151 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (+ (* (- (* x -0.466667) 2.916667) (* x -0.466667)) (* 2.916667 2.916667)) (* (* (* x x) (+ 14.0 (* x -9.333333))) (- (* x -9.333333) 14.0))) (* (* (* (* x x) (* x x)) (- (* x -9.333333) 14.0)) (+ (pow 2.916667 3) (pow (* x -0.466667) 3)))) (+ (* (* -8.0 x) (* -8.0 x)) (* (- 1.0 (* -8.0 x)) 1.0))) (* (* (+ (pow (* -8.0 x) 3) (pow 1.0 3)) (- (* x -9.333333) 14.0)) (+ (* (- (* x -0.466667) 2.916667) (* x -0.466667)) (* 2.916667 2.916667))))
* [exit]simplify:  Simplified to (+ (* (+ (* (+ (* (- (* x -0.466667) 2.916667) (* x -0.466667)) (* 2.916667 2.916667)) (* (* (* x x) (+ 14.0 (* x -9.333333))) (- (* x -9.333333) 14.0))) (* (* (* (* x x) (* x x)) (- (* x -9.333333) 14.0)) (+ (pow 2.916667 3) (pow (* x -0.466667) 3)))) (+ (* (* -8.0 x) (* -8.0 x)) (* (- 1.0 (* -8.0 x)) 1.0))) (* (* (+ (pow (* -8.0 x) 3) (pow 1.0 3)) (- (* x -9.333333) 14.0)) (+ (* (- (* x -0.466667) 2.916667) (* x -0.466667)) (* 2.916667 2.916667))))
* [enter]simplify:  Simplifying (* (* (- (* -9.333333 x) 14.0) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (72 enodes)
* * [misc]simplify:  iters left: 4 (261 enodes)
* [exit]simplify:  Simplified to (* (* (- (* -9.333333 x) 14.0) (- (* 1.0 1.0) (* (* -8.0 x) (- 1.0 (* -8.0 x))))) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667))))
* [exit]simplify:  Simplified to (* (* (- (* -9.333333 x) 14.0) (- (* 1.0 1.0) (* (* -8.0 x) (- 1.0 (* -8.0 x))))) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 14 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (* (+ (* (* (* x x) (- (* (* -9.333333 x) (* -9.333333 x)) (* 14.0 14.0))) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (* (- (* -9.333333 x) 14.0) (* (* (* x x) (* x x)) (+ (pow 2.916667 3) (pow (* -0.466667 x) 3))))) (- (* x -8.0) 1.0)) (* (* (- (* -9.333333 x) 14.0) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (- (* (* x -8.0) (* x -8.0)) (* 1.0 1.0)))) (* (* (- (* -9.333333 x) 14.0) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (- (* x -8.0) 1.0)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (- (* (* -9.333333 x) (* -9.333333 x)) (* 14.0 14.0))) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (* (- (* -9.333333 x) 14.0) (* (* (* x x) (* x x)) (+ (pow 2.916667 3) (pow (* -0.466667 x) 3))))) (- (* x -8.0) 1.0)) (* (* (- (* -9.333333 x) 14.0) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (- (* (* x -8.0) (* x -8.0)) (* 1.0 1.0))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (124 enodes)
* * [misc]simplify:  iters left: 4 (458 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- (* -8.0 x) 1.0) (* (+ 14.0 (* x -9.333333)) (- (* x -9.333333) 14.0))) (+ (* (* 2.916667 2.916667) (* x x)) (* (* (* x x) (* x -0.466667)) (- (* x -0.466667) 2.916667)))) (+ (* (* (- (* -8.0 x) 1.0) (* (- (* x -9.333333) 14.0) (* x x))) (+ (* (* (* x x) (* x -0.466667)) (* (* x -0.466667) (* x -0.466667))) (* (pow 2.916667 3) (* x x)))) (* (- (* (* x -0.466667) (* x -0.466667)) (* 2.916667 (- (* x -0.466667) 2.916667))) (* (* (- (* x -9.333333) 14.0) (- (* -8.0 x) 1.0)) (+ 1.0 (* -8.0 x))))))
* [exit]simplify:  Simplified to (+ (* (* (- (* -8.0 x) 1.0) (* (+ 14.0 (* x -9.333333)) (- (* x -9.333333) 14.0))) (+ (* (* 2.916667 2.916667) (* x x)) (* (* (* x x) (* x -0.466667)) (- (* x -0.466667) 2.916667)))) (+ (* (* (- (* -8.0 x) 1.0) (* (- (* x -9.333333) 14.0) (* x x))) (+ (* (* (* x x) (* x -0.466667)) (* (* x -0.466667) (* x -0.466667))) (* (pow 2.916667 3) (* x x)))) (* (- (* (* x -0.466667) (* x -0.466667)) (* 2.916667 (- (* x -0.466667) 2.916667))) (* (* (- (* x -9.333333) 14.0) (- (* -8.0 x) 1.0)) (+ 1.0 (* -8.0 x))))))
* [enter]simplify:  Simplifying (* (* (- (* -9.333333 x) 14.0) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (- (* x -8.0) 1.0))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (* (* (- (* -9.333333 x) 14.0) (- (* -8.0 x) 1.0)) (+ (* 2.916667 2.916667) (* (- (* -0.466667 x) 2.916667) (* -0.466667 x))))
* [exit]simplify:  Simplified to (* (* (- (* -9.333333 x) 14.0) (- (* -8.0 x) 1.0)) (+ (* 2.916667 2.916667) (* (- (* -0.466667 x) 2.916667) (* -0.466667 x))))
* * * * [misc]progress:  [ 15 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (* (+ (* (* (* x x) (- (* (* -9.333333 x) (* -9.333333 x)) (* 14.0 14.0))) (- 2.916667 (* -0.466667 x))) (* (- (* -9.333333 x) 14.0) (* (* (* x x) (* x x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (* -0.466667 x)))))) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0)))) (* (* (- (* -9.333333 x) 14.0) (- 2.916667 (* -0.466667 x))) (+ (pow (* x -8.0) 3) (pow 1.0 3)))) (* (* (- (* -9.333333 x) 14.0) (- 2.916667 (* -0.466667 x))) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (- (* (* -9.333333 x) (* -9.333333 x)) (* 14.0 14.0))) (- 2.916667 (* -0.466667 x))) (* (- (* -9.333333 x) 14.0) (* (* (* x x) (* x x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (* -0.466667 x)))))) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0)))) (* (* (- (* -9.333333 x) 14.0) (- 2.916667 (* -0.466667 x))) (+ (pow (* x -8.0) 3) (pow 1.0 3))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (118 enodes)
* * [misc]simplify:  iters left: 4 (429 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* (- 2.916667 (* x -0.466667)) (* x x)) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 14.0))) (* (* (+ (* x -0.466667) 2.916667) (- 2.916667 (* x -0.466667))) (* (- (* x -9.333333) 14.0) (* (* x x) (* x x))))) (- (* 1.0 1.0) (* (* x -8.0) (- 1.0 (* x -8.0))))) (* (* (- 2.916667 (* x -0.466667)) (- (* x -9.333333) 14.0)) (+ (pow (* x -8.0) 3) (pow 1.0 3))))
* [exit]simplify:  Simplified to (+ (* (+ (* (* (- 2.916667 (* x -0.466667)) (* x x)) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 14.0))) (* (* (+ (* x -0.466667) 2.916667) (- 2.916667 (* x -0.466667))) (* (- (* x -9.333333) 14.0) (* (* x x) (* x x))))) (- (* 1.0 1.0) (* (* x -8.0) (- 1.0 (* x -8.0))))) (* (* (- 2.916667 (* x -0.466667)) (- (* x -9.333333) 14.0)) (+ (pow (* x -8.0) 3) (pow 1.0 3))))
* [enter]simplify:  Simplifying (* (* (- (* -9.333333 x) 14.0) (- 2.916667 (* -0.466667 x))) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- 1.0 (* -8.0 x)))) (* (- 2.916667 (* -0.466667 x)) (- (* -9.333333 x) 14.0)))
* [exit]simplify:  Simplified to (* (+ (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- 1.0 (* -8.0 x)))) (* (- 2.916667 (* -0.466667 x)) (- (* -9.333333 x) 14.0)))
* * * * [misc]progress:  [ 16 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (* (+ (* (* (* x x) (- (* (* -9.333333 x) (* -9.333333 x)) (* 14.0 14.0))) (- 2.916667 (* -0.466667 x))) (* (- (* -9.333333 x) 14.0) (* (* (* x x) (* x x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (* -0.466667 x)))))) (- (* x -8.0) 1.0)) (* (* (- (* -9.333333 x) 14.0) (- 2.916667 (* -0.466667 x))) (- (* (* x -8.0) (* x -8.0)) (* 1.0 1.0)))) (* (* (- (* -9.333333 x) 14.0) (- 2.916667 (* -0.466667 x))) (- (* x -8.0) 1.0)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (- (* (* -9.333333 x) (* -9.333333 x)) (* 14.0 14.0))) (- 2.916667 (* -0.466667 x))) (* (- (* -9.333333 x) 14.0) (* (* (* x x) (* x x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (* -0.466667 x)))))) (- (* x -8.0) 1.0)) (* (* (- (* -9.333333 x) 14.0) (- 2.916667 (* -0.466667 x))) (- (* (* x -8.0) (* x -8.0)) (* 1.0 1.0))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (89 enodes)
* * [misc]simplify:  iters left: 4 (310 enodes)
* [exit]simplify:  Simplified to (* (- (* x -8.0) 1.0) (+ (* (- 2.916667 (* x -0.466667)) (* (- (* x -9.333333) 14.0) (+ (* x -8.0) 1.0))) (+ (* (* (+ 14.0 (* x -9.333333)) (* x x)) (* (- 2.916667 (* x -0.466667)) (- (* x -9.333333) 14.0))) (* (* (- (* x -9.333333) 14.0) (+ (* x -0.466667) 2.916667)) (* (* (* x x) (* x x)) (- 2.916667 (* x -0.466667)))))))
* [exit]simplify:  Simplified to (* (- (* x -8.0) 1.0) (+ (* (- 2.916667 (* x -0.466667)) (* (- (* x -9.333333) 14.0) (+ (* x -8.0) 1.0))) (+ (* (* (+ 14.0 (* x -9.333333)) (* x x)) (* (- 2.916667 (* x -0.466667)) (- (* x -9.333333) 14.0))) (* (* (- (* x -9.333333) 14.0) (+ (* x -0.466667) 2.916667)) (* (* (* x x) (* x x)) (- 2.916667 (* x -0.466667)))))))
* [enter]simplify:  Simplifying (* (* (- (* -9.333333 x) 14.0) (- 2.916667 (* -0.466667 x))) (- (* x -8.0) 1.0))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (296 enodes)
* [exit]simplify:  Simplified to (* (* (- (* -8.0 x) 1.0) (- 2.916667 (* -0.466667 x))) (- (* -9.333333 x) 14.0))
* [exit]simplify:  Simplified to (* (* (- (* -8.0 x) 1.0) (- 2.916667 (* -0.466667 x))) (- (* -9.333333 x) 14.0))
* * * * [misc]progress:  [ 17 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (* (+ (pow (* (* x x) (+ (* -9.333333 x) 14.0)) 3) (pow (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) 3)) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0)))) (* (+ (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* x x) (+ (* -9.333333 x) 14.0))) (- (* (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))))) (+ (pow (* x -8.0) 3) (pow 1.0 3)))) (* (+ (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* x x) (+ (* -9.333333 x) 14.0))) (- (* (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))))) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* (* x x) (+ (* -9.333333 x) 14.0)) 3) (pow (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) 3)) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0)))) (* (+ (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* x x) (+ (* -9.333333 x) 14.0))) (- (* (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))))) (+ (pow (* x -8.0) 3) (pow 1.0 3))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (131 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ (* x -9.333333) 14.0) (* x x))) (* (- (* (+ (* x -0.466667) 2.916667) (* (* x x) (* x x))) (* (+ (* x -9.333333) 14.0) (* x x))) (* (+ (* x -0.466667) 2.916667) (* (* x x) (* x x))))) (+ (pow (* x -8.0) 3) (pow 1.0 3))) (* (+ (* (* x -8.0) (* x -8.0)) (* 1.0 (- 1.0 (* x -8.0)))) (+ (pow (* (+ (* x -0.466667) 2.916667) (* (* x x) (* x x))) 3) (pow (* (+ (* x -9.333333) 14.0) (* x x)) 3))))
* [exit]simplify:  Simplified to (+ (* (+ (* (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ (* x -9.333333) 14.0) (* x x))) (* (- (* (+ (* x -0.466667) 2.916667) (* (* x x) (* x x))) (* (+ (* x -9.333333) 14.0) (* x x))) (* (+ (* x -0.466667) 2.916667) (* (* x x) (* x x))))) (+ (pow (* x -8.0) 3) (pow 1.0 3))) (* (+ (* (* x -8.0) (* x -8.0)) (* 1.0 (- 1.0 (* x -8.0)))) (+ (pow (* (+ (* x -0.466667) 2.916667) (* (* x x) (* x x))) 3) (pow (* (+ (* x -9.333333) 14.0) (* x x)) 3))))
* [enter]simplify:  Simplifying (* (+ (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* x x) (+ (* -9.333333 x) 14.0))) (- (* (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))))) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (95 enodes)
* * [misc]simplify:  iters left: 4 (454 enodes)
* [exit]simplify:  Simplified to (* (- (* 1.0 1.0) (* (* -8.0 x) (- 1.0 (* -8.0 x)))) (+ (* (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ (* x -9.333333) 14.0) (* x x))) (* (- (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)) (* (+ (* x -9.333333) 14.0) (* x x))) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)))))
* [exit]simplify:  Simplified to (* (- (* 1.0 1.0) (* (* -8.0 x) (- 1.0 (* -8.0 x)))) (+ (* (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ (* x -9.333333) 14.0) (* x x))) (* (- (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)) (* (+ (* x -9.333333) 14.0) (* x x))) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)))))
* * * * [misc]progress:  [ 18 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (* (+ (pow (* (* x x) (+ (* -9.333333 x) 14.0)) 3) (pow (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) 3)) (- (* x -8.0) 1.0)) (* (+ (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* x x) (+ (* -9.333333 x) 14.0))) (- (* (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))))) (- (* (* x -8.0) (* x -8.0)) (* 1.0 1.0)))) (* (+ (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* x x) (+ (* -9.333333 x) 14.0))) (- (* (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))))) (- (* x -8.0) 1.0)))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* (* x x) (+ (* -9.333333 x) 14.0)) 3) (pow (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) 3)) (- (* x -8.0) 1.0)) (* (+ (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* x x) (+ (* -9.333333 x) 14.0))) (- (* (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))))) (- (* (* x -8.0) (* x -8.0)) (* 1.0 1.0))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (103 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* (+ (* x -0.466667) 2.916667) (* (* x x) (* x x))) (- (* (+ (* x -0.466667) 2.916667) (* (* x x) (* x x))) (* (+ (* x -9.333333) 14.0) (* x x)))) (* (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ (* x -9.333333) 14.0) (* x x)))) (* (+ (* x -8.0) 1.0) (- (* x -8.0) 1.0))) (* (- (* x -8.0) 1.0) (+ (pow (* (+ (* x -0.466667) 2.916667) (* (* x x) (* x x))) 3) (pow (* (+ (* x -9.333333) 14.0) (* x x)) 3))))
* [exit]simplify:  Simplified to (+ (* (+ (* (* (+ (* x -0.466667) 2.916667) (* (* x x) (* x x))) (- (* (+ (* x -0.466667) 2.916667) (* (* x x) (* x x))) (* (+ (* x -9.333333) 14.0) (* x x)))) (* (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ (* x -9.333333) 14.0) (* x x)))) (* (+ (* x -8.0) 1.0) (- (* x -8.0) 1.0))) (* (- (* x -8.0) 1.0) (+ (pow (* (+ (* x -0.466667) 2.916667) (* (* x x) (* x x))) 3) (pow (* (+ (* x -9.333333) 14.0) (* x x)) 3))))
* [enter]simplify:  Simplifying (* (+ (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* x x) (+ (* -9.333333 x) 14.0))) (- (* (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))))) (- (* x -8.0) 1.0))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (73 enodes)
* * [misc]simplify:  iters left: 4 (368 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- (* -8.0 x) 1.0) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667))) (- (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)) (* (+ (* x -9.333333) 14.0) (* x x)))) (* (* (* (* x x) (* x x)) (+ (* x -9.333333) 14.0)) (* (+ (* x -9.333333) 14.0) (- (* -8.0 x) 1.0))))
* [exit]simplify:  Simplified to (+ (* (* (- (* -8.0 x) 1.0) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667))) (- (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)) (* (+ (* x -9.333333) 14.0) (* x x)))) (* (* (* (* x x) (* x x)) (+ (* x -9.333333) 14.0)) (* (+ (* x -9.333333) 14.0) (- (* -8.0 x) 1.0))))
* * * * [misc]progress:  [ 19 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (* (- (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* x x) (+ (* -9.333333 x) 14.0))) (* (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0)))) (* (- (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (pow (* x -8.0) 3) (pow 1.0 3)))) (* (- (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0)))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* x x) (+ (* -9.333333 x) 14.0))) (* (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0)))) (* (- (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (pow (* x -8.0) 3) (pow 1.0 3))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (110 enodes)
* * [misc]simplify:  iters left: 4 (479 enodes)
* [exit]simplify:  Simplified to (* (- (* (+ (* x -9.333333) 14.0) (* x x)) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667))) (+ (* (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667))) (+ (* (- 1.0 (* -8.0 x)) 1.0) (* (* -8.0 x) (* -8.0 x)))) (+ (pow 1.0 3) (pow (* -8.0 x) 3))))
* [exit]simplify:  Simplified to (* (- (* (+ (* x -9.333333) 14.0) (* x x)) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667))) (+ (* (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667))) (+ (* (- 1.0 (* -8.0 x)) 1.0) (* (* -8.0 x) (* -8.0 x)))) (+ (pow 1.0 3) (pow (* -8.0 x) 3))))
* [enter]simplify:  Simplifying (* (- (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* (* x -8.0) (* x -8.0)) (- (* 1.0 1.0) (* (* x -8.0) 1.0))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (73 enodes)
* * [misc]simplify:  iters left: 4 (245 enodes)
* [exit]simplify:  Simplified to (* (- (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (+ (* (* -8.0 x) (* -8.0 x)) (* (- 1.0 (* -8.0 x)) 1.0)))
* [exit]simplify:  Simplified to (* (- (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (+ (* (* -8.0 x) (* -8.0 x)) (* (- 1.0 (* -8.0 x)) 1.0)))
* * * * [misc]progress:  [ 20 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (* (- (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* x x) (+ (* -9.333333 x) 14.0))) (* (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))) (- (* x -8.0) 1.0)) (* (- (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (- (* (* x -8.0) (* x -8.0)) (* 1.0 1.0)))) (* (- (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (- (* x -8.0) 1.0)))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* x x) (+ (* -9.333333 x) 14.0))) (* (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))) (- (* x -8.0) 1.0)) (* (- (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (- (* (* x -8.0) (* x -8.0)) (* 1.0 1.0))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (81 enodes)
* * [misc]simplify:  iters left: 4 (352 enodes)
* [exit]simplify:  Simplified to (* (- (* -8.0 x) 1.0) (+ (- (* (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ (* x -9.333333) 14.0) (* x x))) (* (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)))) (* (- (* (+ (* x -9.333333) 14.0) (* x x)) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667))) (+ 1.0 (* -8.0 x)))))
* [exit]simplify:  Simplified to (* (- (* -8.0 x) 1.0) (+ (- (* (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ (* x -9.333333) 14.0) (* x x))) (* (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)))) (* (- (* (+ (* x -9.333333) 14.0) (* x x)) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667))) (+ 1.0 (* -8.0 x)))))
* [enter]simplify:  Simplifying (* (- (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (- (* x -8.0) 1.0))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (* (* (- (* -8.0 x) 1.0) (* x x)) (- (+ (* x -9.333333) 14.0) (* (* x x) (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (* (* (- (* -8.0 x) 1.0) (* x x)) (- (+ (* x -9.333333) 14.0) (* (* x x) (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 21 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (pow (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) 3) (pow (+ (* x -8.0) 1.0) 3)) (+ (* (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))) (- (* (+ (* x -8.0) 1.0) (+ (* x -8.0) 1.0)) (* (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))))))>
* [enter]simplify:  Simplifying (+ (pow (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) 3) (pow (+ (* x -8.0) 1.0) 3))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (179 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ 1.0 (* -8.0 x)) 3) (pow (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) 3))
* [exit]simplify:  Simplified to (+ (pow (+ 1.0 (* -8.0 x)) 3) (pow (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) 3))
* [enter]simplify:  Simplifying (+ (* (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))) (- (* (+ (* x -8.0) 1.0) (+ (* x -8.0) 1.0)) (* (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (78 enodes)
* * [misc]simplify:  iters left: 4 (343 enodes)
* [exit]simplify:  Simplified to (+ (* (- (- (+ (* -8.0 x) 1.0) (* (+ (* x -9.333333) 14.0) (* x x))) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (+ (* -8.0 x) 1.0)) (* (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))))))
* [exit]simplify:  Simplified to (+ (* (- (- (+ (* -8.0 x) 1.0) (* (+ (* x -9.333333) 14.0) (* x x))) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (+ (* -8.0 x) 1.0)) (* (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))))))
* * * * [misc]progress:  [ 22 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (* 1 (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))))>
* * * * [misc]progress:  [ 23 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (- (* (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))) (* (+ (* x -8.0) 1.0) (+ (* x -8.0) 1.0))) (- (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))))>
* [enter]simplify:  Simplifying (- (* (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))) (* (+ (* x -8.0) 1.0) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (279 enodes)
* [exit]simplify:  Simplified to (- (* (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))))) (* (+ (* -8.0 x) 1.0) (+ (* -8.0 x) 1.0)))
* [exit]simplify:  Simplified to (- (* (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))))) (* (+ (* -8.0 x) 1.0) (+ (* -8.0 x) 1.0)))
* [enter]simplify:  Simplifying (- (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (174 enodes)
* [exit]simplify:  Simplified to (- (- (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) 1.0) (- (* -8.0 x) (* (+ (* x -9.333333) 14.0) (* x x))))
* [exit]simplify:  Simplified to (- (- (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))) 1.0) (- (* -8.0 x) (* (+ (* x -9.333333) 14.0) (* x x))))
* * * * [misc]progress:  [ 24 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (* 1 (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* * [misc]simplify:  iters left: 3 (499 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (+ 1.0 (* -8.0 x)))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (+ 1.0 (* -8.0 x)))
* * * * [misc]progress:  [ 25 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (* x -8.0)) 1.0)))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (* x -8.0))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (402 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (* -8.0 x))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (* -8.0 x))
* * * * [misc]progress:  [ 26 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (+ (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (+ (* x -8.0) 1.0)))))>
* [enter]simplify:  Simplifying (+ (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (+ (* x -8.0) 1.0))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (248 enodes)
* * [misc]simplify:  iters left: 2 (392 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)) (+ (* x -8.0) 1.0))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)) (+ (* x -8.0) 1.0))
* * * * [misc]progress:  [ 27 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* x -8.0) 1.0) (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))))))>
* * * * [misc]progress:  [ 28 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 29 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 30 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x (* 2 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]progress:  [ 31 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) (* 1 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 32 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (pow x 3) (pow x 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 33 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 34 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (pow (* x x) 3) 1) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 35 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (log (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 36 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (log (exp (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 37 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (cbrt (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 38 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (cbrt (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 39 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (pow x 3) (pow x 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 40 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* x x) (* (* x x) (* x x))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 41 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 42 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (sqrt (pow (* x x) 3)) (sqrt (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 43 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* 1 (pow (* x x) 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 44 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (exp (* (log (* x x)) 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 45 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (exp (* (log (* x x)) 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 46 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]progress:  [ 47 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) (* 1 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 48 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (pow x 3) (pow x 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 49 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* x x)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 50 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (pow (* x x) 3) 1) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 51 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (exp (log (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 52 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (log (exp (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 53 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (cbrt (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 54 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (cbrt (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 55 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (pow x 3) (pow x 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 56 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* x x) (* (* x x) (* x x))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 57 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* x x)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 58 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (sqrt (pow (* x x) 3)) (sqrt (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 59 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* 1 (pow (* x x) 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 60 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x (+ 2 2)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ 2 2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 2 2)
* [exit]simplify:  Simplified to (+ 2 2)
* * * * [misc]progress:  [ 61 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* x x) (+ 1 1)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 62 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* x x) 2) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 63 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* (* x x) (* x x)) 1) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 64 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* x x) 2) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 65 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* x x) (+ 1 1)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 66 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow (* (* x x) (* x x)) 1) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 67 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (exp (+ (log (* x x)) (log (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 68 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (exp (log (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (log (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* * * * [misc]progress:  [ 69 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (log (exp (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (20 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 70 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (129 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* * * * [misc]progress:  [ 71 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x)))) (cbrt (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 72 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (cbrt (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (153 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 73 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (sqrt (* (* x x) (* x x))) (sqrt (* (* x x) (* x x)))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 74 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* 1 (* (* x x) (* x x))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 75 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* (* x x) x) x) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* (* x x) x)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 76 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* x (* x (* x x))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (* x (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 77 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* * * * [misc]progress:  [ 78 / 89 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (- (+ (* 14.0 (pow x 2)) 1.0) (* 8.0 x))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (- (+ (* 14.0 (pow x 2)) 1.0) (* 8.0 x)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (+ (* (pow (* x x) 3) (+ (* (* x x) 2.5e-05) (+ (* -0.001587 x) 0.038889))) (+ (- 1.0 (* x 8.0)) (* (* 14.0 x) x)))
* * * * [misc]progress:  [ 79 / 89 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (- (* 2.916667 (pow x 4)) (+ (* 9.333333 (pow x 3)) (* 0.466667 (pow x 5))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (- (* 2.916667 (pow x 4)) (+ (* 9.333333 (pow x 3)) (* 0.466667 (pow x 5)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (220 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* x 2.5e-05) x) (+ (* -0.001587 x) 0.038889)) (pow (* x x) 3)) (- (- (* (pow x 4) 2.916667) (* (pow x 5) 0.466667)) (* (* x 9.333333) (* x x))))
* * * * [misc]progress:  [ 80 / 89 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (- (* 2.916667 (pow x 4)) (+ (* 9.333333 (pow x 3)) (* 0.466667 (pow x 5))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (- (* 2.916667 (pow x 4)) (+ (* 9.333333 (pow x 3)) (* 0.466667 (pow x 5)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (220 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* x 2.5e-05) x) (+ (* -0.001587 x) 0.038889)) (pow (* x x) 3)) (- (- (* (pow x 4) 2.916667) (* (pow x 5) 0.466667)) (* (* x 9.333333) (* x x))))
* * * * [misc]progress:  [ 81 / 89 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x 6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x 6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (92 enodes)
* * [misc]simplify:  iters left: 4 (284 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow (* x x) 3) (* (* x x) 2.5e-05)) (* (pow x 6) (+ 0.038889 (* -0.001587 x)))) (+ (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)) (+ 1.0 (* -8.0 x)))) (* (+ (* -9.333333 x) 14.0) (* x x)))
* * * * [misc]progress:  [ 82 / 89 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ 1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ 1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (96 enodes)
* * [misc]simplify:  iters left: 4 (292 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) (+ (* x -9.333333) 14.0)) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))) (* -8.0 x)) (+ (+ 1.0 (* (pow (/ 1 x) -6) (+ 0.038889 (* x -0.001587)))) (* (pow (* x x) 3) (* (* x x) 2.5e-05))))
* * * * [misc]progress:  [ 83 / 89 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ -1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ -1 x) -6) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (94 enodes)
* * [misc]simplify:  iters left: 4 (298 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (+ (* (pow (/ -1 x) -6) (+ 0.038889 (* x -0.001587))) (* (* (* x x) 2.5e-05) (pow (* x x) 3)))) (+ (+ (* -8.0 x) (* (* x x) (+ (* x -9.333333) 14.0))) (* (* (* x x) (* x x)) (+ (* -0.466667 x) 2.916667))))
* * * * [misc]progress:  [ 84 / 89 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow x 6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow x 6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (92 enodes)
* * [misc]simplify:  iters left: 4 (301 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)) (+ 1.0 (* -8.0 x))) (+ (+ (* (* (* x x) (* x x)) (* (* -0.001587 x) (* x x))) (* 2.5e-05 (* (* x x) (pow x 6)))) (+ (* (* 0.038889 (* x x)) (* (* x x) (* x x))) (* (* x x) (+ (* -9.333333 x) 14.0)))))
* * * * [misc]progress:  [ 85 / 89 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (/ 1 x) -6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (/ 1 x) -6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (96 enodes)
* * [misc]simplify:  iters left: 4 (312 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667))) (* x -8.0)) (+ (+ 1.0 (* (* (* x x) (* x x)) (* (* x x) (* x -0.001587)))) (+ (* (* (* x x) (* x x)) (* x (* x 0.038889))) (* (* (* 2.5e-05 x) x) (pow (/ 1 x) -6)))))
* * * * [misc]progress:  [ 86 / 89 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (/ -1 x) -6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (/ -1 x) -6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (94 enodes)
* * [misc]simplify:  iters left: 4 (318 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ 1.0 (* (* (* x x) (* x -0.001587)) (* (* x x) (* x x)))) (+ (* (* (* x x) (* x x)) (* (* 0.038889 x) x)) (* (* (* 2.5e-05 x) x) (pow (/ -1 x) -6)))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667))) (* x -8.0)))
* * * * [misc]progress:  [ 87 / 89 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (309 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* (* x x) 2.5e-05) (+ (* -0.001587 x) 0.038889)) (pow (* x x) 3)) (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (+ 1.0 (* x -8.0)))) (* (+ (* x -0.466667) 2.916667) (pow x 4)))
* * * * [misc]progress:  [ 88 / 89 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (309 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* (* x x) 2.5e-05) (+ (* -0.001587 x) 0.038889)) (pow (* x x) 3)) (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (+ 1.0 (* x -8.0)))) (* (+ (* x -0.466667) 2.916667) (pow x 4)))
* * * * [misc]progress:  [ 89 / 89 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (pow x 4) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (309 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* (* x x) 2.5e-05) (+ (* -0.001587 x) 0.038889)) (pow (* x x) 3)) (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (+ 1.0 (* x -8.0)))) (* (+ (* x -0.466667) 2.916667) (pow x 4)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1 2 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -0.466667) 2.916667) (log (pow (exp x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -0.466667) 2.916667) (log (pow (exp x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.466667) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (* 0 0)) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -0.466667) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (* 2.916667 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.466667)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (* 2.916667 0) (* (- 0.466667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.916667 0) (+ (* (- 0.466667) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.916667 0) (+ (* (- 0.466667) 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1) 1)) (pow 1 1)))) 24) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.916667 1) (+ (* (- 0.466667) 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 2.916667
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* -8.0 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 x) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -9.333333) 14.0) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -9.333333) 14.0) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 0 14.0) into 14.0
* [misc]backup-simplify:  Simplify (* 14.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (- 9.333333) 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 14.0 0) (* (- 9.333333) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 1) (+ (* (- 9.333333) 0) (* 0 0))) into 14.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (* 1 (exp 1.0)) into (exp 1.0)
* [misc]backup-simplify:  Simplify (log (exp 1.0)) into 1.0
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -0.466667) 2.916667) (log (pow (exp x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -0.466667) 2.916667) (log (pow (exp x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.466667) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (* 0 0)) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -0.466667) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (* 2.916667 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.466667)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (* 2.916667 0) (* (- 0.466667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.916667 0) (+ (* (- 0.466667) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.916667 0) (+ (* (- 0.466667) 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1) 1)) (pow 1 1)))) 24) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.916667 1) (+ (* (- 0.466667) 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 2.916667
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* -8.0 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 x) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -9.333333) 14.0) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -9.333333) 14.0) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 0 14.0) into 14.0
* [misc]backup-simplify:  Simplify (* 14.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (- 9.333333) 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 14.0 0) (* (- 9.333333) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 1) (+ (* (- 9.333333) 0) (* 0 0))) into 14.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (* 1 (exp 1.0)) into (exp 1.0)
* [misc]backup-simplify:  Simplify (log (exp 1.0)) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 1) (* 0 0)) into (- 8.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 8.0)) into (- 8.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 8.0) 1) 1)))) into (* -8.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (* (* -8.0 (exp 1.0)) 1)) into (- (* 8.0 (exp 1.0)))
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 (- (* 8.0 (exp 1.0)))) (* 0 (exp 1.0))) into (- (* 8.0 (exp 1.0)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* 8.0 (exp 1.0)))) 1)) (pow (exp 1.0) 1)))) 1) into -8.0
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 14.0 1) 1)))) into 14.0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 8.0) 2) 2)) (* (/ (pow 0 1) 1)))) into (* 32.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 14.0) (+ (* (* -8.0 (exp 1.0)) 0) (* (* 32.0 (exp 1.0)) 1))) into (* 46.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 (* 46.0 (exp 1.0))) (+ (* 0 (- (* 8.0 (exp 1.0)))) (* 0 (exp 1.0)))) into (* 46.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* 8.0 (exp 1.0)))) 2)) (pow (exp 1.0) 2))) (* 1 (/ (* 1 (pow (* 2 (* 46.0 (exp 1.0))) 1)) (pow (exp 1.0) 1)))) 2) into 14.0
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]backup-simplify:  Simplify (+ (* 14.0 (pow x 2)) (+ (* -8.0 x) 1.0)) into (- (+ (* 14.0 (pow x 2)) 1.0) (* 8.0 x))
* [misc]approximate:  Taking taylor expansion of (log (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 (/ 1 x)))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 (/ 1 x)))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 (/ 1 x)))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -0.466667) 2.916667) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -0.466667) 2.916667) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 x)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (/ 1 (pow x 4))) into (exp (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 4)))) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 1 -0.466667) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (* (- 0.466667) (/ 1 (pow x 4))) into (/ -0.466667 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -0.466667) 2.916667) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) into (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* -8.0 (/ 1 x)))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* -8.0 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -8.0 1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* -8.0 (/ 1 x)))) into (exp (- 1.0 (* 8.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ -9.333333 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (- 9.333333) (/ 1 (pow x 2))) into (/ -9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (* (exp (- 1.0 (* 8.0 (/ 1 x)))) (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))) into (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))
* [misc]backup-simplify:  Simplify (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) into (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x))))))) into (log (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (- 1.0 (* 8.0 (/ 1 x)))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))))))
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 (/ 1 x)))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 (/ 1 x)))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -0.466667) 2.916667) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -0.466667) 2.916667) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 x)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (/ 1 (pow x 4))) into (exp (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 4)))) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 1 -0.466667) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (* (- 0.466667) (/ 1 (pow x 4))) into (/ -0.466667 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -0.466667) 2.916667) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) into (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* -8.0 (/ 1 x)))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* -8.0 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -8.0 1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* -8.0 (/ 1 x)))) into (exp (- 1.0 (* 8.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ -9.333333 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (- 9.333333) (/ 1 (pow x 2))) into (/ -9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (* (exp (- 1.0 (* 8.0 (/ 1 x)))) (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))) into (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))
* [misc]backup-simplify:  Simplify (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) into (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x))))))) into (log (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (- 1.0 (* 8.0 (/ 1 x)))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (- 1.0 (* 8.0 (/ 1 x)))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x))))))) into (log (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (- 1.0 (* 8.0 (/ 1 x)))) (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 8.0 (/ 1 x)))) 0) (* 0 (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) 0) (* 0 (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 8.0 (/ 1 x)))) 0) (+ (* 0 0) (* 0 (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) 0) (+ (* 0 0) (* 0 (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 8.0 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 8.0 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 8.0 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 8.0 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (log (* (exp (/ (- 14.0 (* 9.333333 (/ 1 (/ 1 x)))) (pow (/ 1 x) 2))) (* (exp (- 1.0 (* 8.0 (/ 1 (/ 1 x))))) (pow (pow (exp (/ 1 (/ 1 x))) (pow (/ 1 (/ 1 x)) 3)) (- 2.916667 (* 0.466667 (/ 1 (/ 1 x)))))))) into (log (* (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))) (* (pow (pow (exp x) (pow x 3)) (- 2.916667 (* 0.466667 x))) (exp (- 1.0 (* 8.0 x))))))
* [misc]approximate:  Taking taylor expansion of (log (* (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -0.466667) 2.916667) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -0.466667) 2.916667) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (/ -1 x)) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* -1 -0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (* 0.466667 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (* -0.466667 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -0.466667) 2.916667) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) into (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 2.916667 (* 0.466667 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -8.0 -1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) into (exp (+ (* 8.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 9.333333 0) into 9.333333
* [misc]backup-simplify:  Simplify (* 9.333333 (/ 1 (pow x 2))) into (/ 9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))) into (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (exp (+ 1.0 (* 8.0 (/ 1 x)))))
* [misc]backup-simplify:  Simplify (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 2.916667 (* 0.466667 (/ 1 x)))) (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (exp (+ 1.0 (* 8.0 (/ 1 x)))))) into (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667))))) into (log (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (* (exp (+ 1.0 (* 8.0 (/ 1 x)))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 2.916667 (* 0.466667 (/ 1 x)))))))
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -0.466667) 2.916667) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -0.466667) 2.916667) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (/ -1 x)) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* -1 -0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (* 0.466667 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (* -0.466667 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -0.466667) 2.916667) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) into (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 2.916667 (* 0.466667 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -8.0 -1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) into (exp (+ (* 8.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 9.333333 0) into 9.333333
* [misc]backup-simplify:  Simplify (* 9.333333 (/ 1 (pow x 2))) into (/ 9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))) into (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (exp (+ 1.0 (* 8.0 (/ 1 x)))))
* [misc]backup-simplify:  Simplify (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 2.916667 (* 0.466667 (/ 1 x)))) (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (exp (+ 1.0 (* 8.0 (/ 1 x)))))) into (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667))))) into (log (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (* (exp (+ 1.0 (* 8.0 (/ 1 x)))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 2.916667 (* 0.466667 (/ 1 x)))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (* (exp (+ 1.0 (* 8.0 (/ 1 x)))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 2.916667 (* 0.466667 (/ 1 x))))))) into (log (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) 0) (* 0 (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 2.916667 (* 0.466667 (/ 1 x)))) 0) (* 0 (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (exp (+ 1.0 (* 8.0 (/ 1 x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (* 0 (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 2.916667 (* 0.466667 (/ 1 x)))) 0) (+ (* 0 0) (* 0 (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (exp (+ 1.0 (* 8.0 (/ 1 x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 2.916667 (* 0.466667 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (exp (+ 1.0 (* 8.0 (/ 1 x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 2.916667 (* 0.466667 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (exp (+ 1.0 (* 8.0 (/ 1 x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 2.916667 (* 0.466667 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (exp (+ 1.0 (* 8.0 (/ 1 x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 2.916667 (* 0.466667 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (exp (+ 1.0 (* 8.0 (/ 1 x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667)))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (log (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 (/ 1 (- x))))) (pow (/ 1 (- x)) 2))) (* (exp (+ (* 8.0 (/ 1 (/ 1 (- x)))) 1.0)) (pow (pow (exp (/ -1 (/ 1 (- x)))) (pow (/ -1 (/ 1 (- x))) 3)) (+ (* 0.466667 (/ 1 (/ 1 (- x)))) 2.916667))))) into (log (* (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))) (* (pow (pow (exp x) (pow x 3)) (- 2.916667 (* 0.466667 x))) (exp (- 1.0 (* 8.0 x))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1 2 2)
* [misc]approximate:  Taking taylor expansion of (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -9.333333) 14.0) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -9.333333) 14.0) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 0 14.0) into 14.0
* [misc]backup-simplify:  Simplify (* 14.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (- 9.333333) 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 14.0 0) (* (- 9.333333) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 1) (+ (* (- 9.333333) 0) (* 0 0))) into 14.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -9.333333) 14.0) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -9.333333) 14.0) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 0 14.0) into 14.0
* [misc]backup-simplify:  Simplify (* 14.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (- 9.333333) 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 14.0 0) (* (- 9.333333) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 1) (+ (* (- 9.333333) 0) (* 0 0))) into 14.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 14.0 1) 1)))) into 14.0
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -9.333333)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 0) (+ (* (- 9.333333) 1) (+ (* 0 0) (* 0 0)))) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 14.0 1) 1)) (* (/ (pow (- 9.333333) 1) 1)))) into -9.333333
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]backup-simplify:  Simplify (+ (* -9.333333 (pow x 3)) (+ (* 14.0 (pow x 2)) 1)) into (- (+ (* 14.0 (pow x 2)) 1) (* 9.333333 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ -9.333333 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (- 9.333333) (/ 1 (pow x 2))) into (/ -9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ -9.333333 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (- 9.333333) (/ 1 (pow x 2))) into (/ -9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) into (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (- 14.0 (* 9.333333 (/ 1 (/ 1 x)))) (pow (/ 1 x) 2))) into (exp (* (- 14.0 (* 9.333333 x)) (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 9.333333 0) into 9.333333
* [misc]backup-simplify:  Simplify (* 9.333333 (/ 1 (pow x 2))) into (/ 9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 9.333333 0) into 9.333333
* [misc]backup-simplify:  Simplify (* 9.333333 (/ 1 (pow x 2))) into (/ 9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) into (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (+ (* 9.333333 (/ 1 (/ 1 (- x)))) 14.0) (pow (/ 1 (- x)) 2))) into (exp (* (- 14.0 (* 9.333333 x)) (pow x 2)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -0.466667) 2.916667) (log (pow (exp x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -0.466667) 2.916667) (log (pow (exp x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.466667) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (* 0 0)) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -0.466667) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (* 2.916667 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.466667)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (* 2.916667 0) (* (- 0.466667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.916667 0) (+ (* (- 0.466667) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.916667 0) (+ (* (- 0.466667) 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1) 1)) (pow 1 1)))) 24) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.916667 1) (+ (* (- 0.466667) 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 2.916667
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -0.466667) 2.916667) (log (pow (exp x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -0.466667) 2.916667) (log (pow (exp x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.466667) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (* 0 0)) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -0.466667) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (* 2.916667 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.466667)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (* 2.916667 0) (* (- 0.466667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.916667 0) (+ (* (- 0.466667) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.916667 0) (+ (* (- 0.466667) 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1) 1)) (pow 1 1)))) 24) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.916667 1) (+ (* (- 0.466667) 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 2.916667
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 2.916667 1) 1)))) into 2.916667
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1/2) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 1) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.916667 0) (+ (* (- 0.466667) 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into (- 0.466667)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 2.916667 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.466667) 1) 1)))) into -0.466667
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]backup-simplify:  Simplify (+ (* -0.466667 (pow x 5)) (+ (* 2.916667 (pow x 4)) 1)) into (- (+ (* 2.916667 (pow x 4)) 1) (* 0.466667 (pow x 5)))
* [misc]approximate:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.466667) 2.916667)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -0.466667) 2.916667) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -0.466667) 2.916667) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 x)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (/ 1 (pow x 4))) into (exp (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 4)))) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 1 -0.466667) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (* (- 0.466667) (/ 1 (pow x 4))) into (/ -0.466667 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -0.466667) 2.916667) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) into (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -0.466667) 2.916667) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -0.466667) 2.916667) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 x)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (/ 1 (pow x 4))) into (exp (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 4)))) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 1 -0.466667) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (* (- 0.466667) (/ 1 (pow x 4))) into (/ -0.466667 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -0.466667) 2.916667) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) into (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x))))
* [misc]backup-simplify:  Simplify (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x)))) into (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 2.916667 (* 0.466667 (/ 1 x))))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (pow (exp (/ 1 (/ 1 x))) (pow (/ 1 (/ 1 x)) 3)) (- 2.916667 (* 0.466667 (/ 1 (/ 1 x))))) into (pow (pow (exp x) (pow x 3)) (- 2.916667 (* 0.466667 x)))
* [misc]approximate:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.466667) 2.916667)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -0.466667) 2.916667) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -0.466667) 2.916667) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (/ -1 x)) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* -1 -0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (* 0.466667 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (* -0.466667 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -0.466667) 2.916667) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) into (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 2.916667 (* 0.466667 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -0.466667) 2.916667) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -0.466667) 2.916667) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (/ -1 x)) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* -1 -0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (* 0.466667 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (* -0.466667 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -0.466667) 2.916667) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) into (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 2.916667 (* 0.466667 (/ 1 x))))
* [misc]backup-simplify:  Simplify (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 2.916667 (* 0.466667 (/ 1 x)))) into (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 0.466667 (/ 1 x)) 2.916667))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (pow (exp (/ -1 (/ 1 (- x)))) (pow (/ -1 (/ 1 (- x))) 3)) (+ (* 0.466667 (/ 1 (/ 1 (- x)))) 2.916667)) into (pow (pow (exp x) (pow x 3)) (- 2.916667 (* 0.466667 x)))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 2 1)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667))) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (87 enodes)
* * [misc]simplify:  iters left: 1 (208 enodes)
* [exit]simplify:  Simplified to (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))
* [enter]simplify:  Simplifying (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (110 enodes)
* * [misc]simplify:  iters left: 1 (216 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (+ 1.0 (* x -8.0)))
* [exit]simplify:  Simplified to (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (+ 1.0 (* x -8.0)))
* * * * [misc]progress:  [ 2 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (* 1 (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (111 enodes)
* * [misc]simplify:  iters left: 2 (190 enodes)
* * [misc]simplify:  iters left: 1 (349 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -8.0) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (+ 1.0 (* (+ (* x -9.333333) 14.0) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* x -8.0) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (+ 1.0 (* (+ (* x -9.333333) 14.0) (* x x))))
* * * * [misc]progress:  [ 3 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (pow (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))) 1)))>
* * * * [misc]progress:  [ 4 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* x (pow x 3)) (+ (* x -0.466667) 2.916667)) (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 5 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* x (pow x 3)) (+ (* x -0.466667) 2.916667)) (+ (+ 1.0 (* -8.0 x)) (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 6 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* x (pow x 3)) (+ (* x -0.466667) 2.916667)) (+ (+ 1.0 (* -8.0 x)) (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 7 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* x (pow x 3)) (+ (* x -0.466667) 2.916667)) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 8 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* (log (exp x)) (pow x 3)) (+ (* x -0.466667) 2.916667)) (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 9 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* (log (exp x)) (pow x 3)) (+ (* x -0.466667) 2.916667)) (+ (+ 1.0 (* -8.0 x)) (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 10 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* (log (exp x)) (pow x 3)) (+ (* x -0.466667) 2.916667)) (+ (+ 1.0 (* -8.0 x)) (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 11 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* (log (exp x)) (pow x 3)) (+ (* x -0.466667) 2.916667)) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 12 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (exp x) (pow x 3))) (+ (* x -0.466667) 2.916667)) (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 13 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (exp x) (pow x 3))) (+ (* x -0.466667) 2.916667)) (+ (+ 1.0 (* -8.0 x)) (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 14 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (exp x) (pow x 3))) (+ (* x -0.466667) 2.916667)) (+ (+ 1.0 (* -8.0 x)) (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 15 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (exp x) (pow x 3))) (+ (* x -0.466667) 2.916667)) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 16 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (exp x) (pow x 3))) (+ (* x -0.466667) 2.916667)) (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 17 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (exp x) (pow x 3))) (+ (* x -0.466667) 2.916667)) (+ (+ 1.0 (* -8.0 x)) (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 18 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (exp x) (pow x 3))) (+ (* x -0.466667) 2.916667)) (+ (+ 1.0 (* -8.0 x)) (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 19 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (exp x) (pow x 3))) (+ (* x -0.466667) 2.916667)) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 20 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 21 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 22 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 23 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667))) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 24 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 25 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (exp (log (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (log (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (113 enodes)
* * [misc]simplify:  iters left: 2 (174 enodes)
* * [misc]simplify:  iters left: 1 (302 enodes)
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* (+ (* x -9.333333) 14.0) (* x x))) (+ (* x -8.0) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))))))
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* (+ (* x -9.333333) 14.0) (* x x))) (+ (* x -8.0) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))))))
* * * * [misc]progress:  [ 26 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (exp (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (exp (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (134 enodes)
* * [misc]simplify:  iters left: 2 (336 enodes)
* [exit]simplify:  Simplified to (* (* (exp (+ 1.0 (* -8.0 x))) (pow (pow (exp x) (pow x 3)) (+ 2.916667 (* -0.466667 x)))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))
* [exit]simplify:  Simplified to (* (* (exp (+ 1.0 (* -8.0 x))) (pow (pow (exp x) (pow x 3)) (+ 2.916667 (* -0.466667 x)))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))
* * * * [misc]progress:  [ 27 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (* (* (cbrt (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))) (cbrt (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))) (cbrt (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (* (cbrt (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))) (cbrt (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (113 enodes)
* * [misc]simplify:  iters left: 2 (193 enodes)
* * [misc]simplify:  iters left: 1 (347 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* (+ (* x -9.333333) 14.0) (* x x)) 1.0) (+ (* x -8.0) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))) (cbrt (+ (+ (* (+ (* x -9.333333) 14.0) (* x x)) 1.0) (+ (* x -8.0) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* (+ (* x -9.333333) 14.0) (* x x)) 1.0) (+ (* x -8.0) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))) (cbrt (+ (+ (* (+ (* x -9.333333) 14.0) (* x x)) 1.0) (+ (* x -8.0) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))))
* [enter]simplify:  Simplifying (cbrt (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (113 enodes)
* * [misc]simplify:  iters left: 2 (174 enodes)
* * [misc]simplify:  iters left: 1 (302 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* (+ (* x -9.333333) 14.0) (* x x))) (+ (* x -8.0) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))))))
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* (+ (* x -9.333333) 14.0) (* x x))) (+ (* x -8.0) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))))))
* * * * [misc]progress:  [ 28 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (cbrt (* (* (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (* (* (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (83 enodes)
* * [misc]simplify:  iters left: 3 (200 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ (* (* x x) (+ (* x -9.333333) 14.0)) (+ (* -8.0 x) 1.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) 3)
* [exit]simplify:  Simplified to (pow (+ (+ (* (* x x) (+ (* x -9.333333) 14.0)) (+ (* -8.0 x) 1.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) 3)
* * * * [misc]progress:  [ 29 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (* (sqrt (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))) (sqrt (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (sqrt (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (113 enodes)
* * [misc]simplify:  iters left: 2 (174 enodes)
* * [misc]simplify:  iters left: 1 (302 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* (+ (* x -9.333333) 14.0) (* x x))) (+ (* x -8.0) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))))))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* (+ (* x -9.333333) 14.0) (* x x))) (+ (* x -8.0) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))))))
* [enter]simplify:  Simplifying (sqrt (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (113 enodes)
* * [misc]simplify:  iters left: 2 (174 enodes)
* * [misc]simplify:  iters left: 1 (302 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* (+ (* x -9.333333) 14.0) (* x x))) (+ (* x -8.0) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))))))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* (+ (* x -9.333333) 14.0) (* x x))) (+ (* x -8.0) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))))))
* * * * [misc]progress:  [ 30 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (* 1 (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))))>
* * * * [misc]progress:  [ 31 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (exp (* (* x x) (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (* (* x x) (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -9.333333) 14.0) (* x x))
* [exit]simplify:  Simplified to (* (+ (* x -9.333333) 14.0) (* x x))
* * * * [misc]progress:  [ 32 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (exp (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (77 enodes)
* * [misc]simplify:  iters left: 1 (89 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ 14.0 (* x -9.333333)))
* [exit]simplify:  Simplified to (* (* x x) (+ 14.0 (* x -9.333333)))
* * * * [misc]progress:  [ 33 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (* 1 (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (* 1 (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* [exit]simplify:  Simplified to (+ (* -9.333333 x) 14.0)
* [exit]simplify:  Simplified to (+ (* -9.333333 x) 14.0)
* * * * [misc]progress:  [ 34 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp x) (* x (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (* x (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* [exit]simplify:  Simplified to (* x (+ 14.0 (* x -9.333333)))
* [exit]simplify:  Simplified to (* x (+ 14.0 (* x -9.333333)))
* * * * [misc]progress:  [ 35 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (pow (exp (* x x)) (* (cbrt (+ (* x -9.333333) 14.0)) (cbrt (+ (* x -9.333333) 14.0)))) (cbrt (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) (* (cbrt (+ (* x -9.333333) 14.0)) (cbrt (+ (* x -9.333333) 14.0))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* (cbrt (+ (* -9.333333 x) 14.0)) (cbrt (+ (* -9.333333 x) 14.0))))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* (cbrt (+ (* -9.333333 x) 14.0)) (cbrt (+ (* -9.333333 x) 14.0))))
* * * * [misc]progress:  [ 36 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (pow (exp (* x x)) (sqrt (+ (* x -9.333333) 14.0))) (sqrt (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) (sqrt (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (sqrt (+ (* -9.333333 x) 14.0)))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (sqrt (+ (* -9.333333 x) 14.0)))
* * * * [misc]progress:  [ 37 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (pow (exp (* x x)) 1) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) 1)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* [exit]simplify:  Simplified to (exp (* x x))
* [exit]simplify:  Simplified to (exp (* x x))
* * * * [misc]progress:  [ 38 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (* (pow (exp (* x x)) (* x -9.333333)) (pow (exp (* x x)) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) (* x -9.333333))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* -9.333333 x))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* -9.333333 x))
* [enter]simplify:  Simplifying (pow (exp (* x x)) 14.0)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) 14.0)
* [exit]simplify:  Simplified to (pow (exp (* x x)) 14.0)
* * * * [misc]progress:  [ 39 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (* (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ (* x -9.333333) 14.0)) (pow (cbrt (exp (* x x))) (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ 14.0 (* -9.333333 x)))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ 14.0 (* -9.333333 x)))
* [enter]simplify:  Simplifying (pow (cbrt (exp (* x x))) (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp (* x x))) (+ 14.0 (* x -9.333333)))
* [exit]simplify:  Simplified to (pow (cbrt (exp (* x x))) (+ 14.0 (* x -9.333333)))
* * * * [misc]progress:  [ 40 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (* (pow (sqrt (exp (* x x))) (+ (* x -9.333333) 14.0)) (pow (sqrt (exp (* x x))) (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp (* x x))) (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 14.0 (* x -9.333333)))
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 14.0 (* x -9.333333)))
* [enter]simplify:  Simplifying (pow (sqrt (exp (* x x))) (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 14.0 (* x -9.333333)))
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 14.0 (* x -9.333333)))
* * * * [misc]progress:  [ 41 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (* (pow 1 (+ (* x -9.333333) 14.0)) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (pow 1 (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp (* x x)) (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* -9.333333 x) 14.0))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* -9.333333 x) 14.0))
* * * * [misc]progress:  [ 42 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) 1))))))>
* * * * [misc]progress:  [ 43 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (exp (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* * [misc]simplify:  iters left: 1 (60 enodes)
* [exit]simplify:  Simplified to (* (+ (* -9.333333 x) 14.0) (* x x))
* [exit]simplify:  Simplified to (* (+ (* -9.333333 x) 14.0) (* x x))
* * * * [misc]progress:  [ 44 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (log (exp (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (exp (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* [exit]simplify:  Simplified to (exp (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* * * * [misc]progress:  [ 45 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (* (* (cbrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0))) (cbrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))) (cbrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0))) (cbrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0))) (cbrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0))) (cbrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0))))
* [enter]simplify:  Simplifying (cbrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* [exit]simplify:  Simplified to (cbrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* * * * [misc]progress:  [ 46 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (cbrt (* (* (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (* (* (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)) 3)
* [exit]simplify:  Simplified to (pow (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)) 3)
* * * * [misc]progress:  [ 47 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (* (sqrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0))) (sqrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* [enter]simplify:  Simplifying (sqrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* * * * [misc]progress:  [ 48 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (* 1 (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))))>
* * * * [misc]progress:  [ 49 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (exp (* (* x (pow x 3)) (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (* x (pow x 3)) (+ (* x -0.466667) 2.916667))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (139 enodes)
* * [misc]simplify:  iters left: 2 (210 enodes)
* * [misc]simplify:  iters left: 1 (211 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ 2.916667 (* x -0.466667)))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ 2.916667 (* x -0.466667)))
* * * * [misc]progress:  [ 50 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (exp (* (* (log (exp x)) (pow x 3)) (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (* (log (exp x)) (pow x 3)) (+ (* x -0.466667) 2.916667))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (143 enodes)
* * [misc]simplify:  iters left: 2 (216 enodes)
* * [misc]simplify:  iters left: 1 (219 enodes)
* [exit]simplify:  Simplified to (* (+ 2.916667 (* x -0.466667)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (+ 2.916667 (* x -0.466667)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 51 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (exp (* (log (pow (exp x) (pow x 3))) (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (log (pow (exp x) (pow x 3))) (+ (* x -0.466667) 2.916667))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (95 enodes)
* * [misc]simplify:  iters left: 2 (164 enodes)
* * [misc]simplify:  iters left: 1 (178 enodes)
* [exit]simplify:  Simplified to (* (+ 2.916667 (* x -0.466667)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (+ 2.916667 (* x -0.466667)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 52 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (exp (* (log (pow (exp x) (pow x 3))) (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (log (pow (exp x) (pow x 3))) (+ (* x -0.466667) 2.916667))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (95 enodes)
* * [misc]simplify:  iters left: 2 (164 enodes)
* * [misc]simplify:  iters left: 1 (178 enodes)
* [exit]simplify:  Simplified to (* (+ 2.916667 (* x -0.466667)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (+ 2.916667 (* x -0.466667)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 53 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (exp x) (* (pow x 3) (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (+ (* x -0.466667) 2.916667))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (102 enodes)
* * [misc]simplify:  iters left: 1 (104 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (+ (* -0.466667 x) 2.916667))
* [exit]simplify:  Simplified to (* (pow x 3) (+ (* -0.466667 x) 2.916667))
* * * * [misc]progress:  [ 54 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (* (cbrt (+ (* x -0.466667) 2.916667)) (cbrt (+ (* x -0.466667) 2.916667)))) (cbrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (pow (exp x) (pow x 3)) (* (cbrt (+ (* x -0.466667) 2.916667)) (cbrt (+ (* x -0.466667) 2.916667))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (* (cbrt (+ 2.916667 (* -0.466667 x))) (cbrt (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (* (cbrt (+ 2.916667 (* -0.466667 x))) (cbrt (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 55 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x))))
* * * * [misc]progress:  [ 56 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) 1) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (pow (exp x) (pow x 3)) 1)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp x) (pow x 3))
* * * * [misc]progress:  [ 57 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (* (pow (pow (exp x) (pow x 3)) (* x -0.466667)) (pow (pow (exp x) (pow x 3)) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (pow (exp x) (pow x 3)) (* x -0.466667))
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (12 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (* -0.466667 x))
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (* -0.466667 x))
* [enter]simplify:  Simplifying (pow (pow (exp x) (pow x 3)) 2.916667)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) 2.916667)
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) 2.916667)
* * * * [misc]progress:  [ 58 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (* (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) (pow x 3)) (+ (* x -0.466667) 2.916667)) (pow (pow (cbrt (exp x)) (pow x 3)) (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) (pow x 3)) (+ (* x -0.466667) 2.916667))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* [exit]simplify:  Simplified to (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) (pow x 3)) (+ (* -0.466667 x) 2.916667))
* [exit]simplify:  Simplified to (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) (pow x 3)) (+ (* -0.466667 x) 2.916667))
* [enter]simplify:  Simplifying (pow (pow (cbrt (exp x)) (pow x 3)) (+ (* x -0.466667) 2.916667))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (pow (pow (cbrt (exp x)) (pow x 3)) (+ 2.916667 (* x -0.466667)))
* [exit]simplify:  Simplified to (pow (pow (cbrt (exp x)) (pow x 3)) (+ 2.916667 (* x -0.466667)))
* * * * [misc]progress:  [ 59 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (* (pow (pow (sqrt (exp x)) (pow x 3)) (+ (* x -0.466667) 2.916667)) (pow (pow (sqrt (exp x)) (pow x 3)) (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (pow (sqrt (exp x)) (pow x 3)) (+ (* x -0.466667) 2.916667))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp x)) (pow x 3)) (+ 2.916667 (* x -0.466667)))
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp x)) (pow x 3)) (+ 2.916667 (* x -0.466667)))
* [enter]simplify:  Simplifying (pow (pow (sqrt (exp x)) (pow x 3)) (+ (* x -0.466667) 2.916667))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp x)) (pow x 3)) (+ 2.916667 (* x -0.466667)))
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp x)) (pow x 3)) (+ 2.916667 (* x -0.466667)))
* * * * [misc]progress:  [ 60 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (* (pow (pow 1 (pow x 3)) (+ (* x -0.466667) 2.916667)) (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (pow 1 (pow x 3)) (+ (* x -0.466667) 2.916667))
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667))
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (+ 2.916667 (* -0.466667 x)))
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (+ 2.916667 (* -0.466667 x)))
* * * * [misc]progress:  [ 61 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (* (pow (* (cbrt (pow (exp x) (pow x 3))) (cbrt (pow (exp x) (pow x 3)))) (+ (* x -0.466667) 2.916667)) (pow (cbrt (pow (exp x) (pow x 3))) (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (pow (exp x) (pow x 3))) (cbrt (pow (exp x) (pow x 3)))) (+ (* x -0.466667) 2.916667))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (pow (exp x) (pow x 3))) (cbrt (pow (exp x) (pow x 3)))) (+ (* -0.466667 x) 2.916667))
* [exit]simplify:  Simplified to (pow (* (cbrt (pow (exp x) (pow x 3))) (cbrt (pow (exp x) (pow x 3)))) (+ (* -0.466667 x) 2.916667))
* [enter]simplify:  Simplifying (pow (cbrt (pow (exp x) (pow x 3))) (+ (* x -0.466667) 2.916667))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (pow (exp x) (pow x 3))) (+ 2.916667 (* x -0.466667)))
* [exit]simplify:  Simplified to (pow (cbrt (pow (exp x) (pow x 3))) (+ 2.916667 (* x -0.466667)))
* * * * [misc]progress:  [ 62 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (* (pow (sqrt (pow (exp x) (pow x 3))) (+ (* x -0.466667) 2.916667)) (pow (sqrt (pow (exp x) (pow x 3))) (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (sqrt (pow (exp x) (pow x 3))) (+ (* x -0.466667) 2.916667))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp x) (pow x 3))) (+ 2.916667 (* x -0.466667)))
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp x) (pow x 3))) (+ 2.916667 (* x -0.466667)))
* [enter]simplify:  Simplifying (pow (sqrt (pow (exp x) (pow x 3))) (+ (* x -0.466667) 2.916667))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp x) (pow x 3))) (+ 2.916667 (* x -0.466667)))
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp x) (pow x 3))) (+ 2.916667 (* x -0.466667)))
* * * * [misc]progress:  [ 63 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (* (pow 1 (+ (* x -0.466667) 2.916667)) (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow 1 (+ (* x -0.466667) 2.916667))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667))
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (+ 2.916667 (* -0.466667 x)))
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (+ 2.916667 (* -0.466667 x)))
* * * * [misc]progress:  [ 64 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) 1) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 65 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (exp (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (87 enodes)
* * [misc]simplify:  iters left: 1 (208 enodes)
* [exit]simplify:  Simplified to (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 66 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (log (exp (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (exp (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (exp (pow (pow (exp x) (pow x 3)) (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (exp (pow (pow (exp x) (pow x 3)) (+ 2.916667 (* -0.466667 x))))
* * * * [misc]progress:  [ 67 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (* (* (cbrt (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667))) (cbrt (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)))) (cbrt (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667))) (cbrt (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (pow (exp x) (pow x 3)) (+ 2.916667 (* -0.466667 x)))) (cbrt (pow (pow (exp x) (pow x 3)) (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (* (cbrt (pow (pow (exp x) (pow x 3)) (+ 2.916667 (* -0.466667 x)))) (cbrt (pow (pow (exp x) (pow x 3)) (+ 2.916667 (* -0.466667 x)))))
* [enter]simplify:  Simplifying (cbrt (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (pow (exp x) (pow x 3)) (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (cbrt (pow (pow (exp x) (pow x 3)) (+ 2.916667 (* -0.466667 x))))
* * * * [misc]progress:  [ 68 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (cbrt (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667))) (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (+ 2.916667 (* -0.466667 x))) 3)
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (+ 2.916667 (* -0.466667 x))) 3)
* * * * [misc]progress:  [ 69 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (* (sqrt (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667))) (sqrt (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (sqrt (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp x) (pow x 3)) (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp x) (pow x 3)) (+ 2.916667 (* -0.466667 x))))
* [enter]simplify:  Simplifying (sqrt (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp x) (pow x 3)) (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp x) (pow x 3)) (+ 2.916667 (* -0.466667 x))))
* * * * [misc]progress:  [ 70 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (* 1 (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 71 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 72 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 73 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x (* 2 3)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]progress:  [ 74 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) (* 1 3)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 75 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (pow x 3) (pow x 3)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 76 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 77 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (pow (* x x) 3) 1) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 78 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (log (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (log (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 79 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (log (exp (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 80 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (cbrt (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 81 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (cbrt (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 82 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (pow x 3) (pow x 3)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 83 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* x x) (* (* x x) (* x x))) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 84 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 85 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (sqrt (pow (* x x) 3)) (sqrt (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 86 / 98 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* 1 (pow (* x x) 3)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 87 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (- (+ (* 14.0 (pow x 2)) 1.0) (* 8.0 x))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (- (+ (* 14.0 (pow x 2)) 1.0) (* 8.0 x)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (+ (* (pow (* x x) 3) (+ (* (* x x) 2.5e-05) (+ (* -0.001587 x) 0.038889))) (+ (- 1.0 (* x 8.0)) (* (* 14.0 x) x)))
* * * * [misc]progress:  [ 88 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))) (* (pow (pow (exp x) (pow x 3)) (- 2.916667 (* 0.466667 x))) (exp (- 1.0 (* 8.0 x))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))) (* (pow (pow (exp x) (pow x 3)) (- 2.916667 (* 0.466667 x))) (exp (- 1.0 (* 8.0 x)))))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (262 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (pow x 3) (pow x 3)) (+ (* (* x 2.5e-05) x) (+ (* -0.001587 x) 0.038889))) (* (- 14.0 (* 9.333333 x)) (* x x))) (+ (* (- 2.916667 (* x 0.466667)) (log (pow (exp x) (pow x 3)))) (- 1.0 (* x 8.0))))
* * * * [misc]progress:  [ 89 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))) (* (pow (pow (exp x) (pow x 3)) (- 2.916667 (* 0.466667 x))) (exp (- 1.0 (* 8.0 x))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))) (* (pow (pow (exp x) (pow x 3)) (- 2.916667 (* 0.466667 x))) (exp (- 1.0 (* 8.0 x)))))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (262 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (pow x 3) (pow x 3)) (+ (* (* x 2.5e-05) x) (+ (* -0.001587 x) 0.038889))) (* (- 14.0 (* 9.333333 x)) (* x x))) (+ (* (- 2.916667 (* x 0.466667)) (log (pow (exp x) (pow x 3)))) (- 1.0 (* x 8.0))))
* * * * [misc]progress:  [ 90 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (- (+ (* 14.0 (pow x 2)) 1) (* 9.333333 (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (- (+ (* 14.0 (pow x 2)) 1) (* 9.333333 (pow x 3)))))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (276 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* 2.5e-05 (* x x)) (+ (* -0.001587 x) 0.038889)) (pow (* x x) 3)) (* (* (pow x 3) (log (exp x))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)) (log (+ (* (* x x) (- 14.0 (* x 9.333333))) 1)))
* * * * [misc]progress:  [ 91 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (exp (* (- 14.0 (* 9.333333 x)) (pow x 2)))))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (252 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x 3) (log (exp x))) (+ 2.916667 (* -0.466667 x))) (+ (* (pow (* x x) 3) (+ (* 2.5e-05 (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* x -8.0) 1.0) (* (* x x) (- 14.0 (* 9.333333 x))))))
* * * * [misc]progress:  [ 92 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (exp (* (- 14.0 (* 9.333333 x)) (pow x 2)))))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (252 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x 3) (log (exp x))) (+ 2.916667 (* -0.466667 x))) (+ (* (pow (* x x) 3) (+ (* 2.5e-05 (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* x -8.0) 1.0) (* (* x x) (- 14.0 (* 9.333333 x))))))
* * * * [misc]progress:  [ 93 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (- (+ (* 2.916667 (pow x 4)) 1) (* 0.466667 (pow x 5))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (- (+ (* 2.916667 (pow x 4)) 1) (* 0.466667 (pow x 5))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (257 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ 1.0 (* x -8.0)) (+ (* (+ (* x -9.333333) 14.0) (log (exp (* x x)))) (* (+ (* x (* x 2.5e-05)) (+ (* -0.001587 x) 0.038889)) (* (pow x 3) (pow x 3))))) (log (+ (- (* (pow x 4) 2.916667) (* (pow x 5) 0.466667)) 1)))
* * * * [misc]progress:  [ 94 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (- 2.916667 (* 0.466667 x))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (- 2.916667 (* 0.466667 x))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (81 enodes)
* * [misc]simplify:  iters left: 4 (233 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* (* x 2.5e-05) x) (+ (* -0.001587 x) 0.038889)) (pow (* x x) 3)) (* (* (pow x 3) (log (exp x))) (- 2.916667 (* x 0.466667)))) (+ (* (+ 14.0 (* -9.333333 x)) (log (exp (* x x)))) (+ (* x -8.0) 1.0)))
* * * * [misc]progress:  [ 95 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (- 2.916667 (* 0.466667 x))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (- 2.916667 (* 0.466667 x))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (81 enodes)
* * [misc]simplify:  iters left: 4 (233 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* (* x 2.5e-05) x) (+ (* -0.001587 x) 0.038889)) (pow (* x x) 3)) (* (* (pow x 3) (log (exp x))) (- 2.916667 (* x 0.466667)))) (+ (* (+ 14.0 (* -9.333333 x)) (log (exp (* x x)))) (+ (* x -8.0) 1.0)))
* * * * [misc]progress:  [ 96 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x 6) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x 6) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (179 enodes)
* * [misc]simplify:  iters left: 3 (384 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* (pow x 6) (+ 0.038889 (* -0.001587 x)))) (* (* 2.5e-05 (* x x)) (pow (* x x) 3))) (+ (+ 1.0 (* x -8.0)) (* (+ 14.0 (* -9.333333 x)) (* x x))))
* * * * [misc]progress:  [ 97 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ 1 x) -6) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ 1 x) -6) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (84 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* * [misc]simplify:  iters left: 3 (378 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* -0.466667 x) 2.916667) (* (* x x) (* x x))) (+ (* -8.0 x) 1.0)) (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (pow (* x x) 3) (* (* x x) 2.5e-05)))) (* (pow (/ 1 x) -6) (+ 0.038889 (* x -0.001587))))
* * * * [misc]progress:  [ 98 / 98 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ -1 x) -6) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ -1 x) -6) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (82 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* * [misc]simplify:  iters left: 3 (374 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* x -9.333333) 14.0) (* x x)) (+ 1.0 (* x -8.0))) (+ (* (pow (/ -1 x) -6) (+ 0.038889 (* x -0.001587))) (* (* (* x x) 2.5e-05) (pow (* x x) 3)))) (* (+ (* -0.466667 x) 2.916667) (* (* x x) (* x x))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1 2 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 2 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 1 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* x -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.466667) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 0 -0.466667) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (sqrt 2.916667) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.466667)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 2.916667))) into (/ -0.2333335 (sqrt 2.916667))
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (exp x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (exp x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* x -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.466667) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 0 -0.466667) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (sqrt 2.916667) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.466667)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 2.916667))) into (/ -0.2333335 (sqrt 2.916667))
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (* 0 0)) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* (sqrt 2.916667) 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (* (/ -0.2333335 (sqrt 2.916667)) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.2333335 (sqrt 2.916667)) 2) (+)) (* 2 (sqrt 2.916667))) into (/ -0.027222261111125 (pow (sqrt 2.916667) 3))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.027222261111125 (pow (sqrt 2.916667) 3)))))) (* 2 (sqrt 2.916667))) into (/ -0.006351865462972685 (pow (sqrt 2.916667) 5))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1) 1)) (pow 1 1)))) 24) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 2) (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)))))) (* 2 (sqrt 2.916667))) into (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 1) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (+ (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0) (* (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7)) 0))))) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* (sqrt 2.916667) 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (* (/ -0.2333335 (sqrt 2.916667)) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.2333335 (sqrt 2.916667)) 2) (+)) (* 2 (sqrt 2.916667))) into (/ -0.027222261111125 (pow (sqrt 2.916667) 3))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.027222261111125 (pow (sqrt 2.916667) 3)))))) (* 2 (sqrt 2.916667))) into (/ -0.006351865462972685 (pow (sqrt 2.916667) 5))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow (sqrt 2.916667) 1) 1)))) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (sqrt 2.916667)) 1)) (pow 1 1)))) 24) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 2) (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)))))) (* 2 (sqrt 2.916667))) into (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) (sqrt 2.916667)) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (+ (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0) (* (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7)) 0))))) into (pow (sqrt 2.916667) 2)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* -8.0 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 x) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -9.333333) 14.0) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -9.333333) 14.0) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 0 14.0) into 14.0
* [misc]backup-simplify:  Simplify (* 14.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (- 9.333333) 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 14.0 0) (* (- 9.333333) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 1) (+ (* (- 9.333333) 0) (* 0 0))) into 14.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (* 1 (exp 1.0)) into (exp 1.0)
* [misc]backup-simplify:  Simplify (log (exp 1.0)) into 1.0
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* x -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.466667) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 0 -0.466667) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (sqrt 2.916667) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.466667)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 2.916667))) into (/ -0.2333335 (sqrt 2.916667))
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (exp x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (exp x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* x -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.466667) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 0 -0.466667) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (sqrt 2.916667) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.466667)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 2.916667))) into (/ -0.2333335 (sqrt 2.916667))
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (* 0 0)) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* (sqrt 2.916667) 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (* (/ -0.2333335 (sqrt 2.916667)) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.2333335 (sqrt 2.916667)) 2) (+)) (* 2 (sqrt 2.916667))) into (/ -0.027222261111125 (pow (sqrt 2.916667) 3))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.027222261111125 (pow (sqrt 2.916667) 3)))))) (* 2 (sqrt 2.916667))) into (/ -0.006351865462972685 (pow (sqrt 2.916667) 5))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1) 1)) (pow 1 1)))) 24) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 2) (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)))))) (* 2 (sqrt 2.916667))) into (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 1) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (+ (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0) (* (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7)) 0))))) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* (sqrt 2.916667) 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (* (/ -0.2333335 (sqrt 2.916667)) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.2333335 (sqrt 2.916667)) 2) (+)) (* 2 (sqrt 2.916667))) into (/ -0.027222261111125 (pow (sqrt 2.916667) 3))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.027222261111125 (pow (sqrt 2.916667) 3)))))) (* 2 (sqrt 2.916667))) into (/ -0.006351865462972685 (pow (sqrt 2.916667) 5))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow (sqrt 2.916667) 1) 1)))) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (sqrt 2.916667)) 1)) (pow 1 1)))) 24) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 2) (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)))))) (* 2 (sqrt 2.916667))) into (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) (sqrt 2.916667)) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (+ (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0) (* (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7)) 0))))) into (pow (sqrt 2.916667) 2)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* -8.0 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 x) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -9.333333) 14.0) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -9.333333) 14.0) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 0 14.0) into 14.0
* [misc]backup-simplify:  Simplify (* 14.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (- 9.333333) 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 14.0 0) (* (- 9.333333) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 1) (+ (* (- 9.333333) 0) (* 0 0))) into 14.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (* 1 (exp 1.0)) into (exp 1.0)
* [misc]backup-simplify:  Simplify (log (exp 1.0)) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 1) (* 0 0)) into (- 8.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 8.0)) into (- 8.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 8.0) 1) 1)))) into (* -8.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (* (* -8.0 (exp 1.0)) 1)) into (- (* 8.0 (exp 1.0)))
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 (- (* 8.0 (exp 1.0)))) (* 0 (exp 1.0))) into (- (* 8.0 (exp 1.0)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* 8.0 (exp 1.0)))) 1)) (pow (exp 1.0) 1)))) 1) into -8.0
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 14.0 1) 1)))) into 14.0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 8.0) 2) 2)) (* (/ (pow 0 1) 1)))) into (* 32.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 14.0) (+ (* (* -8.0 (exp 1.0)) 0) (* (* 32.0 (exp 1.0)) 1))) into (* 46.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 (* 46.0 (exp 1.0))) (+ (* 0 (- (* 8.0 (exp 1.0)))) (* 0 (exp 1.0)))) into (* 46.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* 8.0 (exp 1.0)))) 2)) (pow (exp 1.0) 2))) (* 1 (/ (* 1 (pow (* 2 (* 46.0 (exp 1.0))) 1)) (pow (exp 1.0) 1)))) 2) into 14.0
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]backup-simplify:  Simplify (+ (* 14.0 (pow x 2)) (+ (* -8.0 x) 1.0)) into (- (+ (* 14.0 (pow x 2)) 1.0) (* 8.0 x))
* [misc]approximate:  Taking taylor expansion of (log (* (pow (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 (/ 1 x)))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 (/ 1 x)))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 (/ 1 x)))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 1 -0.466667) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 1 -0.466667) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 x)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (/ 1 (pow x 4))) into (exp (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 4)))) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 0 (/ 1 (pow x 4))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ 1 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (/ 1 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 1 (pow x 4))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ 1 (pow x 4))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* +nan.0 (/ 1 (pow x 4)))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ 1 (pow x 4))))) into (exp (- (* +nan.0 (/ 1 (pow x 4)))))
* [misc]backup-simplify:  Simplify (log (exp (- (* +nan.0 (/ 1 (pow x 4)))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (* 0 (- (* +nan.0 (/ 1 (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ 1 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ 1 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (/ 1 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 1 (pow x 4))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ 1 (pow x 4))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 4))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -0.466667)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (/ (- 2.916667 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (* +nan.0 (/ 1 (pow x 4))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 1) 1)))) into (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))) 1)) (pow (exp (- (* +nan.0 (/ 1 (pow x 4))))) 1)))) 1) into (/ +nan.0 (pow x 4))
* [misc]backup-simplify:  Simplify (+ (* 0 (/ +nan.0 (pow x 4))) (* +nan.0 (- (* +nan.0 (/ 1 (pow x 4)))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ 1 (pow x 4))))) into (exp (- (* +nan.0 (/ 1 (pow x 4)))))
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* -8.0 (/ 1 x)))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* -8.0 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -8.0 1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* -8.0 (/ 1 x)))) into (exp (- 1.0 (* 8.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ -9.333333 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (- 9.333333) (/ 1 (pow x 2))) into (/ -9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (* (exp (- 1.0 (* 8.0 (/ 1 x)))) (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))) into (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) into (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x))))))
* [misc]backup-simplify:  Simplify (log (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x))))))) into (log (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))))
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 (/ 1 x)))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 (/ 1 x)))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 1 -0.466667) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 1 -0.466667) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 x)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (/ 1 (pow x 4))) into (exp (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 4)))) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 0 (/ 1 (pow x 4))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ 1 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (/ 1 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 1 (pow x 4))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ 1 (pow x 4))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* +nan.0 (/ 1 (pow x 4)))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ 1 (pow x 4))))) into (exp (- (* +nan.0 (/ 1 (pow x 4)))))
* [misc]backup-simplify:  Simplify (log (exp (- (* +nan.0 (/ 1 (pow x 4)))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (* 0 (- (* +nan.0 (/ 1 (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ 1 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ 1 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (/ 1 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 1 (pow x 4))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ 1 (pow x 4))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 4))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -0.466667)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (/ (- 2.916667 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (* +nan.0 (/ 1 (pow x 4))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 1) 1)))) into (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))) 1)) (pow (exp (- (* +nan.0 (/ 1 (pow x 4))))) 1)))) 1) into (/ +nan.0 (pow x 4))
* [misc]backup-simplify:  Simplify (+ (* 0 (/ +nan.0 (pow x 4))) (* +nan.0 (- (* +nan.0 (/ 1 (pow x 4)))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ 1 (pow x 4))))) into (exp (- (* +nan.0 (/ 1 (pow x 4)))))
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* -8.0 (/ 1 x)))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* -8.0 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -8.0 1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* -8.0 (/ 1 x)))) into (exp (- 1.0 (* 8.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ -9.333333 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (- 9.333333) (/ 1 (pow x 2))) into (/ -9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (* (exp (- 1.0 (* 8.0 (/ 1 x)))) (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))) into (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) into (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x))))))
* [misc]backup-simplify:  Simplify (log (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x))))))) into (log (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))))
* [misc]backup-simplify:  Simplify (log (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x))))))) into (log (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 8.0 (/ 1 x)))) 0) (* 0 (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ 1 x)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ 1 x)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ 1 x)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 1 (pow x 4))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ 1 (pow x 4))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 4))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 4))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (* +nan.0 (/ 1 (pow x 4)))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 2) 2)) (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 1) 1)))) into (* -1 (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))) 2)) (pow (exp (- (* +nan.0 (/ 1 (pow x 4))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -1 (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))))) 1)) (pow (exp (- (* +nan.0 (/ 1 (pow x 4))))) 1)))) 2) into (* -1/2 (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -0.466667)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (/ (- 2.916667 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (* -1/2 (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))) (+ (* +nan.0 (/ +nan.0 (pow x 4))) (* +nan.0 (- (* +nan.0 (/ 1 (pow x 4))))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 1) 1)))) into (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) 0) (* (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x))))))) into (- (* +nan.0 (/ (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) (pow x 4))))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* +nan.0 (/ (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) (pow x 4))))) 1)) (pow (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 1)))) 1) into (/ +nan.0 (pow x 4))
* [misc]backup-simplify:  Simplify (/ +nan.0 (pow x 4)) into (/ +nan.0 (pow x 4))
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 8.0 (/ 1 x)))) 0) (+ (* 0 0) (* 0 (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ 1 x)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ 1 x)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ 1 x)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ 1 x)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ 1 x)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 1 (pow x 4))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ 1 (pow x 4))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 4))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ 1 (pow x 4))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 4))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ 1 (pow x 4))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow +nan.0 2) (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (* +nan.0 (/ 1 (pow x 4))))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 3) 6)) (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 1) 1) (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 1) 1)) (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 1) 1)))) into (* -1 (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* +nan.0 (/ 1 (pow x 12))) (- (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))))))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))) 3)) (pow (exp (- (* +nan.0 (/ 1 (pow x 4))))) 3))) (* -3 (/ (* (pow (* 1 (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))) 1) (pow (* 2 (* -1 (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))))) 1)) (pow (exp (- (* +nan.0 (/ 1 (pow x 4))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 (* -1 (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* +nan.0 (/ 1 (pow x 12))) (- (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))))))) 1)) (pow (exp (- (* +nan.0 (/ 1 (pow x 4))))) 1)))) 6) into (* -1/6 (+ (* +nan.0 (/ 1 (pow x 12))) (- (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (* -1/6 (+ (* +nan.0 (/ 1 (pow x 12))) (- (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))))) (+ (* +nan.0 (* -1/2 (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))) (+ (* +nan.0 (/ +nan.0 (pow x 4))) (* +nan.0 (- (* +nan.0 (/ 1 (pow x 4)))))))) into (- (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 2) 2)) (* (/ (pow (- (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))) 1) 1)))) into (* -1 (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) 0) (+ (* (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4))) 0) (* (* -1 (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))))) into (- (+ (* +nan.0 (/ (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) (pow x 8))) (- (* +nan.0 (/ (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) (pow x 4))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* +nan.0 (/ (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) (pow x 4))))) 2)) (pow (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 2))) (* 1 (/ (* 1 (pow (* 2 (- (+ (* +nan.0 (/ (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) (pow x 8))) (- (* +nan.0 (/ (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) (pow x 4))))))) 1)) (pow (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 1)))) 2) into (* -1/2 (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))
* [misc]backup-simplify:  Simplify (* -1/2 (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))) into (* 1/2 (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))
* [misc]backup-simplify:  Simplify (+ (* (* 1/2 (+ (* +nan.0 (/ 1 (pow (/ 1 x) 4))) (- (* +nan.0 (/ 1 (pow (/ 1 x) 8)))))) (pow (/ 1 x) 2)) (+ (* (/ +nan.0 (pow (/ 1 x) 4)) (/ 1 x)) (log (* (exp (- (* +nan.0 (/ 1 (pow (/ 1 x) 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 (/ 1 x)))) (pow (/ 1 x) 2))) (exp (- 1.0 (* 8.0 (/ 1 (/ 1 x)))))))))) into (- (log (* (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))) (* (exp (- (* +nan.0 (pow x 4)))) (exp (- 1.0 (* 8.0 x)))))) (+ (* +nan.0 (pow x 2)) (- (+ (* +nan.0 (pow x 3)) (- (* +nan.0 (pow x 6)))))))
* [misc]approximate:  Taking taylor expansion of (log (* (pow (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* -1 -0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.466667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* -1 -0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.466667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (/ -1 x)) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* 0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ -1 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (/ -1 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* +nan.0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))
* [misc]backup-simplify:  Simplify (log (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (* 0 (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ -1 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ -1 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (/ -1 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -0.466667)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (/ (- 2.916667 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (* +nan.0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1) 1)))) into (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))) 1)) (pow (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 1)))) 1) into (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (+ (* 0 (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) (* +nan.0 (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -8.0 -1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) into (exp (+ (* 8.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 9.333333 0) into 9.333333
* [misc]backup-simplify:  Simplify (* 9.333333 (/ 1 (pow x 2))) into (/ 9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))) into (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (exp (+ 1.0 (* 8.0 (/ 1 x)))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (exp (+ 1.0 (* 8.0 (/ 1 x)))))) into (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))) into (log (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (* (exp (+ 1.0 (* 8.0 (/ 1 x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))))
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* -1 -0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.466667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* -1 -0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.466667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (/ -1 x)) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* 0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ -1 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (/ -1 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* +nan.0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))
* [misc]backup-simplify:  Simplify (log (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (* 0 (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ -1 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ -1 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (/ -1 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -0.466667)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (/ (- 2.916667 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (* +nan.0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1) 1)))) into (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))) 1)) (pow (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 1)))) 1) into (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (+ (* 0 (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) (* +nan.0 (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -8.0 -1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) into (exp (+ (* 8.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 9.333333 0) into 9.333333
* [misc]backup-simplify:  Simplify (* 9.333333 (/ 1 (pow x 2))) into (/ 9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))) into (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (exp (+ 1.0 (* 8.0 (/ 1 x)))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (exp (+ 1.0 (* 8.0 (/ 1 x)))))) into (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))) into (log (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (* (exp (+ 1.0 (* 8.0 (/ 1 x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (* (exp (+ 1.0 (* 8.0 (/ 1 x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))) into (log (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) 0) (* 0 (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ -1 x)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ -1 x)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ -1 x)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -1 x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (* +nan.0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 2) 2)) (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1) 1)))) into (* -1 (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))) 2)) (pow (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -1 (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))) 1)) (pow (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 1)))) 2) into (* -1/2 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -0.466667)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (/ (- 2.916667 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (* -1/2 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))) (+ (* +nan.0 (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) (* +nan.0 (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1) 1)))) into (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))
* [misc]backup-simplify:  Simplify (+ (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 0) (* (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x)) (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (exp (+ 1.0 (* 8.0 (/ 1 x))))))) into (- (* +nan.0 (/ (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (exp (* 3 (- (log -1) (log x))))))) x)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* +nan.0 (/ (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (exp (* 3 (- (log -1) (log x))))))) x)))) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))) 1)))) 1) into (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)) into (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (* 0 (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ -1 x)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ -1 x)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ -1 x)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ -1 x)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ -1 x)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -1 x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow +nan.0 2) (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (* +nan.0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 3) 6)) (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1) 1) (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1) 1)) (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1) 1)))) into (* -1 (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (+ (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)) (- (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 3) (pow x 3)))))))))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))) 3)) (pow (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 3))) (* -3 (/ (* (pow (* 1 (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))) 1) (pow (* 2 (* -1 (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))) 1)) (pow (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 (* -1 (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (+ (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)) (- (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 3) (pow x 3)))))))))) 1)) (pow (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 1)))) 6) into (* -1/6 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (+ (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)) (- (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 3) (pow x 3))))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (* -1/6 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (+ (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)) (- (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 3) (pow x 3))))))))) (+ (* +nan.0 (* -1/2 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))) (+ (* +nan.0 (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) (* +nan.0 (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))) into (- (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 2) 2)) (* (/ (pow (- (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) 1) 1)))) into (* -1 (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 0) (+ (* (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x)) 0) (* (* -1 (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))) (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (exp (+ 1.0 (* 8.0 (/ 1 x)))))))) into (- (+ (* +nan.0 (/ (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (exp (* 3 (- (log -1) (log x))))))) x)) (- (* +nan.0 (/ (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)))) (pow x 2))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* +nan.0 (/ (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (exp (* 3 (- (log -1) (log x))))))) x)))) 2)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))) 2))) (* 1 (/ (* 1 (pow (* 2 (- (+ (* +nan.0 (/ (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (exp (* 3 (- (log -1) (log x))))))) x)) (- (* +nan.0 (/ (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)))) (pow x 2))))))) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))) 1)))) 2) into (* -1/2 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))
* [misc]backup-simplify:  Simplify (* -1/2 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) into (* 1/2 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))
* [misc]backup-simplify:  Simplify (+ (* (* 1/2 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) (pow (/ 1 (- x)) 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (/ 1 (- x))))))) (pow (/ 1 (- x)) 2)) (+ (* (* +nan.0 (/ (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (/ 1 (- x)))) (/ 1 (- x))) (log (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 (/ 1 (- x))))) (pow (/ 1 (- x)) 2))) (* (exp (+ (* 8.0 (/ 1 (/ 1 (- x)))) 1.0)) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (/ 1 (- x))))))))))) into (- (log (* (exp (- 1.0 (* 8.0 x))) (* (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))) (exp (- (* +nan.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x))))))) (+ (* +nan.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))) (- (+ (* +nan.0 (/ (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (- (* +nan.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1 2 2)
* [misc]approximate:  Taking taylor expansion of (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -9.333333) 14.0) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -9.333333) 14.0) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 0 14.0) into 14.0
* [misc]backup-simplify:  Simplify (* 14.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (- 9.333333) 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 14.0 0) (* (- 9.333333) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 1) (+ (* (- 9.333333) 0) (* 0 0))) into 14.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -9.333333) 14.0) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -9.333333) 14.0) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 0 14.0) into 14.0
* [misc]backup-simplify:  Simplify (* 14.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (- 9.333333) 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 14.0 0) (* (- 9.333333) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 1) (+ (* (- 9.333333) 0) (* 0 0))) into 14.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 14.0 1) 1)))) into 14.0
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -9.333333)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 0) (+ (* (- 9.333333) 1) (+ (* 0 0) (* 0 0)))) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 14.0 1) 1)) (* (/ (pow (- 9.333333) 1) 1)))) into -9.333333
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]backup-simplify:  Simplify (+ (* -9.333333 (pow x 3)) (+ (* 14.0 (pow x 2)) 1)) into (- (+ (* 14.0 (pow x 2)) 1) (* 9.333333 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ -9.333333 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (- 9.333333) (/ 1 (pow x 2))) into (/ -9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ -9.333333 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (- 9.333333) (/ 1 (pow x 2))) into (/ -9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) into (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (- 14.0 (* 9.333333 (/ 1 (/ 1 x)))) (pow (/ 1 x) 2))) into (exp (* (- 14.0 (* 9.333333 x)) (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 9.333333 0) into 9.333333
* [misc]backup-simplify:  Simplify (* 9.333333 (/ 1 (pow x 2))) into (/ 9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 9.333333 0) into 9.333333
* [misc]backup-simplify:  Simplify (* 9.333333 (/ 1 (pow x 2))) into (/ 9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) into (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (+ (* 9.333333 (/ 1 (/ 1 (- x)))) 14.0) (pow (/ 1 (- x)) 2))) into (exp (* (- 14.0 (* 9.333333 x)) (pow x 2)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 2 1)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (log (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (log (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))
* [enter]simplify:  Simplifying (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (110 enodes)
* * [misc]simplify:  iters left: 1 (216 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (+ 1.0 (* x -8.0)))
* [exit]simplify:  Simplified to (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (+ 1.0 (* x -8.0)))
* * * * [misc]progress:  [ 2 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (* 1 (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (187 enodes)
* * [misc]simplify:  iters left: 1 (249 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (+ (* -8.0 x) (* (* x x) (+ (* x -9.333333) 14.0))))
* [exit]simplify:  Simplified to (+ (+ 1.0 (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (+ (* -8.0 x) (* (* x x) (+ (* x -9.333333) 14.0))))
* * * * [misc]progress:  [ 3 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (pow (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))) 1)))>
* * * * [misc]progress:  [ 4 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* (* x (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 5 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* (* x (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 6 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* (* x (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 7 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* (* x (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 8 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* (* (log (exp x)) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 9 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* (* (log (exp x)) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 10 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* (* (log (exp x)) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 11 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* (* (log (exp x)) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 12 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* (log (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 13 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* (log (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 14 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* (log (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 15 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* (log (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 16 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* (log (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 17 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* (log (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 18 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* (log (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 19 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* (log (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 20 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 21 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 22 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 23 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667))) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 24 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 25 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 26 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 27 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667))) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 28 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (log (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 29 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (log (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (+ (+ 1.0 (* -8.0 x)) (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 30 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (log (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (+ (+ 1.0 (* -8.0 x)) (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 31 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (log (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 32 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 33 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (exp (log (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (log (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (181 enodes)
* * [misc]simplify:  iters left: 1 (234 enodes)
* [exit]simplify:  Simplified to (log (+ (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (log (+ (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 34 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (exp (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (exp (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (136 enodes)
* * [misc]simplify:  iters left: 2 (305 enodes)
* [exit]simplify:  Simplified to (* (exp (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (* (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) (exp (+ (* x -8.0) 1.0))))
* [exit]simplify:  Simplified to (* (exp (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (* (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) (exp (+ (* x -8.0) 1.0))))
* * * * [misc]progress:  [ 35 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (* (* (cbrt (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))) (cbrt (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))) (cbrt (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (* (cbrt (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))) (cbrt (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (116 enodes)
* * [misc]simplify:  iters left: 2 (167 enodes)
* * [misc]simplify:  iters left: 1 (226 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* -8.0 x)) (+ (* (+ (* x -9.333333) 14.0) (* x x)) 1.0))) (cbrt (+ (+ (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* -8.0 x)) (+ (* (+ (* x -9.333333) 14.0) (* x x)) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* -8.0 x)) (+ (* (+ (* x -9.333333) 14.0) (* x x)) 1.0))) (cbrt (+ (+ (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* -8.0 x)) (+ (* (+ (* x -9.333333) 14.0) (* x x)) 1.0))))
* [enter]simplify:  Simplifying (cbrt (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (181 enodes)
* * [misc]simplify:  iters left: 1 (234 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (cbrt (+ (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 36 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (cbrt (* (* (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (* (* (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (201 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ (+ (* -8.0 x) 1.0) (* (+ (* x -9.333333) 14.0) (* x x))) (* (sqrt (+ 2.916667 (* -0.466667 x))) (* (sqrt (+ 2.916667 (* -0.466667 x))) (* (pow x 3) (log (exp x)))))) 3)
* [exit]simplify:  Simplified to (pow (+ (+ (+ (* -8.0 x) 1.0) (* (+ (* x -9.333333) 14.0) (* x x))) (* (sqrt (+ 2.916667 (* -0.466667 x))) (* (sqrt (+ 2.916667 (* -0.466667 x))) (* (pow x 3) (log (exp x)))))) 3)
* * * * [misc]progress:  [ 37 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (* (sqrt (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))) (sqrt (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (sqrt (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (181 enodes)
* * [misc]simplify:  iters left: 1 (234 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (sqrt (+ (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))
* [enter]simplify:  Simplifying (sqrt (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (181 enodes)
* * [misc]simplify:  iters left: 1 (234 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (sqrt (+ (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 38 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (* 1 (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))))>
* * * * [misc]progress:  [ 39 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (exp (* (* x x) (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (* (* x x) (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -9.333333) 14.0) (* x x))
* [exit]simplify:  Simplified to (* (+ (* x -9.333333) 14.0) (* x x))
* * * * [misc]progress:  [ 40 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (exp (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (77 enodes)
* * [misc]simplify:  iters left: 1 (89 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ 14.0 (* x -9.333333)))
* [exit]simplify:  Simplified to (* (* x x) (+ 14.0 (* x -9.333333)))
* * * * [misc]progress:  [ 41 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (* 1 (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (* 1 (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* [exit]simplify:  Simplified to (+ (* -9.333333 x) 14.0)
* [exit]simplify:  Simplified to (+ (* -9.333333 x) 14.0)
* * * * [misc]progress:  [ 42 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp x) (* x (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (* x (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* [exit]simplify:  Simplified to (* x (+ 14.0 (* x -9.333333)))
* [exit]simplify:  Simplified to (* x (+ 14.0 (* x -9.333333)))
* * * * [misc]progress:  [ 43 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (pow (exp (* x x)) (* (cbrt (+ (* x -9.333333) 14.0)) (cbrt (+ (* x -9.333333) 14.0)))) (cbrt (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) (* (cbrt (+ (* x -9.333333) 14.0)) (cbrt (+ (* x -9.333333) 14.0))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* (cbrt (+ (* -9.333333 x) 14.0)) (cbrt (+ (* -9.333333 x) 14.0))))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* (cbrt (+ (* -9.333333 x) 14.0)) (cbrt (+ (* -9.333333 x) 14.0))))
* * * * [misc]progress:  [ 44 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (pow (exp (* x x)) (sqrt (+ (* x -9.333333) 14.0))) (sqrt (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) (sqrt (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (sqrt (+ (* -9.333333 x) 14.0)))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (sqrt (+ (* -9.333333 x) 14.0)))
* * * * [misc]progress:  [ 45 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (pow (exp (* x x)) 1) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) 1)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* [exit]simplify:  Simplified to (exp (* x x))
* [exit]simplify:  Simplified to (exp (* x x))
* * * * [misc]progress:  [ 46 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (* (pow (exp (* x x)) (* x -9.333333)) (pow (exp (* x x)) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) (* x -9.333333))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* -9.333333 x))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* -9.333333 x))
* [enter]simplify:  Simplifying (pow (exp (* x x)) 14.0)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) 14.0)
* [exit]simplify:  Simplified to (pow (exp (* x x)) 14.0)
* * * * [misc]progress:  [ 47 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (* (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ (* x -9.333333) 14.0)) (pow (cbrt (exp (* x x))) (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ 14.0 (* -9.333333 x)))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ 14.0 (* -9.333333 x)))
* [enter]simplify:  Simplifying (pow (cbrt (exp (* x x))) (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp (* x x))) (+ 14.0 (* x -9.333333)))
* [exit]simplify:  Simplified to (pow (cbrt (exp (* x x))) (+ 14.0 (* x -9.333333)))
* * * * [misc]progress:  [ 48 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (* (pow (sqrt (exp (* x x))) (+ (* x -9.333333) 14.0)) (pow (sqrt (exp (* x x))) (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp (* x x))) (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 14.0 (* x -9.333333)))
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 14.0 (* x -9.333333)))
* [enter]simplify:  Simplifying (pow (sqrt (exp (* x x))) (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 14.0 (* x -9.333333)))
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 14.0 (* x -9.333333)))
* * * * [misc]progress:  [ 49 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (* (pow 1 (+ (* x -9.333333) 14.0)) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (pow 1 (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp (* x x)) (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* -9.333333 x) 14.0))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* -9.333333 x) 14.0))
* * * * [misc]progress:  [ 50 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) 1))))))>
* * * * [misc]progress:  [ 51 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (exp (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* * [misc]simplify:  iters left: 1 (60 enodes)
* [exit]simplify:  Simplified to (* (+ (* -9.333333 x) 14.0) (* x x))
* [exit]simplify:  Simplified to (* (+ (* -9.333333 x) 14.0) (* x x))
* * * * [misc]progress:  [ 52 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (log (exp (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (exp (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* [exit]simplify:  Simplified to (exp (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* * * * [misc]progress:  [ 53 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (* (* (cbrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0))) (cbrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))) (cbrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0))) (cbrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0))) (cbrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0))) (cbrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0))))
* [enter]simplify:  Simplifying (cbrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* [exit]simplify:  Simplified to (cbrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* * * * [misc]progress:  [ 54 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (cbrt (* (* (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (* (* (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)) 3)
* [exit]simplify:  Simplified to (pow (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)) 3)
* * * * [misc]progress:  [ 55 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (* (sqrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0))) (sqrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* [enter]simplify:  Simplifying (sqrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* * * * [misc]progress:  [ 56 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (* 1 (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))))>
* * * * [misc]progress:  [ 57 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 58 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (* (log (* x x)) 3)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 59 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x (* 2 3)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]progress:  [ 60 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) (* 1 3)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 61 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (pow x 3) (pow x 3)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 62 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 63 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (pow (* x x) 3) 1) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 64 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (exp (log (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (log (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 65 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (log (exp (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 66 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (cbrt (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 67 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (cbrt (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 68 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (pow x 3) (pow x 3)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 69 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* x x) (* (* x x) (* x x))) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 70 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 71 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (sqrt (pow (* x x) 3)) (sqrt (pow (* x x) 3))) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 72 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* 1 (pow (* x x) 3)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 73 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (exp (* (log (* x x)) 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 74 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (exp (* (log (* x x)) 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 75 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]progress:  [ 76 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) (* 1 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 77 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (pow x 3) (pow x 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 78 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* x x)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 79 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (pow (* x x) 3) 1) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 80 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (exp (log (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (log (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 81 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (log (exp (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 82 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (cbrt (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 83 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (cbrt (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 84 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (pow x 3) (pow x 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 85 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* x x) (* (* x x) (* x x))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 86 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* x x)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 87 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (sqrt (pow (* x x) 3)) (sqrt (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 88 / 100 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* 1 (pow (* x x) 3)) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 89 / 100 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (- (+ (* 14.0 (pow x 2)) 1.0) (* 8.0 x))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (- (+ (* 14.0 (pow x 2)) 1.0) (* 8.0 x)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (+ (* (pow (* x x) 3) (+ (* (* x x) 2.5e-05) (+ (* -0.001587 x) 0.038889))) (+ (- 1.0 (* x 8.0)) (* (* 14.0 x) x)))
* * * * [misc]progress:  [ 90 / 100 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (- (log (* (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))) (* (exp (- (* +nan.0 (pow x 4)))) (exp (- 1.0 (* 8.0 x)))))) (+ (* +nan.0 (pow x 2)) (- (+ (* +nan.0 (pow x 3)) (- (* +nan.0 (pow x 6)))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (- (log (* (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))) (* (exp (- (* +nan.0 (pow x 4)))) (exp (- 1.0 (* 8.0 x)))))) (+ (* +nan.0 (pow x 2)) (- (+ (* +nan.0 (pow x 3)) (- (* +nan.0 (pow x 6))))))))
* * * * [misc]progress:  [ 91 / 100 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (- (log (* (exp (- 1.0 (* 8.0 x))) (* (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))) (exp (- (* +nan.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x))))))) (+ (* +nan.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))) (- (+ (* +nan.0 (/ (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (- (* +nan.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (- (log (* (exp (- 1.0 (* 8.0 x))) (* (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))) (exp (- (* +nan.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x))))))) (+ (* +nan.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))) (- (+ (* +nan.0 (/ (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (- (* +nan.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))))))))
* * * * [misc]progress:  [ 92 / 100 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (- (+ (* 14.0 (pow x 2)) 1) (* 9.333333 (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (- (+ (* 14.0 (pow x 2)) 1) (* 9.333333 (pow x 3)))))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (92 enodes)
* * [misc]simplify:  iters left: 4 (279 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (+ 1 (* (* x x) (- 14.0 (* x 9.333333))))) (+ (* -8.0 x) 1.0)) (+ (* (+ (* (* x 2.5e-05) x) (+ (* -0.001587 x) 0.038889)) (pow (* x x) 3)) (* (sqrt (+ 2.916667 (* -0.466667 x))) (* (sqrt (+ 2.916667 (* -0.466667 x))) (log (pow (exp x) (pow x 3)))))))
* * * * [misc]progress:  [ 93 / 100 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (exp (* (- 14.0 (* 9.333333 x)) (pow x 2)))))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (254 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow (* x x) 3) (+ (* x (* x 2.5e-05)) (+ (* -0.001587 x) 0.038889))) (+ (* (* x x) (- 14.0 (* 9.333333 x))) (+ (* -8.0 x) 1.0))) (* (* (sqrt (+ 2.916667 (* -0.466667 x))) (log (pow (exp x) (pow x 3)))) (sqrt (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 94 / 100 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (exp (* (- 14.0 (* 9.333333 x)) (pow x 2)))))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (254 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow (* x x) 3) (+ (* x (* x 2.5e-05)) (+ (* -0.001587 x) 0.038889))) (+ (* (* x x) (- 14.0 (* 9.333333 x))) (+ (* -8.0 x) 1.0))) (* (* (sqrt (+ 2.916667 (* -0.466667 x))) (log (pow (exp x) (pow x 3)))) (sqrt (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 95 / 100 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x 6) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x 6) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (82 enodes)
* * [misc]simplify:  iters left: 4 (179 enodes)
* * [misc]simplify:  iters left: 3 (379 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* x -9.333333) 14.0) (* x x)) (+ (* x -8.0) 1.0)) (+ (* (* 2.5e-05 (* x x)) (pow (* x x) 3)) (* (pow x 6) (+ 0.038889 (* -0.001587 x))))) (* (sqrt (+ 2.916667 (* -0.466667 x))) (* (sqrt (+ 2.916667 (* -0.466667 x))) (* (pow x 3) (log (exp x))))))
* * * * [misc]progress:  [ 96 / 100 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ 1 x) -6) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ 1 x) -6) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (86 enodes)
* * [misc]simplify:  iters left: 4 (185 enodes)
* * [misc]simplify:  iters left: 3 (372 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow (/ 1 x) -6) (+ 0.038889 (* x -0.001587))) (* (* (* x x) 2.5e-05) (pow (* x x) 3))) (+ (+ (* -8.0 x) 1.0) (* (+ (* x -9.333333) 14.0) (* x x)))) (* (sqrt (+ (* -0.466667 x) 2.916667)) (* (sqrt (+ (* -0.466667 x) 2.916667)) (* (pow x 3) (log (exp x))))))
* * * * [misc]progress:  [ 97 / 100 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ -1 x) -6) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (/ -1 x) -6) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (84 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* * [misc]simplify:  iters left: 3 (374 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow (/ -1 x) -6) (+ 0.038889 (* x -0.001587))) (* (* (* x x) 2.5e-05) (pow (* x x) 3))) (+ (* (* x x) (+ (* x -9.333333) 14.0)) (+ (* -8.0 x) 1.0))) (* (sqrt (+ (* -0.466667 x) 2.916667)) (* (* (pow x 3) (log (exp x))) (sqrt (+ (* -0.466667 x) 2.916667)))))
* * * * [misc]progress:  [ 98 / 100 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow x 6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow x 6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (82 enodes)
* * [misc]simplify:  iters left: 4 (199 enodes)
* * [misc]simplify:  iters left: 3 (481 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* x -9.333333) 14.0) (* x x)) (+ 1.0 (* x -8.0))) (+ (* 2.5e-05 (* (pow x 6) (* x x))) (* (pow (* x x) 3) (+ 0.038889 (* -0.001587 x))))) (* (sqrt (+ 2.916667 (* -0.466667 x))) (* (* (pow x 3) (log (exp x))) (sqrt (+ 2.916667 (* -0.466667 x))))))
* * * * [misc]progress:  [ 99 / 100 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (/ 1 x) -6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (/ 1 x) -6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (86 enodes)
* * [misc]simplify:  iters left: 4 (205 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (sqrt (+ (* x -0.466667) 2.916667)) (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (exp x) (pow x 3))))) (+ (* (pow (* x x) 3) (+ 0.038889 (* x -0.001587))) (* (* x (* 2.5e-05 x)) (pow (/ 1 x) -6)))) (+ (+ 1.0 (* x -8.0)) (* (+ (* -9.333333 x) 14.0) (log (exp (* x x))))))
* * * * [misc]progress:  [ 100 / 100 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (/ -1 x) -6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (/ -1 x) -6) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (84 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* * [misc]simplify:  iters left: 3 (482 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (+ 1.0 (* x -8.0))) (+ (* (pow (* x x) 3) (+ 0.038889 (* x -0.001587))) (* (* (* x x) 2.5e-05) (pow (/ -1 x) -6)))) (* (sqrt (+ (* x -0.466667) 2.916667)) (* (* (pow x 3) (log (exp x))) (sqrt (+ (* x -0.466667) 2.916667)))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1 2 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 1 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* x -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.466667) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 0 -0.466667) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (sqrt 2.916667) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.466667)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 2.916667))) into (/ -0.2333335 (sqrt 2.916667))
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (exp x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (exp x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* x -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.466667) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 0 -0.466667) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (sqrt 2.916667) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.466667)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 2.916667))) into (/ -0.2333335 (sqrt 2.916667))
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (* 0 0)) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* (sqrt 2.916667) 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (* (/ -0.2333335 (sqrt 2.916667)) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.2333335 (sqrt 2.916667)) 2) (+)) (* 2 (sqrt 2.916667))) into (/ -0.027222261111125 (pow (sqrt 2.916667) 3))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.027222261111125 (pow (sqrt 2.916667) 3)))))) (* 2 (sqrt 2.916667))) into (/ -0.006351865462972685 (pow (sqrt 2.916667) 5))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1) 1)) (pow 1 1)))) 24) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 2) (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)))))) (* 2 (sqrt 2.916667))) into (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 1) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (+ (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0) (* (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7)) 0))))) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* (sqrt 2.916667) 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (* (/ -0.2333335 (sqrt 2.916667)) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.2333335 (sqrt 2.916667)) 2) (+)) (* 2 (sqrt 2.916667))) into (/ -0.027222261111125 (pow (sqrt 2.916667) 3))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.027222261111125 (pow (sqrt 2.916667) 3)))))) (* 2 (sqrt 2.916667))) into (/ -0.006351865462972685 (pow (sqrt 2.916667) 5))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow (sqrt 2.916667) 1) 1)))) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (sqrt 2.916667)) 1)) (pow 1 1)))) 24) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 2) (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)))))) (* 2 (sqrt 2.916667))) into (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) (sqrt 2.916667)) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (+ (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0) (* (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7)) 0))))) into (pow (sqrt 2.916667) 2)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* -8.0 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 x) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -9.333333) 14.0) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -9.333333) 14.0) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 0 14.0) into 14.0
* [misc]backup-simplify:  Simplify (* 14.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (- 9.333333) 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 14.0 0) (* (- 9.333333) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 1) (+ (* (- 9.333333) 0) (* 0 0))) into 14.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (* 1 (exp 1.0)) into (exp 1.0)
* [misc]backup-simplify:  Simplify (log (exp 1.0)) into 1.0
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* x -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.466667) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 0 -0.466667) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (sqrt 2.916667) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.466667)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 2.916667))) into (/ -0.2333335 (sqrt 2.916667))
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (exp x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (exp x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* x -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.466667) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 0 -0.466667) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (sqrt 2.916667) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.466667)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 2.916667))) into (/ -0.2333335 (sqrt 2.916667))
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (* 0 0)) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* (sqrt 2.916667) 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (* (/ -0.2333335 (sqrt 2.916667)) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.2333335 (sqrt 2.916667)) 2) (+)) (* 2 (sqrt 2.916667))) into (/ -0.027222261111125 (pow (sqrt 2.916667) 3))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.027222261111125 (pow (sqrt 2.916667) 3)))))) (* 2 (sqrt 2.916667))) into (/ -0.006351865462972685 (pow (sqrt 2.916667) 5))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1) 1)) (pow 1 1)))) 24) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 2) (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)))))) (* 2 (sqrt 2.916667))) into (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 1) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (+ (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0) (* (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7)) 0))))) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* (sqrt 2.916667) 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (* (/ -0.2333335 (sqrt 2.916667)) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.2333335 (sqrt 2.916667)) 2) (+)) (* 2 (sqrt 2.916667))) into (/ -0.027222261111125 (pow (sqrt 2.916667) 3))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.027222261111125 (pow (sqrt 2.916667) 3)))))) (* 2 (sqrt 2.916667))) into (/ -0.006351865462972685 (pow (sqrt 2.916667) 5))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow (sqrt 2.916667) 1) 1)))) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (sqrt 2.916667)) 1)) (pow 1 1)))) 24) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 2) (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)))))) (* 2 (sqrt 2.916667))) into (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) (sqrt 2.916667)) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (+ (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0) (* (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7)) 0))))) into (pow (sqrt 2.916667) 2)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* -8.0 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 x) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -8.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -9.333333) 14.0) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -9.333333) 14.0) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 0 14.0) into 14.0
* [misc]backup-simplify:  Simplify (* 14.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (- 9.333333) 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 14.0 0) (* (- 9.333333) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 1) (+ (* (- 9.333333) 0) (* 0 0))) into 14.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (* 1 (exp 1.0)) into (exp 1.0)
* [misc]backup-simplify:  Simplify (log (exp 1.0)) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -8.0 1) (* 0 0)) into (- 8.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 8.0)) into (- 8.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 8.0) 1) 1)))) into (* -8.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (* (* -8.0 (exp 1.0)) 1)) into (- (* 8.0 (exp 1.0)))
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 (- (* 8.0 (exp 1.0)))) (* 0 (exp 1.0))) into (- (* 8.0 (exp 1.0)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* 8.0 (exp 1.0)))) 1)) (pow (exp 1.0) 1)))) 1) into -8.0
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 14.0 1) 1)))) into 14.0
* [misc]backup-simplify:  Simplify (+ (* -8.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 8.0) 2) 2)) (* (/ (pow 0 1) 1)))) into (* 32.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 14.0) (+ (* (* -8.0 (exp 1.0)) 0) (* (* 32.0 (exp 1.0)) 1))) into (* 46.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 (* 46.0 (exp 1.0))) (+ (* 0 (- (* 8.0 (exp 1.0)))) (* 0 (exp 1.0)))) into (* 46.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* 8.0 (exp 1.0)))) 2)) (pow (exp 1.0) 2))) (* 1 (/ (* 1 (pow (* 2 (* 46.0 (exp 1.0))) 1)) (pow (exp 1.0) 1)))) 2) into 14.0
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]backup-simplify:  Simplify (+ (* 14.0 (pow x 2)) (+ (* -8.0 x) 1.0)) into (- (+ (* 14.0 (pow x 2)) 1.0) (* 8.0 x))
* [misc]approximate:  Taking taylor expansion of (log (* (pow (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 (/ 1 x)))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 (/ 1 x)))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 (/ 1 x)))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 1 -0.466667) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 1 -0.466667) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 x)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (/ 1 (pow x 4))) into (exp (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 4)))) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 0 (/ 1 (pow x 4))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ 1 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (/ 1 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 1 (pow x 4))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ 1 (pow x 4))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* +nan.0 (/ 1 (pow x 4)))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ 1 (pow x 4))))) into (exp (- (* +nan.0 (/ 1 (pow x 4)))))
* [misc]backup-simplify:  Simplify (log (exp (- (* +nan.0 (/ 1 (pow x 4)))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (* 0 (- (* +nan.0 (/ 1 (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ 1 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ 1 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (/ 1 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 1 (pow x 4))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ 1 (pow x 4))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 4))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -0.466667)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (/ (- 2.916667 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (* +nan.0 (/ 1 (pow x 4))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 1) 1)))) into (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))) 1)) (pow (exp (- (* +nan.0 (/ 1 (pow x 4))))) 1)))) 1) into (/ +nan.0 (pow x 4))
* [misc]backup-simplify:  Simplify (+ (* 0 (/ +nan.0 (pow x 4))) (* +nan.0 (- (* +nan.0 (/ 1 (pow x 4)))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ 1 (pow x 4))))) into (exp (- (* +nan.0 (/ 1 (pow x 4)))))
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* -8.0 (/ 1 x)))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* -8.0 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -8.0 1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* -8.0 (/ 1 x)))) into (exp (- 1.0 (* 8.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ -9.333333 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (- 9.333333) (/ 1 (pow x 2))) into (/ -9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (* (exp (- 1.0 (* 8.0 (/ 1 x)))) (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))) into (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) into (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x))))))
* [misc]backup-simplify:  Simplify (log (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x))))))) into (log (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))))
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 (/ 1 x)))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 (/ 1 x)))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 1 -0.466667) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 1 -0.466667) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 x)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (/ 1 (pow x 4))) into (exp (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 4)))) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 0 (/ 1 (pow x 4))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ 1 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (/ 1 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 1 (pow x 4))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ 1 (pow x 4))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* +nan.0 (/ 1 (pow x 4)))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ 1 (pow x 4))))) into (exp (- (* +nan.0 (/ 1 (pow x 4)))))
* [misc]backup-simplify:  Simplify (log (exp (- (* +nan.0 (/ 1 (pow x 4)))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (* 0 (- (* +nan.0 (/ 1 (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ 1 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ 1 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (/ 1 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 1 (pow x 4))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ 1 (pow x 4))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 4))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -0.466667)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (/ (- 2.916667 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (* +nan.0 (/ 1 (pow x 4))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 1) 1)))) into (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))) 1)) (pow (exp (- (* +nan.0 (/ 1 (pow x 4))))) 1)))) 1) into (/ +nan.0 (pow x 4))
* [misc]backup-simplify:  Simplify (+ (* 0 (/ +nan.0 (pow x 4))) (* +nan.0 (- (* +nan.0 (/ 1 (pow x 4)))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ 1 (pow x 4))))) into (exp (- (* +nan.0 (/ 1 (pow x 4)))))
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* -8.0 (/ 1 x)))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* -8.0 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -8.0 1) into -8.0
* [misc]backup-simplify:  Simplify (+ 0 -8.0) into (- 8.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* -8.0 (/ 1 x)))) into (exp (- 1.0 (* 8.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ -9.333333 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (- 9.333333) (/ 1 (pow x 2))) into (/ -9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (* (exp (- 1.0 (* 8.0 (/ 1 x)))) (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))) into (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) into (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x))))))
* [misc]backup-simplify:  Simplify (log (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x))))))) into (log (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))))
* [misc]backup-simplify:  Simplify (log (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x))))))) into (log (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 8.0 (/ 1 x)))) 0) (* 0 (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ 1 x)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ 1 x)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ 1 x)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 1 (pow x 4))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ 1 (pow x 4))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 4))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 4))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (* +nan.0 (/ 1 (pow x 4)))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 2) 2)) (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 1) 1)))) into (* -1 (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))) 2)) (pow (exp (- (* +nan.0 (/ 1 (pow x 4))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -1 (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))))) 1)) (pow (exp (- (* +nan.0 (/ 1 (pow x 4))))) 1)))) 2) into (* -1/2 (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -0.466667)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (/ (- 2.916667 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (* -1/2 (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))) (+ (* +nan.0 (/ +nan.0 (pow x 4))) (* +nan.0 (- (* +nan.0 (/ 1 (pow x 4))))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 1) 1)))) into (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))
* [misc]backup-simplify:  Simplify (+ (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) 0) (* (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x))))))) into (- (* +nan.0 (/ (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) (pow x 4))))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* +nan.0 (/ (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) (pow x 4))))) 1)) (pow (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 1)))) 1) into (/ +nan.0 (pow x 4))
* [misc]backup-simplify:  Simplify (/ +nan.0 (pow x 4)) into (/ +nan.0 (pow x 4))
* [misc]backup-simplify:  Simplify (+ (* (exp (- 1.0 (* 8.0 (/ 1 x)))) 0) (+ (* 0 0) (* 0 (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ 1 x)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ 1 x)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ 1 x)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ 1 x)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ 1 x)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 1 (pow x 4))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ 1 (pow x 4))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 4))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ 1 (pow x 4))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 4))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ 1 (pow x 4))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow +nan.0 2) (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (* +nan.0 (/ 1 (pow x 4))))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 3) 6)) (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 1) 1) (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 1) 1)) (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 1) 1)))) into (* -1 (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* +nan.0 (/ 1 (pow x 12))) (- (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))))))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))) 3)) (pow (exp (- (* +nan.0 (/ 1 (pow x 4))))) 3))) (* -3 (/ (* (pow (* 1 (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))) 1) (pow (* 2 (* -1 (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))))) 1)) (pow (exp (- (* +nan.0 (/ 1 (pow x 4))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 (* -1 (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* +nan.0 (/ 1 (pow x 12))) (- (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))))))) 1)) (pow (exp (- (* +nan.0 (/ 1 (pow x 4))))) 1)))) 6) into (* -1/6 (+ (* +nan.0 (/ 1 (pow x 12))) (- (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (* -1/6 (+ (* +nan.0 (/ 1 (pow x 12))) (- (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))))) (+ (* +nan.0 (* -1/2 (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))) (+ (* +nan.0 (/ +nan.0 (pow x 4))) (* +nan.0 (- (* +nan.0 (/ 1 (pow x 4)))))))) into (- (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 2) 2)) (* (/ (pow (- (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))) 1) 1)))) into (* -1 (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) 0) (+ (* (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4))) 0) (* (* -1 (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))))) into (- (+ (* +nan.0 (/ (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) (pow x 8))) (- (* +nan.0 (/ (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) (pow x 4))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* +nan.0 (/ (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) (pow x 4))))) 2)) (pow (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 2))) (* 1 (/ (* 1 (pow (* 2 (- (+ (* +nan.0 (/ (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) (pow x 8))) (- (* +nan.0 (/ (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) (pow x 4))))))) 1)) (pow (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (exp (- 1.0 (* 8.0 (/ 1 x)))))) 1)))) 2) into (* -1/2 (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))
* [misc]backup-simplify:  Simplify (* -1/2 (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))) into (* 1/2 (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))
* [misc]backup-simplify:  Simplify (+ (* (* 1/2 (+ (* +nan.0 (/ 1 (pow (/ 1 x) 4))) (- (* +nan.0 (/ 1 (pow (/ 1 x) 8)))))) (pow (/ 1 x) 2)) (+ (* (/ +nan.0 (pow (/ 1 x) 4)) (/ 1 x)) (log (* (exp (- (* +nan.0 (/ 1 (pow (/ 1 x) 4))))) (* (exp (/ (- 14.0 (* 9.333333 (/ 1 (/ 1 x)))) (pow (/ 1 x) 2))) (exp (- 1.0 (* 8.0 (/ 1 (/ 1 x)))))))))) into (- (log (* (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))) (* (exp (- (* +nan.0 (pow x 4)))) (exp (- 1.0 (* 8.0 x)))))) (+ (* +nan.0 (pow x 2)) (- (+ (* +nan.0 (pow x 3)) (- (* +nan.0 (pow x 6)))))))
* [misc]approximate:  Taking taylor expansion of (log (* (pow (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* -1 -0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.466667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* -1 -0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.466667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (/ -1 x)) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* 0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ -1 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (/ -1 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* +nan.0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))
* [misc]backup-simplify:  Simplify (log (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (* 0 (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ -1 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ -1 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (/ -1 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -0.466667)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (/ (- 2.916667 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (* +nan.0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1) 1)))) into (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))) 1)) (pow (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 1)))) 1) into (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (+ (* 0 (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) (* +nan.0 (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -8.0 -1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) into (exp (+ (* 8.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 9.333333 0) into 9.333333
* [misc]backup-simplify:  Simplify (* 9.333333 (/ 1 (pow x 2))) into (/ 9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))) into (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (exp (+ 1.0 (* 8.0 (/ 1 x)))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (exp (+ 1.0 (* 8.0 (/ 1 x)))))) into (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))) into (log (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (* (exp (+ 1.0 (* 8.0 (/ 1 x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))))
* [misc]taylor:  Taking taylor expansion of (log (* (pow (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* -1 -0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.466667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* -1 -0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.466667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (/ -1 x)) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* 0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ -1 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (/ -1 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* +nan.0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))
* [misc]backup-simplify:  Simplify (log (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (* 0 (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ -1 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ -1 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (/ -1 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -0.466667)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (/ (- 2.916667 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (* +nan.0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1) 1)))) into (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))) 1)) (pow (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 1)))) 1) into (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (+ (* 0 (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) (* +nan.0 (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))
* [misc]taylor:  Taking taylor expansion of (* (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -8.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -8.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -8.0 in x
* [misc]backup-simplify:  Simplify -8.0 into -8.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -8.0 -1) into 8.0
* [misc]backup-simplify:  Simplify (+ 0 8.0) into 8.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* -8.0 (/ 1 (- x))))) into (exp (+ (* 8.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 9.333333 0) into 9.333333
* [misc]backup-simplify:  Simplify (* 9.333333 (/ 1 (pow x 2))) into (/ 9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))) into (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (exp (+ 1.0 (* 8.0 (/ 1 x)))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (exp (+ 1.0 (* 8.0 (/ 1 x)))))) into (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))) into (log (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (* (exp (+ 1.0 (* 8.0 (/ 1 x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (* (exp (+ 1.0 (* 8.0 (/ 1 x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))) into (log (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) 0) (* 0 (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ -1 x)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ -1 x)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ -1 x)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -1 x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (* +nan.0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 2) 2)) (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1) 1)))) into (* -1 (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))) 2)) (pow (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -1 (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))) 1)) (pow (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 1)))) 2) into (* -1/2 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -0.466667)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (/ (- 2.916667 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (* -1/2 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))) (+ (* +nan.0 (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) (* +nan.0 (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1) 1)))) into (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))
* [misc]backup-simplify:  Simplify (+ (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 0) (* (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x)) (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (exp (+ 1.0 (* 8.0 (/ 1 x))))))) into (- (* +nan.0 (/ (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (exp (* 3 (- (log -1) (log x))))))) x)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* +nan.0 (/ (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (exp (* 3 (- (log -1) (log x))))))) x)))) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))) 1)))) 1) into (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)) into (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (+ (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) 0) (+ (* 0 0) (* 0 (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ -1 x)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ -1 x)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ -1 x)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ -1 x)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ -1 x)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -1 x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow +nan.0 2) (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (* +nan.0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 3) 6)) (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1) 1) (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1) 1)) (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1) 1)))) into (* -1 (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (+ (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)) (- (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 3) (pow x 3)))))))))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))) 3)) (pow (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 3))) (* -3 (/ (* (pow (* 1 (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))) 1) (pow (* 2 (* -1 (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))) 1)) (pow (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 (* -1 (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (+ (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)) (- (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 3) (pow x 3)))))))))) 1)) (pow (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 1)))) 6) into (* -1/6 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (+ (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)) (- (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 3) (pow x 3))))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (* -1/6 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (+ (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)) (- (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 3) (pow x 3))))))))) (+ (* +nan.0 (* -1/2 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))) (+ (* +nan.0 (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) (* +nan.0 (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))) into (- (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 2) 2)) (* (/ (pow (- (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) 1) 1)))) into (* -1 (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 0) (+ (* (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x)) 0) (* (* -1 (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))) (* (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2))) (exp (+ 1.0 (* 8.0 (/ 1 x)))))))) into (- (+ (* +nan.0 (/ (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (exp (* 3 (- (log -1) (log x))))))) x)) (- (* +nan.0 (/ (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)))) (pow x 2))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* +nan.0 (/ (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (exp (* 3 (- (log -1) (log x))))))) x)))) 2)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))) 2))) (* 1 (/ (* 1 (pow (* 2 (- (+ (* +nan.0 (/ (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (exp (* 3 (- (log -1) (log x))))))) x)) (- (* +nan.0 (/ (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)))) (pow x 2))))))) 1)) (pow (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) (* (exp (+ (* 8.0 (/ 1 x)) 1.0)) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))) 1)))) 2) into (* -1/2 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))
* [misc]backup-simplify:  Simplify (* -1/2 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) into (* 1/2 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))
* [misc]backup-simplify:  Simplify (+ (* (* 1/2 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) (pow (/ 1 (- x)) 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (/ 1 (- x))))))) (pow (/ 1 (- x)) 2)) (+ (* (* +nan.0 (/ (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (/ 1 (- x)))) (/ 1 (- x))) (log (* (exp (/ (+ 14.0 (* 9.333333 (/ 1 (/ 1 (- x))))) (pow (/ 1 (- x)) 2))) (* (exp (+ (* 8.0 (/ 1 (/ 1 (- x)))) 1.0)) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (/ 1 (- x))))))))))) into (- (log (* (exp (- 1.0 (* 8.0 x))) (* (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))) (exp (- (* +nan.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x))))))) (+ (* +nan.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))) (- (+ (* +nan.0 (/ (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (- (* +nan.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1 2 2)
* [misc]approximate:  Taking taylor expansion of (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -9.333333) 14.0) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -9.333333) 14.0) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 0 14.0) into 14.0
* [misc]backup-simplify:  Simplify (* 14.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (- 9.333333) 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 14.0 0) (* (- 9.333333) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 1) (+ (* (- 9.333333) 0) (* 0 0))) into 14.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -9.333333) 14.0) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -9.333333) 14.0) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -9.333333) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -9.333333) into 0
* [misc]backup-simplify:  Simplify (+ 0 14.0) into 14.0
* [misc]backup-simplify:  Simplify (* 14.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -9.333333)) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (- 9.333333) 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (+ (* 14.0 0) (* (- 9.333333) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -9.333333))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 1) (+ (* (- 9.333333) 0) (* 0 0))) into 14.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 14.0 1) 1)))) into 14.0
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -9.333333)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 14.0 0) (+ (* (- 9.333333) 1) (+ (* 0 0) (* 0 0)))) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 14.0 1) 1)) (* (/ (pow (- 9.333333) 1) 1)))) into -9.333333
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]backup-simplify:  Simplify (+ (* -9.333333 (pow x 3)) (+ (* 14.0 (pow x 2)) 1)) into (- (+ (* 14.0 (pow x 2)) 1) (* 9.333333 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ -9.333333 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (- 9.333333) (/ 1 (pow x 2))) into (/ -9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -9.333333) into -9.333333
* [misc]backup-simplify:  Simplify (+ -9.333333 0) into (- 9.333333)
* [misc]backup-simplify:  Simplify (* (- 9.333333) (/ 1 (pow x 2))) into (/ -9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -9.333333) 14.0) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) into (exp (/ (- 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (- 14.0 (* 9.333333 (/ 1 (/ 1 x)))) (pow (/ 1 x) 2))) into (exp (* (- 14.0 (* 9.333333 x)) (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 9.333333 0) into 9.333333
* [misc]backup-simplify:  Simplify (* 9.333333 (/ 1 (pow x 2))) into (/ 9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) -9.333333) 14.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -9.333333) 14.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -9.333333) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -9.333333 in x
* [misc]backup-simplify:  Simplify -9.333333 into -9.333333
* [misc]taylor:  Taking taylor expansion of 14.0 in x
* [misc]backup-simplify:  Simplify 14.0 into 14.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -9.333333) into 9.333333
* [misc]backup-simplify:  Simplify (+ 9.333333 0) into 9.333333
* [misc]backup-simplify:  Simplify (* 9.333333 (/ 1 (pow x 2))) into (/ 9.333333 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -9.333333) 14.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ (+ 14.0 (* 9.333333 (/ 1 x))) (pow x 2))) into (exp (/ (+ (* 9.333333 (/ 1 x)) 14.0) (pow x 2)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (+ (* 9.333333 (/ 1 (/ 1 (- x)))) 14.0) (pow (/ 1 (- x)) 2))) into (exp (* (- 14.0 (* 9.333333 x)) (pow x 2)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* x -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.466667) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 0 -0.466667) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (sqrt 2.916667) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.466667)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 2.916667))) into (/ -0.2333335 (sqrt 2.916667))
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (exp x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (exp x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* x -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.466667) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 0 -0.466667) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (sqrt 2.916667) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.466667)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 2.916667))) into (/ -0.2333335 (sqrt 2.916667))
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (* 0 0)) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* (sqrt 2.916667) 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (* (/ -0.2333335 (sqrt 2.916667)) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.2333335 (sqrt 2.916667)) 2) (+)) (* 2 (sqrt 2.916667))) into (/ -0.027222261111125 (pow (sqrt 2.916667) 3))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.027222261111125 (pow (sqrt 2.916667) 3)))))) (* 2 (sqrt 2.916667))) into (/ -0.006351865462972685 (pow (sqrt 2.916667) 5))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1) 1)) (pow 1 1)))) 24) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 2) (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)))))) (* 2 (sqrt 2.916667))) into (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 1) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (+ (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0) (* (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7)) 0))))) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* (sqrt 2.916667) 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (* (/ -0.2333335 (sqrt 2.916667)) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.2333335 (sqrt 2.916667)) 2) (+)) (* 2 (sqrt 2.916667))) into (/ -0.027222261111125 (pow (sqrt 2.916667) 3))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.027222261111125 (pow (sqrt 2.916667) 3)))))) (* 2 (sqrt 2.916667))) into (/ -0.006351865462972685 (pow (sqrt 2.916667) 5))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow (sqrt 2.916667) 1) 1)))) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (sqrt 2.916667)) 1)) (pow 1 1)))) 24) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 2) (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)))))) (* 2 (sqrt 2.916667))) into (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) (sqrt 2.916667)) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (+ (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0) (* (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7)) 0))))) into (pow (sqrt 2.916667) 2)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* x -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.466667) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 0 -0.466667) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (sqrt 2.916667) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.466667)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 2.916667))) into (/ -0.2333335 (sqrt 2.916667))
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (exp x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (exp x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* x -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.466667) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 0 -0.466667) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (sqrt 2.916667) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.466667)) into (- 0.466667)
* [misc]backup-simplify:  Simplify (+ (- 0.466667) 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 2.916667))) into (/ -0.2333335 (sqrt 2.916667))
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (* 0 0)) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* (sqrt 2.916667) 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (* (/ -0.2333335 (sqrt 2.916667)) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.2333335 (sqrt 2.916667)) 2) (+)) (* 2 (sqrt 2.916667))) into (/ -0.027222261111125 (pow (sqrt 2.916667) 3))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.027222261111125 (pow (sqrt 2.916667) 3)))))) (* 2 (sqrt 2.916667))) into (/ -0.006351865462972685 (pow (sqrt 2.916667) 5))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1) 1)) (pow 1 1)))) 24) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 2) (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)))))) (* 2 (sqrt 2.916667))) into (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 1) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (+ (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0) (* (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7)) 0))))) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* (sqrt 2.916667) 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (* (/ -0.2333335 (sqrt 2.916667)) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.2333335 (sqrt 2.916667)) 2) (+)) (* 2 (sqrt 2.916667))) into (/ -0.027222261111125 (pow (sqrt 2.916667) 3))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.027222261111125 (pow (sqrt 2.916667) 3)))))) (* 2 (sqrt 2.916667))) into (/ -0.006351865462972685 (pow (sqrt 2.916667) 5))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow (sqrt 2.916667) 1) 1)))) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (sqrt 2.916667)) 1)) (pow 1 1)))) 24) into (sqrt 2.916667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 2) (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)))))) (* 2 (sqrt 2.916667))) into (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) (sqrt 2.916667)) (+ (* (/ -0.2333335 (sqrt 2.916667)) 0) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (+ (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0) (* (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7)) 0))))) into (pow (sqrt 2.916667) 2)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow (pow (sqrt 2.916667) 2) 1) 1)))) into (pow (sqrt 2.916667) 2)
* [misc]backup-simplify:  Simplify (pow (sqrt 2.916667) 2) into (pow (sqrt 2.916667) 2)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1/2) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 1) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7)))) (* 2 (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)))))) (* 2 (sqrt 2.916667))) into (/ -0.0006051924906152275 (pow (sqrt 2.916667) 9))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) 0) (+ (* (/ -0.2333335 (sqrt 2.916667)) 1) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (+ (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0) (+ (* (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7)) 0) (* (/ -0.0006051924906152275 (pow (sqrt 2.916667) 9)) 0)))))) into (- (* 0.2333335 (/ 1 (sqrt 2.916667))))
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow (sqrt 2.916667) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- (* 0.2333335 (/ 1 (sqrt 2.916667)))) 1) 1)))) into (/ -0.2333335 (sqrt 2.916667))
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 (sqrt 2.916667)) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 (/ -0.2333335 (sqrt 2.916667))) 1)) (pow 1 1)))) 120) into (/ -0.2333335 (sqrt 2.916667))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ -0.2333335 (sqrt 2.916667)) (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7)))) (* 2 (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)))))) (* 2 (sqrt 2.916667))) into (/ -0.0006051924906152275 (pow (sqrt 2.916667) 9))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 2.916667) (/ -0.2333335 (sqrt 2.916667))) (+ (* (/ -0.2333335 (sqrt 2.916667)) (sqrt 2.916667)) (+ (* (/ -0.027222261111125 (pow (sqrt 2.916667) 3)) 0) (+ (* (/ -0.006351865462972685 (pow (sqrt 2.916667) 5)) 0) (+ (* (/ -0.0018526287500056711 (pow (sqrt 2.916667) 7)) 0) (* (/ -0.0006051924906152275 (pow (sqrt 2.916667) 9)) 0)))))) into (- 0.466667)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow (pow (sqrt 2.916667) 2) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.466667) 1) 1)))) into -0.466667
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]backup-simplify:  Simplify (+ (* -0.466667 (pow x 5)) (+ (* (pow (sqrt 2.916667) 2) (pow x 4)) 1)) into (- (+ (* (pow (sqrt 2.916667) 2) (pow x 4)) 1) (* 0.466667 (pow x 5)))
* [misc]approximate:  Taking taylor expansion of (pow (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 1 -0.466667) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 1 -0.466667) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 x)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (/ 1 (pow x 4))) into (exp (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 4)))) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 0 (/ 1 (pow x 4))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ 1 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (/ 1 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 1 (pow x 4))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ 1 (pow x 4))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* +nan.0 (/ 1 (pow x 4)))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ 1 (pow x 4))))) into (exp (- (* +nan.0 (/ 1 (pow x 4)))))
* [misc]backup-simplify:  Simplify (log (exp (- (* +nan.0 (/ 1 (pow x 4)))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (* 0 (- (* +nan.0 (/ 1 (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ 1 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ 1 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (/ 1 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 1 (pow x 4))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ 1 (pow x 4))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 4))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -0.466667)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (/ (- 2.916667 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (* +nan.0 (/ 1 (pow x 4))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 1) 1)))) into (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))) 1)) (pow (exp (- (* +nan.0 (/ 1 (pow x 4))))) 1)))) 1) into (/ +nan.0 (pow x 4))
* [misc]backup-simplify:  Simplify (+ (* 0 (/ +nan.0 (pow x 4))) (* +nan.0 (- (* +nan.0 (/ 1 (pow x 4)))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ 1 (pow x 4))))) into (exp (- (* +nan.0 (/ 1 (pow x 4)))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 1 -0.466667) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (sqrt (+ (* (/ 1 x) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 x) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* 1 -0.466667) into -0.466667
* [misc]backup-simplify:  Simplify (+ -0.466667 0) into (- 0.466667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.466667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 x)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (/ 1 (pow x 4))) into (exp (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 4)))) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 0 (/ 1 (pow x 4))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ 1 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (/ 1 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 1 (pow x 4))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ 1 (pow x 4))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* +nan.0 (/ 1 (pow x 4)))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ 1 (pow x 4))))) into (exp (- (* +nan.0 (/ 1 (pow x 4)))))
* [misc]backup-simplify:  Simplify (log (exp (- (* +nan.0 (/ 1 (pow x 4)))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (* 0 (- (* +nan.0 (/ 1 (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ 1 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ 1 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (/ 1 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 1 (pow x 4))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ 1 (pow x 4))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 4))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -0.466667)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (/ (- 2.916667 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (* +nan.0 (/ 1 (pow x 4))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 1) 1)))) into (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))) 1)) (pow (exp (- (* +nan.0 (/ 1 (pow x 4))))) 1)))) 1) into (/ +nan.0 (pow x 4))
* [misc]backup-simplify:  Simplify (+ (* 0 (/ +nan.0 (pow x 4))) (* +nan.0 (- (* +nan.0 (/ 1 (pow x 4)))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ 1 (pow x 4))))) into (exp (- (* +nan.0 (/ 1 (pow x 4)))))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ 1 (pow x 4))))) into (exp (- (* +nan.0 (/ 1 (pow x 4)))))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ 1 x)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ 1 x)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ 1 x)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 1 (pow x 4))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ 1 (pow x 4))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 4))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 4))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (* +nan.0 (/ 1 (pow x 4)))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 2) 2)) (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 1) 1)))) into (* -1 (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))) 2)) (pow (exp (- (* +nan.0 (/ 1 (pow x 4))))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -1 (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))))) 1)) (pow (exp (- (* +nan.0 (/ 1 (pow x 4))))) 1)))) 2) into (* -1/2 (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -0.466667)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (/ (- 2.916667 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (* -1/2 (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))) (+ (* +nan.0 (/ +nan.0 (pow x 4))) (* +nan.0 (- (* +nan.0 (/ 1 (pow x 4))))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 1) 1)))) into (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))
* [misc]backup-simplify:  Simplify (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4))) into (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ 1 x)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ 1 x)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ 1 x)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ 1 x)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ 1 x)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 1 (pow x 4))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ 1 (pow x 4))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ 1 (pow x 4))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ 1 (pow x 4))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ 1 (pow x 4))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ 1 (pow x 4))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow +nan.0 2) (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (* +nan.0 (/ 1 (pow x 4))))))) into (- (* +nan.0 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 3) 6)) (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 1) 1) (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 1) 1)) (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 1) 1)))) into (* -1 (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* +nan.0 (/ 1 (pow x 12))) (- (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))))))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))) 3)) (pow (exp (- (* +nan.0 (/ 1 (pow x 4))))) 3))) (* -3 (/ (* (pow (* 1 (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow x 4))))) (pow x 4)))) 1) (pow (* 2 (* -1 (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))))) 1)) (pow (exp (- (* +nan.0 (/ 1 (pow x 4))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 (* -1 (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* +nan.0 (/ 1 (pow x 12))) (- (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))))))) 1)) (pow (exp (- (* +nan.0 (/ 1 (pow x 4))))) 1)))) 6) into (* -1/6 (+ (* +nan.0 (/ 1 (pow x 12))) (- (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (* -1/6 (+ (* +nan.0 (/ 1 (pow x 12))) (- (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))))) (+ (* +nan.0 (* -1/2 (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))) (+ (* +nan.0 (/ +nan.0 (pow x 4))) (* +nan.0 (- (* +nan.0 (/ 1 (pow x 4)))))))) into (- (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* (/ (pow (- (* +nan.0 (/ 1 (pow x 4)))) 2) 2)) (* (/ (pow (- (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))) 1) 1)))) into (* -1 (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8)))))))
* [misc]backup-simplify:  Simplify (* -1 (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))) into (* (exp (- (* +nan.0 (/ 1 (pow x 4))))) (+ (* +nan.0 (/ 1 (pow x 4))) (- (* +nan.0 (/ 1 (pow x 8))))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (- (* +nan.0 (/ 1 (pow (/ 1 x) 4))))) (+ (* +nan.0 (/ 1 (pow (/ 1 x) 4))) (- (* +nan.0 (/ 1 (pow (/ 1 x) 8)))))) (pow (/ 1 x) 2)) (+ (* (* +nan.0 (/ (exp (- (* +nan.0 (/ 1 (pow (/ 1 x) 4))))) (pow (/ 1 x) 4))) (/ 1 x)) (exp (- (* +nan.0 (/ 1 (pow (/ 1 x) 4))))))) into (- (exp (- (* +nan.0 (pow x 4)))) (+ (* +nan.0 (* (exp (- (* +nan.0 (pow x 4)))) (pow x 3))) (- (+ (* +nan.0 (* (pow x 6) (exp (- (* +nan.0 (pow x 4)))))) (- (* +nan.0 (* (pow x 2) (exp (- (* +nan.0 (pow x 4)))))))))))
* [misc]approximate:  Taking taylor expansion of (pow (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* -1 -0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.466667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* -1 -0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.466667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (/ -1 x)) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* 0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ -1 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (/ -1 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* +nan.0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))
* [misc]backup-simplify:  Simplify (log (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (* 0 (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ -1 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ -1 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (/ -1 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -0.466667)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (/ (- 2.916667 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (* +nan.0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1) 1)))) into (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))) 1)) (pow (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 1)))) 1) into (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (+ (* 0 (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) (* +nan.0 (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* -1 -0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.466667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ (* (/ 1 (- x)) -0.466667) 2.916667)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.466667) 2.916667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.466667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.466667 in x
* [misc]backup-simplify:  Simplify -0.466667 into -0.466667
* [misc]taylor:  Taking taylor expansion of 2.916667 in x
* [misc]backup-simplify:  Simplify 2.916667 into 2.916667
* [misc]backup-simplify:  Simplify (* -1 -0.466667) into 0.466667
* [misc]backup-simplify:  Simplify (+ 0.466667 0) into 0.466667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.466667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (/ -1 x)) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* 0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ -1 x)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (/ -1 x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* +nan.0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))
* [misc]backup-simplify:  Simplify (log (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (* 0 (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ -1 x)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ -1 x)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (/ -1 x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -0.466667)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (/ (- 2.916667 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (* +nan.0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1) 1)))) into (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))) 1)) (pow (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 1)))) 1) into (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (+ (* 0 (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) (* +nan.0 (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))
* [misc]backup-simplify:  Simplify (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ -1 x)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ -1 x)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ -1 x)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -1 x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (* +nan.0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 2) 2)) (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1) 1)))) into (* -1 (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))) 2)) (pow (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 2))) (* 1 (/ (* 1 (pow (* 2 (* -1 (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))) 1)) (pow (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 1)))) 2) into (* -1/2 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -0.466667)) into 0
* [misc]backup-simplify:  Simplify (+ 0 2.916667) into 2.916667
* [misc]backup-simplify:  Simplify (/ (- 2.916667 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (* -1/2 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))) (+ (* +nan.0 (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) (* +nan.0 (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1) 1)))) into (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))
* [misc]backup-simplify:  Simplify (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x)) into (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ -1 x)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ -1 x)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ -1 x)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ -1 x)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ -1 x)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ -1 x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.466667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow +nan.0 2) (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (* +nan.0 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))))))) into (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 3) 6)) (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1) 1) (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1) 1)) (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 1) 1)))) into (* -1 (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (+ (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)) (- (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 3) (pow x 3)))))))))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))) 3)) (pow (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 3))) (* -3 (/ (* (pow (* 1 (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log x)))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) x))) 1) (pow (* 2 (* -1 (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))) 1)) (pow (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 (* -1 (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (+ (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)) (- (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 3) (pow x 3)))))))))) 1)) (pow (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) 1)))) 6) into (* -1/6 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (+ (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)) (- (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 3) (pow x 3))))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -0.466667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (* -1/6 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (+ (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)) (- (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 3) (pow x 3))))))))) (+ (* +nan.0 (* -1/2 (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))) (+ (* +nan.0 (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) (* +nan.0 (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))) into (- (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))
* [misc]backup-simplify:  Simplify (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* (/ (pow (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))) 2) 2)) (* (/ (pow (- (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))) 1) 1)))) into (* -1 (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x))))))
* [misc]backup-simplify:  Simplify (* -1 (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))) into (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log x)))) 2) (pow x 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log x)))) x)))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (/ 1 (- x)))))) (+ (* +nan.0 (/ (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) (pow (/ 1 (- x)) 2))) (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (/ 1 (- x))))))) (pow (/ 1 (- x)) 2)) (+ (* (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (/ 1 (- x))))))) (/ 1 (- x)))) (/ 1 (- x))) (exp (- (* +nan.0 (/ (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) (/ 1 (- x)))))))) into (- (exp (- (* +nan.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)))) (+ (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (exp (- (* +nan.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x))))) x)) (- (+ (* +nan.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (exp (- (* +nan.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)))))) (- (* +nan.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (exp (- (* +nan.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)))))))))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (log (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (log (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))
* [enter]simplify:  Simplifying (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (110 enodes)
* * [misc]simplify:  iters left: 1 (216 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (+ 1.0 (* x -8.0)))
* [exit]simplify:  Simplified to (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (+ 1.0 (* x -8.0)))
* * * * [misc]progress:  [ 2 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (* 1 (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (187 enodes)
* * [misc]simplify:  iters left: 1 (249 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (+ (* -8.0 x) (* (* x x) (+ (* x -9.333333) 14.0))))
* [exit]simplify:  Simplified to (+ (+ 1.0 (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (+ (* -8.0 x) (* (* x x) (+ (* x -9.333333) 14.0))))
* * * * [misc]progress:  [ 3 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (pow (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))) 1)))>
* * * * [misc]progress:  [ 4 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (* (* x (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 5 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (* (* x (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 6 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (* (* x (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 7 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (* (* x (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 8 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (* (* (log (exp x)) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 9 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (* (* (log (exp x)) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 10 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (* (* (log (exp x)) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 11 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (* (* (log (exp x)) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 12 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (* (log (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 13 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (* (log (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 14 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (* (log (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 15 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (* (log (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 16 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (* (log (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 17 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (* (log (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 18 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (* (log (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 19 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (* (log (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 20 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 21 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 22 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 23 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667))) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 24 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 25 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 26 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 27 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667))) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 28 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (log (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 29 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (log (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (+ (+ 1.0 (* -8.0 x)) (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))>
* * * * [misc]progress:  [ 30 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (log (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (+ (+ 1.0 (* -8.0 x)) (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 31 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (+ (log (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 32 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 33 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (exp (log (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (log (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (181 enodes)
* * [misc]simplify:  iters left: 1 (234 enodes)
* [exit]simplify:  Simplified to (log (+ (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (log (+ (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 34 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (exp (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (exp (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (136 enodes)
* * [misc]simplify:  iters left: 2 (305 enodes)
* [exit]simplify:  Simplified to (* (exp (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (* (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) (exp (+ (* x -8.0) 1.0))))
* [exit]simplify:  Simplified to (* (exp (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (* (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) (exp (+ (* x -8.0) 1.0))))
* * * * [misc]progress:  [ 35 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (* (* (cbrt (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))) (cbrt (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))) (cbrt (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (* (cbrt (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))) (cbrt (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (116 enodes)
* * [misc]simplify:  iters left: 2 (167 enodes)
* * [misc]simplify:  iters left: 1 (226 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* -8.0 x)) (+ (* (+ (* x -9.333333) 14.0) (* x x)) 1.0))) (cbrt (+ (+ (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* -8.0 x)) (+ (* (+ (* x -9.333333) 14.0) (* x x)) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* -8.0 x)) (+ (* (+ (* x -9.333333) 14.0) (* x x)) 1.0))) (cbrt (+ (+ (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* -8.0 x)) (+ (* (+ (* x -9.333333) 14.0) (* x x)) 1.0))))
* [enter]simplify:  Simplifying (cbrt (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (181 enodes)
* * [misc]simplify:  iters left: 1 (234 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (cbrt (+ (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 36 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (cbrt (* (* (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (* (* (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (201 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ (+ (* -8.0 x) 1.0) (* (+ (* x -9.333333) 14.0) (* x x))) (* (sqrt (+ 2.916667 (* -0.466667 x))) (* (sqrt (+ 2.916667 (* -0.466667 x))) (* (pow x 3) (log (exp x)))))) 3)
* [exit]simplify:  Simplified to (pow (+ (+ (+ (* -8.0 x) 1.0) (* (+ (* x -9.333333) 14.0) (* x x))) (* (sqrt (+ 2.916667 (* -0.466667 x))) (* (sqrt (+ 2.916667 (* -0.466667 x))) (* (pow x 3) (log (exp x)))))) 3)
* * * * [misc]progress:  [ 37 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (* (sqrt (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))) (sqrt (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (sqrt (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (181 enodes)
* * [misc]simplify:  iters left: 1 (234 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (sqrt (+ (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))
* [enter]simplify:  Simplifying (sqrt (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (181 enodes)
* * [misc]simplify:  iters left: 1 (234 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (sqrt (+ (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 38 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (* 1 (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))))>
* * * * [misc]progress:  [ 39 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (exp (* (* x x) (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (* (* x x) (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -9.333333) 14.0) (* x x))
* [exit]simplify:  Simplified to (* (+ (* x -9.333333) 14.0) (* x x))
* * * * [misc]progress:  [ 40 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (exp (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (77 enodes)
* * [misc]simplify:  iters left: 1 (89 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ 14.0 (* x -9.333333)))
* [exit]simplify:  Simplified to (* (* x x) (+ 14.0 (* x -9.333333)))
* * * * [misc]progress:  [ 41 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (* 1 (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (* 1 (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* [exit]simplify:  Simplified to (+ (* -9.333333 x) 14.0)
* [exit]simplify:  Simplified to (+ (* -9.333333 x) 14.0)
* * * * [misc]progress:  [ 42 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp x) (* x (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (* x (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* [exit]simplify:  Simplified to (* x (+ 14.0 (* x -9.333333)))
* [exit]simplify:  Simplified to (* x (+ 14.0 (* x -9.333333)))
* * * * [misc]progress:  [ 43 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (pow (exp (* x x)) (* (cbrt (+ (* x -9.333333) 14.0)) (cbrt (+ (* x -9.333333) 14.0)))) (cbrt (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) (* (cbrt (+ (* x -9.333333) 14.0)) (cbrt (+ (* x -9.333333) 14.0))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* (cbrt (+ (* -9.333333 x) 14.0)) (cbrt (+ (* -9.333333 x) 14.0))))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* (cbrt (+ (* -9.333333 x) 14.0)) (cbrt (+ (* -9.333333 x) 14.0))))
* * * * [misc]progress:  [ 44 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (pow (exp (* x x)) (sqrt (+ (* x -9.333333) 14.0))) (sqrt (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) (sqrt (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (sqrt (+ (* -9.333333 x) 14.0)))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (sqrt (+ (* -9.333333 x) 14.0)))
* * * * [misc]progress:  [ 45 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (pow (exp (* x x)) 1) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) 1)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* [exit]simplify:  Simplified to (exp (* x x))
* [exit]simplify:  Simplified to (exp (* x x))
* * * * [misc]progress:  [ 46 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (* (pow (exp (* x x)) (* x -9.333333)) (pow (exp (* x x)) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) (* x -9.333333))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* -9.333333 x))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* -9.333333 x))
* [enter]simplify:  Simplifying (pow (exp (* x x)) 14.0)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) 14.0)
* [exit]simplify:  Simplified to (pow (exp (* x x)) 14.0)
* * * * [misc]progress:  [ 47 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (* (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ (* x -9.333333) 14.0)) (pow (cbrt (exp (* x x))) (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ 14.0 (* -9.333333 x)))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ 14.0 (* -9.333333 x)))
* [enter]simplify:  Simplifying (pow (cbrt (exp (* x x))) (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp (* x x))) (+ 14.0 (* x -9.333333)))
* [exit]simplify:  Simplified to (pow (cbrt (exp (* x x))) (+ 14.0 (* x -9.333333)))
* * * * [misc]progress:  [ 48 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (* (pow (sqrt (exp (* x x))) (+ (* x -9.333333) 14.0)) (pow (sqrt (exp (* x x))) (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp (* x x))) (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 14.0 (* x -9.333333)))
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 14.0 (* x -9.333333)))
* [enter]simplify:  Simplifying (pow (sqrt (exp (* x x))) (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 14.0 (* x -9.333333)))
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 14.0 (* x -9.333333)))
* * * * [misc]progress:  [ 49 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (* (pow 1 (+ (* x -9.333333) 14.0)) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))))>
* [enter]simplify:  Simplifying (pow 1 (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp (* x x)) (+ (* x -9.333333) 14.0))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* -9.333333 x) 14.0))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* -9.333333 x) 14.0))
* * * * [misc]progress:  [ 50 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) 1))))))>
* * * * [misc]progress:  [ 51 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (exp (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* * [misc]simplify:  iters left: 1 (60 enodes)
* [exit]simplify:  Simplified to (* (+ (* -9.333333 x) 14.0) (* x x))
* [exit]simplify:  Simplified to (* (+ (* -9.333333 x) 14.0) (* x x))
* * * * [misc]progress:  [ 52 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (log (exp (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (exp (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* [exit]simplify:  Simplified to (exp (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* * * * [misc]progress:  [ 53 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (* (* (cbrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0))) (cbrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))) (cbrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0))) (cbrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0))) (cbrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0))) (cbrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0))))
* [enter]simplify:  Simplifying (cbrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* [exit]simplify:  Simplified to (cbrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* * * * [misc]progress:  [ 54 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (cbrt (* (* (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (* (* (pow (exp (* x x)) (+ (* x -9.333333) 14.0)) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)) 3)
* [exit]simplify:  Simplified to (pow (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)) 3)
* * * * [misc]progress:  [ 55 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (* (sqrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0))) (sqrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* [enter]simplify:  Simplifying (sqrt (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ (* -9.333333 x) 14.0)))
* * * * [misc]progress:  [ 56 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (* 1 (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))))>
* * * * [misc]progress:  [ 57 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (exp (* (log (* x x)) 3)) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 58 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (exp (* (log (* x x)) 3)) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 59 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow x (* 2 3)) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]progress:  [ 60 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) (* 1 3)) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 61 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (pow x 3) (pow x 3)) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 62 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* x x)) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 63 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (pow (* x x) 3) 1) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 64 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (exp (log (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (log (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 65 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (log (exp (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 66 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (cbrt (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 67 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (cbrt (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 68 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (pow x 3) (pow x 3)) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 69 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* x x) (* (* x x) (* x x))) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 70 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* x x)) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 71 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (sqrt (pow (* x x) 3)) (sqrt (pow (* x x) 3))) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 72 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* 1 (pow (* x x) 3)) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 73 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (exp (* (* (* x (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (* (* x (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (155 enodes)
* * [misc]simplify:  iters left: 1 (221 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ 2.916667 (* x -0.466667)))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ 2.916667 (* x -0.466667)))
* * * * [misc]progress:  [ 74 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (exp (* (* (* (log (exp x)) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (log (exp x)) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (179 enodes)
* * [misc]simplify:  iters left: 1 (252 enodes)
* [exit]simplify:  Simplified to (* (+ 2.916667 (* x -0.466667)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (+ 2.916667 (* x -0.466667)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 75 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (exp (* (* (log (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (* (log (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (201 enodes)
* [exit]simplify:  Simplified to (* (+ 2.916667 (* x -0.466667)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (+ 2.916667 (* x -0.466667)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 76 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (exp (* (* (log (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (* (log (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (201 enodes)
* [exit]simplify:  Simplified to (* (+ 2.916667 (* x -0.466667)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (+ 2.916667 (* x -0.466667)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 77 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (exp (* (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (62 enodes)
* * [misc]simplify:  iters left: 1 (124 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))
* * * * [misc]progress:  [ 78 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (exp (* (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (log (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (62 enodes)
* * [misc]simplify:  iters left: 1 (124 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))
* * * * [misc]progress:  [ 79 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (* (sqrt (+ (* x -0.466667) 2.916667)) (sqrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (* x -0.466667) 2.916667)) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* [exit]simplify:  Simplified to (+ 2.916667 (* x -0.466667))
* [exit]simplify:  Simplified to (+ 2.916667 (* x -0.466667))
* * * * [misc]progress:  [ 80 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (* (cbrt (sqrt (+ (* x -0.466667) 2.916667))) (cbrt (sqrt (+ (* x -0.466667) 2.916667))))) (cbrt (sqrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (* (cbrt (sqrt (+ (* x -0.466667) 2.916667))) (cbrt (sqrt (+ (* x -0.466667) 2.916667)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (* (cbrt (sqrt (+ 2.916667 (* -0.466667 x)))) (cbrt (sqrt (+ 2.916667 (* -0.466667 x))))))
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (* (cbrt (sqrt (+ 2.916667 (* -0.466667 x)))) (cbrt (sqrt (+ 2.916667 (* -0.466667 x))))))
* * * * [misc]progress:  [ 81 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (* (cbrt (+ (* x -0.466667) 2.916667)) (cbrt (+ (* x -0.466667) 2.916667))))) (sqrt (cbrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (* (cbrt (+ (* x -0.466667) 2.916667)) (cbrt (+ (* x -0.466667) 2.916667)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (fabs (cbrt (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (fabs (cbrt (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 82 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (sqrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (sqrt (+ (* x -0.466667) 2.916667))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (sqrt (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (sqrt (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 83 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt 1)) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt 1))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt 1))
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt 1))
* * * * [misc]progress:  [ 84 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (sqrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (sqrt (+ (* x -0.466667) 2.916667))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (sqrt (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (sqrt (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 85 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) 1) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) 1)
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x))))
* * * * [misc]progress:  [ 86 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (* (pow (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (pow (pow (pow (cbrt (exp x)) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) (pow x 3)) (sqrt (+ (* -0.466667 x) 2.916667))) (sqrt (+ (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (pow (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) (pow x 3)) (sqrt (+ (* -0.466667 x) 2.916667))) (sqrt (+ (* -0.466667 x) 2.916667)))
* [enter]simplify:  Simplifying (pow (pow (pow (cbrt (exp x)) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (cbrt (exp x)) (pow x 3)) (sqrt (+ 2.916667 (* x -0.466667)))) (sqrt (+ 2.916667 (* x -0.466667))))
* [exit]simplify:  Simplified to (pow (pow (pow (cbrt (exp x)) (pow x 3)) (sqrt (+ 2.916667 (* x -0.466667)))) (sqrt (+ 2.916667 (* x -0.466667))))
* * * * [misc]progress:  [ 87 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (* (pow (pow (pow (sqrt (exp x)) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (pow (pow (pow (sqrt (exp x)) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (pow (pow (sqrt (exp x)) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (sqrt (exp x)) (pow x 3)) (sqrt (+ 2.916667 (* x -0.466667)))) (sqrt (+ 2.916667 (* x -0.466667))))
* [exit]simplify:  Simplified to (pow (pow (pow (sqrt (exp x)) (pow x 3)) (sqrt (+ 2.916667 (* x -0.466667)))) (sqrt (+ 2.916667 (* x -0.466667))))
* [enter]simplify:  Simplifying (pow (pow (pow (sqrt (exp x)) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (sqrt (exp x)) (pow x 3)) (sqrt (+ 2.916667 (* x -0.466667)))) (sqrt (+ 2.916667 (* x -0.466667))))
* [exit]simplify:  Simplified to (pow (pow (pow (sqrt (exp x)) (pow x 3)) (sqrt (+ 2.916667 (* x -0.466667)))) (sqrt (+ 2.916667 (* x -0.466667))))
* * * * [misc]progress:  [ 88 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (* (pow (pow (pow 1 (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (pow (pow 1 (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (+ 2.916667 (* -0.466667 x))))
* * * * [misc]progress:  [ 89 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (* (pow (pow (* (cbrt (pow (exp x) (pow x 3))) (cbrt (pow (exp x) (pow x 3)))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (pow (pow (cbrt (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (pow (* (cbrt (pow (exp x) (pow x 3))) (cbrt (pow (exp x) (pow x 3)))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* [exit]simplify:  Simplified to (pow (pow (* (cbrt (pow (exp x) (pow x 3))) (cbrt (pow (exp x) (pow x 3)))) (sqrt (+ (* -0.466667 x) 2.916667))) (sqrt (+ (* -0.466667 x) 2.916667)))
* [exit]simplify:  Simplified to (pow (pow (* (cbrt (pow (exp x) (pow x 3))) (cbrt (pow (exp x) (pow x 3)))) (sqrt (+ (* -0.466667 x) 2.916667))) (sqrt (+ (* -0.466667 x) 2.916667)))
* [enter]simplify:  Simplifying (pow (pow (cbrt (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (pow (pow (cbrt (pow (exp x) (pow x 3))) (sqrt (+ 2.916667 (* x -0.466667)))) (sqrt (+ 2.916667 (* x -0.466667))))
* [exit]simplify:  Simplified to (pow (pow (cbrt (pow (exp x) (pow x 3))) (sqrt (+ 2.916667 (* x -0.466667)))) (sqrt (+ 2.916667 (* x -0.466667))))
* * * * [misc]progress:  [ 90 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (* (pow (pow (sqrt (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (pow (pow (sqrt (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (pow (sqrt (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (pow (pow (sqrt (pow (exp x) (pow x 3))) (sqrt (+ 2.916667 (* x -0.466667)))) (sqrt (+ 2.916667 (* x -0.466667))))
* [exit]simplify:  Simplified to (pow (pow (sqrt (pow (exp x) (pow x 3))) (sqrt (+ 2.916667 (* x -0.466667)))) (sqrt (+ 2.916667 (* x -0.466667))))
* [enter]simplify:  Simplifying (pow (pow (sqrt (pow (exp x) (pow x 3))) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (pow (pow (sqrt (pow (exp x) (pow x 3))) (sqrt (+ 2.916667 (* x -0.466667)))) (sqrt (+ 2.916667 (* x -0.466667))))
* [exit]simplify:  Simplified to (pow (pow (sqrt (pow (exp x) (pow x 3))) (sqrt (+ 2.916667 (* x -0.466667)))) (sqrt (+ 2.916667 (* x -0.466667))))
* * * * [misc]progress:  [ 91 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (* (pow (pow 1 (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (pow 1 (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (+ 2.916667 (* -0.466667 x))))
* * * * [misc]progress:  [ 92 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (* (pow (* (cbrt (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (cbrt (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))))) (sqrt (+ (* x -0.466667) 2.916667))) (pow (cbrt (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (cbrt (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x))))) (cbrt (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))))) (sqrt (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (pow (* (cbrt (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x))))) (cbrt (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))))) (sqrt (+ 2.916667 (* -0.466667 x))))
* [enter]simplify:  Simplifying (pow (cbrt (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x))))) (sqrt (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (pow (cbrt (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x))))) (sqrt (+ 2.916667 (* -0.466667 x))))
* * * * [misc]progress:  [ 93 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (* (pow (sqrt (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667))) (pow (sqrt (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow (sqrt (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x))))) (sqrt (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (pow (sqrt (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x))))) (sqrt (+ 2.916667 (* -0.466667 x))))
* [enter]simplify:  Simplifying (pow (sqrt (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x))))) (sqrt (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (pow (sqrt (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x))))) (sqrt (+ 2.916667 (* -0.466667 x))))
* * * * [misc]progress:  [ 94 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (* (pow 1 (sqrt (+ (* x -0.466667) 2.916667))) (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (pow 1 (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (+ 2.916667 (* -0.466667 x))))
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (+ 2.916667 (* -0.466667 x))))
* * * * [misc]progress:  [ 95 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) 1) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 96 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (exp (log (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (log (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))
* * * * [misc]progress:  [ 97 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (log (exp (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (exp (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (exp (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (exp (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 98 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (* (* (cbrt (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (cbrt (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))))) (cbrt (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (cbrt (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (+ 2.916667 (* -0.466667 x))))) (cbrt (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (+ 2.916667 (* -0.466667 x))))))
* [exit]simplify:  Simplified to (* (cbrt (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (+ 2.916667 (* -0.466667 x))))) (cbrt (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (+ 2.916667 (* -0.466667 x))))))
* [enter]simplify:  Simplifying (cbrt (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (cbrt (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 99 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (cbrt (* (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (+ 2.916667 (* -0.466667 x)))) 3)
* [exit]simplify:  Simplified to (pow (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (+ 2.916667 (* -0.466667 x)))) 3)
* * * * [misc]progress:  [ 100 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (* (sqrt (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (sqrt (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (sqrt (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (+ 2.916667 (* -0.466667 x)))))
* [enter]simplify:  Simplifying (sqrt (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (+ 2.916667 (* -0.466667 x)))))
* [exit]simplify:  Simplified to (sqrt (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ 2.916667 (* -0.466667 x)))) (sqrt (+ 2.916667 (* -0.466667 x)))))
* * * * [misc]progress:  [ 101 / 113 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (* 1 (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* * * * [misc]progress:  [ 102 / 113 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (- (+ (* 14.0 (pow x 2)) 1.0) (* 8.0 x))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (- (+ (* 14.0 (pow x 2)) 1.0) (* 8.0 x)))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (71 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (+ (+ (- 1.0 (* x 8.0)) (* (* 14.0 x) x)) (* (pow (* x x) 3) (+ (+ 0.038889 (* -0.001587 x)) (* (* x 2.5e-05) x))))
* * * * [misc]progress:  [ 103 / 113 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (- (log (* (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))) (* (exp (- (* +nan.0 (pow x 4)))) (exp (- 1.0 (* 8.0 x)))))) (+ (* +nan.0 (pow x 2)) (- (+ (* +nan.0 (pow x 3)) (- (* +nan.0 (pow x 6)))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (- (log (* (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))) (* (exp (- (* +nan.0 (pow x 4)))) (exp (- 1.0 (* 8.0 x)))))) (+ (* +nan.0 (pow x 2)) (- (+ (* +nan.0 (pow x 3)) (- (* +nan.0 (pow x 6))))))))
* * * * [misc]progress:  [ 104 / 113 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (- (log (* (exp (- 1.0 (* 8.0 x))) (* (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))) (exp (- (* +nan.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x))))))) (+ (* +nan.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))) (- (+ (* +nan.0 (/ (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (- (* +nan.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (- (log (* (exp (- 1.0 (* 8.0 x))) (* (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))) (exp (- (* +nan.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x))))))) (+ (* +nan.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))) (- (+ (* +nan.0 (/ (exp (* 3 (- (log -1) (log (/ -1 x))))) x)) (- (* +nan.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2))))))))
* * * * [misc]progress:  [ 105 / 113 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (- (+ (* 14.0 (pow x 2)) 1) (* 9.333333 (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (- (+ (* 14.0 (pow x 2)) 1) (* 9.333333 (pow x 3)))))))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (104 enodes)
* * [misc]simplify:  iters left: 4 (280 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (+ (* (* x x) (- 14.0 (* 9.333333 x))) 1)) (+ (+ (* x -8.0) 1.0) (* (pow (* x x) 3) (+ (+ 0.038889 (* -0.001587 x)) (* (* x 2.5e-05) x))))) (* (sqrt (+ 2.916667 (* -0.466667 x))) (* (sqrt (+ 2.916667 (* -0.466667 x))) (log (pow (exp x) (pow x 3))))))
* * * * [misc]progress:  [ 106 / 113 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (exp (* (- 14.0 (* 9.333333 x)) (pow x 2)))))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (102 enodes)
* * [misc]simplify:  iters left: 4 (257 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) (- 14.0 (* x 9.333333))) (+ (* x -8.0) 1.0)) (* (pow (* x x) 3) (+ (+ 0.038889 (* -0.001587 x)) (* (* x x) 2.5e-05)))) (* (sqrt (+ 2.916667 (* -0.466667 x))) (* (sqrt (+ 2.916667 (* -0.466667 x))) (log (pow (exp x) (pow x 3))))))
* * * * [misc]progress:  [ 107 / 113 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (exp (* (- 14.0 (* 9.333333 x)) (pow x 2))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (exp (* (- 14.0 (* 9.333333 x)) (pow x 2)))))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (102 enodes)
* * [misc]simplify:  iters left: 4 (257 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) (- 14.0 (* x 9.333333))) (+ (* x -8.0) 1.0)) (* (pow (* x x) 3) (+ (+ 0.038889 (* -0.001587 x)) (* (* x x) 2.5e-05)))) (* (sqrt (+ 2.916667 (* -0.466667 x))) (* (sqrt (+ 2.916667 (* -0.466667 x))) (log (pow (exp x) (pow x 3))))))
* * * * [misc]progress:  [ 108 / 113 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow x 6) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow x 6) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (86 enodes)
* * [misc]simplify:  iters left: 4 (211 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (sqrt (+ (* x -0.466667) 2.916667)) (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (exp x) (pow x 3))))) (+ (* (* 2.5e-05 x) (* x (pow x 6))) (* (* (pow x 3) (pow x 3)) (+ 0.038889 (* -0.001587 x))))) (+ (+ 1.0 (* -8.0 x)) (* (+ (* x -9.333333) 14.0) (log (exp (* x x))))))
* * * * [misc]progress:  [ 109 / 113 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (/ 1 x) -6) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (/ 1 x) -6) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (214 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow (* x x) 3) (+ 0.038889 (* x -0.001587))) (* (* x (* 2.5e-05 x)) (pow (/ 1 x) -6))) (* (sqrt (+ 2.916667 (* -0.466667 x))) (* (sqrt (+ 2.916667 (* -0.466667 x))) (log (pow (exp x) (pow x 3)))))) (+ (+ 1.0 (* x -8.0)) (* (+ (* x -9.333333) 14.0) (log (exp (* x x))))))
* * * * [misc]progress:  [ 110 / 113 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (/ -1 x) -6) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (/ -1 x) -6) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (213 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* x -9.333333) 14.0) (log (exp (* x x)))) (+ 1.0 (* x -8.0))) (* (sqrt (+ 2.916667 (* -0.466667 x))) (* (sqrt (+ 2.916667 (* -0.466667 x))) (log (pow (exp x) (pow x 3)))))) (+ (* (pow (* x x) 3) (+ 0.038889 (* x -0.001587))) (* (* (* 2.5e-05 x) x) (pow (/ -1 x) -6))))
* * * * [misc]progress:  [ 111 / 113 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (- (+ (* (pow (sqrt 2.916667) 2) (pow x 4)) 1) (* 0.466667 (pow x 5))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (- (+ (* (pow (sqrt 2.916667) 2) (pow x 4)) 1) (* 0.466667 (pow x 5))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (100 enodes)
* * [misc]simplify:  iters left: 4 (286 enodes)
* [exit]simplify:  Simplified to (+ (log (+ 1 (- (* (pow x 4) 2.916667) (* 0.466667 (pow x 5))))) (+ (* (+ (+ 0.038889 (* -0.001587 x)) (* (* x x) 2.5e-05)) (* (pow x 3) (pow x 3))) (+ (+ 1.0 (* x -8.0)) (* (+ (* x -9.333333) 14.0) (log (exp (* x x)))))))
* * * * [misc]progress:  [ 112 / 113 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (- (exp (- (* +nan.0 (pow x 4)))) (+ (* +nan.0 (* (exp (- (* +nan.0 (pow x 4)))) (pow x 3))) (- (+ (* +nan.0 (* (pow x 6) (exp (- (* +nan.0 (pow x 4)))))) (- (* +nan.0 (* (pow x 2) (exp (- (* +nan.0 (pow x 4))))))))))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (- (exp (- (* +nan.0 (pow x 4)))) (+ (* +nan.0 (* (exp (- (* +nan.0 (pow x 4)))) (pow x 3))) (- (+ (* +nan.0 (* (pow x 6) (exp (- (* +nan.0 (pow x 4)))))) (- (* +nan.0 (* (pow x 2) (exp (- (* +nan.0 (pow x 4))))))))))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * * * [misc]progress:  [ 113 / 113 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (- (exp (- (* +nan.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)))) (+ (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (exp (- (* +nan.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x))))) x)) (- (+ (* +nan.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (exp (- (* +nan.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)))))) (- (* +nan.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (exp (- (* +nan.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x))))))))))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (- (exp (- (* +nan.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)))) (+ (* +nan.0 (/ (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (exp (- (* +nan.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x))))) x)) (- (+ (* +nan.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) (exp (- (* +nan.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x)))))) (- (* +nan.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (exp (- (* +nan.0 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x))))))))))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0))))))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (pow (exp (* x x)) (* (cbrt (+ (* x -9.333333) 14.0)) (cbrt (+ (* x -9.333333) 14.0)))) (cbrt (+ (* x -9.333333) 14.0))))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* (* (log (exp x)) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (* (cbrt (sqrt (+ (* x -0.466667) 2.916667))) (cbrt (sqrt (+ (* x -0.466667) 2.916667))))) (cbrt (sqrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))> #<alt-delta (Î» (x) (+ (+ (* (* (pow x 3) (pow x 3)) (+ (* (* x 2.5e-05) x) (+ (* -0.001587 x) 0.038889))) (* (- 14.0 (* 9.333333 x)) (* x x))) (+ (* (- 2.916667 (* x 0.466667)) (log (pow (exp x) (pow x 3)))) (- 1.0 (* x 8.0)))))> #<alt-delta (Î» (x) (+ (+ (+ (* (+ (* -0.466667 x) 2.916667) (* (* x x) (* x x))) (+ (* -8.0 x) 1.0)) (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (pow (* x x) 3) (* (* x x) 2.5e-05)))) (* (pow (/ 1 x) -6) (+ 0.038889 (* x -0.001587)))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (* (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ (* x -9.333333) 14.0)) (pow (cbrt (exp (* x x))) (+ (* x -9.333333) 14.0))))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* x (pow x 3)) (+ (* x -0.466667) 2.916667)) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (* (+ (* 1.0 (- 1.0 (* x -8.0))) (* (* x -8.0) (* x -8.0))) (+ (* (+ (* (- (* -0.466667 x) 2.916667) (* -0.466667 x)) (* 2.916667 2.916667)) (+ (* (* (* x -9.333333) (* x -9.333333)) (* (* x -9.333333) (* x x))) (* (pow 14.0 3) (* x x)))) (* (* (+ (pow 2.916667 3) (pow (* -0.466667 x) 3)) (* (* x x) (* x x))) (+ (* (* x -9.333333) (* x -9.333333)) (* (- 14.0 (* x -9.333333)) 14.0))))) (* (* (+ (* (* x -9.333333) (* x -9.333333)) (* (- 14.0 (* x -9.333333)) 14.0)) (+ (* (- (* -0.466667 x) 2.916667) (* -0.466667 x)) (* 2.916667 2.916667))) (+ (pow 1.0 3) (pow (* x -8.0) 3)))) (* (- (* 1.0 1.0) (* (* -8.0 x) (- 1.0 (* -8.0 x)))) (* (- (* (* x -0.466667) (* x -0.466667)) (* 2.916667 (- (* x -0.466667) 2.916667))) (+ (* (* -9.333333 x) (* -9.333333 x)) (* 14.0 (- 14.0 (* -9.333333 x)))))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (* (- (* (+ (* x -9.333333) 14.0) (* x x)) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667))) (+ (* (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667))) (+ (* (- 1.0 (* -8.0 x)) 1.0) (* (* -8.0 x) (* -8.0 x)))) (+ (pow 1.0 3) (pow (* -8.0 x) 3)))) (* (- (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (+ (* (* -8.0 x) (* -8.0 x)) (* (- 1.0 (* -8.0 x)) 1.0))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (- (* (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))))) (* (+ (* x -8.0) 1.0) (+ (* x -8.0) 1.0))) (- (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (cbrt (pow (pow x 3) (+ 3 1))) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (pow (exp (* x x)) (* (cbrt (+ (* x -9.333333) 14.0)) (cbrt (+ (* x -9.333333) 14.0)))) (cbrt (+ (* x -9.333333) 14.0))))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (cbrt (pow (+ (+ (* (* x x) (+ (* x -9.333333) 14.0)) (+ (* -8.0 x) 1.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) 3))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (* (pow (pow (sqrt (exp x)) (pow x 3)) (+ (* x -0.466667) 2.916667)) (pow (pow (sqrt (exp x)) (pow x 3)) (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (* (* (cbrt (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))) (cbrt (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0)))) (cbrt (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))))> #<alt-event (Î» (x) (+ (+ (+ (+ (+ (+ (+ (+ 1.0 (* -8.0 x)) (* 14.0 (* x x))) (* -9.333333 (* (* x x) x))) (* 2.916667 (* (* (* x x) x) x))) (* -0.466667 (* (* (* (* x x) x) x) x))) (* 0.038889 (* (* (* (* (* x x) x) x) x) x))) (* -0.001587 (* (* (* (* (* (* x x) x) x) x) x) x))) (* 2.5e-05 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (* (+ (* (* (* (* x x) (* x x)) (- (* 2.916667 2.916667) (* (* x -0.466667) (* x -0.466667)))) (+ (* (* x -9.333333) (* x -9.333333)) (* (- 14.0 (* x -9.333333)) 14.0))) (* (+ (pow (* x -9.333333) 3) (pow 14.0 3)) (* (* x x) (- 2.916667 (* x -0.466667))))) (+ (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- 1.0 (* -8.0 x))))) (* (* (+ (pow (* -8.0 x) 3) (pow 1.0 3)) (- 2.916667 (* x -0.466667))) (+ (* (* x -9.333333) (* x -9.333333)) (* (- 14.0 (* x -9.333333)) 14.0)))) (* (* (+ (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- 1.0 (* -8.0 x)))) (+ (* (* -9.333333 x) (* -9.333333 x)) (* 14.0 (- 14.0 (* -9.333333 x))))) (- 2.916667 (* -0.466667 x))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (pow x 3) (pow x 3)) (+ (* -0.001587 x) 0.038889))) (+ (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) (+ (* x -8.0) 1.0))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (* (+ (* (+ (* (- (* x -0.466667) 2.916667) (* x -0.466667)) (* 2.916667 2.916667)) (* (* (* x x) (+ 14.0 (* x -9.333333))) (- (* x -9.333333) 14.0))) (* (* (* (* x x) (* x x)) (- (* x -9.333333) 14.0)) (+ (pow 2.916667 3) (pow (* x -0.466667) 3)))) (+ (* (* -8.0 x) (* -8.0 x)) (* (- 1.0 (* -8.0 x)) 1.0))) (* (* (+ (pow (* -8.0 x) 3) (pow 1.0 3)) (- (* x -9.333333) 14.0)) (+ (* (- (* x -0.466667) 2.916667) (* x -0.466667)) (* 2.916667 2.916667)))) (* (* (- (* -9.333333 x) 14.0) (- (* 1.0 1.0) (* (* -8.0 x) (- 1.0 (* -8.0 x))))) (+ (* 2.916667 2.916667) (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (* (- (* x -8.0) 1.0) (+ (* (- 2.916667 (* x -0.466667)) (* (- (* x -9.333333) 14.0) (+ (* x -8.0) 1.0))) (+ (* (* (+ 14.0 (* x -9.333333)) (* x x)) (* (- 2.916667 (* x -0.466667)) (- (* x -9.333333) 14.0))) (* (* (- (* x -9.333333) 14.0) (+ (* x -0.466667) 2.916667)) (* (* (* x x) (* x x)) (- 2.916667 (* x -0.466667))))))) (* (* (- (* -9.333333 x) 14.0) (- 2.916667 (* -0.466667 x))) (- (* x -8.0) 1.0)))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (pow (+ (* (* x x) (+ (* -9.333333 x) 14.0)) (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x)))) 3) (pow (+ (* x -8.0) 1.0) 3)) (+ (* (- (- (+ (* -8.0 x) 1.0) (* (+ (* x -9.333333) 14.0) (* x x))) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (+ (* -8.0 x) 1.0)) (* (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))) (+ (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x)))))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (* (+ (* (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ (* x -9.333333) 14.0) (* x x))) (* (- (* (+ (* x -0.466667) 2.916667) (* (* x x) (* x x))) (* (+ (* x -9.333333) 14.0) (* x x))) (* (+ (* x -0.466667) 2.916667) (* (* x x) (* x x))))) (+ (pow (* x -8.0) 3) (pow 1.0 3))) (* (+ (* (* x -8.0) (* x -8.0)) (* 1.0 (- 1.0 (* x -8.0)))) (+ (pow (* (+ (* x -0.466667) 2.916667) (* (* x x) (* x x))) 3) (pow (* (+ (* x -9.333333) 14.0) (* x x)) 3)))) (* (- (* 1.0 1.0) (* (* -8.0 x) (- 1.0 (* -8.0 x)))) (+ (* (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ (* x -9.333333) 14.0) (* x x))) (* (- (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)) (* (+ (* x -9.333333) 14.0) (* x x))) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667))))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (exp (log (+ (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (* (pow (sqrt (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667))) (pow (sqrt (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667)))) (sqrt (+ (* x -0.466667) 2.916667)))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (pow (exp (* x x)) (sqrt (+ (* x -9.333333) 14.0))) (sqrt (+ (* x -9.333333) 14.0))))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (* (* x (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (log (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (exp (* (* x x) (+ (* x -9.333333) 14.0))))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (* (pow (sqrt (exp (* x x))) (+ (* x -9.333333) 14.0)) (pow (sqrt (exp (* x x))) (+ (* x -9.333333) 14.0))))))))> #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* (pow x 6) (+ 0.038889 (* -0.001587 x)))) (* (* 2.5e-05 (* x x)) (pow (* x x) 3))) (+ (+ 1.0 (* x -8.0)) (* (+ 14.0 (* -9.333333 x)) (* x x)))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow x (* 2 3)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (* (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ (* x -9.333333) 14.0)) (pow (cbrt (exp (* x x))) (+ (* x -9.333333) 14.0))))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (* (* (cbrt (+ (+ (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* -8.0 x)) (+ (* (+ (* x -9.333333) 14.0) (* x x)) 1.0))) (cbrt (+ (+ (* (* (* x x) (* x x)) (+ 2.916667 (* -0.466667 x))) (* -8.0 x)) (+ (* (+ (* x -9.333333) 14.0) (* x x)) 1.0)))) (cbrt (+ (+ (+ 1.0 (* -8.0 x)) (* (* x x) (+ (* x -9.333333) 14.0))) (* (+ 2.916667 (* -0.466667 x)) (* (* x x) (* x x))))))))> #<alt-delta (Î» (x) (+ (+ (* (sqrt (+ (* x -0.466667) 2.916667)) (* (sqrt (+ (* x -0.466667) 2.916667)) (log (pow (exp x) (pow x 3))))) (+ (* (* 2.5e-05 x) (* x (pow x 6))) (* (* (pow x 3) (pow x 3)) (+ 0.038889 (* -0.001587 x))))) (+ (+ 1.0 (* -8.0 x)) (* (+ (* x -9.333333) 14.0) (log (exp (* x x)))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (log (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667))) (+ (+ 1.0 (* -8.0 x)) (* (log (exp (* x x))) (+ (* x -9.333333) 14.0))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (* (+ (* (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667)) (+ (* (* (* x x) (* x -9.333333)) (* (* x -9.333333) (* x -9.333333))) (* (pow 14.0 3) (* x x)))) (* (* (+ (pow 2.916667 3) (pow (* -0.466667 x) 3)) (* (* x x) (* x x))) (+ (* (* x -9.333333) (* x -9.333333)) (* (- 14.0 (* x -9.333333)) 14.0)))) (- (* x -8.0) 1.0)) (* (+ (* (* x -9.333333) (* x -9.333333)) (* (- 14.0 (* x -9.333333)) 14.0)) (* (* (- (* x -8.0) 1.0) (+ (* x -8.0) 1.0)) (+ (* (* -0.466667 x) (- (* -0.466667 x) 2.916667)) (* 2.916667 2.916667))))) (* (* (- (* -8.0 x) 1.0) (+ (* (* -9.333333 x) (* -9.333333 x)) (* 14.0 (- 14.0 (* -9.333333 x))))) (- (* (* x -0.466667) (* x -0.466667)) (* 2.916667 (- (* x -0.466667) 2.916667)))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (pow x 3) (pow x 3)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (pow (pow (exp (* x x)) (sqrt (+ (* x -9.333333) 14.0))) (sqrt (+ (* x -9.333333) 14.0))))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (* (cbrt (+ (* x -0.466667) 2.916667)) (cbrt (+ (* x -0.466667) 2.916667)))) (cbrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (+ (* (log (pow (exp x) (pow x 3))) (+ (* x -0.466667) 2.916667)) (+ (+ 1.0 (* -8.0 x)) (log (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (* (+ (* (* (- 2.916667 (* x -0.466667)) (* x x)) (- (* (* x -9.333333) (* x -9.333333)) (* 14.0 14.0))) (* (* (+ (* x -0.466667) 2.916667) (- 2.916667 (* x -0.466667))) (* (- (* x -9.333333) 14.0) (* (* x x) (* x x))))) (- (* 1.0 1.0) (* (* x -8.0) (- 1.0 (* x -8.0))))) (* (* (- 2.916667 (* x -0.466667)) (- (* x -9.333333) 14.0)) (+ (pow (* x -8.0) 3) (pow 1.0 3)))) (* (+ (* (* -8.0 x) (* -8.0 x)) (* 1.0 (- 1.0 (* -8.0 x)))) (* (- 2.916667 (* -0.466667 x)) (- (* -9.333333 x) 14.0))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (* (pow (* (cbrt (pow (exp x) (pow x 3))) (cbrt (pow (exp x) (pow x 3)))) (+ (* x -0.466667) 2.916667)) (pow (cbrt (pow (exp x) (pow x 3))) (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))> #<alt-delta (Î» (x) (+ (+ (* (+ (* (* x x) 2.5e-05) (+ (* -0.001587 x) 0.038889)) (pow (* x x) 3)) (+ (* (+ (* -9.333333 x) 14.0) (* x x)) (+ 1.0 (* x -8.0)))) (* (+ (* x -0.466667) 2.916667) (pow x 4))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (* (+ (* (* (* x x) (+ (pow (* -9.333333 x) 3) (pow 14.0 3))) (- 2.916667 (* -0.466667 x))) (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (* (* (* x x) (* x x)) (- (* 2.916667 2.916667) (* (* -0.466667 x) (* -0.466667 x)))))) (- (* x -8.0) 1.0)) (* (* (+ (* (* -9.333333 x) (* -9.333333 x)) (- (* 14.0 14.0) (* (* -9.333333 x) 14.0))) (- 2.916667 (* -0.466667 x))) (- (* (* x -8.0) (* x -8.0)) (* 1.0 1.0)))) (* (* (- (* -8.0 x) 1.0) (- 2.916667 (* -0.466667 x))) (- (* 14.0 14.0) (* (* -9.333333 x) (- 14.0 (* -9.333333 x))))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (* (- (* -8.0 x) 1.0) (+ (- (* (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ (* x -9.333333) 14.0) (* x x))) (* (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)))) (* (- (* (+ (* x -9.333333) 14.0) (* x x)) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667))) (+ 1.0 (* -8.0 x))))) (* (* (- (* -8.0 x) 1.0) (* x x)) (- (+ (* x -9.333333) 14.0) (* (* x x) (+ 2.916667 (* -0.466667 x))))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (* (+ (* (* (+ (* x -0.466667) 2.916667) (* (* x x) (* x x))) (- (* (+ (* x -0.466667) 2.916667) (* (* x x) (* x x))) (* (+ (* x -9.333333) 14.0) (* x x)))) (* (* (+ (* x -9.333333) 14.0) (* x x)) (* (+ (* x -9.333333) 14.0) (* x x)))) (* (+ (* x -8.0) 1.0) (- (* x -8.0) 1.0))) (* (- (* x -8.0) 1.0) (+ (pow (* (+ (* x -0.466667) 2.916667) (* (* x x) (* x x))) 3) (pow (* (+ (* x -9.333333) 14.0) (* x x)) 3)))) (+ (* (* (- (* -8.0 x) 1.0) (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667))) (- (* (* (* x x) (* x x)) (+ (* x -0.466667) 2.916667)) (* (+ (* x -9.333333) 14.0) (* x x)))) (* (* (* (* x x) (* x x)) (+ (* x -9.333333) 14.0)) (* (+ (* x -9.333333) 14.0) (- (* -8.0 x) 1.0)))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -0.466667) 2.916667)) (* (exp (+ 1.0 (* -8.0 x))) (exp (* (* x x) (+ (* x -9.333333) 14.0))))))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (pow (* x x) 3) (+ (* -0.001587 x) 0.038889))) (/ (+ (* (+ (* (* (* x x) (- (* (* -9.333333 x) (* -9.333333 x)) (* 14.0 14.0))) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (* (- (* -9.333333 x) 14.0) (* (* (* x x) (* x x)) (+ (pow 2.916667 3) (pow (* -0.466667 x) 3))))) (- (* x -8.0) 1.0)) (* (* (- (* -9.333333 x) 14.0) (+ (* 2.916667 2.916667) (- (* (* -0.466667 x) (* -0.466667 x)) (* 2.916667 (* -0.466667 x))))) (- (* (* x -8.0) (* x -8.0)) (* 1.0 1.0)))) (* (* (- (* -9.333333 x) 14.0) (- (* -8.0 x) 1.0)) (+ (* 2.916667 2.916667) (* (- (* -0.466667 x) 2.916667) (* -0.466667 x)))))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ (+ (+ (+ (+ (+ (+ 1.0 (* -8.0 x)) (* 14.0 (* x x))) (* -9.333333 (* (* x x) x))) (* 2.916667 (* (* (* x x) x) x))) (* -0.466667 (* (* (* (* x x) x) x) x))) (* 0.038889 (* (* (* (* (* x x) x) x) x) x))) (* -0.001587 (* (* (* (* (* (* x x) x) x) x) x) x))) (* 2.5e-05 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))) +nan.0)) , with alts (#<alt-delta (Î» (x) (+ (+ (* (pow (* x x) 3) (* 2.5e-05 (* x x))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* -0.001587 x) 0.038889))) (log (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -0.466667) 2.916667))) (sqrt (+ (* x -0.466667) 2.916667))) (* (exp (+ 1.0 (* -8.0 x))) (pow (exp (* x x)) (+ (* x -9.333333) 14.0)))))))>)
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
