* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (182 enodes)
* * [misc]simplify:  iters left: 1 (265 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 3 ] rewriting at (2 2)
* * * * [misc]progress:  [ 2 / 3 ] rewriting at (2)
* * * * [misc]progress:  [ 3 / 3 ] rewriting at (2 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 3 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 1) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- 0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) (pow x 3)) (* 1.5 (pow x 2))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow (/ 1 (/ 1 x)) 2)) (* -0.166667 (pow (/ 1 (/ 1 x)) 3))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify 0.166667 into 0.166667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow (/ 1 (/ 1 (- x))) 2)) (* 0.166667 (pow (/ 1 (/ 1 (- x))) 3))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* * * * [misc]progress:  [ 2 / 3 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -3.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow x 2)) (+ (* (- 3.0) x) 1.0)) into (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- 0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (* 1 -3.0) into -3.0
* [misc]backup-simplify:  Simplify (+ -3.0 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) (/ 1 (/ 1 x))) (+ (* 1.5 (pow (/ 1 (/ 1 x)) 2)) (* (- 0.166667) (pow (/ 1 (/ 1 x)) 3)))) into (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify 0.166667 into 0.166667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (* -1 -3.0) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (+ (* 3.0 (/ 1 (/ 1 (- x)))) (+ (* 1.5 (pow (/ 1 (/ 1 (- x))) 2)) (* 0.166667 (pow (/ 1 (/ 1 (- x))) 3)))) into (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* * * * [misc]progress:  [ 3 / 3 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- 0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) x) 1.5) into (- 1.5 (* 0.166667 x))
* [misc]approximate:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- 0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ 1.5 (* (- 0.166667) (/ 1 (/ 1 x)))) into (- 1.5 (* 0.166667 x))
* [misc]approximate:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify 0.166667 into 0.166667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ 1.5 (* 0.166667 (/ 1 (/ 1 (- x))))) into (- 1.5 (* 0.166667 x))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1)))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) (* x x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 2 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1)))>
* * * * [misc]progress:  [ 3 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (exp (+ (log (+ 1.5 (* -0.166667 x))) (log (* x x))))))>
* [enter]simplify:  Simplifying (+ (log (+ 1.5 (* -0.166667 x))) (log (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x -0.166667) 1.5)) (log (* x x)))
* [exit]simplify:  Simplified to (+ (log (+ (* x -0.166667) 1.5)) (log (* x x)))
* * * * [misc]progress:  [ 4 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (exp (log (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (log (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (log (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 5 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (98 enodes)
* * [misc]simplify:  iters left: 1 (123 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 6 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (cbrt (* (* (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) (+ 1.5 (* -0.166667 x))) (* (* (* x x) (* x x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) (+ 1.5 (* -0.166667 x))) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* [exit]simplify:  Simplified to (* (* (pow (* x x) 3) (+ (* x -0.166667) 1.5)) (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* (pow (* x x) 3) (+ (* x -0.166667) 1.5)) (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 7 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [enter]simplify:  Simplifying (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 8 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (cbrt (* (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* * * * [misc]progress:  [ 9 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [enter]simplify:  Simplifying (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 10 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* 1 (* (+ 1.5 (* -0.166667 x)) (* x x)))))>
* * * * [misc]progress:  [ 11 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) x)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) x)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) x)
* * * * [misc]progress:  [ 12 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 13 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 14 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* 1 (* (+ 1.5 (* -0.166667 x)) (* x x)))))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) (* x x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 15 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (141 enodes)
* * [misc]simplify:  iters left: 2 (266 enodes)
* * [misc]simplify:  iters left: 1 (338 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))) (* (* x x) (pow 1.5 3)))
* [exit]simplify:  Simplified to (+ (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))) (* (* x x) (pow 1.5 3)))
* * * * [misc]progress:  [ 16 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)) (- 1.5 (* -0.166667 x)))))>
* [enter]simplify:  Simplifying (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (169 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* -0.166667 x) 1.5) x) (* (- 1.5 (* -0.166667 x)) x))
* [exit]simplify:  Simplified to (* (* (+ (* -0.166667 x) 1.5) x) (* (- 1.5 (* -0.166667 x)) x))
* * * * [misc]progress:  [ 17 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* x x) (+ 1.5 (* -0.166667 x)))))>
* * * * [misc]progress:  [ 18 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (+ (* x -3.0) 1.0)) (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (exp (+ (* x -3.0) 1.0)) (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (284 enodes)
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ (* -0.166667 x) 1.5)) (exp (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ (* -0.166667 x) 1.5)) (exp (+ 1.0 (* x -3.0))))
* * * * [misc]progress:  [ 19 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) 1))>
* * * * [misc]progress:  [ 20 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (log (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* * * * [misc]progress:  [ 21 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (exp (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (152 enodes)
* * [misc]simplify:  iters left: 2 (319 enodes)
* [exit]simplify:  Simplified to (* (exp (+ 1.0 (* x -3.0))) (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))
* [exit]simplify:  Simplified to (* (exp (+ 1.0 (* x -3.0))) (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))
* * * * [misc]progress:  [ 22 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (105 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (325 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))) (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))) (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))))
* [enter]simplify:  Simplifying (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* * * * [misc]progress:  [ 23 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))) 3)
* [exit]simplify:  Simplified to (pow (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))) 3)
* * * * [misc]progress:  [ 24 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (sqrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [enter]simplify:  Simplifying (sqrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* * * * [misc]progress:  [ 25 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (275 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5)))) (* (+ (* (* x x) (pow 1.5 3)) (* (* (* x -0.166667) (* x -0.166667)) (* (* x -0.166667) (* x x)))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))))
* [exit]simplify:  Simplified to (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5)))) (* (+ (* (* x x) (pow 1.5 3)) (* (* (* x -0.166667) (* x -0.166667)) (* (* x -0.166667) (* x x)))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* [exit]simplify:  Simplified to (* (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (* (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))))
* * * * [misc]progress:  [ 26 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (201 enodes)
* [exit]simplify:  Simplified to (+ (* (* (+ 1.5 (* -0.166667 x)) (* (- 1.5 (* -0.166667 x)) (* x x))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))
* [exit]simplify:  Simplified to (+ (* (* (+ 1.5 (* -0.166667 x)) (* (- 1.5 (* -0.166667 x)) (* x x))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (236 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (- 1.5 (* x -0.166667)))
* [exit]simplify:  Simplified to (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (- 1.5 (* x -0.166667)))
* * * * [misc]progress:  [ 27 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))) (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (73 enodes)
* * [misc]simplify:  iters left: 4 (236 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (* (* (* x x) (- (* x -3.0) 1.0)) (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))
* [exit]simplify:  Simplified to (+ (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (* (* (* x x) (- (* x -3.0) 1.0)) (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (* (- (* x -3.0) 1.0) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))))
* [exit]simplify:  Simplified to (* (- (* x -3.0) 1.0) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))))
* * * * [misc]progress:  [ 28 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))) (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 1.0 (* x -3.0)) (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))) (* (* (+ (* x -0.166667) 1.5) (- (* x -3.0) 1.0)) (* (- 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (+ (* (+ 1.0 (* x -3.0)) (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))) (* (* (+ (* x -0.166667) 1.5) (- (* x -3.0) 1.0)) (* (- 1.5 (* x -0.166667)) (* x x))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (97 enodes)
* * [misc]simplify:  iters left: 2 (279 enodes)
* [exit]simplify:  Simplified to (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))
* [exit]simplify:  Simplified to (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))
* * * * [misc]progress:  [ 29 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3)) (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))))>
* [enter]simplify:  Simplifying (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (430 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3))
* [exit]simplify:  Simplified to (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3))
* [enter]simplify:  Simplifying (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (* (* x x) (+ (* -0.166667 x) 1.5)) (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (* (* x x) (+ (* -0.166667 x) 1.5)) (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0)))))
* * * * [misc]progress:  [ 30 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))>
* * * * [misc]progress:  [ 31 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))>
* [enter]simplify:  Simplifying (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* [exit]simplify:  Simplified to (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))
* [exit]simplify:  Simplified to (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))
* [enter]simplify:  Simplifying (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (134 enodes)
* * [misc]simplify:  iters left: 2 (304 enodes)
* * [misc]simplify:  iters left: 1 (444 enodes)
* [exit]simplify:  Simplified to (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))
* [exit]simplify:  Simplified to (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))
* * * * [misc]progress:  [ 32 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* x -3.0) (+ 1.0 (* (+ 1.5 (* -0.166667 x)) (* x x)))))>
* [enter]simplify:  Simplifying (+ 1.0 (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (75 enodes)
* * [misc]simplify:  iters left: 1 (79 enodes)
* [exit]simplify:  Simplified to (+ 1.0 (* (* x x) (+ 1.5 (* -0.166667 x))))
* [exit]simplify:  Simplified to (+ 1.0 (* (* x x) (+ 1.5 (* -0.166667 x))))
* * * * [misc]progress:  [ 33 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (+ 1.5 (* -0.166667 x)) (* x x)) (+ (* x -3.0) 1.0)))>
* * * * [misc]progress:  [ 34 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (pow (+ 1.5 (* -0.166667 x)) 1) (* x x))))>
* * * * [misc]progress:  [ 35 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (exp (log (+ 1.5 (* -0.166667 x)))) (* x x))))>
* [enter]simplify:  Simplifying (log (+ 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (log (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (log (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 36 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (log (exp (+ 1.5 (* -0.166667 x)))) (* x x))))>
* [enter]simplify:  Simplifying (exp (+ 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (exp (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (exp (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 37 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x)))) (* x x))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5)))
* [enter]simplify:  Simplifying (cbrt (+ 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (cbrt (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 38 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (cbrt (* (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) (+ 1.5 (* -0.166667 x)))) (* x x))))>
* [enter]simplify:  Simplifying (* (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) (+ 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (315 enodes)
* [exit]simplify:  Simplified to (pow (+ (* x -0.166667) 1.5) 3)
* [exit]simplify:  Simplified to (pow (+ (* x -0.166667) 1.5) 3)
* * * * [misc]progress:  [ 39 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (sqrt (+ 1.5 (* -0.166667 x))) (sqrt (+ 1.5 (* -0.166667 x)))) (* x x))))>
* [enter]simplify:  Simplifying (sqrt (+ 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (sqrt (+ (* x -0.166667) 1.5))
* [enter]simplify:  Simplifying (sqrt (+ 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (sqrt (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 40 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (/ (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* x x))))>
* [enter]simplify:  Simplifying (+ (pow 1.5 3) (pow (* -0.166667 x) 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (78 enodes)
* * [misc]simplify:  iters left: 1 (95 enodes)
* [exit]simplify:  Simplified to (+ (pow 1.5 3) (pow (* -0.166667 x) 3))
* [exit]simplify:  Simplified to (+ (pow 1.5 3) (pow (* -0.166667 x) 3))
* [enter]simplify:  Simplifying (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5))
* [exit]simplify:  Simplified to (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5))
* * * * [misc]progress:  [ 41 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* 1 (+ 1.5 (* -0.166667 x))) (* x x))))>
* * * * [misc]progress:  [ 42 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (/ (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (- 1.5 (* -0.166667 x))) (* x x))))>
* [enter]simplify:  Simplifying (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (145 enodes)
* * [misc]simplify:  iters left: 1 (272 enodes)
* [exit]simplify:  Simplified to (* (+ (* -0.166667 x) 1.5) (- 1.5 (* -0.166667 x)))
* [exit]simplify:  Simplified to (* (+ (* -0.166667 x) 1.5) (- 1.5 (* -0.166667 x)))
* [enter]simplify:  Simplifying (- 1.5 (* -0.166667 x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* [exit]simplify:  Simplified to (- 1.5 (* x -0.166667))
* [exit]simplify:  Simplified to (- 1.5 (* x -0.166667))
* * * * [misc]progress:  [ 43 / 52 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (+ (* -0.166667 x) 1.5) (* x x))))>
* * * * [misc]progress:  [ 44 / 52 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (235 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (- 1.5 (* 0.166667 x))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 45 / 52 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (235 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (- 1.5 (* 0.166667 x))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 46 / 52 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (235 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (- 1.5 (* 0.166667 x))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 47 / 52 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 1.5 x)) (- 1.0 (* 3.0 x)))
* * * * [misc]progress:  [ 48 / 52 ] simplifiying candidate #<alt-event (Î» (x) (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x))))>
* [enter]simplify:  Simplifying (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (111 enodes)
* * [misc]simplify:  iters left: 2 (200 enodes)
* * [misc]simplify:  iters left: 1 (289 enodes)
* [exit]simplify:  Simplified to (* x (- (- (* 1.5 x) 3.0) (* (* x x) 0.166667)))
* * * * [misc]progress:  [ 49 / 52 ] simplifiying candidate #<alt-event (Î» (x) (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x))))>
* [enter]simplify:  Simplifying (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (111 enodes)
* * [misc]simplify:  iters left: 2 (200 enodes)
* * [misc]simplify:  iters left: 1 (289 enodes)
* [exit]simplify:  Simplified to (* x (- (- (* 1.5 x) 3.0) (* (* x x) 0.166667)))
* * * * [misc]progress:  [ 50 / 52 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (- 1.5 (* 0.166667 x)) (* x x))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (- 1.5 (* 0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (103 enodes)
* * [misc]simplify:  iters left: 2 (208 enodes)
* * [misc]simplify:  iters left: 1 (354 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (- 1.5 (* x 0.166667)) (* x x)))
* * * * [misc]progress:  [ 51 / 52 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (- 1.5 (* 0.166667 x)) (* x x))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (- 1.5 (* 0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (103 enodes)
* * [misc]simplify:  iters left: 2 (208 enodes)
* * [misc]simplify:  iters left: 1 (354 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (- 1.5 (* x 0.166667)) (* x x)))
* * * * [misc]progress:  [ 52 / 52 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (- 1.5 (* 0.166667 x)) (* x x))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (- 1.5 (* 0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (103 enodes)
* * [misc]simplify:  iters left: 2 (208 enodes)
* * [misc]simplify:  iters left: 1 (354 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (- 1.5 (* x 0.166667)) (* x x)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 1 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) x) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) x) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (* (- 0.166667) 0)) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 1) (* 0 0))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- 0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) (pow x 2)) (* 1.5 x)) into (- (* 1.5 x) (* 0.166667 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 (/ 1 (/ 1 x))) (* -0.166667 (pow (/ 1 (/ 1 x)) 2))) into (- (* 1.5 x) (* 0.166667 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* 0.166667 -1) into -0.166667
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (* 1.5 -1)) into (- 1.5)
* [misc]backup-simplify:  Simplify (- 1.5) into (- 1.5)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1.5) (/ 1 (/ 1 (- x)))) (* -0.166667 (pow (/ 1 (/ 1 (- x))) 2))) into (- (* 1.5 x) (* 0.166667 (pow x 2)))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* (* (+ 1.5 (* -0.166667 x)) x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (+ 1.5 (* -0.166667 x)) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) x) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* (+ 1.5 (* -0.166667 x)) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) x) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (* (- 0.166667) 0)) into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1.5 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 1) (* 0 0))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1.5 1) (* (- 0.166667) 0))) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1.5 0) (+ (* (- 0.166667) 1) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- 0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) (pow x 3)) (* 1.5 (pow x 2))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (* (+ 1.5 (* -0.166667 (/ 1 x))) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (+ 1.5 (* -0.166667 (/ 1 x))) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (+ 1.5 (* -0.166667 (/ 1 x))) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow (/ 1 (/ 1 x)) 2)) (* -0.166667 (pow (/ 1 (/ 1 x)) 3))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* 0.166667 -1) into -0.166667
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify 0.166667 into 0.166667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (* 1.5 -1)) into (- 1.5)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* (- 1.5) -1)) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* (- 1.5) 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* (- 1.5) 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* (- 1.5) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* (- 1.5) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* (- 1.5) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* (- 1.5) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow (/ 1 (/ 1 (- x))) 2)) (* 0.166667 (pow (/ 1 (/ 1 (- x))) 3))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* (+ 1.5 (* -0.166667 x)) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) x) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* (+ 1.5 (* -0.166667 x)) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) x) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -3.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (* (- 0.166667) 0)) into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1.5 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 1) (* 0 0))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1.5 1) (* (- 0.166667) 0))) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow x 2)) (+ (* (- 3.0) x) 1.0)) into (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 (/ 1 x))) (/ 1 x)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 (/ 1 x))) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* (+ 1.5 (* -0.166667 (/ 1 x))) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 (/ 1 x))) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* (+ 1.5 (* -0.166667 (/ 1 x))) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- 0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (* 1 -3.0) into -3.0
* [misc]backup-simplify:  Simplify (+ -3.0 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) (/ 1 (/ 1 x))) (+ (* 1.5 (pow (/ 1 (/ 1 x)) 2)) (* (- 0.166667) (pow (/ 1 (/ 1 x)) 3)))) into (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (/ 1 (- x))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* 0.166667 -1) into -0.166667
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify 0.166667 into 0.166667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (* 1.5 -1)) into (- 1.5)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* (- 1.5) -1)) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (* -1 -3.0) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* (- 1.5) 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (+ (* 3.0 (/ 1 (/ 1 (- x)))) (+ (* 1.5 (pow (/ 1 (/ 1 (- x))) 2)) (* 0.166667 (pow (/ 1 (/ 1 (- x))) 3)))) into (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- 0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) x) 1.5) into (- 1.5 (* 0.166667 x))
* [misc]approximate:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- 0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ 1.5 (* (- 0.166667) (/ 1 (/ 1 x)))) into (- 1.5 (* 0.166667 x))
* [misc]approximate:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify 0.166667 into 0.166667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ 1.5 (* 0.166667 (/ 1 (/ 1 (- x))))) into (- 1.5 (* 0.166667 x))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (pow (* (+ 1.5 (* -0.166667 x)) x) 1) x)))>
* * * * [misc]progress:  [ 2 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (exp (log (* (+ 1.5 (* -0.166667 x)) x))) x)))>
* [enter]simplify:  Simplifying (log (* (+ 1.5 (* -0.166667 x)) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* [exit]simplify:  Simplified to (log (* (+ (* x -0.166667) 1.5) x))
* [exit]simplify:  Simplified to (log (* (+ (* x -0.166667) 1.5) x))
* * * * [misc]progress:  [ 3 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (log (exp (* (+ 1.5 (* -0.166667 x)) x))) x)))>
* [enter]simplify:  Simplifying (exp (* (+ 1.5 (* -0.166667 x)) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (62 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (pow (exp x) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 4 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) x)) (cbrt (* (+ 1.5 (* -0.166667 x)) x))) (cbrt (* (+ 1.5 (* -0.166667 x)) x))) x)))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ 1.5 (* -0.166667 x)) x)) (cbrt (* (+ 1.5 (* -0.166667 x)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* x -0.166667) 1.5) x)) (cbrt (* (+ (* x -0.166667) 1.5) x)))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* x -0.166667) 1.5) x)) (cbrt (* (+ (* x -0.166667) 1.5) x)))
* [enter]simplify:  Simplifying (cbrt (* (+ 1.5 (* -0.166667 x)) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* x -0.166667) 1.5) x))
* [exit]simplify:  Simplified to (cbrt (* (+ (* x -0.166667) 1.5) x))
* * * * [misc]progress:  [ 5 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (cbrt (* (* (* (+ 1.5 (* -0.166667 x)) x) (* (+ 1.5 (* -0.166667 x)) x)) (* (+ 1.5 (* -0.166667 x)) x))) x)))>
* [enter]simplify:  Simplifying (* (* (* (+ 1.5 (* -0.166667 x)) x) (* (+ 1.5 (* -0.166667 x)) x)) (* (+ 1.5 (* -0.166667 x)) x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (280 enodes)
* [exit]simplify:  Simplified to (pow (* (+ (* x -0.166667) 1.5) x) 3)
* [exit]simplify:  Simplified to (pow (* (+ (* x -0.166667) 1.5) x) 3)
* * * * [misc]progress:  [ 6 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (sqrt (* (+ 1.5 (* -0.166667 x)) x)) (sqrt (* (+ 1.5 (* -0.166667 x)) x))) x)))>
* [enter]simplify:  Simplifying (sqrt (* (+ 1.5 (* -0.166667 x)) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* x -0.166667) 1.5) x))
* [exit]simplify:  Simplified to (sqrt (* (+ (* x -0.166667) 1.5) x))
* [enter]simplify:  Simplifying (sqrt (* (+ 1.5 (* -0.166667 x)) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* x -0.166667) 1.5) x))
* [exit]simplify:  Simplified to (sqrt (* (+ (* x -0.166667) 1.5) x))
* * * * [misc]progress:  [ 7 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* 1 (* (+ 1.5 (* -0.166667 x)) x)) x)))>
* * * * [misc]progress:  [ 8 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) x)) x)))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) x)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* [exit]simplify:  Simplified to (* x (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* x (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 9 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) x)) x)))>
* [enter]simplify:  Simplifying (* (sqrt (+ 1.5 (* -0.166667 x))) x)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* [exit]simplify:  Simplified to (* x (sqrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* x (sqrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 10 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* 1 (* (+ 1.5 (* -0.166667 x)) x)) x)))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) x)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) x)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) x)
* * * * [misc]progress:  [ 11 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (/ (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) x) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) x)))>
* [enter]simplify:  Simplifying (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) x)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (190 enodes)
* * [misc]simplify:  iters left: 1 (209 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* -0.166667 x) (* x x)) (* -0.166667 (* -0.166667 x))) (* (* 1.5 x) (* 1.5 1.5)))
* [exit]simplify:  Simplified to (+ (* (* (* -0.166667 x) (* x x)) (* -0.166667 (* -0.166667 x))) (* (* 1.5 x) (* 1.5 1.5)))
* * * * [misc]progress:  [ 12 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (/ (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) x) (- 1.5 (* -0.166667 x))) x)))>
* [enter]simplify:  Simplifying (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) x)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (328 enodes)
* [exit]simplify:  Simplified to (- (* x (* 1.5 1.5)) (* (pow x 3) (* -0.166667 -0.166667)))
* [exit]simplify:  Simplified to (- (* x (* 1.5 1.5)) (* (pow x 3) (* -0.166667 -0.166667)))
* * * * [misc]progress:  [ 13 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* x (+ 1.5 (* -0.166667 x))) x)))>
* * * * [misc]progress:  [ 14 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (pow (* (* (+ 1.5 (* -0.166667 x)) x) x) 1)))>
* * * * [misc]progress:  [ 15 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (exp (log (* (* (+ 1.5 (* -0.166667 x)) x) x)))))>
* [enter]simplify:  Simplifying (log (* (* (+ 1.5 (* -0.166667 x)) x) x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (64 enodes)
* * [misc]simplify:  iters left: 2 (94 enodes)
* * [misc]simplify:  iters left: 1 (96 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (log (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 16 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (* (* (+ 1.5 (* -0.166667 x)) x) x)))))>
* [enter]simplify:  Simplifying (exp (* (* (+ 1.5 (* -0.166667 x)) x) x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* * [misc]simplify:  iters left: 2 (137 enodes)
* * [misc]simplify:  iters left: 1 (229 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 17 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (* (+ 1.5 (* -0.166667 x)) x) x)) (cbrt (* (* (+ 1.5 (* -0.166667 x)) x) x))) (cbrt (* (* (+ 1.5 (* -0.166667 x)) x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (+ 1.5 (* -0.166667 x)) x) x)) (cbrt (* (* (+ 1.5 (* -0.166667 x)) x) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (82 enodes)
* * [misc]simplify:  iters left: 1 (84 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [enter]simplify:  Simplifying (cbrt (* (* (+ 1.5 (* -0.166667 x)) x) x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (81 enodes)
* * [misc]simplify:  iters left: 1 (83 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 18 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (cbrt (* (* (* (* (+ 1.5 (* -0.166667 x)) x) x) (* (* (+ 1.5 (* -0.166667 x)) x) x)) (* (* (+ 1.5 (* -0.166667 x)) x) x)))))>
* [enter]simplify:  Simplifying (* (* (* (* (+ 1.5 (* -0.166667 x)) x) x) (* (* (+ 1.5 (* -0.166667 x)) x) x)) (* (* (+ 1.5 (* -0.166667 x)) x) x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (274 enodes)
* [exit]simplify:  Simplified to (pow (* (+ (* x -0.166667) 1.5) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (+ (* x -0.166667) 1.5) (* x x)) 3)
* * * * [misc]progress:  [ 19 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (* (* (+ 1.5 (* -0.166667 x)) x) x)) (sqrt (* (* (+ 1.5 (* -0.166667 x)) x) x)))))>
* [enter]simplify:  Simplifying (sqrt (* (* (+ 1.5 (* -0.166667 x)) x) x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (81 enodes)
* * [misc]simplify:  iters left: 1 (83 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [enter]simplify:  Simplifying (sqrt (* (* (+ 1.5 (* -0.166667 x)) x) x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (81 enodes)
* * [misc]simplify:  iters left: 1 (83 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 20 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* 1 (* (* (+ 1.5 (* -0.166667 x)) x) x))))>
* * * * [misc]progress:  [ 21 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 22 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) x) x) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (* (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) x) x)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (148 enodes)
* * [misc]simplify:  iters left: 2 (264 enodes)
* * [misc]simplify:  iters left: 1 (350 enodes)
* [exit]simplify:  Simplified to (+ (* (pow 1.5 3) (* x x)) (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))))
* [exit]simplify:  Simplified to (+ (* (pow 1.5 3) (* x x)) (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))))
* * * * [misc]progress:  [ 23 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) x) x) (- 1.5 (* -0.166667 x)))))>
* [enter]simplify:  Simplifying (* (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) x) x)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (169 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* -0.166667 x) 1.5) (* x x)) (- 1.5 (* -0.166667 x)))
* [exit]simplify:  Simplified to (* (* (+ (* -0.166667 x) 1.5) (* x x)) (- 1.5 (* -0.166667 x)))
* * * * [misc]progress:  [ 24 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* x (* (+ 1.5 (* -0.166667 x)) x))))>
* * * * [misc]progress:  [ 25 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (+ (* x -3.0) 1.0)) (exp (* (* (+ 1.5 (* -0.166667 x)) x) x)))))>
* [enter]simplify:  Simplifying (* (exp (+ (* x -3.0) 1.0)) (exp (* (* (+ 1.5 (* -0.166667 x)) x) x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (110 enodes)
* * [misc]simplify:  iters left: 2 (261 enodes)
* * [misc]simplify:  iters left: 1 (497 enodes)
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ (* -0.166667 x) 1.5)) (exp (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ (* -0.166667 x) 1.5)) (exp (+ 1.0 (* x -3.0))))
* * * * [misc]progress:  [ 26 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)) 1))>
* * * * [misc]progress:  [ 27 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)))))>
* [enter]simplify:  Simplifying (log (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (72 enodes)
* * [misc]simplify:  iters left: 2 (191 enodes)
* * [misc]simplify:  iters left: 1 (309 enodes)
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* * * * [misc]progress:  [ 28 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)))))>
* [enter]simplify:  Simplifying (exp (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (118 enodes)
* * [misc]simplify:  iters left: 2 (281 enodes)
* [exit]simplify:  Simplified to (* (exp (+ 1.0 (* x -3.0))) (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))
* [exit]simplify:  Simplified to (* (exp (+ 1.0 (* x -3.0))) (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))
* * * * [misc]progress:  [ 29 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x))) (cbrt (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x))) (cbrt (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (192 enodes)
* * [misc]simplify:  iters left: 1 (310 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ 1.5 (* x -0.166667))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ 1.5 (* x -0.166667))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ 1.5 (* x -0.166667))))) (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ 1.5 (* x -0.166667))))))
* [enter]simplify:  Simplifying (cbrt (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (72 enodes)
* * [misc]simplify:  iters left: 2 (191 enodes)
* * [misc]simplify:  iters left: 1 (309 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* * * * [misc]progress:  [ 30 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)) (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x))) (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)))))>
* [enter]simplify:  Simplifying (* (* (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)) (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x))) (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ 1.5 (* x -0.166667)))) 3)
* [exit]simplify:  Simplified to (pow (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ 1.5 (* x -0.166667)))) 3)
* * * * [misc]progress:  [ 31 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x))) (sqrt (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (72 enodes)
* * [misc]simplify:  iters left: 2 (191 enodes)
* * [misc]simplify:  iters left: 1 (309 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [enter]simplify:  Simplifying (sqrt (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (72 enodes)
* * [misc]simplify:  iters left: 2 (191 enodes)
* * [misc]simplify:  iters left: 1 (309 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* * * * [misc]progress:  [ 32 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) x) x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) x) x)))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (89 enodes)
* * [misc]simplify:  iters left: 4 (267 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (* (* x x) (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))))
* [exit]simplify:  Simplified to (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (* (* x x) (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* [exit]simplify:  Simplified to (* (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (* (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))))
* * * * [misc]progress:  [ 33 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) x) x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) x) x)))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (68 enodes)
* * [misc]simplify:  iters left: 4 (193 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* (+ 1.5 (* -0.166667 x)) (- 1.5 (* -0.166667 x)))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* (+ 1.5 (* -0.166667 x)) (- 1.5 (* -0.166667 x)))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (236 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (- 1.5 (* x -0.166667)))
* [exit]simplify:  Simplified to (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (- 1.5 (* x -0.166667)))
* * * * [misc]progress:  [ 34 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) x) x))) (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) x) x)))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (74 enodes)
* * [misc]simplify:  iters left: 4 (228 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (* (* (- (* x -3.0) 1.0) (* x x)) (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))
* [exit]simplify:  Simplified to (+ (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (* (* (- (* x -3.0) 1.0) (* x x)) (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (* (- (* x -3.0) 1.0) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))))
* [exit]simplify:  Simplified to (* (- (* x -3.0) 1.0) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))))
* * * * [misc]progress:  [ 35 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) x) x))) (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) x) x)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 1.0 (* x -3.0)) (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))) (* (* (- (* x -3.0) 1.0) (+ (* x -0.166667) 1.5)) (* (- 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (+ (* (+ 1.0 (* x -3.0)) (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))) (* (* (- (* x -3.0) 1.0) (+ (* x -0.166667) 1.5)) (* (- 1.5 (* x -0.166667)) (* x x))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (97 enodes)
* * [misc]simplify:  iters left: 2 (279 enodes)
* [exit]simplify:  Simplified to (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))
* [exit]simplify:  Simplified to (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))
* * * * [misc]progress:  [ 36 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (* (+ 1.5 (* -0.166667 x)) x) x) 3)) (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (* (+ 1.5 (* -0.166667 x)) x) x) (* (* (+ 1.5 (* -0.166667 x)) x) x)) (* (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x))))))>
* [enter]simplify:  Simplifying (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (* (+ 1.5 (* -0.166667 x)) x) x) 3))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (426 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (+ (* x -0.166667) 1.5) (* x x)) 3))
* [exit]simplify:  Simplified to (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (+ (* x -0.166667) 1.5) (* x x)) 3))
* [enter]simplify:  Simplifying (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (* (+ 1.5 (* -0.166667 x)) x) x) (* (* (+ 1.5 (* -0.166667 x)) x) x)) (* (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (* (* x x) (+ (* -0.166667 x) 1.5)) (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (* (* x x) (+ (* -0.166667 x) 1.5)) (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0)))))
* * * * [misc]progress:  [ 37 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x))))>
* * * * [misc]progress:  [ 38 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (* (+ 1.5 (* -0.166667 x)) x) x) (* (* (+ 1.5 (* -0.166667 x)) x) x))) (- (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x))))>
* [enter]simplify:  Simplifying (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (* (+ 1.5 (* -0.166667 x)) x) x) (* (* (+ 1.5 (* -0.166667 x)) x) x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (451 enodes)
* [exit]simplify:  Simplified to (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))
* [exit]simplify:  Simplified to (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))
* [enter]simplify:  Simplifying (- (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (126 enodes)
* * [misc]simplify:  iters left: 2 (372 enodes)
* [exit]simplify:  Simplified to (- (+ 1.0 (* x -3.0)) (* (* x x) (+ 1.5 (* x -0.166667))))
* [exit]simplify:  Simplified to (- (+ 1.0 (* x -3.0)) (* (* x x) (+ 1.5 (* x -0.166667))))
* * * * [misc]progress:  [ 39 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* x -3.0) (+ 1.0 (* (* (+ 1.5 (* -0.166667 x)) x) x))))>
* [enter]simplify:  Simplifying (+ 1.0 (* (* (+ 1.5 (* -0.166667 x)) x) x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (53 enodes)
* * [misc]simplify:  iters left: 2 (115 enodes)
* * [misc]simplify:  iters left: 1 (144 enodes)
* [exit]simplify:  Simplified to (+ 1.0 (* (* x x) (+ 1.5 (* -0.166667 x))))
* [exit]simplify:  Simplified to (+ 1.0 (* (* x x) (+ 1.5 (* -0.166667 x))))
* * * * [misc]progress:  [ 40 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (+ 1.5 (* -0.166667 x)) x) x) (+ (* x -3.0) 1.0)))>
* * * * [misc]progress:  [ 41 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (pow (+ 1.5 (* -0.166667 x)) 1) x) x)))>
* * * * [misc]progress:  [ 42 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (exp (log (+ 1.5 (* -0.166667 x)))) x) x)))>
* [enter]simplify:  Simplifying (log (+ 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (log (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (log (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 43 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (log (exp (+ 1.5 (* -0.166667 x)))) x) x)))>
* [enter]simplify:  Simplifying (exp (+ 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (exp (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (exp (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 44 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x)))) x) x)))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5)))
* [enter]simplify:  Simplifying (cbrt (+ 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (cbrt (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 45 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) (+ 1.5 (* -0.166667 x)))) x) x)))>
* [enter]simplify:  Simplifying (* (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) (+ 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (315 enodes)
* [exit]simplify:  Simplified to (pow (+ (* x -0.166667) 1.5) 3)
* [exit]simplify:  Simplified to (pow (+ (* x -0.166667) 1.5) 3)
* * * * [misc]progress:  [ 46 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (sqrt (+ 1.5 (* -0.166667 x))) (sqrt (+ 1.5 (* -0.166667 x)))) x) x)))>
* [enter]simplify:  Simplifying (sqrt (+ 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (sqrt (+ (* x -0.166667) 1.5))
* [enter]simplify:  Simplifying (sqrt (+ 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (sqrt (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 47 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (/ (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) x) x)))>
* [enter]simplify:  Simplifying (+ (pow 1.5 3) (pow (* -0.166667 x) 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (78 enodes)
* * [misc]simplify:  iters left: 1 (95 enodes)
* [exit]simplify:  Simplified to (+ (pow 1.5 3) (pow (* -0.166667 x) 3))
* [exit]simplify:  Simplified to (+ (pow 1.5 3) (pow (* -0.166667 x) 3))
* [enter]simplify:  Simplifying (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5))
* [exit]simplify:  Simplified to (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5))
* * * * [misc]progress:  [ 48 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* 1 (+ 1.5 (* -0.166667 x))) x) x)))>
* * * * [misc]progress:  [ 49 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (/ (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (- 1.5 (* -0.166667 x))) x) x)))>
* [enter]simplify:  Simplifying (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (145 enodes)
* * [misc]simplify:  iters left: 1 (272 enodes)
* [exit]simplify:  Simplified to (* (+ (* -0.166667 x) 1.5) (- 1.5 (* -0.166667 x)))
* [exit]simplify:  Simplified to (* (+ (* -0.166667 x) 1.5) (- 1.5 (* -0.166667 x)))
* [enter]simplify:  Simplifying (- 1.5 (* -0.166667 x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* [exit]simplify:  Simplified to (- 1.5 (* x -0.166667))
* [exit]simplify:  Simplified to (- 1.5 (* x -0.166667))
* * * * [misc]progress:  [ 50 / 62 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (+ (* -0.166667 x) 1.5) x) x)))>
* * * * [misc]progress:  [ 51 / 62 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (- (* 1.5 x) (* 0.166667 (pow x 2))) x)))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (- (* 1.5 x) (* 0.166667 (pow x 2))) x))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (109 enodes)
* * [misc]simplify:  iters left: 2 (192 enodes)
* * [misc]simplify:  iters left: 1 (268 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (- 1.5 (* 0.166667 x))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 52 / 62 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (- (* 1.5 x) (* 0.166667 (pow x 2))) x)))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (- (* 1.5 x) (* 0.166667 (pow x 2))) x))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (109 enodes)
* * [misc]simplify:  iters left: 2 (192 enodes)
* * [misc]simplify:  iters left: 1 (268 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (- 1.5 (* 0.166667 x))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 53 / 62 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (- (* 1.5 x) (* 0.166667 (pow x 2))) x)))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (- (* 1.5 x) (* 0.166667 (pow x 2))) x))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (109 enodes)
* * [misc]simplify:  iters left: 2 (192 enodes)
* * [misc]simplify:  iters left: 1 (268 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (- 1.5 (* 0.166667 x))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 54 / 62 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (235 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (- 1.5 (* 0.166667 x))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 55 / 62 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (235 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (- 1.5 (* 0.166667 x))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 56 / 62 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (235 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (- 1.5 (* 0.166667 x))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 57 / 62 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 1.5 x)) (- 1.0 (* 3.0 x)))
* * * * [misc]progress:  [ 58 / 62 ] simplifiying candidate #<alt-event (Î» (x) (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x))))>
* [enter]simplify:  Simplifying (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (111 enodes)
* * [misc]simplify:  iters left: 2 (200 enodes)
* * [misc]simplify:  iters left: 1 (289 enodes)
* [exit]simplify:  Simplified to (* x (- (- (* 1.5 x) 3.0) (* (* x x) 0.166667)))
* * * * [misc]progress:  [ 59 / 62 ] simplifiying candidate #<alt-event (Î» (x) (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x))))>
* [enter]simplify:  Simplifying (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (111 enodes)
* * [misc]simplify:  iters left: 2 (200 enodes)
* * [misc]simplify:  iters left: 1 (289 enodes)
* [exit]simplify:  Simplified to (* x (- (- (* 1.5 x) 3.0) (* (* x x) 0.166667)))
* * * * [misc]progress:  [ 60 / 62 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (- 1.5 (* 0.166667 x)) x) x)))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (* (- 1.5 (* 0.166667 x)) x) x))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (192 enodes)
* * [misc]simplify:  iters left: 1 (325 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (* x x) (- 1.5 (* x 0.166667))))
* * * * [misc]progress:  [ 61 / 62 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (- 1.5 (* 0.166667 x)) x) x)))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (* (- 1.5 (* 0.166667 x)) x) x))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (192 enodes)
* * [misc]simplify:  iters left: 1 (325 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (* x x) (- 1.5 (* x 0.166667))))
* * * * [misc]progress:  [ 62 / 62 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (- 1.5 (* 0.166667 x)) x) x)))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (* (- 1.5 (* 0.166667 x)) x) x))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (192 enodes)
* * [misc]simplify:  iters left: 1 (325 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (* x x) (- 1.5 (* x 0.166667))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (sqrt 1.5) into (sqrt 1.5)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 1.5))) into (/ -0.0833335 (sqrt 1.5))
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (sqrt 1.5) into (sqrt 1.5)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 1.5))) into (/ -0.0833335 (sqrt 1.5))
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (sqrt 1.5) into (sqrt 1.5)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 1.5))) into (/ -0.0833335 (sqrt 1.5))
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (sqrt 1.5) into (sqrt 1.5)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 1.5))) into (/ -0.0833335 (sqrt 1.5))
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (sqrt 1.5) 0) into 0
* [misc]backup-simplify:  Simplify (* (sqrt 1.5) 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.5) 0) (* (/ -0.0833335 (sqrt 1.5)) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.5) 0) (* (/ -0.0833335 (sqrt 1.5)) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.0833335 (sqrt 1.5)) 2) (+)) (* 2 (sqrt 1.5))) into (/ -0.0034722361111250003 (pow (sqrt 1.5) 3))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.5) 1) (+ (* (/ -0.0833335 (sqrt 1.5)) 0) (* (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) 0))) into (sqrt 1.5)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.0833335 (sqrt 1.5)) 2) (+)) (* 2 (sqrt 1.5))) into (/ -0.0034722361111250003 (pow (sqrt 1.5) 3))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.5) (sqrt 1.5)) (+ (* (/ -0.0833335 (sqrt 1.5)) 0) (* (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) 0))) into (pow (sqrt 1.5) 2)
* [misc]backup-simplify:  Simplify (pow (sqrt 1.5) 2) into (pow (sqrt 1.5) 2)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ -0.0833335 (sqrt 1.5)) (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)))))) (* 2 (sqrt 1.5))) into (/ -0.00028935358796643526 (pow (sqrt 1.5) 5))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.5) 0) (+ (* (/ -0.0833335 (sqrt 1.5)) 1) (+ (* (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) 0) (* (/ -0.00028935358796643526 (pow (sqrt 1.5) 5)) 0)))) into (- (* 0.0833335 (/ 1 (sqrt 1.5))))
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ -0.0833335 (sqrt 1.5)) (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)))))) (* 2 (sqrt 1.5))) into (/ -0.00028935358796643526 (pow (sqrt 1.5) 5))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.5) (- (* 0.0833335 (/ 1 (sqrt 1.5))))) (+ (* (/ -0.0833335 (sqrt 1.5)) (sqrt 1.5)) (+ (* (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) 0) (* (/ -0.00028935358796643526 (pow (sqrt 1.5) 5)) 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- 0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) 2) (+ (* 2 (* (/ -0.0833335 (sqrt 1.5)) (/ -0.00028935358796643526 (pow (sqrt 1.5) 5)))))) (* 2 (sqrt 1.5))) into (/ -3.0141059028501164e-05 (pow (sqrt 1.5) 7))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.5) 0) (+ (* (/ -0.0833335 (sqrt 1.5)) 0) (+ (* (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) 1) (+ (* (/ -0.00028935358796643526 (pow (sqrt 1.5) 5)) 0) (* (/ -3.0141059028501164e-05 (pow (sqrt 1.5) 7)) 0))))) into (- (* 0.0034722361111250003 (/ 1 (pow (sqrt 1.5) 3))))
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) 2) (+ (* 2 (* (/ -0.0833335 (sqrt 1.5)) (/ -0.00028935358796643526 (pow (sqrt 1.5) 5)))))) (* 2 (sqrt 1.5))) into (/ -3.0141059028501164e-05 (pow (sqrt 1.5) 7))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.5) (- (* 0.0034722361111250003 (/ 1 (pow (sqrt 1.5) 3))))) (+ (* (/ -0.0833335 (sqrt 1.5)) (- (* 0.0833335 (/ 1 (sqrt 1.5))))) (+ (* (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) (sqrt 1.5)) (+ (* (/ -0.00028935358796643526 (pow (sqrt 1.5) 5)) 0) (* (/ -3.0141059028501164e-05 (pow (sqrt 1.5) 7)) 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ -0.0833335 (sqrt 1.5)) (/ -3.0141059028501164e-05 (pow (sqrt 1.5) 7)))) (* 2 (* (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) (/ -0.00028935358796643526 (pow (sqrt 1.5) 5)))))) (* 2 (sqrt 1.5))) into (/ -3.516463919572243e-06 (pow (sqrt 1.5) 9))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.5) 0) (+ (* (/ -0.0833335 (sqrt 1.5)) 0) (+ (* (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) 0) (+ (* (/ -0.00028935358796643526 (pow (sqrt 1.5) 5)) 1) (+ (* (/ -3.0141059028501164e-05 (pow (sqrt 1.5) 7)) 0) (* (/ -3.516463919572243e-06 (pow (sqrt 1.5) 9)) 0)))))) into (- (* 0.00028935358796643526 (/ 1 (pow (sqrt 1.5) 5))))
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ -0.0833335 (sqrt 1.5)) (/ -3.0141059028501164e-05 (pow (sqrt 1.5) 7)))) (* 2 (* (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) (/ -0.00028935358796643526 (pow (sqrt 1.5) 5)))))) (* 2 (sqrt 1.5))) into (/ -3.516463919572243e-06 (pow (sqrt 1.5) 9))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.5) (- (* 0.00028935358796643526 (/ 1 (pow (sqrt 1.5) 5))))) (+ (* (/ -0.0833335 (sqrt 1.5)) (- (* 0.0034722361111250003 (/ 1 (pow (sqrt 1.5) 3))))) (+ (* (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) (- (* 0.0833335 (/ 1 (sqrt 1.5))))) (+ (* (/ -0.00028935358796643526 (pow (sqrt 1.5) 5)) (sqrt 1.5)) (+ (* (/ -3.0141059028501164e-05 (pow (sqrt 1.5) 7)) 0) (* (/ -3.516463919572243e-06 (pow (sqrt 1.5) 9)) 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.00028935358796643526 (pow (sqrt 1.5) 5)) 2) (+ (* 2 (* (/ -0.0833335 (sqrt 1.5)) (/ -3.516463919572243e-06 (pow (sqrt 1.5) 9)))) (* 2 (* (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) (/ -3.0141059028501164e-05 (pow (sqrt 1.5) 7)))))) (* 2 (sqrt 1.5))) into (/ -4.3955886906251026e-07 (pow (sqrt 1.5) 11))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.5) 0) (+ (* (/ -0.0833335 (sqrt 1.5)) 0) (+ (* (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) 0) (+ (* (/ -0.00028935358796643526 (pow (sqrt 1.5) 5)) 0) (+ (* (/ -3.0141059028501164e-05 (pow (sqrt 1.5) 7)) 1) (+ (* (/ -3.516463919572243e-06 (pow (sqrt 1.5) 9)) 0) (* (/ -4.3955886906251026e-07 (pow (sqrt 1.5) 11)) 0))))))) into (- (* 3.0141059028501164e-05 (/ 1 (pow (sqrt 1.5) 7))))
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.00028935358796643526 (pow (sqrt 1.5) 5)) 2) (+ (* 2 (* (/ -0.0833335 (sqrt 1.5)) (/ -3.516463919572243e-06 (pow (sqrt 1.5) 9)))) (* 2 (* (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) (/ -3.0141059028501164e-05 (pow (sqrt 1.5) 7)))))) (* 2 (sqrt 1.5))) into (/ -4.3955886906251026e-07 (pow (sqrt 1.5) 11))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.5) (- (* 3.0141059028501164e-05 (/ 1 (pow (sqrt 1.5) 7))))) (+ (* (/ -0.0833335 (sqrt 1.5)) (- (* 0.00028935358796643526 (/ 1 (pow (sqrt 1.5) 5))))) (+ (* (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) (- (* 0.0034722361111250003 (/ 1 (pow (sqrt 1.5) 3))))) (+ (* (/ -0.00028935358796643526 (pow (sqrt 1.5) 5)) (- (* 0.0833335 (/ 1 (sqrt 1.5))))) (+ (* (/ -3.0141059028501164e-05 (pow (sqrt 1.5) 7)) (sqrt 1.5)) (+ (* (/ -3.516463919572243e-06 (pow (sqrt 1.5) 9)) 0) (* (/ -4.3955886906251026e-07 (pow (sqrt 1.5) 11)) 0))))))) into (* 3.3881317890172014e-21 (/ 1 (pow (sqrt 1.5) 6)))
* [misc]backup-simplify:  Simplify (* 3.3881317890172014e-21 (/ 1 (pow (sqrt 1.5) 6))) into (/ 3.3881317890172014e-21 (pow (sqrt 1.5) 6))
* [misc]backup-simplify:  Simplify (+ (* (/ 3.3881317890172014e-21 (pow (sqrt 1.5) 6)) (pow x 6)) (+ (* (- 0.166667) (pow x 3)) (* (pow (sqrt 1.5) 2) (pow x 2)))) into (- (+ (* 3.3881317890172014e-21 (/ (pow x 6) (pow (sqrt 1.5) 6))) (* (pow (sqrt 1.5) 2) (pow x 2))) (* 0.166667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* +nan.0 1)) into (- +nan.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- +nan.0)) (* +nan.0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (- 1.5 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (* +nan.0 1))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (- 1.5 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (* +nan.0 0))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (* +nan.0 1)))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (* +nan.0 0)))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow +nan.0 2) (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (* +nan.0 1))))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow +nan.0 2) (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (* +nan.0 0))))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (+ (- +nan.0) (+ (* (- +nan.0) (/ 1 (/ 1 x))) (* (- +nan.0) (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* +nan.0 (pow x 2)) (- (+ +nan.0 (- (* +nan.0 x))))))
* [misc]approximate:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.166667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.166667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.166667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.166667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* +nan.0 1)) into (- +nan.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- +nan.0)) (* +nan.0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (- 1.5 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (* +nan.0 1))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (- 1.5 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (* +nan.0 0))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (* +nan.0 1)))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (* +nan.0 0)))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow +nan.0 2) (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (* +nan.0 1))))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow +nan.0 2) (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (* +nan.0 0))))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (+ (- +nan.0) (+ (* (- +nan.0) (/ 1 (/ 1 (- x)))) (* (- +nan.0) (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* +nan.0 (pow x 2)) (- (+ +nan.0 (- (* +nan.0 x))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (sqrt 1.5) into (sqrt 1.5)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 1.5))) into (/ -0.0833335 (sqrt 1.5))
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (sqrt 1.5) into (sqrt 1.5)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 1.5))) into (/ -0.0833335 (sqrt 1.5))
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (sqrt 1.5) 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.5) 0) (* (/ -0.0833335 (sqrt 1.5)) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.0833335 (sqrt 1.5)) 2) (+)) (* 2 (sqrt 1.5))) into (/ -0.0034722361111250003 (pow (sqrt 1.5) 3))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.5) 1) (+ (* (/ -0.0833335 (sqrt 1.5)) 0) (* (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) 0))) into (sqrt 1.5)
* [misc]backup-simplify:  Simplify (sqrt 1.5) into (sqrt 1.5)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* (/ -0.0833335 (sqrt 1.5)) (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)))))) (* 2 (sqrt 1.5))) into (/ -0.00028935358796643526 (pow (sqrt 1.5) 5))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.5) 0) (+ (* (/ -0.0833335 (sqrt 1.5)) 1) (+ (* (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) 0) (* (/ -0.00028935358796643526 (pow (sqrt 1.5) 5)) 0)))) into (- (* 0.0833335 (/ 1 (sqrt 1.5))))
* [misc]backup-simplify:  Simplify (- (* 0.0833335 (/ 1 (sqrt 1.5)))) into (- (* 0.0833335 (/ 1 (sqrt 1.5))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) 2) (+ (* 2 (* (/ -0.0833335 (sqrt 1.5)) (/ -0.00028935358796643526 (pow (sqrt 1.5) 5)))))) (* 2 (sqrt 1.5))) into (/ -3.0141059028501164e-05 (pow (sqrt 1.5) 7))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.5) 0) (+ (* (/ -0.0833335 (sqrt 1.5)) 0) (+ (* (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) 1) (+ (* (/ -0.00028935358796643526 (pow (sqrt 1.5) 5)) 0) (* (/ -3.0141059028501164e-05 (pow (sqrt 1.5) 7)) 0))))) into (- (* 0.0034722361111250003 (/ 1 (pow (sqrt 1.5) 3))))
* [misc]backup-simplify:  Simplify (- (* 0.0034722361111250003 (/ 1 (pow (sqrt 1.5) 3)))) into (- (* 0.0034722361111250003 (/ 1 (pow (sqrt 1.5) 3))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.0034722361111250003 (/ 1 (pow (sqrt 1.5) 3)))) (pow x 4)) (+ (* (- (* 0.0833335 (/ 1 (sqrt 1.5)))) (pow x 3)) (* (sqrt 1.5) (pow x 2)))) into (- (* (sqrt 1.5) (pow x 2)) (+ (* 0.0833335 (/ (pow x 3) (sqrt 1.5))) (* 0.0034722361111250003 (/ (pow x 4) (pow (sqrt 1.5) 3)))))
* [misc]approximate:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* +nan.0 1)) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (- 1.5 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (* +nan.0 1))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (* +nan.0 1)))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (+ (- +nan.0) (+ (* (- +nan.0) (/ 1 (/ 1 x))) (* (- +nan.0) (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* +nan.0 (pow x 2)) (- (+ +nan.0 (- (* +nan.0 x))))))
* [misc]approximate:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.166667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.166667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* +nan.0 1)) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (- 1.5 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (* +nan.0 1))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (* +nan.0 1)))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (+ (- +nan.0) (+ (* (- +nan.0) (/ 1 (/ 1 (- x)))) (* (- +nan.0) (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* +nan.0 (pow x 2)) (- (+ +nan.0 (- (* +nan.0 x))))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (sqrt 1.5) into (sqrt 1.5)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 1.5))) into (/ -0.0833335 (sqrt 1.5))
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (sqrt 1.5) into (sqrt 1.5)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 1.5))) into (/ -0.0833335 (sqrt 1.5))
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (sqrt 1.5) into (sqrt 1.5)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 1.5))) into (/ -0.0833335 (sqrt 1.5))
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (sqrt 1.5) into (sqrt 1.5)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 1.5))) into (/ -0.0833335 (sqrt 1.5))
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -3.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (sqrt 1.5) 0) into 0
* [misc]backup-simplify:  Simplify (* (sqrt 1.5) 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.5) 0) (* (/ -0.0833335 (sqrt 1.5)) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.5) 0) (* (/ -0.0833335 (sqrt 1.5)) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.0833335 (sqrt 1.5)) 2) (+)) (* 2 (sqrt 1.5))) into (/ -0.0034722361111250003 (pow (sqrt 1.5) 3))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.5) 1) (+ (* (/ -0.0833335 (sqrt 1.5)) 0) (* (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) 0))) into (sqrt 1.5)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.0833335 (sqrt 1.5)) 2) (+)) (* 2 (sqrt 1.5))) into (/ -0.0034722361111250003 (pow (sqrt 1.5) 3))
* [misc]backup-simplify:  Simplify (+ (* (sqrt 1.5) (sqrt 1.5)) (+ (* (/ -0.0833335 (sqrt 1.5)) 0) (* (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) 0))) into (pow (sqrt 1.5) 2)
* [misc]backup-simplify:  Simplify (+ 0 (pow (sqrt 1.5) 2)) into (pow (sqrt 1.5) 2)
* [misc]backup-simplify:  Simplify (pow (sqrt 1.5) 2) into (pow (sqrt 1.5) 2)
* [misc]backup-simplify:  Simplify (+ (* (pow (sqrt 1.5) 2) (pow x 2)) (+ (* (- 3.0) x) 1.0)) into (- (+ 1.0 (* (pow (sqrt 1.5) 2) (pow x 2))) (* 3.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* +nan.0 1)) into (- +nan.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- +nan.0)) (* +nan.0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (- 1.5 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (* +nan.0 1))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (- 1.5 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (* +nan.0 0))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (+ 0 (- +nan.0)) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (* 1 -3.0) into -3.0
* [misc]backup-simplify:  Simplify (+ -3.0 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (* +nan.0 1)))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (* +nan.0 0)))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (+ (- 3.0) (- +nan.0)) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow +nan.0 2) (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (* +nan.0 1))))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow +nan.0 2) (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (* +nan.0 0))))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (+ 1.0 (- +nan.0)) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (+ (- +nan.0) (+ (* (- +nan.0) (/ 1 (/ 1 x))) (* (- +nan.0) (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* +nan.0 (pow x 2)) (- (+ +nan.0 (- (* +nan.0 x))))))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.166667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.166667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.166667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (* (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.166667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* +nan.0 1)) into (- +nan.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- +nan.0)) (* +nan.0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (- 1.5 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (* +nan.0 1))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (- 1.5 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (* +nan.0 0))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (+ 0 (- +nan.0)) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (* -1 -3.0) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (* +nan.0 1)))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (* +nan.0 0)))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (+ 3.0 (- +nan.0)) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -3.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow +nan.0 2) (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (+ (* +nan.0 0) (* +nan.0 1))))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow +nan.0 2) (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify (+ (* 0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (+ (* +nan.0 (- +nan.0)) (* +nan.0 0))))) into (- +nan.0)
* [misc]backup-simplify:  Simplify (+ 1.0 (- +nan.0)) into (- +nan.0)
* [misc]backup-simplify:  Simplify (- +nan.0) into (- +nan.0)
* [misc]backup-simplify:  Simplify (+ (- +nan.0) (+ (* (- +nan.0) (/ 1 (/ 1 (- x)))) (* (- +nan.0) (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* +nan.0 (pow x 2)) (- (+ +nan.0 (- (* +nan.0 x))))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2 1)
* [misc]approximate:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (sqrt 1.5) into (sqrt 1.5)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 1.5))) into (/ -0.0833335 (sqrt 1.5))
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (sqrt 1.5) into (sqrt 1.5)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 1.5))) into (/ -0.0833335 (sqrt 1.5))
* [misc]backup-simplify:  Simplify (sqrt 1.5) into (sqrt 1.5)
* [misc]backup-simplify:  Simplify (/ -0.0833335 (sqrt 1.5)) into (/ -0.0833335 (sqrt 1.5))
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (pow (/ -0.0833335 (sqrt 1.5)) 2) (+)) (* 2 (sqrt 1.5))) into (/ -0.0034722361111250003 (pow (sqrt 1.5) 3))
* [misc]backup-simplify:  Simplify (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) into (/ -0.0034722361111250003 (pow (sqrt 1.5) 3))
* [misc]backup-simplify:  Simplify (+ (* (/ -0.0034722361111250003 (pow (sqrt 1.5) 3)) (pow x 2)) (+ (* (/ -0.0833335 (sqrt 1.5)) x) (sqrt 1.5))) into (- (sqrt 1.5) (+ (* 0.0833335 (/ x (sqrt 1.5))) (* 0.0034722361111250003 (/ (pow x 2) (pow (sqrt 1.5) 3)))))
* [misc]approximate:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0.166667) (* 2 (sqrt 0))) into +nan.0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify +nan.0 into +nan.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (- 1.5 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify +nan.0 into +nan.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify +nan.0 into +nan.0
* [misc]backup-simplify:  Simplify (+ (* +nan.0 (pow (/ 1 x) 2)) (+ (* +nan.0 (/ 1 x)) +nan.0)) into (- (+ (* +nan.0 (/ 1 x)) (- (+ +nan.0 (- (* +nan.0 (/ 1 (pow x 2))))))))
* [misc]approximate:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.166667 (* 2 (sqrt 0))) into +nan.0
* [misc]taylor:  Taking taylor expansion of (sqrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (sqrt 0) into 0
* [misc]backup-simplify:  Simplify (/ 0.166667 (* 2 (sqrt 0))) into +nan.0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify +nan.0 into +nan.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (- 1.5 (pow +nan.0 2) (+)) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify +nan.0 into +nan.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (- 0 (+ (* 2 (* +nan.0 +nan.0)))) (* 2 0)) into +nan.0
* [misc]backup-simplify:  Simplify +nan.0 into +nan.0
* [misc]backup-simplify:  Simplify (+ (* +nan.0 (pow (/ 1 (- x)) 2)) (+ (* +nan.0 (/ 1 (- x))) +nan.0)) into (- (+ (* +nan.0 (/ 1 x)) (- (+ +nan.0 (- (* +nan.0 (/ 1 (pow x 2))))))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (pow (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) 1)))>
* [enter]simplify:  Simplifying (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* * [misc]simplify:  iters left: 1 (61 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 2 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (pow (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) 1)))>
* [enter]simplify:  Simplifying (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* * [misc]simplify:  iters left: 1 (61 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 3 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (pow (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) 1)))>
* * * * [misc]progress:  [ 4 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (exp (+ (log (sqrt (+ 1.5 (* -0.166667 x)))) (+ (log (sqrt (+ 1.5 (* -0.166667 x)))) (log (* x x)))))))>
* [enter]simplify:  Simplifying (+ (log (sqrt (+ 1.5 (* -0.166667 x)))) (+ (log (sqrt (+ 1.5 (* -0.166667 x)))) (log (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (33 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (sqrt (+ (* x -0.166667) 1.5))) (log x)) (+ (log (sqrt (+ (* x -0.166667) 1.5))) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log (sqrt (+ (* x -0.166667) 1.5))) (log x)) (+ (log (sqrt (+ (* x -0.166667) 1.5))) (log x)))
* * * * [misc]progress:  [ 5 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (exp (+ (log (sqrt (+ 1.5 (* -0.166667 x)))) (log (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (+ (log (sqrt (+ 1.5 (* -0.166667 x)))) (log (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* * [misc]simplify:  iters left: 1 (45 enodes)
* [exit]simplify:  Simplified to (+ (log (* x (sqrt (+ (* x -0.166667) 1.5)))) (log (* x (sqrt (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (+ (log (* x (sqrt (+ (* x -0.166667) 1.5)))) (log (* x (sqrt (+ (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 6 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (exp (log (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (log (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (68 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (97 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (log (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 7 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (exp (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* * [misc]simplify:  iters left: 2 (68 enodes)
* * [misc]simplify:  iters left: 1 (115 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 8 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (cbrt (* (* (* (sqrt (+ 1.5 (* -0.166667 x))) (sqrt (+ 1.5 (* -0.166667 x)))) (sqrt (+ 1.5 (* -0.166667 x)))) (* (* (* (sqrt (+ 1.5 (* -0.166667 x))) (sqrt (+ 1.5 (* -0.166667 x)))) (sqrt (+ 1.5 (* -0.166667 x)))) (* (* (* x x) (* x x)) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (* (sqrt (+ 1.5 (* -0.166667 x))) (sqrt (+ 1.5 (* -0.166667 x)))) (sqrt (+ 1.5 (* -0.166667 x)))) (* (* (* (sqrt (+ 1.5 (* -0.166667 x))) (sqrt (+ 1.5 (* -0.166667 x)))) (sqrt (+ 1.5 (* -0.166667 x)))) (* (* (* x x) (* x x)) (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (+ (* x -0.166667) 1.5)) (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (+ (* x -0.166667) 1.5)) (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 9 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (cbrt (* (* (* (sqrt (+ 1.5 (* -0.166667 x))) (sqrt (+ 1.5 (* -0.166667 x)))) (sqrt (+ 1.5 (* -0.166667 x)))) (* (* (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (* (sqrt (+ 1.5 (* -0.166667 x))) (sqrt (+ 1.5 (* -0.166667 x)))) (sqrt (+ 1.5 (* -0.166667 x)))) (* (* (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (458 enodes)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* * * * [misc]progress:  [ 10 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))) (cbrt (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))) (cbrt (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))) (cbrt (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (63 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [enter]simplify:  Simplifying (cbrt (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (58 enodes)
* * [misc]simplify:  iters left: 1 (62 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 11 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (cbrt (* (* (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (246 enodes)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* * * * [misc]progress:  [ 12 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))) (sqrt (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (sqrt (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (63 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [enter]simplify:  Simplifying (sqrt (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (63 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 13 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))) (* (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (108 enodes)
* * [misc]simplify:  iters left: 2 (185 enodes)
* * [misc]simplify:  iters left: 1 (293 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* -0.166667 x)) (* (* -0.166667 x) (* -0.166667 x))) (* (* x x) (pow 1.5 3)))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* -0.166667 x)) (* (* -0.166667 x) (* -0.166667 x))) (* (* x x) (pow 1.5 3)))
* [enter]simplify:  Simplifying (* (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (131 enodes)
* * [misc]simplify:  iters left: 1 (149 enodes)
* [exit]simplify:  Simplified to (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x)))
* [exit]simplify:  Simplified to (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x)))
* * * * [misc]progress:  [ 14 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))) (* (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (sqrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (173 enodes)
* * [misc]simplify:  iters left: 2 (260 enodes)
* * [misc]simplify:  iters left: 1 (387 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (sqrt (* (+ 1.5 (* -0.166667 x)) (- 1.5 (* -0.166667 x))))))
* [exit]simplify:  Simplified to (* (* x x) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (sqrt (* (+ 1.5 (* -0.166667 x)) (- 1.5 (* -0.166667 x))))))
* [enter]simplify:  Simplifying (* (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (sqrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (122 enodes)
* * [misc]simplify:  iters left: 2 (134 enodes)
* * [misc]simplify:  iters left: 1 (150 enodes)
* [exit]simplify:  Simplified to (* (sqrt (- 1.5 (* -0.166667 x))) (sqrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x))))))
* [exit]simplify:  Simplified to (* (sqrt (- 1.5 (* -0.166667 x))) (sqrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x))))))
* * * * [misc]progress:  [ 15 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))) (* (sqrt (- 1.5 (* -0.166667 x))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (174 enodes)
* * [misc]simplify:  iters left: 2 (260 enodes)
* * [misc]simplify:  iters left: 1 (387 enodes)
* [exit]simplify:  Simplified to (* (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) x) (* x (sqrt (* (+ (* -0.166667 x) 1.5) (- 1.5 (* -0.166667 x))))))
* [exit]simplify:  Simplified to (* (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) x) (* x (sqrt (* (+ (* -0.166667 x) 1.5) (- 1.5 (* -0.166667 x))))))
* [enter]simplify:  Simplifying (* (sqrt (- 1.5 (* -0.166667 x))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (122 enodes)
* * [misc]simplify:  iters left: 2 (134 enodes)
* * [misc]simplify:  iters left: 1 (150 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667)))) (sqrt (- 1.5 (* x -0.166667))))
* [exit]simplify:  Simplified to (* (sqrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667)))) (sqrt (- 1.5 (* x -0.166667))))
* * * * [misc]progress:  [ 16 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))) (* (sqrt (- 1.5 (* -0.166667 x))) (sqrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (122 enodes)
* * [misc]simplify:  iters left: 2 (329 enodes)
* [exit]simplify:  Simplified to (* (+ (* -0.166667 x) 1.5) (* (* x x) (- 1.5 (* -0.166667 x))))
* [exit]simplify:  Simplified to (* (+ (* -0.166667 x) 1.5) (* (* x x) (- 1.5 (* -0.166667 x))))
* [enter]simplify:  Simplifying (* (sqrt (- 1.5 (* -0.166667 x))) (sqrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (- 1.5 (* x -0.166667))
* [exit]simplify:  Simplified to (- 1.5 (* x -0.166667))
* * * * [misc]progress:  [ 17 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* 1 (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))))>
* * * * [misc]progress:  [ 18 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (sqrt (+ 1.5 (* -0.166667 x))) (sqrt (+ 1.5 (* -0.166667 x)))) (* x x))))>
* [enter]simplify:  Simplifying (* (sqrt (+ 1.5 (* -0.166667 x))) (sqrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* [exit]simplify:  Simplified to (+ (* x -0.166667) 1.5)
* [exit]simplify:  Simplified to (+ (* x -0.166667) 1.5)
* * * * [misc]progress:  [ 19 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (sqrt (+ 1.5 (* -0.166667 x)))) (cbrt (sqrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (sqrt (+ 1.5 (* -0.166667 x)))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ 1.5 (* -0.166667 x)))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* [exit]simplify:  Simplified to (* (* (sqrt (+ (* x -0.166667) 1.5)) (* x x)) (cbrt (sqrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (* (sqrt (+ (* x -0.166667) 1.5)) (* x x)) (cbrt (sqrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 20 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (* (sqrt (cbrt (+ 1.5 (* -0.166667 x)))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (+ 1.5 (* -0.166667 x)))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (* x -0.166667) 1.5))) (* (sqrt (+ (* x -0.166667) 1.5)) (* x x)))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (* x -0.166667) 1.5))) (* (sqrt (+ (* x -0.166667) 1.5)) (* x x)))
* * * * [misc]progress:  [ 21 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (sqrt (+ 1.5 (* -0.166667 x)))) (* (sqrt (sqrt (+ 1.5 (* -0.166667 x)))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (sqrt (+ 1.5 (* -0.166667 x)))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* [exit]simplify:  Simplified to (* (* (sqrt (+ (* x -0.166667) 1.5)) (* x x)) (sqrt (sqrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (* (sqrt (+ (* x -0.166667) 1.5)) (* x x)) (sqrt (sqrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 22 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt 1) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* * [misc]simplify:  iters left: 1 (61 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 23 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (sqrt (+ 1.5 (* -0.166667 x)))) (* (sqrt (sqrt (+ 1.5 (* -0.166667 x)))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (sqrt (+ 1.5 (* -0.166667 x)))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* [exit]simplify:  Simplified to (* (* (sqrt (+ (* x -0.166667) 1.5)) (* x x)) (sqrt (sqrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (* (sqrt (+ (* x -0.166667) 1.5)) (* x x)) (sqrt (sqrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 24 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* 1 (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* * [misc]simplify:  iters left: 1 (61 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 25 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (118 enodes)
* * [misc]simplify:  iters left: 2 (152 enodes)
* * [misc]simplify:  iters left: 1 (154 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (sqrt (+ (* x -0.166667) 1.5))) (sqrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))))
* [exit]simplify:  Simplified to (* (* (* x x) (sqrt (+ (* x -0.166667) 1.5))) (sqrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))))
* * * * [misc]progress:  [ 26 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))) (sqrt (- 1.5 (* -0.166667 x))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (121 enodes)
* * [misc]simplify:  iters left: 2 (185 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (sqrt (+ (* x -0.166667) 1.5))) (sqrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))))
* [exit]simplify:  Simplified to (* (* (* x x) (sqrt (+ (* x -0.166667) 1.5))) (sqrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))))
* * * * [misc]progress:  [ 27 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (108 enodes)
* * [misc]simplify:  iters left: 2 (133 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (* x x) (sqrt (+ 1.5 (* -0.166667 x)))))
* [exit]simplify:  Simplified to (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (* x x) (sqrt (+ 1.5 (* -0.166667 x)))))
* * * * [misc]progress:  [ 28 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) (sqrt (- 1.5 (* -0.166667 x))))))>
* [enter]simplify:  Simplifying (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (118 enodes)
* * [misc]simplify:  iters left: 2 (182 enodes)
* * [misc]simplify:  iters left: 1 (309 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (sqrt (+ (* -0.166667 x) 1.5))) (sqrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))))
* [exit]simplify:  Simplified to (* (* (* x x) (sqrt (+ (* -0.166667 x) 1.5))) (sqrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))))
* * * * [misc]progress:  [ 29 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)) (sqrt (+ 1.5 (* -0.166667 x))))))>
* * * * [misc]progress:  [ 30 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (pow (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)) 1))))>
* [enter]simplify:  Simplifying (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 31 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (pow (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)) 1))))>
* * * * [misc]progress:  [ 32 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (exp (+ (log (sqrt (+ 1.5 (* -0.166667 x)))) (log (* x x)))))))>
* [enter]simplify:  Simplifying (+ (log (sqrt (+ 1.5 (* -0.166667 x)))) (log (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* [exit]simplify:  Simplified to (+ (log (* x x)) (log (sqrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (+ (log (* x x)) (log (sqrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 33 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (exp (log (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (log (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (sqrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (log (* (* x x) (sqrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 34 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (log (exp (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (exp (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (sqrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (exp (* (* x x) (sqrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 35 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (cbrt (* (* (* (sqrt (+ 1.5 (* -0.166667 x))) (sqrt (+ 1.5 (* -0.166667 x)))) (sqrt (+ 1.5 (* -0.166667 x)))) (* (* (* x x) (* x x)) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (* (sqrt (+ 1.5 (* -0.166667 x))) (sqrt (+ 1.5 (* -0.166667 x)))) (sqrt (+ 1.5 (* -0.166667 x)))) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (274 enodes)
* [exit]simplify:  Simplified to (* (* (pow (* x x) 3) (+ (* x -0.166667) 1.5)) (sqrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* (pow (* x x) 3) (+ (* x -0.166667) 1.5)) (sqrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 36 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (* (cbrt (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) (cbrt (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))) (cbrt (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) (cbrt (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))) (cbrt (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))) (cbrt (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))))
* [enter]simplify:  Simplifying (cbrt (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (sqrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (sqrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 37 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (cbrt (* (* (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (131 enodes)
* * [misc]simplify:  iters left: 2 (299 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* x -0.166667) 1.5)) (* (pow (* x x) 3) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (sqrt (+ (* x -0.166667) 1.5)) (* (pow (* x x) 3) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 38 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) (sqrt (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (sqrt (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (sqrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (sqrt (+ (* x -0.166667) 1.5))))
* [enter]simplify:  Simplifying (sqrt (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (sqrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (sqrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 39 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* 1 (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))))>
* * * * [misc]progress:  [ 40 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (* (sqrt (+ 1.5 (* -0.166667 x))) x) x))))>
* [enter]simplify:  Simplifying (* (sqrt (+ 1.5 (* -0.166667 x))) x)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* [exit]simplify:  Simplified to (* x (sqrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* x (sqrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 41 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (* (cbrt (sqrt (+ 1.5 (* -0.166667 x)))) (cbrt (sqrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (sqrt (+ 1.5 (* -0.166667 x)))) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ 1.5 (* -0.166667 x)))) (* x x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* (* x x) (cbrt (sqrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (* x x) (cbrt (sqrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 42 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (* (sqrt (cbrt (+ 1.5 (* -0.166667 x)))) (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (+ 1.5 (* -0.166667 x)))) (* x x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* (* x x) (sqrt (cbrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (* x x) (sqrt (cbrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 43 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (sqrt (+ 1.5 (* -0.166667 x)))) (* (sqrt (sqrt (+ 1.5 (* -0.166667 x)))) (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (sqrt (+ 1.5 (* -0.166667 x)))) (* x x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* (* x x) (sqrt (sqrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (* x x) (sqrt (sqrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 44 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt 1) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 45 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (sqrt (+ 1.5 (* -0.166667 x)))) (* (sqrt (sqrt (+ 1.5 (* -0.166667 x)))) (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (sqrt (+ 1.5 (* -0.166667 x)))) (* x x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* (* x x) (sqrt (sqrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (* x x) (sqrt (sqrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 46 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* 1 (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 47 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (/ (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (113 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))
* [exit]simplify:  Simplified to (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))
* * * * [misc]progress:  [ 48 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (/ (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)) (sqrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (91 enodes)
* * [misc]simplify:  iters left: 2 (152 enodes)
* * [misc]simplify:  iters left: 1 (279 enodes)
* [exit]simplify:  Simplified to (* (sqrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))) (* x x))
* [exit]simplify:  Simplified to (* (sqrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))) (* x x))
* * * * [misc]progress:  [ 49 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (* x x) (sqrt (+ 1.5 (* -0.166667 x)))))))>
* * * * [misc]progress:  [ 50 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (+ (* x -3.0) 1.0)) (exp (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (* (exp (+ (* x -3.0) 1.0)) (exp (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (161 enodes)
* * [misc]simplify:  iters left: 1 (347 enodes)
* [exit]simplify:  Simplified to (* (exp (+ 1.0 (* x -3.0))) (pow (exp (* x x)) (+ (* -0.166667 x) 1.5)))
* [exit]simplify:  Simplified to (* (exp (+ 1.0 (* x -3.0))) (pow (exp (* x x)) (+ (* -0.166667 x) 1.5)))
* * * * [misc]progress:  [ 51 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))) 1))>
* * * * [misc]progress:  [ 52 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (log (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (64 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (256 enodes)
* [exit]simplify:  Simplified to (log (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (log (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0))))
* * * * [misc]progress:  [ 53 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (exp (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (107 enodes)
* * [misc]simplify:  iters left: 2 (200 enodes)
* * [misc]simplify:  iters left: 1 (364 enodes)
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ 1.5 (* x -0.166667))) (exp (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ 1.5 (* x -0.166667))) (exp (+ 1.0 (* x -3.0))))
* * * * [misc]progress:  [ 54 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (65 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (247 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0)))) (cbrt (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0)))) (cbrt (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0)))))
* [enter]simplify:  Simplifying (cbrt (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (64 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (256 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0))))
* * * * [misc]progress:  [ 55 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (162 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0))) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0))) 3)
* * * * [misc]progress:  [ 56 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))) (sqrt (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (64 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (256 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0))))
* [enter]simplify:  Simplifying (sqrt (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (64 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (256 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0))))
* * * * [misc]progress:  [ 57 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (91 enodes)
* * [misc]simplify:  iters left: 4 (241 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (* (* x x) (+ (pow (* x -0.166667) 3) (pow 1.5 3)))))
* [exit]simplify:  Simplified to (+ (* (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (* (* x x) (+ (pow (* x -0.166667) 3) (pow 1.5 3)))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* * [misc]simplify:  iters left: 3 (408 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))) (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))) (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 58 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (sqrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (sqrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (sqrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (102 enodes)
* * [misc]simplify:  iters left: 4 (277 enodes)
* [exit]simplify:  Simplified to (+ (* (* (sqrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))) (sqrt (+ (pow (* x -0.166667) 3) (pow 1.5 3)))) (* (* x x) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))) (* (sqrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (sqrt (- 1.5 (* x -0.166667))) (+ (pow (* x -3.0) 3) (pow 1.0 3)))))
* [exit]simplify:  Simplified to (+ (* (* (sqrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))) (sqrt (+ (pow (* x -0.166667) 3) (pow 1.5 3)))) (* (* x x) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))) (* (sqrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (sqrt (- 1.5 (* x -0.166667))) (+ (pow (* x -3.0) 3) (pow 1.0 3)))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (sqrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (329 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x -0.166667) (- (* x -0.166667) 1.5)) (* 1.5 1.5))) (* (sqrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))))
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x -0.166667) (- (* x -0.166667) 1.5)) (* 1.5 1.5))) (* (sqrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))))
* * * * [misc]progress:  [ 59 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (sqrt (- 1.5 (* -0.166667 x))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (- 1.5 (* -0.166667 x))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (sqrt (- 1.5 (* -0.166667 x))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (102 enodes)
* * [misc]simplify:  iters left: 4 (277 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0))) (* (sqrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))) (sqrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3))))) (* (sqrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (* (sqrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3)))))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0))) (* (sqrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))) (sqrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3))))) (* (sqrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (* (sqrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3)))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (- 1.5 (* -0.166667 x))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (328 enodes)
* [exit]simplify:  Simplified to (* (* (sqrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))) (sqrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (* (sqrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))) (sqrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 60 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (sqrt (- 1.5 (* -0.166667 x))) (sqrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (- 1.5 (* -0.166667 x))) (sqrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (sqrt (- 1.5 (* -0.166667 x))) (sqrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (+ (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))))
* [exit]simplify:  Simplified to (+ (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (- 1.5 (* -0.166667 x))) (sqrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (270 enodes)
* [exit]simplify:  Simplified to (* (- 1.5 (* x -0.166667)) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))
* [exit]simplify:  Simplified to (* (- 1.5 (* x -0.166667)) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))
* * * * [misc]progress:  [ 61 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (91 enodes)
* * [misc]simplify:  iters left: 4 (238 enodes)
* [exit]simplify:  Simplified to (+ (* (* (sqrt (+ (* x -0.166667) 1.5)) (sqrt (+ (pow 1.5 3) (pow (* x -0.166667) 3)))) (* (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0))) (* x x))) (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (sqrt (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667))))))
* [exit]simplify:  Simplified to (+ (* (* (sqrt (+ (* x -0.166667) 1.5)) (sqrt (+ (pow 1.5 3) (pow (* x -0.166667) 3)))) (* (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0))) (* x x))) (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (sqrt (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (259 enodes)
* * [misc]simplify:  iters left: 2 (432 enodes)
* [exit]simplify:  Simplified to (* (sqrt (- (* (* x -0.166667) (* x -0.166667)) (* (- (* x -0.166667) 1.5) 1.5))) (+ (* (- (* x -3.0) 1.0) (* x -3.0)) (* 1.0 1.0)))
* [exit]simplify:  Simplified to (* (sqrt (- (* (* x -0.166667) (* x -0.166667)) (* (- (* x -0.166667) 1.5) 1.5))) (+ (* (- (* x -3.0) 1.0) (* x -3.0)) (* 1.0 1.0)))
* * * * [misc]progress:  [ 62 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (sqrt (- 1.5 (* -0.166667 x)))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (sqrt (- 1.5 (* -0.166667 x))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (sqrt (- 1.5 (* -0.166667 x)))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (75 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (+ (* (sqrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (* (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)) (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))))
* [exit]simplify:  Simplified to (+ (* (sqrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (* (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)) (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (sqrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (163 enodes)
* * [misc]simplify:  iters left: 2 (324 enodes)
* [exit]simplify:  Simplified to (* (sqrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))
* [exit]simplify:  Simplified to (* (sqrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))
* * * * [misc]progress:  [ 63 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (91 enodes)
* * [misc]simplify:  iters left: 4 (238 enodes)
* [exit]simplify:  Simplified to (+ (* (* (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0))) (sqrt (+ (* x -0.166667) 1.5))) (* (sqrt (+ (pow 1.5 3) (pow (* x -0.166667) 3))) (* x x))) (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (sqrt (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667))))))
* [exit]simplify:  Simplified to (+ (* (* (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0))) (sqrt (+ (* x -0.166667) 1.5))) (* (sqrt (+ (pow 1.5 3) (pow (* x -0.166667) 3))) (* x x))) (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (sqrt (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (259 enodes)
* * [misc]simplify:  iters left: 2 (432 enodes)
* [exit]simplify:  Simplified to (* (sqrt (- (* (* x -0.166667) (* x -0.166667)) (* (- (* x -0.166667) 1.5) 1.5))) (+ (* (- (* x -3.0) 1.0) (* x -3.0)) (* 1.0 1.0)))
* [exit]simplify:  Simplified to (* (sqrt (- (* (* x -0.166667) (* x -0.166667)) (* (- (* x -0.166667) 1.5) 1.5))) (+ (* (- (* x -3.0) 1.0) (* x -3.0)) (* 1.0 1.0)))
* * * * [misc]progress:  [ 64 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (sqrt (- 1.5 (* -0.166667 x)))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (sqrt (- 1.5 (* -0.166667 x))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (sqrt (- 1.5 (* -0.166667 x)))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (75 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (+ (* (sqrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (* (sqrt (* (+ 1.5 (* -0.166667 x)) (- 1.5 (* -0.166667 x)))) (* (* x x) (sqrt (+ 1.5 (* -0.166667 x))))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))))
* [exit]simplify:  Simplified to (+ (* (sqrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (* (sqrt (* (+ 1.5 (* -0.166667 x)) (- 1.5 (* -0.166667 x)))) (* (* x x) (sqrt (+ 1.5 (* -0.166667 x))))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (sqrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (163 enodes)
* * [misc]simplify:  iters left: 2 (324 enodes)
* [exit]simplify:  Simplified to (* (sqrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))
* [exit]simplify:  Simplified to (* (sqrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))
* * * * [misc]progress:  [ 65 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (- (* x -3.0) 1.0) (* (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (200 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- (* x -3.0) 1.0) (* x x)) (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))))
* [exit]simplify:  Simplified to (+ (* (* (- (* x -3.0) 1.0) (* x x)) (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (253 enodes)
* [exit]simplify:  Simplified to (* (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x))) (- (* x -3.0) 1.0))
* [exit]simplify:  Simplified to (* (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x))) (- (* x -3.0) 1.0))
* * * * [misc]progress:  [ 66 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (sqrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (- (* x -3.0) 1.0) (* (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (sqrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (sqrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (87 enodes)
* * [misc]simplify:  iters left: 4 (236 enodes)
* [exit]simplify:  Simplified to (+ (* (sqrt (+ (* 1.5 (- 1.5 (* -0.166667 x))) (* (* -0.166667 x) (* -0.166667 x)))) (* (sqrt (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (+ 1.0 (* x -3.0))))) (* (* (sqrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3))) (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* x x))))
* [exit]simplify:  Simplified to (+ (* (sqrt (+ (* 1.5 (- 1.5 (* -0.166667 x))) (* (* -0.166667 x) (* -0.166667 x)))) (* (sqrt (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (+ 1.0 (* x -3.0))))) (* (* (sqrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3))) (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* x x))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (sqrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (185 enodes)
* * [misc]simplify:  iters left: 2 (254 enodes)
* * [misc]simplify:  iters left: 1 (328 enodes)
* [exit]simplify:  Simplified to (* (* (sqrt (- 1.5 (* -0.166667 x))) (- (* x -3.0) 1.0)) (sqrt (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5))))
* [exit]simplify:  Simplified to (* (* (sqrt (- 1.5 (* -0.166667 x))) (- (* x -3.0) 1.0)) (sqrt (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5))))
* * * * [misc]progress:  [ 67 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (sqrt (- 1.5 (* -0.166667 x))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (- (* x -3.0) 1.0) (* (sqrt (- 1.5 (* -0.166667 x))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (sqrt (- 1.5 (* -0.166667 x))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (87 enodes)
* * [misc]simplify:  iters left: 4 (236 enodes)
* [exit]simplify:  Simplified to (+ (* (* (sqrt (- 1.5 (* x -0.166667))) (* (- (* x -3.0) 1.0) (+ 1.0 (* x -3.0)))) (sqrt (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))))) (* (* (sqrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (sqrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667))))) (* (- (* x -3.0) 1.0) (* x x))))
* [exit]simplify:  Simplified to (+ (* (* (sqrt (- 1.5 (* x -0.166667))) (* (- (* x -3.0) 1.0) (+ 1.0 (* x -3.0)))) (sqrt (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))))) (* (* (sqrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (sqrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667))))) (* (- (* x -3.0) 1.0) (* x x))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (sqrt (- 1.5 (* -0.166667 x))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (185 enodes)
* * [misc]simplify:  iters left: 2 (254 enodes)
* * [misc]simplify:  iters left: 1 (330 enodes)
* [exit]simplify:  Simplified to (* (* (sqrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0)) (sqrt (- (* (* x -0.166667) (* x -0.166667)) (* (- (* x -0.166667) 1.5) 1.5))))
* [exit]simplify:  Simplified to (* (* (sqrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0)) (sqrt (- (* (* x -0.166667) (* x -0.166667)) (* (- (* x -0.166667) 1.5) 1.5))))
* * * * [misc]progress:  [ 68 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (sqrt (- 1.5 (* -0.166667 x))) (sqrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (- (* x -3.0) 1.0) (* (sqrt (- 1.5 (* -0.166667 x))) (sqrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (sqrt (- 1.5 (* -0.166667 x))) (sqrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* x -0.166667))) (* (* (- (* x -3.0) 1.0) (* x x)) (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))))
* [exit]simplify:  Simplified to (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* x -0.166667))) (* (* (- (* x -3.0) 1.0) (* x x)) (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (sqrt (- 1.5 (* -0.166667 x))) (sqrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (116 enodes)
* * [misc]simplify:  iters left: 2 (320 enodes)
* [exit]simplify:  Simplified to (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))
* [exit]simplify:  Simplified to (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))
* * * * [misc]progress:  [ 69 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* (- (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (- (* x -3.0) 1.0) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* (- (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (195 enodes)
* [exit]simplify:  Simplified to (+ (* (* (sqrt (+ (* -0.166667 x) 1.5)) (* (* x x) (- (* x -3.0) 1.0))) (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (sqrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))))
* [exit]simplify:  Simplified to (+ (* (* (sqrt (+ (* -0.166667 x) 1.5)) (* (* x x) (- (* x -3.0) 1.0))) (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (sqrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (165 enodes)
* * [misc]simplify:  iters left: 1 (183 enodes)
* [exit]simplify:  Simplified to (* (- (* x -3.0) 1.0) (sqrt (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5))))
* [exit]simplify:  Simplified to (* (- (* x -3.0) 1.0) (sqrt (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5))))
* * * * [misc]progress:  [ 70 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (sqrt (- 1.5 (* -0.166667 x)))) (* (- (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (- (* x -3.0) 1.0) (sqrt (- 1.5 (* -0.166667 x))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (sqrt (- 1.5 (* -0.166667 x)))) (* (- (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* * [misc]simplify:  iters left: 3 (467 enodes)
* [exit]simplify:  Simplified to (+ (* (sqrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))) (* (sqrt (+ (* x -0.166667) 1.5)) (* (* x x) (- (* x -3.0) 1.0)))) (* (sqrt (- 1.5 (* x -0.166667))) (* (- (* x -3.0) 1.0) (+ 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (+ (* (sqrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))) (* (sqrt (+ (* x -0.166667) 1.5)) (* (* x x) (- (* x -3.0) 1.0)))) (* (sqrt (- 1.5 (* x -0.166667))) (* (- (* x -3.0) 1.0) (+ 1.0 (* x -3.0)))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (sqrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* [exit]simplify:  Simplified to (* (sqrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0))
* [exit]simplify:  Simplified to (* (sqrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0))
* * * * [misc]progress:  [ 71 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* (- (* x -3.0) 1.0) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))) (* (- (* x -3.0) 1.0) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* (- (* x -3.0) 1.0) (* (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (195 enodes)
* [exit]simplify:  Simplified to (+ (* (* (sqrt (+ (* -0.166667 x) 1.5)) (* (* x x) (- (* x -3.0) 1.0))) (sqrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3)))) (* (sqrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))))
* [exit]simplify:  Simplified to (+ (* (* (sqrt (+ (* -0.166667 x) 1.5)) (* (* x x) (- (* x -3.0) 1.0))) (sqrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3)))) (* (sqrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (165 enodes)
* * [misc]simplify:  iters left: 1 (183 enodes)
* [exit]simplify:  Simplified to (* (- (* x -3.0) 1.0) (sqrt (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5))))
* [exit]simplify:  Simplified to (* (- (* x -3.0) 1.0) (sqrt (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5))))
* * * * [misc]progress:  [ 72 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (sqrt (- 1.5 (* -0.166667 x)))) (* (- (* x -3.0) 1.0) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))) (* (- (* x -3.0) 1.0) (sqrt (- 1.5 (* -0.166667 x))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (sqrt (- 1.5 (* -0.166667 x)))) (* (- (* x -3.0) 1.0) (* (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* * [misc]simplify:  iters left: 3 (464 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (* x x) (- (* x -3.0) 1.0)) (sqrt (+ (* x -0.166667) 1.5))) (sqrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5)))) (* (sqrt (- 1.5 (* x -0.166667))) (* (- (* x -3.0) 1.0) (+ 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (+ (* (* (* (* x x) (- (* x -3.0) 1.0)) (sqrt (+ (* x -0.166667) 1.5))) (sqrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5)))) (* (sqrt (- 1.5 (* x -0.166667))) (* (- (* x -3.0) 1.0) (+ 1.0 (* x -3.0)))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (sqrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* [exit]simplify:  Simplified to (* (sqrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0))
* [exit]simplify:  Simplified to (* (sqrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0))
* * * * [misc]progress:  [ 73 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) 3)) (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))) (* (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))))))>
* [enter]simplify:  Simplifying (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) 3))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (325 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3) (pow (+ 1.0 (* x -3.0)) 3))
* [exit]simplify:  Simplified to (+ (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3) (pow (+ 1.0 (* x -3.0)) 3))
* [enter]simplify:  Simplifying (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))) (* (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0))) (* (* x x) (+ (* -0.166667 x) 1.5))))
* [exit]simplify:  Simplified to (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0))) (* (* x x) (+ (* -0.166667 x) 1.5))))
* * * * [misc]progress:  [ 74 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))))>
* * * * [misc]progress:  [ 75 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))) (- (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))))>
* [enter]simplify:  Simplifying (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* * [misc]simplify:  iters left: 3 (443 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))
* [exit]simplify:  Simplified to (* (+ (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))
* [enter]simplify:  Simplifying (- (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (110 enodes)
* * [misc]simplify:  iters left: 2 (218 enodes)
* * [misc]simplify:  iters left: 1 (414 enodes)
* [exit]simplify:  Simplified to (- (+ 1.0 (* x -3.0)) (* (* x x) (+ 1.5 (* x -0.166667))))
* [exit]simplify:  Simplified to (- (+ 1.0 (* x -3.0)) (* (* x x) (+ 1.5 (* x -0.166667))))
* * * * [misc]progress:  [ 76 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* x -3.0) (+ 1.0 (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))))>
* [enter]simplify:  Simplifying (+ 1.0 (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* * [misc]simplify:  iters left: 2 (76 enodes)
* * [misc]simplify:  iters left: 1 (92 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 1.5 (* -0.166667 x)) (* x x)) 1.0)
* [exit]simplify:  Simplified to (+ (* (+ 1.5 (* -0.166667 x)) (* x x)) 1.0)
* * * * [misc]progress:  [ 77 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))) (+ (* x -3.0) 1.0)))>
* * * * [misc]progress:  [ 78 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (pow (+ 1.5 (* -0.166667 x)) 1/2) (* x x)))))>
* * * * [misc]progress:  [ 79 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (pow (sqrt (+ 1.5 (* -0.166667 x))) 1) (* x x)))))>
* * * * [misc]progress:  [ 80 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (exp (log (sqrt (+ 1.5 (* -0.166667 x))))) (* x x)))))>
* [enter]simplify:  Simplifying (log (sqrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (log (sqrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (log (sqrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 81 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (log (exp (sqrt (+ 1.5 (* -0.166667 x))))) (* x x)))))>
* [enter]simplify:  Simplifying (exp (sqrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (exp (sqrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (exp (sqrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 82 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (* (* (cbrt (sqrt (+ 1.5 (* -0.166667 x)))) (cbrt (sqrt (+ 1.5 (* -0.166667 x))))) (cbrt (sqrt (+ 1.5 (* -0.166667 x))))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ 1.5 (* -0.166667 x)))) (cbrt (sqrt (+ 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* x -0.166667) 1.5))) (cbrt (sqrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* x -0.166667) 1.5))) (cbrt (sqrt (+ (* x -0.166667) 1.5))))
* [enter]simplify:  Simplifying (cbrt (sqrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (cbrt (sqrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 83 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (cbrt (* (* (sqrt (+ 1.5 (* -0.166667 x))) (sqrt (+ 1.5 (* -0.166667 x)))) (sqrt (+ 1.5 (* -0.166667 x))))) (* x x)))))>
* [enter]simplify:  Simplifying (* (* (sqrt (+ 1.5 (* -0.166667 x))) (sqrt (+ 1.5 (* -0.166667 x)))) (sqrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) (sqrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) (sqrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 84 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (* (sqrt (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (sqrt (cbrt (+ 1.5 (* -0.166667 x))))) (* x x)))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* x -0.166667) 1.5)))
* [enter]simplify:  Simplifying (sqrt (cbrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 85 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (* (sqrt (sqrt (+ 1.5 (* -0.166667 x)))) (sqrt (sqrt (+ 1.5 (* -0.166667 x))))) (* x x)))))>
* [enter]simplify:  Simplifying (sqrt (sqrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* x -0.166667) 1.5)))
* [enter]simplify:  Simplifying (sqrt (sqrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 86 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (* (sqrt 1) (sqrt (+ 1.5 (* -0.166667 x)))) (* x x)))))>
* [enter]simplify:  Simplifying (sqrt 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (sqrt 1)
* [exit]simplify:  Simplified to (sqrt 1)
* [enter]simplify:  Simplifying (sqrt (+ 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (sqrt (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 87 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (/ (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* x x)))))>
* [enter]simplify:  Simplifying (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (77 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))
* [exit]simplify:  Simplified to (sqrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))
* [enter]simplify:  Simplifying (sqrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5)))
* [exit]simplify:  Simplified to (sqrt (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5)))
* * * * [misc]progress:  [ 88 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (/ (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (sqrt (- 1.5 (* -0.166667 x)))) (* x x)))))>
* [enter]simplify:  Simplifying (sqrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (85 enodes)
* * [misc]simplify:  iters left: 2 (146 enodes)
* * [misc]simplify:  iters left: 1 (273 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* -0.166667 x) 1.5) (- 1.5 (* -0.166667 x))))
* [exit]simplify:  Simplified to (sqrt (* (+ (* -0.166667 x) 1.5) (- 1.5 (* -0.166667 x))))
* [enter]simplify:  Simplifying (sqrt (- 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (sqrt (- 1.5 (* x -0.166667)))
* [exit]simplify:  Simplified to (sqrt (- 1.5 (* x -0.166667)))
* * * * [misc]progress:  [ 89 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (* (sqrt (sqrt (+ 1.5 (* -0.166667 x)))) (sqrt (sqrt (+ 1.5 (* -0.166667 x))))) (* x x)))))>
* [enter]simplify:  Simplifying (sqrt (sqrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* x -0.166667) 1.5)))
* [enter]simplify:  Simplifying (sqrt (sqrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (sqrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 90 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (fabs (sqrt (+ 1.5 (* -0.166667 x)))) (* x x)))))>
* * * * [misc]progress:  [ 91 / 103 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (* 1 (sqrt (+ 1.5 (* -0.166667 x)))) (* x x)))))>
* * * * [misc]progress:  [ 92 / 103 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (- (+ (* 3.3881317890172014e-21 (/ (pow x 6) (pow (sqrt 1.5) 6))) (* (pow (sqrt 1.5) 2) (pow x 2))) (* 0.166667 (pow x 3)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (- (+ (* 3.3881317890172014e-21 (/ (pow x 6) (pow (sqrt 1.5) 6))) (* (pow (sqrt 1.5) 2) (pow x 2))) (* 0.166667 (pow x 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (242 enodes)
* * [misc]simplify:  iters left: 2 (449 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ 1.0 (* x -3.0)) (* (- 1.5 (* 0.166667 x)) (* x x))) (/ (* 3.3881317890172014e-21 (pow x 6)) (pow (sqrt 1.5) 6)))
* * * * [misc]progress:  [ 93 / 103 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (- (+ (* +nan.0 (pow x 2)) (- (+ +nan.0 (- (* +nan.0 x))))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (- (+ (* +nan.0 (pow x 2)) (- (+ +nan.0 (- (* +nan.0 x)))))))
* * * * [misc]progress:  [ 94 / 103 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (- (+ (* +nan.0 (pow x 2)) (- (+ +nan.0 (- (* +nan.0 x))))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (- (+ (* +nan.0 (pow x 2)) (- (+ +nan.0 (- (* +nan.0 x)))))))
* * * * [misc]progress:  [ 95 / 103 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (- (* (sqrt 1.5) (pow x 2)) (+ (* 0.0833335 (/ (pow x 3) (sqrt 1.5))) (* 0.0034722361111250003 (/ (pow x 4) (pow (sqrt 1.5) 3))))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (- (* (sqrt 1.5) (pow x 2)) (+ (* 0.0833335 (/ (pow x 3) (sqrt 1.5))) (* 0.0034722361111250003 (/ (pow x 4) (pow (sqrt 1.5) 3)))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (258 enodes)
* [exit]simplify:  Simplified to (- (+ (+ 1.0 (* x -3.0)) (* (sqrt (+ 1.5 (* x -0.166667))) (* (* x (sqrt 1.5)) x))) (* (+ (/ (* (* x x) 0.0833335) (/ (sqrt 1.5) x)) (/ (/ (pow x 4) 1.5) (/ (sqrt 1.5) 0.0034722361111250003))) (sqrt (+ 1.5 (* x -0.166667)))))
* * * * [misc]progress:  [ 96 / 103 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (- (+ (* +nan.0 (pow x 2)) (- (+ +nan.0 (- (* +nan.0 x)))))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (- (+ (* +nan.0 (pow x 2)) (- (+ +nan.0 (- (* +nan.0 x))))))))
* * * * [misc]progress:  [ 97 / 103 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (- (+ (* +nan.0 (pow x 2)) (- (+ +nan.0 (- (* +nan.0 x)))))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (- (+ (* +nan.0 (pow x 2)) (- (+ +nan.0 (- (* +nan.0 x))))))))
* * * * [misc]progress:  [ 98 / 103 ] simplifiying candidate #<alt-event (Î» (x) (- (+ 1.0 (* (pow (sqrt 1.5) 2) (pow x 2))) (* 3.0 x)))>
* [enter]simplify:  Simplifying (- (+ 1.0 (* (pow (sqrt 1.5) 2) (pow x 2))) (* 3.0 x))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (74 enodes)
* * [misc]simplify:  iters left: 1 (89 enodes)
* [exit]simplify:  Simplified to (- (* (* x 1.5) x) (- (* 3.0 x) 1.0))
* * * * [misc]progress:  [ 99 / 103 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* +nan.0 (pow x 2)) (- (+ +nan.0 (- (* +nan.0 x)))))))>
* [enter]simplify:  Simplifying (- (+ (* +nan.0 (pow x 2)) (- (+ +nan.0 (- (* +nan.0 x))))))
* * * * [misc]progress:  [ 100 / 103 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* +nan.0 (pow x 2)) (- (+ +nan.0 (- (* +nan.0 x)))))))>
* [enter]simplify:  Simplifying (- (+ (* +nan.0 (pow x 2)) (- (+ +nan.0 (- (* +nan.0 x))))))
* * * * [misc]progress:  [ 101 / 103 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (- (sqrt 1.5) (+ (* 0.0833335 (/ x (sqrt 1.5))) (* 0.0034722361111250003 (/ (pow x 2) (pow (sqrt 1.5) 3))))) (* x x)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (- (sqrt 1.5) (+ (* 0.0833335 (/ x (sqrt 1.5))) (* 0.0034722361111250003 (/ (pow x 2) (pow (sqrt 1.5) 3))))) (* x x))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* * [misc]simplify:  iters left: 3 (326 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (- (- (sqrt 1.5) (/ (* x 0.0833335) (sqrt 1.5))) (/ (* 0.0034722361111250003 x) (/ (sqrt 1.5) (/ x 1.5)))) (* (sqrt (+ 1.5 (* x -0.166667))) (* x x))))
* * * * [misc]progress:  [ 102 / 103 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (- (+ (* +nan.0 (/ 1 x)) (- (+ +nan.0 (- (* +nan.0 (/ 1 (pow x 2)))))))) (* x x)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (- (+ (* +nan.0 (/ 1 x)) (- (+ +nan.0 (- (* +nan.0 (/ 1 (pow x 2)))))))) (* x x))))
* * * * [misc]progress:  [ 103 / 103 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (- (+ (* +nan.0 (/ 1 x)) (- (+ +nan.0 (- (* +nan.0 (/ 1 (pow x 2)))))))) (* x x)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (- (+ (* +nan.0 (/ 1 x)) (- (+ +nan.0 (- (* +nan.0 (/ 1 (pow x 2)))))))) (* x x))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.5)) into (* 1/3 (log 1.5))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.5))) into (pow 1.5 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.5)) into (* 1/3 (log 1.5))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.5))) into (pow 1.5 1/3)
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.5)) into (* 1/3 (log 1.5))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.5))) into (pow 1.5 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.5)) into (* 1/3 (log 1.5))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.5))) into (pow 1.5 1/3)
* [misc]backup-simplify:  Simplify (* (pow 1.5 1/3) (pow 1.5 1/3)) into (pow (pow 1.5 2) 1/3)
* [misc]backup-simplify:  Simplify (pow (pow 1.5 2) 1/3) into (pow (pow 1.5 2) 1/3)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.166667)) 1)) (pow 1.5 1)))) 1) into -0.11111133333333334
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.11111133333333334) (* 0 (log 1.5))) into (- 0.03703711111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 1) 1)))) into (* -0.03703711111111111 (pow 1.5 1/3))
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.166667)) 1)) (pow 1.5 1)))) 1) into -0.11111133333333334
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.11111133333333334) (* 0 (log 1.5))) into (- 0.03703711111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 1) 1)))) into (* -0.03703711111111111 (pow 1.5 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.5 1/3) (* -0.03703711111111111 (pow 1.5 1/3))) (* (* -0.03703711111111111 (pow 1.5 1/3)) (pow 1.5 1/3))) into (- (* 0.07407422222222222 (pow (pow 1.5 2) 1/3)))
* [misc]backup-simplify:  Simplify (- (* 0.07407422222222222 (pow (pow 1.5 2) 1/3))) into (- (* 0.07407422222222222 (pow (pow 1.5 2) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.166667)) 2)) (pow 1.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1.5 1)))) 2) into (/ -0.013888944444500001 (pow 1.5 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.013888944444500001 (pow 1.5 2))) (+ (* 0 -0.11111133333333334) (* 0 (log 1.5)))) into (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 2) 2)) (* (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 1) 1)))) into (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3))
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.166667)) 2)) (pow 1.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1.5 1)))) 2) into (/ -0.013888944444500001 (pow 1.5 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.013888944444500001 (pow 1.5 2))) (+ (* 0 -0.11111133333333334) (* 0 (log 1.5)))) into (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 2) 2)) (* (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 1) 1)))) into (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.5 1/3) (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3))) (+ (* (* -0.03703711111111111 (pow 1.5 1/3)) (* -0.03703711111111111 (pow 1.5 1/3))) (* (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3)) (pow 1.5 1/3)))) into (- (* 0.0027434951989135804 (pow (pow 1.5 2) 1/3)) (* 0.009259296296333333 (pow (/ 1 (pow 1.5 4)) 1/3)))
* [misc]backup-simplify:  Simplify (- (* 0.0027434951989135804 (pow (pow 1.5 2) 1/3)) (* 0.009259296296333333 (pow (/ 1 (pow 1.5 4)) 1/3))) into (- (* 0.0027434951989135804 (pow (pow 1.5 2) 1/3)) (* 0.009259296296333333 (pow (/ 1 (pow 1.5 4)) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.0027434951989135804 (pow (pow 1.5 2) 1/3)) (* 0.009259296296333333 (pow (/ 1 (pow 1.5 4)) 1/3))) (pow x 2)) (+ (* (- (* 0.07407422222222222 (pow (pow 1.5 2) 1/3))) x) (pow (pow 1.5 2) 1/3))) into (- (+ (pow (pow 1.5 2) 1/3) (* 0.0027434951989135804 (* (pow (pow 1.5 2) 1/3) (pow x 2)))) (+ (* 0.009259296296333333 (* (pow (/ 1 (pow 1.5 4)) 1/3) (pow x 2))) (* 0.07407422222222222 (* (pow (pow 1.5 2) 1/3) x))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (cbrt (+ 1.5 (* -0.166667 (/ 1 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (cbrt (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.166667)) (log x))) into (* 1/3 (- (log (- 0.166667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (log x)))) into (exp (* 1/3 (- (log (- 0.166667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.166667)) (log x))) into (* 1/3 (- (log (- 0.166667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (log x)))) into (exp (* 1/3 (- (log (- 0.166667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (cbrt (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.166667)) (log x))) into (* 1/3 (- (log (- 0.166667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (log x)))) into (exp (* 1/3 (- (log (- 0.166667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.166667)) (log x))) into (* 1/3 (- (log (- 0.166667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (log x)))) into (exp (* 1/3 (- (log (- 0.166667)) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (exp (* 1/3 (- (log (- 0.166667)) (log x))))) into (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2) into (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow (- 0.166667) 1)))) 1) into -8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -8.999982000035999) (* 0 (- (log (- 0.166667)) (log x)))) into (- 2.9999940000119993)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (+ (* (/ (pow (- 2.9999940000119993) 1) 1)))) into (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow (- 0.166667) 1)))) 1) into -8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -8.999982000035999) (* 0 (- (log (- 0.166667)) (log x)))) into (- 2.9999940000119993)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (+ (* (/ (pow (- 2.9999940000119993) 1) 1)))) into (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x)))))) (* (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x))))) (exp (* 1/3 (- (log (- 0.166667)) (log x)))))) into (- (* 5.999988000023999 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (- (* 5.999988000023999 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2))) into (- (* 5.999988000023999 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.166667) 1)))) 2) into (/ -1.125 (pow -0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow -0.166667 2))) (+ (* 0 -8.999982000035999) (* 0 (- (log (- 0.166667)) (log x))))) into (- (* 0.375 (/ 1 (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (+ (* (/ (pow (- 2.9999940000119993) 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow -0.166667 2)))) 1) 1)))) into (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.166667) 1)))) 2) into (/ -1.125 (pow -0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow -0.166667 2))) (+ (* 0 -8.999982000035999) (* 0 (- (log (- 0.166667)) (log x))))) into (- (* 0.375 (/ 1 (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (+ (* (/ (pow (- 2.9999940000119993) 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow -0.166667 2)))) 1) 1)))) into (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (log x)))))) (+ (* (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x))))) (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x)))))) (* (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (log x))))) (exp (* 1/3 (- (log (- 0.166667)) (log x))))))) into (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2) (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2) (pow -0.166667 2)))) into (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2) (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 2) (pow -0.166667 2)))) (pow (/ 1 x) 2)) (+ (* (- (* 5.999988000023999 (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 2))) (/ 1 x)) (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 2))) into (- (+ (* 17.99992800021599 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 2) (pow x 2))) (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 2)) (+ (* 0.75 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 2) (* (pow -0.166667 2) (pow x 2)))) (* 5.999988000023999 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 2) x))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (log x))) into (* 1/3 (- (log 0.166667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (log x)))) into (exp (* 1/3 (- (log 0.166667) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (log x))) into (* 1/3 (- (log 0.166667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (log x)))) into (exp (* 1/3 (- (log 0.166667) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (log x))) into (* 1/3 (- (log 0.166667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (log x)))) into (exp (* 1/3 (- (log 0.166667) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (log x))) into (* 1/3 (- (log 0.166667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (log x)))) into (exp (* 1/3 (- (log 0.166667) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) (exp (* 1/3 (- (log 0.166667) (log x))))) into (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2) into (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow 0.166667 1)))) 1) into 8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 8.999982000035999) (* 0 (- (log 0.166667) (log x)))) into 2.9999940000119993
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) (+ (* (/ (pow 2.9999940000119993 1) 1)))) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow 0.166667 1)))) 1) into 8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 8.999982000035999) (* 0 (- (log 0.166667) (log x)))) into 2.9999940000119993
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) (+ (* (/ (pow 2.9999940000119993 1) 1)))) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (log x)))) (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))) (* (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x))))) (exp (* 1/3 (- (log 0.166667) (log x)))))) into (* 5.999988000023999 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* 5.999988000023999 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2)) into (* 5.999988000023999 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into (/ -1.125 (pow 0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow 0.166667 2))) (+ (* 0 8.999982000035999) (* 0 (- (log 0.166667) (log x))))) into (- (* 0.375 (/ 1 (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) (+ (* (/ (pow 2.9999940000119993 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow 0.166667 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 0.166667) (log x)))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into (/ -1.125 (pow 0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow 0.166667 2))) (+ (* 0 8.999982000035999) (* 0 (- (log 0.166667) (log x))))) into (- (* 0.375 (/ 1 (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) (+ (* (/ (pow 2.9999940000119993 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow 0.166667 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 0.166667) (log x)))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (log x)))) (* (exp (* 1/3 (- (log 0.166667) (log x)))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2)))))) (+ (* (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x))))) (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))) (* (* (exp (* 1/3 (- (log 0.166667) (log x)))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2))))) (exp (* 1/3 (- (log 0.166667) (log x))))))) into (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2) (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2) (pow 0.166667 2)))) into (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2) (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log 0.166667) (log (/ 1 (- x)))))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (log (/ 1 (- x)))))) 2) (pow 0.166667 2)))) (pow (/ 1 (- x)) 2)) (+ (* (* 5.999988000023999 (pow (exp (* 1/3 (- (log 0.166667) (log (/ 1 (- x)))))) 2)) (/ 1 (- x))) (pow (exp (* 1/3 (- (log 0.166667) (log (/ 1 (- x)))))) 2))) into (- (+ (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 2) (* 17.99992800021599 (/ (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 2) (pow x 2)))) (+ (* 5.999988000023999 (/ (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 2) x)) (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 2) (* (pow x 2) (pow 0.166667 2))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.5)) into (* 1/3 (log 1.5))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.5))) into (pow 1.5 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.5)) into (* 1/3 (log 1.5))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.5))) into (pow 1.5 1/3)
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.5)) into (* 1/3 (log 1.5))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.5))) into (pow 1.5 1/3)
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.5)) into (* 1/3 (log 1.5))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.5))) into (pow 1.5 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.5)) into (* 1/3 (log 1.5))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.5))) into (pow 1.5 1/3)
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.5)) into (* 1/3 (log 1.5))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.5))) into (pow 1.5 1/3)
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (pow 1.5 1/3) (pow 1.5 1/3)) into (pow (pow 1.5 2) 1/3)
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (pow 1.5 1/3) 0) into 0
* [misc]backup-simplify:  Simplify (* (pow (pow 1.5 2) 1/3) 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.166667)) 1)) (pow 1.5 1)))) 1) into -0.11111133333333334
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.11111133333333334) (* 0 (log 1.5))) into (- 0.03703711111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 1) 1)))) into (* -0.03703711111111111 (pow 1.5 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.5 1/3) 0) (* (* -0.03703711111111111 (pow 1.5 1/3)) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.166667)) 1)) (pow 1.5 1)))) 1) into -0.11111133333333334
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.11111133333333334) (* 0 (log 1.5))) into (- 0.03703711111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 1) 1)))) into (* -0.03703711111111111 (pow 1.5 1/3))
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.166667)) 1)) (pow 1.5 1)))) 1) into -0.11111133333333334
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.11111133333333334) (* 0 (log 1.5))) into (- 0.03703711111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 1) 1)))) into (* -0.03703711111111111 (pow 1.5 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.5 1/3) (* -0.03703711111111111 (pow 1.5 1/3))) (* (* -0.03703711111111111 (pow 1.5 1/3)) (pow 1.5 1/3))) into (- (* 0.07407422222222222 (pow (pow 1.5 2) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* (pow (pow 1.5 2) 1/3) 0) (* (- (* 0.07407422222222222 (pow (pow 1.5 2) 1/3))) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.166667)) 2)) (pow 1.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1.5 1)))) 2) into (/ -0.013888944444500001 (pow 1.5 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.013888944444500001 (pow 1.5 2))) (+ (* 0 -0.11111133333333334) (* 0 (log 1.5)))) into (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 2) 2)) (* (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 1) 1)))) into (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.5 1/3) 1) (+ (* (* -0.03703711111111111 (pow 1.5 1/3)) 0) (* (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3)) 0))) into (pow 1.5 1/3)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.166667)) 2)) (pow 1.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1.5 1)))) 2) into (/ -0.013888944444500001 (pow 1.5 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.013888944444500001 (pow 1.5 2))) (+ (* 0 -0.11111133333333334) (* 0 (log 1.5)))) into (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 2) 2)) (* (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 1) 1)))) into (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3))
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.166667)) 2)) (pow 1.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1.5 1)))) 2) into (/ -0.013888944444500001 (pow 1.5 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.013888944444500001 (pow 1.5 2))) (+ (* 0 -0.11111133333333334) (* 0 (log 1.5)))) into (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 2) 2)) (* (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 1) 1)))) into (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.5 1/3) (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3))) (+ (* (* -0.03703711111111111 (pow 1.5 1/3)) (* -0.03703711111111111 (pow 1.5 1/3))) (* (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3)) (pow 1.5 1/3)))) into (- (* 0.0027434951989135804 (pow (pow 1.5 2) 1/3)) (* 0.009259296296333333 (pow (/ 1 (pow 1.5 4)) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* (pow (pow 1.5 2) 1/3) (pow 1.5 1/3)) (+ (* (- (* 0.07407422222222222 (pow (pow 1.5 2) 1/3))) 0) (* (- (* 0.0027434951989135804 (pow (pow 1.5 2) 1/3)) (* 0.009259296296333333 (pow (/ 1 (pow 1.5 4)) 1/3))) 0))) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 (- 0.166667)) 3)) (pow 1.5 3))) (* -3 (/ (* (pow (* 1 (- 0.166667)) 1) (pow (* 2 0) 1)) (pow 1.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1.5 1)))) 6) into (/ -0.001543219135820988 (pow 1.5 3))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.001543219135820988 (pow 1.5 3))) (+ (* 0 (/ -0.013888944444500001 (pow 1.5 2))) (+ (* 0 -0.11111133333333334) (* 0 (log 1.5))))) into (- (* 0.000514406378606996 (/ 1 (pow 1.5 3))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 3) 6)) (* (/ (pow (- 0.03703711111111111) 1) 1) (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 1) 1)) (* (/ (pow (- (* 0.000514406378606996 (/ 1 (pow 1.5 3)))) 1) 1)))) into (* (pow 1.5 1/3) (- (* 0.00017146879286899862 (/ 1 (pow 1.5 2))) (+ (* 0.000514406378606996 (/ 1 (pow 1.5 3))) 8.467594709580178e-06)))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.5 1/3) 0) (+ (* (* -0.03703711111111111 (pow 1.5 1/3)) 1) (+ (* (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3)) 0) (* (* (pow 1.5 1/3) (- (* 0.00017146879286899862 (/ 1 (pow 1.5 2))) (+ (* 0.000514406378606996 (/ 1 (pow 1.5 3))) 8.467594709580178e-06))) 0)))) into (- (* 0.03703711111111111 (pow 1.5 1/3)))
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 (- 0.166667)) 3)) (pow 1.5 3))) (* -3 (/ (* (pow (* 1 (- 0.166667)) 1) (pow (* 2 0) 1)) (pow 1.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1.5 1)))) 6) into (/ -0.001543219135820988 (pow 1.5 3))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.001543219135820988 (pow 1.5 3))) (+ (* 0 (/ -0.013888944444500001 (pow 1.5 2))) (+ (* 0 -0.11111133333333334) (* 0 (log 1.5))))) into (- (* 0.000514406378606996 (/ 1 (pow 1.5 3))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 3) 6)) (* (/ (pow (- 0.03703711111111111) 1) 1) (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 1) 1)) (* (/ (pow (- (* 0.000514406378606996 (/ 1 (pow 1.5 3)))) 1) 1)))) into (* (pow 1.5 1/3) (- (* 0.00017146879286899862 (/ 1 (pow 1.5 2))) (+ (* 0.000514406378606996 (/ 1 (pow 1.5 3))) 8.467594709580178e-06)))
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 (- 0.166667)) 3)) (pow 1.5 3))) (* -3 (/ (* (pow (* 1 (- 0.166667)) 1) (pow (* 2 0) 1)) (pow 1.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1.5 1)))) 6) into (/ -0.001543219135820988 (pow 1.5 3))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.001543219135820988 (pow 1.5 3))) (+ (* 0 (/ -0.013888944444500001 (pow 1.5 2))) (+ (* 0 -0.11111133333333334) (* 0 (log 1.5))))) into (- (* 0.000514406378606996 (/ 1 (pow 1.5 3))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 3) 6)) (* (/ (pow (- 0.03703711111111111) 1) 1) (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 1) 1)) (* (/ (pow (- (* 0.000514406378606996 (/ 1 (pow 1.5 3)))) 1) 1)))) into (* (pow 1.5 1/3) (- (* 0.00017146879286899862 (/ 1 (pow 1.5 2))) (+ (* 0.000514406378606996 (/ 1 (pow 1.5 3))) 8.467594709580178e-06)))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.5 1/3) (* (pow 1.5 1/3) (- (* 0.00017146879286899862 (/ 1 (pow 1.5 2))) (+ (* 0.000514406378606996 (/ 1 (pow 1.5 3))) 8.467594709580178e-06)))) (+ (* (* -0.03703711111111111 (pow 1.5 1/3)) (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3))) (+ (* (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3)) (* -0.03703711111111111 (pow 1.5 1/3))) (* (* (pow 1.5 1/3) (- (* 0.00017146879286899862 (/ 1 (pow 1.5 2))) (+ (* 0.000514406378606996 (/ 1 (pow 1.5 3))) 8.467594709580178e-06))) (pow 1.5 1/3))))) into (- (* 0.0006858751714759945 (pow (/ 1 (pow 1.5 4)) 1/3)) (+ (* 6.774075767664142e-05 (pow (pow 1.5 2) 1/3)) (* 0.001028812757213992 (pow (/ 1 (pow 1.5 7)) 1/3))))
* [misc]backup-simplify:  Simplify (+ (* (pow (pow 1.5 2) 1/3) (- (* 0.03703711111111111 (pow 1.5 1/3)))) (+ (* (- (* 0.07407422222222222 (pow (pow 1.5 2) 1/3))) (pow 1.5 1/3)) (+ (* (- (* 0.0027434951989135804 (pow (pow 1.5 2) 1/3)) (* 0.009259296296333333 (pow (/ 1 (pow 1.5 4)) 1/3))) 0) (* (- (* 0.0006858751714759945 (pow (/ 1 (pow 1.5 4)) 1/3)) (+ (* 6.774075767664142e-05 (pow (pow 1.5 2) 1/3)) (* 0.001028812757213992 (pow (/ 1 (pow 1.5 7)) 1/3)))) 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- 0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 (- 0.166667)) 4)) (pow 1.5 4))) (* 12 (/ (* (pow (* 1 (- 0.166667)) 2) (pow (* 2 0) 1)) (pow 1.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1.5 2))) (* -4 (/ (* (pow (* 1 (- 0.166667)) 1) 1 (pow (* 6 0) 1)) (pow 1.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1.5 1)))) 24) into (/ -0.00019290277778240747 (pow 1.5 4))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.00019290277778240747 (pow 1.5 4))) (+ (* 0 (/ -0.001543219135820988 (pow 1.5 3))) (+ (* 0 (/ -0.013888944444500001 (pow 1.5 2))) (+ (* 0 -0.11111133333333334) (* 0 (log 1.5)))))) into (- (* 6.430092592746916e-05 (/ 1 (pow 1.5 4))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 4) 24)) (* (/ (pow (- 0.03703711111111111) 2) 2) (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 1) 1)) (* (/ (pow (- 0.03703711111111111) 1) 1) (/ (pow (- (* 0.000514406378606996 (/ 1 (pow 1.5 3)))) 1) 1)) (* (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 2) 2)) (* (/ (pow (- (* 6.430092592746916e-05 (/ 1 (pow 1.5 4)))) 1) 1)))) into (* (- (+ (* 1.90521262007316e-05 (/ 1 (pow 1.5 3))) 7.840381152564442e-08) (+ (* 3.1753543667885995e-06 (/ 1 (pow 1.5 2))) (* 5.3584104939557634e-05 (/ 1 (pow 1.5 4))))) (pow 1.5 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.5 1/3) 0) (+ (* (* -0.03703711111111111 (pow 1.5 1/3)) 0) (+ (* (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3)) 1) (+ (* (* (pow 1.5 1/3) (- (* 0.00017146879286899862 (/ 1 (pow 1.5 2))) (+ (* 0.000514406378606996 (/ 1 (pow 1.5 3))) 8.467594709580178e-06))) 0) (* (* (- (+ (* 1.90521262007316e-05 (/ 1 (pow 1.5 3))) 7.840381152564442e-08) (+ (* 3.1753543667885995e-06 (/ 1 (pow 1.5 2))) (* 5.3584104939557634e-05 (/ 1 (pow 1.5 4))))) (pow 1.5 1/3)) 0))))) into (- (* 0.0006858737997283951 (pow 1.5 1/3)) (* 0.0046296481481666665 (pow (/ 1 (pow 1.5 5)) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 (- 0.166667)) 4)) (pow 1.5 4))) (* 12 (/ (* (pow (* 1 (- 0.166667)) 2) (pow (* 2 0) 1)) (pow 1.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1.5 2))) (* -4 (/ (* (pow (* 1 (- 0.166667)) 1) 1 (pow (* 6 0) 1)) (pow 1.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1.5 1)))) 24) into (/ -0.00019290277778240747 (pow 1.5 4))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.00019290277778240747 (pow 1.5 4))) (+ (* 0 (/ -0.001543219135820988 (pow 1.5 3))) (+ (* 0 (/ -0.013888944444500001 (pow 1.5 2))) (+ (* 0 -0.11111133333333334) (* 0 (log 1.5)))))) into (- (* 6.430092592746916e-05 (/ 1 (pow 1.5 4))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 4) 24)) (* (/ (pow (- 0.03703711111111111) 2) 2) (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 1) 1)) (* (/ (pow (- 0.03703711111111111) 1) 1) (/ (pow (- (* 0.000514406378606996 (/ 1 (pow 1.5 3)))) 1) 1)) (* (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 2) 2)) (* (/ (pow (- (* 6.430092592746916e-05 (/ 1 (pow 1.5 4)))) 1) 1)))) into (* (- (+ (* 1.90521262007316e-05 (/ 1 (pow 1.5 3))) 7.840381152564442e-08) (+ (* 3.1753543667885995e-06 (/ 1 (pow 1.5 2))) (* 5.3584104939557634e-05 (/ 1 (pow 1.5 4))))) (pow 1.5 1/3))
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 (- 0.166667)) 4)) (pow 1.5 4))) (* 12 (/ (* (pow (* 1 (- 0.166667)) 2) (pow (* 2 0) 1)) (pow 1.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1.5 2))) (* -4 (/ (* (pow (* 1 (- 0.166667)) 1) 1 (pow (* 6 0) 1)) (pow 1.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1.5 1)))) 24) into (/ -0.00019290277778240747 (pow 1.5 4))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.00019290277778240747 (pow 1.5 4))) (+ (* 0 (/ -0.001543219135820988 (pow 1.5 3))) (+ (* 0 (/ -0.013888944444500001 (pow 1.5 2))) (+ (* 0 -0.11111133333333334) (* 0 (log 1.5)))))) into (- (* 6.430092592746916e-05 (/ 1 (pow 1.5 4))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 4) 24)) (* (/ (pow (- 0.03703711111111111) 2) 2) (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 1) 1)) (* (/ (pow (- 0.03703711111111111) 1) 1) (/ (pow (- (* 0.000514406378606996 (/ 1 (pow 1.5 3)))) 1) 1)) (* (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 2) 2)) (* (/ (pow (- (* 6.430092592746916e-05 (/ 1 (pow 1.5 4)))) 1) 1)))) into (* (- (+ (* 1.90521262007316e-05 (/ 1 (pow 1.5 3))) 7.840381152564442e-08) (+ (* 3.1753543667885995e-06 (/ 1 (pow 1.5 2))) (* 5.3584104939557634e-05 (/ 1 (pow 1.5 4))))) (pow 1.5 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.5 1/3) (* (- (+ (* 1.90521262007316e-05 (/ 1 (pow 1.5 3))) 7.840381152564442e-08) (+ (* 3.1753543667885995e-06 (/ 1 (pow 1.5 2))) (* 5.3584104939557634e-05 (/ 1 (pow 1.5 4))))) (pow 1.5 1/3))) (+ (* (* -0.03703711111111111 (pow 1.5 1/3)) (* (pow 1.5 1/3) (- (* 0.00017146879286899862 (/ 1 (pow 1.5 2))) (+ (* 0.000514406378606996 (/ 1 (pow 1.5 3))) 8.467594709580178e-06)))) (+ (* (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3)) (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3))) (+ (* (* (pow 1.5 1/3) (- (* 0.00017146879286899862 (/ 1 (pow 1.5 2))) (+ (* 0.000514406378606996 (/ 1 (pow 1.5 3))) 8.467594709580178e-06))) (* -0.03703711111111111 (pow 1.5 1/3))) (* (* (- (+ (* 1.90521262007316e-05 (/ 1 (pow 1.5 3))) 7.840381152564442e-08) (+ (* 3.1753543667885995e-06 (/ 1 (pow 1.5 2))) (* 5.3584104939557634e-05 (/ 1 (pow 1.5 4))))) (pow 1.5 1/3)) (pow 1.5 1/3)))))) into (- (+ (* 1.2544609844103107e-06 (pow (pow 1.5 2) 1/3)) (* 7.62085048029264e-05 (pow (/ 1 (pow 1.5 7)) 1/3))) (+ (* 2.5402834934308796e-05 (pow (/ 1 (pow 1.5 4)) 1/3)) (* 8.573456790329223e-05 (pow (/ 1 (pow 1.5 10)) 1/3))))
* [misc]backup-simplify:  Simplify (+ (* (pow (pow 1.5 2) 1/3) (- (* 0.0006858737997283951 (pow 1.5 1/3)) (* 0.0046296481481666665 (pow (/ 1 (pow 1.5 5)) 1/3)))) (+ (* (- (* 0.07407422222222222 (pow (pow 1.5 2) 1/3))) (- (* 0.03703711111111111 (pow 1.5 1/3)))) (+ (* (- (* 0.0027434951989135804 (pow (pow 1.5 2) 1/3)) (* 0.009259296296333333 (pow (/ 1 (pow 1.5 4)) 1/3))) (pow 1.5 1/3)) (+ (* (- (* 0.0006858751714759945 (pow (/ 1 (pow 1.5 4)) 1/3)) (+ (* 6.774075767664142e-05 (pow (pow 1.5 2) 1/3)) (* 0.001028812757213992 (pow (/ 1 (pow 1.5 7)) 1/3)))) 0) (* (- (+ (* 1.2544609844103107e-06 (pow (pow 1.5 2) 1/3)) (* 7.62085048029264e-05 (pow (/ 1 (pow 1.5 7)) 1/3))) (+ (* 2.5402834934308796e-05 (pow (/ 1 (pow 1.5 4)) 1/3)) (* 8.573456790329223e-05 (pow (/ 1 (pow 1.5 10)) 1/3)))) 0))))) into (- (+ 0.0020576213991851857 (* 0.0006858737997283951 1.5)) (* 0.0046296481481666665 (/ 1 1.5)))
* [misc]backup-simplify:  Simplify (- (+ 0.0020576213991851857 (* 0.0006858737997283951 1.5)) (* 0.0046296481481666665 (/ 1 1.5))) into 8.673617379884035e-19
* [misc]backup-simplify:  Simplify (+ (* 8.673617379884035e-19 (pow x 4)) (+ (* (- 0.166667) (pow x 3)) (* 1.5 (pow x 2)))) into (- (+ (* 1.5 (pow x 2)) (* 8.673617379884035e-19 (pow x 4))) (* 0.166667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (cbrt (+ 1.5 (* -0.166667 (/ 1 x))))) (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (cbrt (+ 1.5 (* -0.166667 (/ 1 x))))) (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (cbrt (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.166667)) (log x))) into (* 1/3 (- (log (- 0.166667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (log x)))) into (exp (* 1/3 (- (log (- 0.166667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.166667)) (log x))) into (* 1/3 (- (log (- 0.166667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (log x)))) into (exp (* 1/3 (- (log (- 0.166667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.166667)) (log x))) into (* 1/3 (- (log (- 0.166667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (log x)))) into (exp (* 1/3 (- (log (- 0.166667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (cbrt (+ 1.5 (* -0.166667 (/ 1 x))))) (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (cbrt (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.166667)) (log x))) into (* 1/3 (- (log (- 0.166667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (log x)))) into (exp (* 1/3 (- (log (- 0.166667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.166667)) (log x))) into (* 1/3 (- (log (- 0.166667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (log x)))) into (exp (* 1/3 (- (log (- 0.166667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.166667)) (log x))) into (* 1/3 (- (log (- 0.166667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (log x)))) into (exp (* 1/3 (- (log (- 0.166667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (exp (* 1/3 (- (log (- 0.166667)) (log x))))) into (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 1) into (exp (* 1/3 (- (log (- 0.166667)) (log x))))
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2) (exp (* 1/3 (- (log (- 0.166667)) (log x))))) into (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3) into (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow (- 0.166667) 1)))) 1) into -8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -8.999982000035999) (* 0 (- (log (- 0.166667)) (log x)))) into (- 2.9999940000119993)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (+ (* (/ (pow (- 2.9999940000119993) 1) 1)))) into (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 0) (* (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x))))) 1)) into (- (* 2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow (- 0.166667) 1)))) 1) into -8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -8.999982000035999) (* 0 (- (log (- 0.166667)) (log x)))) into (- 2.9999940000119993)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (+ (* (/ (pow (- 2.9999940000119993) 1) 1)))) into (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow (- 0.166667) 1)))) 1) into -8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -8.999982000035999) (* 0 (- (log (- 0.166667)) (log x)))) into (- 2.9999940000119993)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (+ (* (/ (pow (- 2.9999940000119993) 1) 1)))) into (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x)))))) (* (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x))))) (exp (* 1/3 (- (log (- 0.166667)) (log x)))))) into (- (* 5.999988000023999 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2) (- (* 2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x))))))) (* (- (* 5.999988000023999 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2))) (exp (* 1/3 (- (log (- 0.166667)) (log x)))))) into (- (* 8.999982000035999 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (- (* 8.999982000035999 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3))) into (- (* 8.999982000035999 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.166667) 1)))) 2) into (/ -1.125 (pow -0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow -0.166667 2))) (+ (* 0 -8.999982000035999) (* 0 (- (log (- 0.166667)) (log x))))) into (- (* 0.375 (/ 1 (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (+ (* (/ (pow (- 2.9999940000119993) 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow -0.166667 2)))) 1) 1)))) into (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 0) (+ (* (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x))))) 0) (* (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (log x))))) 1))) into (- (* 4.499982000053998 (exp (* 1/3 (- (log (- 0.166667)) (log x))))) (* 0.375 (/ (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.166667) 1)))) 2) into (/ -1.125 (pow -0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow -0.166667 2))) (+ (* 0 -8.999982000035999) (* 0 (- (log (- 0.166667)) (log x))))) into (- (* 0.375 (/ 1 (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (+ (* (/ (pow (- 2.9999940000119993) 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow -0.166667 2)))) 1) 1)))) into (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.166667) 1)))) 2) into (/ -1.125 (pow -0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow -0.166667 2))) (+ (* 0 -8.999982000035999) (* 0 (- (log (- 0.166667)) (log x))))) into (- (* 0.375 (/ 1 (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (+ (* (/ (pow (- 2.9999940000119993) 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow -0.166667 2)))) 1) 1)))) into (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (log x)))))) (+ (* (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x))))) (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x)))))) (* (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (log x))))) (exp (* 1/3 (- (log (- 0.166667)) (log x))))))) into (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2) (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2) (- (* 4.499982000053998 (exp (* 1/3 (- (log (- 0.166667)) (log x))))) (* 0.375 (/ (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (pow -0.166667 2))))) (+ (* (- (* 5.999988000023999 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2))) (- (* 2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x))))))) (* (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2) (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (log x))))))) into (- (* 40.49983800048598 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3)) (* 1.125 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3) (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (- (* 40.49983800048598 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3)) (* 1.125 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3) (pow -0.166667 2)))) into (- (* 40.49983800048598 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3)) (* 1.125 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3) (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (+ (- (* 40.49983800048598 (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3)) (* 1.125 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3) (pow -0.166667 2)))) (+ (* (- (* 8.999982000035999 (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3))) (/ 1 (/ 1 x))) (* (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3) (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3) (pow x 2)) (* 40.49983800048598 (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3))) (+ (* 1.125 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3) (pow -0.166667 2))) (* 8.999982000035999 (* (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3) x))))
* [misc]approximate:  Taking taylor expansion of (* (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x)))))) (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x)))))) (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (log x))) into (* 1/3 (- (log 0.166667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (log x)))) into (exp (* 1/3 (- (log 0.166667) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (log x))) into (* 1/3 (- (log 0.166667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (log x)))) into (exp (* 1/3 (- (log 0.166667) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (log x))) into (* 1/3 (- (log 0.166667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (log x)))) into (exp (* 1/3 (- (log 0.166667) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x)))))) (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (log x))) into (* 1/3 (- (log 0.166667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (log x)))) into (exp (* 1/3 (- (log 0.166667) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (log x))) into (* 1/3 (- (log 0.166667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (log x)))) into (exp (* 1/3 (- (log 0.166667) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (log x))) into (* 1/3 (- (log 0.166667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (log x)))) into (exp (* 1/3 (- (log 0.166667) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) (exp (* 1/3 (- (log 0.166667) (log x))))) into (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) 1) into (exp (* 1/3 (- (log 0.166667) (log x))))
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2) (exp (* 1/3 (- (log 0.166667) (log x))))) into (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3) into (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow 0.166667 1)))) 1) into 8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 8.999982000035999) (* 0 (- (log 0.166667) (log x)))) into 2.9999940000119993
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) (+ (* (/ (pow 2.9999940000119993 1) 1)))) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (log x)))) 0) (* (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x))))) 1)) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow 0.166667 1)))) 1) into 8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 8.999982000035999) (* 0 (- (log 0.166667) (log x)))) into 2.9999940000119993
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) (+ (* (/ (pow 2.9999940000119993 1) 1)))) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow 0.166667 1)))) 1) into 8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 8.999982000035999) (* 0 (- (log 0.166667) (log x)))) into 2.9999940000119993
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) (+ (* (/ (pow 2.9999940000119993 1) 1)))) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (log x)))) (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))) (* (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x))))) (exp (* 1/3 (- (log 0.166667) (log x)))))) into (* 5.999988000023999 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2))
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2) (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))) (* (* 5.999988000023999 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2)) (exp (* 1/3 (- (log 0.166667) (log x)))))) into (* 8.999982000035999 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3))
* [misc]backup-simplify:  Simplify (* 8.999982000035999 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3)) into (* 8.999982000035999 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into (/ -1.125 (pow 0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow 0.166667 2))) (+ (* 0 8.999982000035999) (* 0 (- (log 0.166667) (log x))))) into (- (* 0.375 (/ 1 (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) (+ (* (/ (pow 2.9999940000119993 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow 0.166667 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 0.166667) (log x)))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (log x)))) 0) (+ (* (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x))))) 0) (* (* (exp (* 1/3 (- (log 0.166667) (log x)))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2))))) 1))) into (- (* 4.499982000053998 (exp (* 1/3 (- (log 0.166667) (log x))))) (* 0.375 (/ (exp (* 1/3 (- (log 0.166667) (log x)))) (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into (/ -1.125 (pow 0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow 0.166667 2))) (+ (* 0 8.999982000035999) (* 0 (- (log 0.166667) (log x))))) into (- (* 0.375 (/ 1 (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) (+ (* (/ (pow 2.9999940000119993 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow 0.166667 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 0.166667) (log x)))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into (/ -1.125 (pow 0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow 0.166667 2))) (+ (* 0 8.999982000035999) (* 0 (- (log 0.166667) (log x))))) into (- (* 0.375 (/ 1 (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) (+ (* (/ (pow 2.9999940000119993 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow 0.166667 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 0.166667) (log x)))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (log x)))) (* (exp (* 1/3 (- (log 0.166667) (log x)))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2)))))) (+ (* (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x))))) (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))) (* (* (exp (* 1/3 (- (log 0.166667) (log x)))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2))))) (exp (* 1/3 (- (log 0.166667) (log x))))))) into (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2) (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2) (- (* 4.499982000053998 (exp (* 1/3 (- (log 0.166667) (log x))))) (* 0.375 (/ (exp (* 1/3 (- (log 0.166667) (log x)))) (pow 0.166667 2))))) (+ (* (* 5.999988000023999 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2)) (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))) (* (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2) (pow 0.166667 2)))) (exp (* 1/3 (- (log 0.166667) (log x))))))) into (- (* 40.49983800048598 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3)) (* 1.125 (/ (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3) (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (- (* 40.49983800048598 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3)) (* 1.125 (/ (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3) (pow 0.166667 2)))) into (- (* 40.49983800048598 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3)) (* 1.125 (/ (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3) (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (+ (- (* 40.49983800048598 (pow (exp (* 1/3 (- (log 0.166667) (log (/ 1 (- x)))))) 3)) (* 1.125 (/ (pow (exp (* 1/3 (- (log 0.166667) (log (/ 1 (- x)))))) 3) (pow 0.166667 2)))) (+ (* (* 8.999982000035999 (pow (exp (* 1/3 (- (log 0.166667) (log (/ 1 (- x)))))) 3)) (/ 1 (/ 1 (- x)))) (* (pow (exp (* 1/3 (- (log 0.166667) (log (/ 1 (- x)))))) 3) (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 40.49983800048598 (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3)) (* (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3) (pow x 2))) (+ (* 1.125 (/ (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3) (pow 0.166667 2))) (* 8.999982000035999 (* (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3) x))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.5)) into (* 1/3 (log 1.5))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.5))) into (pow 1.5 1/3)
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.5)) into (* 1/3 (log 1.5))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.5))) into (pow 1.5 1/3)
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (pow 1.5 1/3) 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.166667)) 1)) (pow 1.5 1)))) 1) into -0.11111133333333334
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.11111133333333334) (* 0 (log 1.5))) into (- 0.03703711111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 1) 1)))) into (* -0.03703711111111111 (pow 1.5 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.5 1/3) 0) (* (* -0.03703711111111111 (pow 1.5 1/3)) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.166667)) 2)) (pow 1.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1.5 1)))) 2) into (/ -0.013888944444500001 (pow 1.5 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.013888944444500001 (pow 1.5 2))) (+ (* 0 -0.11111133333333334) (* 0 (log 1.5)))) into (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 2) 2)) (* (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 1) 1)))) into (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.5 1/3) 1) (+ (* (* -0.03703711111111111 (pow 1.5 1/3)) 0) (* (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3)) 0))) into (pow 1.5 1/3)
* [misc]backup-simplify:  Simplify (pow 1.5 1/3) into (pow 1.5 1/3)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 (- 0.166667)) 3)) (pow 1.5 3))) (* -3 (/ (* (pow (* 1 (- 0.166667)) 1) (pow (* 2 0) 1)) (pow 1.5 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1.5 1)))) 6) into (/ -0.001543219135820988 (pow 1.5 3))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.001543219135820988 (pow 1.5 3))) (+ (* 0 (/ -0.013888944444500001 (pow 1.5 2))) (+ (* 0 -0.11111133333333334) (* 0 (log 1.5))))) into (- (* 0.000514406378606996 (/ 1 (pow 1.5 3))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 3) 6)) (* (/ (pow (- 0.03703711111111111) 1) 1) (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 1) 1)) (* (/ (pow (- (* 0.000514406378606996 (/ 1 (pow 1.5 3)))) 1) 1)))) into (* (pow 1.5 1/3) (- (* 0.00017146879286899862 (/ 1 (pow 1.5 2))) (+ (* 0.000514406378606996 (/ 1 (pow 1.5 3))) 8.467594709580178e-06)))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.5 1/3) 0) (+ (* (* -0.03703711111111111 (pow 1.5 1/3)) 1) (+ (* (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3)) 0) (* (* (pow 1.5 1/3) (- (* 0.00017146879286899862 (/ 1 (pow 1.5 2))) (+ (* 0.000514406378606996 (/ 1 (pow 1.5 3))) 8.467594709580178e-06))) 0)))) into (- (* 0.03703711111111111 (pow 1.5 1/3)))
* [misc]backup-simplify:  Simplify (- (* 0.03703711111111111 (pow 1.5 1/3))) into (- (* 0.03703711111111111 (pow 1.5 1/3)))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 (- 0.166667)) 4)) (pow 1.5 4))) (* 12 (/ (* (pow (* 1 (- 0.166667)) 2) (pow (* 2 0) 1)) (pow 1.5 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1.5 2))) (* -4 (/ (* (pow (* 1 (- 0.166667)) 1) 1 (pow (* 6 0) 1)) (pow 1.5 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1.5 1)))) 24) into (/ -0.00019290277778240747 (pow 1.5 4))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.00019290277778240747 (pow 1.5 4))) (+ (* 0 (/ -0.001543219135820988 (pow 1.5 3))) (+ (* 0 (/ -0.013888944444500001 (pow 1.5 2))) (+ (* 0 -0.11111133333333334) (* 0 (log 1.5)))))) into (- (* 6.430092592746916e-05 (/ 1 (pow 1.5 4))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 4) 24)) (* (/ (pow (- 0.03703711111111111) 2) 2) (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 1) 1)) (* (/ (pow (- 0.03703711111111111) 1) 1) (/ (pow (- (* 0.000514406378606996 (/ 1 (pow 1.5 3)))) 1) 1)) (* (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 2) 2)) (* (/ (pow (- (* 6.430092592746916e-05 (/ 1 (pow 1.5 4)))) 1) 1)))) into (* (- (+ (* 1.90521262007316e-05 (/ 1 (pow 1.5 3))) 7.840381152564442e-08) (+ (* 3.1753543667885995e-06 (/ 1 (pow 1.5 2))) (* 5.3584104939557634e-05 (/ 1 (pow 1.5 4))))) (pow 1.5 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.5 1/3) 0) (+ (* (* -0.03703711111111111 (pow 1.5 1/3)) 0) (+ (* (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3)) 1) (+ (* (* (pow 1.5 1/3) (- (* 0.00017146879286899862 (/ 1 (pow 1.5 2))) (+ (* 0.000514406378606996 (/ 1 (pow 1.5 3))) 8.467594709580178e-06))) 0) (* (* (- (+ (* 1.90521262007316e-05 (/ 1 (pow 1.5 3))) 7.840381152564442e-08) (+ (* 3.1753543667885995e-06 (/ 1 (pow 1.5 2))) (* 5.3584104939557634e-05 (/ 1 (pow 1.5 4))))) (pow 1.5 1/3)) 0))))) into (- (* 0.0006858737997283951 (pow 1.5 1/3)) (* 0.0046296481481666665 (pow (/ 1 (pow 1.5 5)) 1/3)))
* [misc]backup-simplify:  Simplify (- (* 0.0006858737997283951 (pow 1.5 1/3)) (* 0.0046296481481666665 (pow (/ 1 (pow 1.5 5)) 1/3))) into (- (* 0.0006858737997283951 (pow 1.5 1/3)) (* 0.0046296481481666665 (pow (/ 1 (pow 1.5 5)) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.0006858737997283951 (pow 1.5 1/3)) (* 0.0046296481481666665 (pow (/ 1 (pow 1.5 5)) 1/3))) (pow x 4)) (+ (* (- (* 0.03703711111111111 (pow 1.5 1/3))) (pow x 3)) (* (pow 1.5 1/3) (pow x 2)))) into (- (+ (* 0.0006858737997283951 (* (pow 1.5 1/3) (pow x 4))) (* (pow 1.5 1/3) (pow x 2))) (+ (* 0.03703711111111111 (* (pow 1.5 1/3) (pow x 3))) (* 0.0046296481481666665 (* (pow (/ 1 (pow 1.5 5)) 1/3) (pow x 4)))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.166667)) (log x))) into (* 1/3 (- (log (- 0.166667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (log x)))) into (exp (* 1/3 (- (log (- 0.166667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.166667)) (log x))) into (* 1/3 (- (log (- 0.166667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (log x)))) into (exp (* 1/3 (- (log (- 0.166667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 1) into (exp (* 1/3 (- (log (- 0.166667)) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (log x)))) into (exp (* 1/3 (- (log (- 0.166667)) (log x))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow (- 0.166667) 1)))) 1) into -8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -8.999982000035999) (* 0 (- (log (- 0.166667)) (log x)))) into (- 2.9999940000119993)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (+ (* (/ (pow (- 2.9999940000119993) 1) 1)))) into (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 0) (* (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x))))) 1)) into (- (* 2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x))))))
* [misc]backup-simplify:  Simplify (- (* 2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x)))))) into (- (* 2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.166667) 1)))) 2) into (/ -1.125 (pow -0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow -0.166667 2))) (+ (* 0 -8.999982000035999) (* 0 (- (log (- 0.166667)) (log x))))) into (- (* 0.375 (/ 1 (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (+ (* (/ (pow (- 2.9999940000119993) 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow -0.166667 2)))) 1) 1)))) into (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 0) (+ (* (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x))))) 0) (* (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (log x))))) 1))) into (- (* 4.499982000053998 (exp (* 1/3 (- (log (- 0.166667)) (log x))))) (* 0.375 (/ (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (- (* 4.499982000053998 (exp (* 1/3 (- (log (- 0.166667)) (log x))))) (* 0.375 (/ (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (pow -0.166667 2)))) into (- (* 4.499982000053998 (exp (* 1/3 (- (log (- 0.166667)) (log x))))) (* 0.375 (/ (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (+ (- (* 4.499982000053998 (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x)))))) (* 0.375 (/ (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) (pow -0.166667 2)))) (+ (* (- (* 2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))))) (/ 1 (/ 1 x))) (* (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 4.499982000053998 (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x)))))) (* (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) (pow x 2))) (+ (* 2.9999940000119993 (* (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) (pow -0.166667 2)))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (log x))) into (* 1/3 (- (log 0.166667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (log x)))) into (exp (* 1/3 (- (log 0.166667) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (log x))) into (* 1/3 (- (log 0.166667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (log x)))) into (exp (* 1/3 (- (log 0.166667) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) 1) into (exp (* 1/3 (- (log 0.166667) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (log x)))) into (exp (* 1/3 (- (log 0.166667) (log x))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow 0.166667 1)))) 1) into 8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 8.999982000035999) (* 0 (- (log 0.166667) (log x)))) into 2.9999940000119993
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) (+ (* (/ (pow 2.9999940000119993 1) 1)))) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (log x)))) 0) (* (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x))))) 1)) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))
* [misc]backup-simplify:  Simplify (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x))))) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into (/ -1.125 (pow 0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow 0.166667 2))) (+ (* 0 8.999982000035999) (* 0 (- (log 0.166667) (log x))))) into (- (* 0.375 (/ 1 (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) (+ (* (/ (pow 2.9999940000119993 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow 0.166667 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 0.166667) (log x)))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (log x)))) 0) (+ (* (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x))))) 0) (* (* (exp (* 1/3 (- (log 0.166667) (log x)))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2))))) 1))) into (- (* 4.499982000053998 (exp (* 1/3 (- (log 0.166667) (log x))))) (* 0.375 (/ (exp (* 1/3 (- (log 0.166667) (log x)))) (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (- (* 4.499982000053998 (exp (* 1/3 (- (log 0.166667) (log x))))) (* 0.375 (/ (exp (* 1/3 (- (log 0.166667) (log x)))) (pow 0.166667 2)))) into (- (* 4.499982000053998 (exp (* 1/3 (- (log 0.166667) (log x))))) (* 0.375 (/ (exp (* 1/3 (- (log 0.166667) (log x)))) (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (+ (- (* 4.499982000053998 (exp (* 1/3 (- (log 0.166667) (log (/ 1 (- x))))))) (* 0.375 (/ (exp (* 1/3 (- (log 0.166667) (log (/ 1 (- x)))))) (pow 0.166667 2)))) (+ (* (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log (/ 1 (- x))))))) (/ 1 (/ 1 (- x)))) (* (exp (* 1/3 (- (log 0.166667) (log (/ 1 (- x)))))) (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 4.499982000053998 (exp (* 1/3 (- (log 0.166667) (log (/ -1 x)))))) (* (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) (pow x 2))) (+ (* 2.9999940000119993 (* (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) (pow 0.166667 2)))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.5)) into (* 1/3 (log 1.5))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.5))) into (pow 1.5 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.5)) into (* 1/3 (log 1.5))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.5))) into (pow 1.5 1/3)
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.5)) into (* 1/3 (log 1.5))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.5))) into (pow 1.5 1/3)
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.5)) into (* 1/3 (log 1.5))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.5))) into (pow 1.5 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.5)) into (* 1/3 (log 1.5))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.5))) into (pow 1.5 1/3)
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (log 1.5) into (log 1.5)
* [misc]backup-simplify:  Simplify (* 1/3 (log 1.5)) into (* 1/3 (log 1.5))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log 1.5))) into (pow 1.5 1/3)
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -3.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* (pow 1.5 1/3) (pow 1.5 1/3)) into (pow (pow 1.5 2) 1/3)
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (pow 1.5 1/3) 0) into 0
* [misc]backup-simplify:  Simplify (* (pow (pow 1.5 2) 1/3) 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.166667)) 1)) (pow 1.5 1)))) 1) into -0.11111133333333334
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.11111133333333334) (* 0 (log 1.5))) into (- 0.03703711111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 1) 1)))) into (* -0.03703711111111111 (pow 1.5 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.5 1/3) 0) (* (* -0.03703711111111111 (pow 1.5 1/3)) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.166667)) 1)) (pow 1.5 1)))) 1) into -0.11111133333333334
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.11111133333333334) (* 0 (log 1.5))) into (- 0.03703711111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 1) 1)))) into (* -0.03703711111111111 (pow 1.5 1/3))
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 0.166667)) 1)) (pow 1.5 1)))) 1) into -0.11111133333333334
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.11111133333333334) (* 0 (log 1.5))) into (- 0.03703711111111111)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 1) 1)))) into (* -0.03703711111111111 (pow 1.5 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.5 1/3) (* -0.03703711111111111 (pow 1.5 1/3))) (* (* -0.03703711111111111 (pow 1.5 1/3)) (pow 1.5 1/3))) into (- (* 0.07407422222222222 (pow (pow 1.5 2) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* (pow (pow 1.5 2) 1/3) 0) (* (- (* 0.07407422222222222 (pow (pow 1.5 2) 1/3))) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.166667)) 2)) (pow 1.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1.5 1)))) 2) into (/ -0.013888944444500001 (pow 1.5 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.013888944444500001 (pow 1.5 2))) (+ (* 0 -0.11111133333333334) (* 0 (log 1.5)))) into (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 2) 2)) (* (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 1) 1)))) into (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.5 1/3) 1) (+ (* (* -0.03703711111111111 (pow 1.5 1/3)) 0) (* (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3)) 0))) into (pow 1.5 1/3)
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.166667)) 2)) (pow 1.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1.5 1)))) 2) into (/ -0.013888944444500001 (pow 1.5 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.013888944444500001 (pow 1.5 2))) (+ (* 0 -0.11111133333333334) (* 0 (log 1.5)))) into (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 2) 2)) (* (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 1) 1)))) into (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3))
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 0.166667)) 2)) (pow 1.5 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1.5 1)))) 2) into (/ -0.013888944444500001 (pow 1.5 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -0.013888944444500001 (pow 1.5 2))) (+ (* 0 -0.11111133333333334) (* 0 (log 1.5)))) into (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log 1.5))) (+ (* (/ (pow (- 0.03703711111111111) 2) 2)) (* (/ (pow (- (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) 1) 1)))) into (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow 1.5 1/3) (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3))) (+ (* (* -0.03703711111111111 (pow 1.5 1/3)) (* -0.03703711111111111 (pow 1.5 1/3))) (* (* (- 0.0006858737997283951 (* 0.0046296481481666665 (/ 1 (pow 1.5 2)))) (pow 1.5 1/3)) (pow 1.5 1/3)))) into (- (* 0.0027434951989135804 (pow (pow 1.5 2) 1/3)) (* 0.009259296296333333 (pow (/ 1 (pow 1.5 4)) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* (pow (pow 1.5 2) 1/3) (pow 1.5 1/3)) (+ (* (- (* 0.07407422222222222 (pow (pow 1.5 2) 1/3))) 0) (* (- (* 0.0027434951989135804 (pow (pow 1.5 2) 1/3)) (* 0.009259296296333333 (pow (/ 1 (pow 1.5 4)) 1/3))) 0))) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow x 2)) (+ (* (- 3.0) x) 1.0)) into (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (cbrt (+ 1.5 (* -0.166667 (/ 1 x))))) (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (cbrt (+ 1.5 (* -0.166667 (/ 1 x))))) (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (cbrt (+ 1.5 (* -0.166667 (/ 1 x))))) (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (cbrt (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.166667)) (log x))) into (* 1/3 (- (log (- 0.166667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (log x)))) into (exp (* 1/3 (- (log (- 0.166667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.166667)) (log x))) into (* 1/3 (- (log (- 0.166667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (log x)))) into (exp (* 1/3 (- (log (- 0.166667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.166667)) (log x))) into (* 1/3 (- (log (- 0.166667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (log x)))) into (exp (* 1/3 (- (log (- 0.166667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (cbrt (+ 1.5 (* -0.166667 (/ 1 x))))) (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (cbrt (+ 1.5 (* -0.166667 (/ 1 x))))) (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (cbrt (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.166667)) (log x))) into (* 1/3 (- (log (- 0.166667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (log x)))) into (exp (* 1/3 (- (log (- 0.166667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.166667)) (log x))) into (* 1/3 (- (log (- 0.166667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (log x)))) into (exp (* 1/3 (- (log (- 0.166667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (- 0.166667)) (log x))) into (* 1/3 (- (log (- 0.166667)) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (- 0.166667)) (log x)))) into (exp (* 1/3 (- (log (- 0.166667)) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (exp (* 1/3 (- (log (- 0.166667)) (log x))))) into (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 1) into (exp (* 1/3 (- (log (- 0.166667)) (log x))))
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2) (exp (* 1/3 (- (log (- 0.166667)) (log x))))) into (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3)
* [misc]backup-simplify:  Simplify (+ 0 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3)) into (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3) into (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3)
* [misc]backup-simplify:  Simplify (* 1 -3.0) into -3.0
* [misc]backup-simplify:  Simplify (+ -3.0 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow (- 0.166667) 1)))) 1) into -8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -8.999982000035999) (* 0 (- (log (- 0.166667)) (log x)))) into (- 2.9999940000119993)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (+ (* (/ (pow (- 2.9999940000119993) 1) 1)))) into (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 0) (* (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x))))) 1)) into (- (* 2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow (- 0.166667) 1)))) 1) into -8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -8.999982000035999) (* 0 (- (log (- 0.166667)) (log x)))) into (- 2.9999940000119993)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (+ (* (/ (pow (- 2.9999940000119993) 1) 1)))) into (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow (- 0.166667) 1)))) 1) into -8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -8.999982000035999) (* 0 (- (log (- 0.166667)) (log x)))) into (- 2.9999940000119993)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (+ (* (/ (pow (- 2.9999940000119993) 1) 1)))) into (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x)))))) (* (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x))))) (exp (* 1/3 (- (log (- 0.166667)) (log x)))))) into (- (* 5.999988000023999 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2) (- (* 2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x))))))) (* (- (* 5.999988000023999 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2))) (exp (* 1/3 (- (log (- 0.166667)) (log x)))))) into (- (* 8.999982000035999 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (+ (- 3.0) (- (* 8.999982000035999 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3)))) into (- (+ (* 8.999982000035999 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3)) 3.0))
* [misc]backup-simplify:  Simplify (- (+ (* 8.999982000035999 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3)) 3.0)) into (- (+ (* 8.999982000035999 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3)) 3.0))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.166667) 1)))) 2) into (/ -1.125 (pow -0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow -0.166667 2))) (+ (* 0 -8.999982000035999) (* 0 (- (log (- 0.166667)) (log x))))) into (- (* 0.375 (/ 1 (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (+ (* (/ (pow (- 2.9999940000119993) 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow -0.166667 2)))) 1) 1)))) into (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 0) (+ (* (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x))))) 0) (* (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (log x))))) 1))) into (- (* 4.499982000053998 (exp (* 1/3 (- (log (- 0.166667)) (log x))))) (* 0.375 (/ (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.166667) 1)))) 2) into (/ -1.125 (pow -0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow -0.166667 2))) (+ (* 0 -8.999982000035999) (* 0 (- (log (- 0.166667)) (log x))))) into (- (* 0.375 (/ 1 (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (+ (* (/ (pow (- 2.9999940000119993) 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow -0.166667 2)))) 1) 1)))) into (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.166667) 1)))) 2) into (/ -1.125 (pow -0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log (- 0.166667))) into (- (log (- 0.166667)) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow -0.166667 2))) (+ (* 0 -8.999982000035999) (* 0 (- (log (- 0.166667)) (log x))))) into (- (* 0.375 (/ 1 (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (+ (* (/ (pow (- 2.9999940000119993) 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow -0.166667 2)))) 1) 1)))) into (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (log x)))))) (+ (* (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x))))) (* -2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x)))))) (* (* (- 4.499982000053998 (* 0.375 (/ 1 (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (log x))))) (exp (* 1/3 (- (log (- 0.166667)) (log x))))))) into (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2) (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2) (- (* 4.499982000053998 (exp (* 1/3 (- (log (- 0.166667)) (log x))))) (* 0.375 (/ (exp (* 1/3 (- (log (- 0.166667)) (log x)))) (pow -0.166667 2))))) (+ (* (- (* 5.999988000023999 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2))) (- (* 2.9999940000119993 (exp (* 1/3 (- (log (- 0.166667)) (log x))))))) (* (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 2) (pow -0.166667 2)))) (exp (* 1/3 (- (log (- 0.166667)) (log x))))))) into (- (* 40.49983800048598 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3)) (* 1.125 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3) (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (+ 1.0 (- (* 40.49983800048598 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3)) (* 1.125 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3) (pow -0.166667 2))))) into (- (+ (* 40.49983800048598 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3)) 1.0) (* 1.125 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3) (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (- (+ (* 40.49983800048598 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3)) 1.0) (* 1.125 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3) (pow -0.166667 2)))) into (- (+ (* 40.49983800048598 (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3)) 1.0) (* 1.125 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log x)))) 3) (pow -0.166667 2))))
* [misc]backup-simplify:  Simplify (+ (- (+ (* 40.49983800048598 (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3)) 1.0) (* 1.125 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3) (pow -0.166667 2)))) (+ (* (- (+ (* 8.999982000035999 (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3)) 3.0)) (/ 1 (/ 1 x))) (* (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3) (pow (/ 1 (/ 1 x)) 2)))) into (- (+ 1.0 (+ (* (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3) (pow x 2)) (* 40.49983800048598 (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3)))) (+ (* 1.125 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3) (pow -0.166667 2))) (+ (* 3.0 x) (* 8.999982000035999 (* (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3) x)))))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x)))))) (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x)))))) (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x)))))) (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (log x))) into (* 1/3 (- (log 0.166667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (log x)))) into (exp (* 1/3 (- (log 0.166667) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (log x))) into (* 1/3 (- (log 0.166667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (log x)))) into (exp (* 1/3 (- (log 0.166667) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (log x))) into (* 1/3 (- (log 0.166667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (log x)))) into (exp (* 1/3 (- (log 0.166667) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x)))))) (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x)))))) (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (log x))) into (* 1/3 (- (log 0.166667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (log x)))) into (exp (* 1/3 (- (log 0.166667) (log x))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (log x))) into (* 1/3 (- (log 0.166667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (log x)))) into (exp (* 1/3 (- (log 0.166667) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (+ 1.5 (* -0.166667 (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ 1.5 (* -0.166667 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ 1.5 (* -0.166667 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (log x))) into (* 1/3 (- (log 0.166667) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (log x)))) into (exp (* 1/3 (- (log 0.166667) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) (exp (* 1/3 (- (log 0.166667) (log x))))) into (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) 1) into (exp (* 1/3 (- (log 0.166667) (log x))))
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2) (exp (* 1/3 (- (log 0.166667) (log x))))) into (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3)
* [misc]backup-simplify:  Simplify (+ 0 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3)) into (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3) into (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3)
* [misc]backup-simplify:  Simplify (* -1 -3.0) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow 0.166667 1)))) 1) into 8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 8.999982000035999) (* 0 (- (log 0.166667) (log x)))) into 2.9999940000119993
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) (+ (* (/ (pow 2.9999940000119993 1) 1)))) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (log x)))) 0) (* (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x))))) 1)) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow 0.166667 1)))) 1) into 8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 8.999982000035999) (* 0 (- (log 0.166667) (log x)))) into 2.9999940000119993
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) (+ (* (/ (pow 2.9999940000119993 1) 1)))) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1.5) 1)) (pow 0.166667 1)))) 1) into 8.999982000035999
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 8.999982000035999) (* 0 (- (log 0.166667) (log x)))) into 2.9999940000119993
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) (+ (* (/ (pow 2.9999940000119993 1) 1)))) into (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (log x)))) (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))) (* (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x))))) (exp (* 1/3 (- (log 0.166667) (log x)))))) into (* 5.999988000023999 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2))
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2) (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))) (* (* 5.999988000023999 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2)) (exp (* 1/3 (- (log 0.166667) (log x)))))) into (* 8.999982000035999 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3))
* [misc]backup-simplify:  Simplify (+ 3.0 (* 8.999982000035999 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3))) into (+ (* 8.999982000035999 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3)) 3.0)
* [misc]backup-simplify:  Simplify (+ (* 8.999982000035999 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3)) 3.0) into (+ (* 8.999982000035999 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3)) 3.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -3.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into (/ -1.125 (pow 0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow 0.166667 2))) (+ (* 0 8.999982000035999) (* 0 (- (log 0.166667) (log x))))) into (- (* 0.375 (/ 1 (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) (+ (* (/ (pow 2.9999940000119993 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow 0.166667 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 0.166667) (log x)))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (log x)))) 0) (+ (* (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x))))) 0) (* (* (exp (* 1/3 (- (log 0.166667) (log x)))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2))))) 1))) into (- (* 4.499982000053998 (exp (* 1/3 (- (log 0.166667) (log x))))) (* 0.375 (/ (exp (* 1/3 (- (log 0.166667) (log x)))) (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into (/ -1.125 (pow 0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow 0.166667 2))) (+ (* 0 8.999982000035999) (* 0 (- (log 0.166667) (log x))))) into (- (* 0.375 (/ 1 (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) (+ (* (/ (pow 2.9999940000119993 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow 0.166667 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 0.166667) (log x)))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1.5) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into (/ -1.125 (pow 0.166667 2))
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log 0.166667)) into (- (log 0.166667) (log x))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -1.125 (pow 0.166667 2))) (+ (* 0 8.999982000035999) (* 0 (- (log 0.166667) (log x))))) into (- (* 0.375 (/ 1 (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (log x)))) (+ (* (/ (pow 2.9999940000119993 2) 2)) (* (/ (pow (- (* 0.375 (/ 1 (pow 0.166667 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 0.166667) (log x)))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (log x)))) (* (exp (* 1/3 (- (log 0.166667) (log x)))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2)))))) (+ (* (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x))))) (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))) (* (* (exp (* 1/3 (- (log 0.166667) (log x)))) (- 4.499982000053998 (* 0.375 (/ 1 (pow 0.166667 2))))) (exp (* 1/3 (- (log 0.166667) (log x))))))) into (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2) (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2) (- (* 4.499982000053998 (exp (* 1/3 (- (log 0.166667) (log x))))) (* 0.375 (/ (exp (* 1/3 (- (log 0.166667) (log x)))) (pow 0.166667 2))))) (+ (* (* 5.999988000023999 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2)) (* 2.9999940000119993 (exp (* 1/3 (- (log 0.166667) (log x)))))) (* (- (* 17.99992800021599 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2)) (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 2) (pow 0.166667 2)))) (exp (* 1/3 (- (log 0.166667) (log x))))))) into (- (* 40.49983800048598 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3)) (* 1.125 (/ (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3) (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (+ 1.0 (- (* 40.49983800048598 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3)) (* 1.125 (/ (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3) (pow 0.166667 2))))) into (- (+ (* 40.49983800048598 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3)) 1.0) (* 1.125 (/ (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3) (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (- (+ (* 40.49983800048598 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3)) 1.0) (* 1.125 (/ (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3) (pow 0.166667 2)))) into (- (+ (* 40.49983800048598 (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3)) 1.0) (* 1.125 (/ (pow (exp (* 1/3 (- (log 0.166667) (log x)))) 3) (pow 0.166667 2))))
* [misc]backup-simplify:  Simplify (+ (- (+ (* 40.49983800048598 (pow (exp (* 1/3 (- (log 0.166667) (log (/ 1 (- x)))))) 3)) 1.0) (* 1.125 (/ (pow (exp (* 1/3 (- (log 0.166667) (log (/ 1 (- x)))))) 3) (pow 0.166667 2)))) (+ (* (+ (* 8.999982000035999 (pow (exp (* 1/3 (- (log 0.166667) (log (/ 1 (- x)))))) 3)) 3.0) (/ 1 (/ 1 (- x)))) (* (pow (exp (* 1/3 (- (log 0.166667) (log (/ 1 (- x)))))) 3) (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3) (pow x 2)) (+ 1.0 (* 40.49983800048598 (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3)))) (+ (* 8.999982000035999 (* (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3) x)) (+ (* 1.125 (/ (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3) (pow 0.166667 2))) (* 3.0 x))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (pow (+ 1.5 (* -0.166667 x)) (+ 1/3 1/3)) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (+ 1/3 1/3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* * * * [misc]progress:  [ 2 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (pow (cbrt (+ 1.5 (* -0.166667 x))) (+ 1 1)) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 3 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (pow (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) 1/3) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (141 enodes)
* * [misc]simplify:  iters left: 1 (208 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 4 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (pow (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) 1) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 5 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (pow (cbrt (+ 1.5 (* -0.166667 x))) 2) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* * * * [misc]progress:  [ 6 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (pow (cbrt (+ 1.5 (* -0.166667 x))) (+ 1 1)) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 7 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (pow (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) 1) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* * * * [misc]progress:  [ 8 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (exp (+ (log (cbrt (+ 1.5 (* -0.166667 x)))) (log (cbrt (+ 1.5 (* -0.166667 x)))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (+ 1.5 (* -0.166667 x)))) (log (cbrt (+ 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* x -0.166667) 1.5))) (log (cbrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* x -0.166667) 1.5))) (log (cbrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 9 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (exp (log (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (log (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (log (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (log (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 10 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (log (exp (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 11 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (cbrt (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (141 enodes)
* * [misc]simplify:  iters left: 1 (208 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 12 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (cbrt (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (cbrt (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))))) (cbrt (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (cbrt (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5)))) (cbrt (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5)))) (cbrt (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5)))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 13 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (cbrt (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (130 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 14 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (sqrt (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (sqrt (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* x -0.166667) 1.5)))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 15 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (/ (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (80 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (113 enodes)
* * [misc]simplify:  iters left: 2 (132 enodes)
* * [misc]simplify:  iters left: 1 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x)))))
* * * * [misc]progress:  [ 16 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (/ (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (149 enodes)
* * [misc]simplify:  iters left: 2 (231 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (* (+ 1.5 (* -0.166667 x)) (- 1.5 (* -0.166667 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (* (+ 1.5 (* -0.166667 x)) (- 1.5 (* -0.166667 x)))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (122 enodes)
* * [misc]simplify:  iters left: 2 (134 enodes)
* * [misc]simplify:  iters left: 1 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x))))))
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x))))))
* * * * [misc]progress:  [ 17 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (/ (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (145 enodes)
* * [misc]simplify:  iters left: 2 (224 enodes)
* * [misc]simplify:  iters left: 1 (351 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (* (+ (* -0.166667 x) 1.5) (- 1.5 (* -0.166667 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (* (+ (* -0.166667 x) 1.5) (- 1.5 (* -0.166667 x)))))
* [enter]simplify:  Simplifying (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (122 enodes)
* * [misc]simplify:  iters left: 2 (134 enodes)
* * [misc]simplify:  iters left: 1 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667)))) (cbrt (- 1.5 (* x -0.166667))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667)))) (cbrt (- 1.5 (* x -0.166667))))
* * * * [misc]progress:  [ 18 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (/ (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (86 enodes)
* * [misc]simplify:  iters left: 2 (147 enodes)
* * [misc]simplify:  iters left: 1 (274 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))))
* [exit]simplify:  Simplified to (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))))
* [enter]simplify:  Simplifying (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667))))
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667))))
* * * * [misc]progress:  [ 19 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* 1 (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* * * * [misc]progress:  [ 20 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))))) (cbrt (cbrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 21 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (sqrt (+ 1.5 (* -0.166667 x))))) (cbrt (sqrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (sqrt (+ 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (sqrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (sqrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 22 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt 1)) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt 1))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt 1))
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt 1))
* * * * [misc]progress:  [ 23 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (* (cbrt (cbrt (+ 1.5 (* -0.166667 x)))) (cbrt (cbrt (+ 1.5 (* -0.166667 x)))))) (cbrt (cbrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (* (cbrt (cbrt (+ 1.5 (* -0.166667 x)))) (cbrt (cbrt (+ 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -0.166667) 1.5)) (* (cbrt (cbrt (+ (* x -0.166667) 1.5))) (cbrt (cbrt (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -0.166667) 1.5)) (* (cbrt (cbrt (+ (* x -0.166667) 1.5))) (cbrt (cbrt (+ (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 24 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (sqrt (cbrt (+ 1.5 (* -0.166667 x))))) (sqrt (cbrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (sqrt (cbrt (+ 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (* x -0.166667) 1.5))) (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (* x -0.166667) 1.5))) (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 25 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) 1) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) 1)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (cbrt (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 26 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (cbrt (+ 1.5 (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ 1.5 (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* x -0.166667) 1.5))) (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* x -0.166667) 1.5))) (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 27 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (sqrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (sqrt (+ 1.5 (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ 1.5 (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (sqrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (sqrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 28 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt 1) (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 29 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (cbrt (cbrt (+ 1.5 (* -0.166667 x)))) (cbrt (cbrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (cbrt (+ 1.5 (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ 1.5 (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* x -0.166667) 1.5))) (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* x -0.166667) 1.5))) (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 30 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (sqrt (cbrt (+ 1.5 (* -0.166667 x)))) (* (sqrt (cbrt (+ 1.5 (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (+ 1.5 (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (* x -0.166667) 1.5))) (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (* x -0.166667) 1.5))) (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 31 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* 1 (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 32 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (/ (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 33 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (/ (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (149 enodes)
* * [misc]simplify:  iters left: 1 (276 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* 1.5 1.5) (* (* x -0.166667) (* x -0.166667)))) (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (cbrt (- (* 1.5 1.5) (* (* x -0.166667) (* x -0.166667)))) (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 34 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (/ (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ 1.5 (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (107 enodes)
* * [misc]simplify:  iters left: 1 (109 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))
* * * * [misc]progress:  [ 35 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (/ (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x)))) (cbrt (- 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (149 enodes)
* * [misc]simplify:  iters left: 1 (276 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* -0.166667 x) 1.5) (- 1.5 (* -0.166667 x)))) (cbrt (+ (* -0.166667 x) 1.5)))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* -0.166667 x) 1.5) (- 1.5 (* -0.166667 x)))) (cbrt (+ (* -0.166667 x) 1.5)))
* * * * [misc]progress:  [ 36 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* * * * [misc]progress:  [ 37 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (pow (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) 1)))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) (* x x))
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) (* x x))
* * * * [misc]progress:  [ 38 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (pow (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) 1)))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) (* x x))
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) (* x x))
* * * * [misc]progress:  [ 39 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (pow (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) 1)))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) (* x x))
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) (* x x))
* * * * [misc]progress:  [ 40 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (pow (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) 1)))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) (* x x))
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) (* x x))
* * * * [misc]progress:  [ 41 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (pow (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) 1)))>
* * * * [misc]progress:  [ 42 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (exp (+ (+ (log (cbrt (+ 1.5 (* -0.166667 x)))) (log (cbrt (+ 1.5 (* -0.166667 x))))) (+ (log (cbrt (+ 1.5 (* -0.166667 x)))) (log (* x x)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (cbrt (+ 1.5 (* -0.166667 x)))) (log (cbrt (+ 1.5 (* -0.166667 x))))) (+ (log (cbrt (+ 1.5 (* -0.166667 x)))) (log (* x x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (* x x)) (log (cbrt (+ (* x -0.166667) 1.5)))) (+ (log (cbrt (+ (* x -0.166667) 1.5))) (log (cbrt (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (+ (+ (log (* x x)) (log (cbrt (+ (* x -0.166667) 1.5)))) (+ (log (cbrt (+ (* x -0.166667) 1.5))) (log (cbrt (+ (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 43 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (exp (+ (+ (log (cbrt (+ 1.5 (* -0.166667 x)))) (log (cbrt (+ 1.5 (* -0.166667 x))))) (log (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (cbrt (+ 1.5 (* -0.166667 x)))) (log (cbrt (+ 1.5 (* -0.166667 x))))) (log (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (65 enodes)
* * [misc]simplify:  iters left: 1 (70 enodes)
* [exit]simplify:  Simplified to (+ (log (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))) (+ (log (cbrt (+ (* x -0.166667) 1.5))) (log (cbrt (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (+ (log (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))) (+ (log (cbrt (+ (* x -0.166667) 1.5))) (log (cbrt (+ (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 44 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (exp (+ (log (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (+ (log (cbrt (+ 1.5 (* -0.166667 x)))) (log (* x x)))))))>
* [enter]simplify:  Simplifying (+ (log (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (+ (log (cbrt (+ 1.5 (* -0.166667 x)))) (log (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* x -0.166667) 1.5))) (+ (log x) (log x))) (log (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* x -0.166667) 1.5))) (+ (log x) (log x))) (log (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 45 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (exp (+ (log (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (log (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (+ (log (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (log (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* * [misc]simplify:  iters left: 1 (68 enodes)
* [exit]simplify:  Simplified to (+ (log (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))) (+ (log (cbrt (+ (* x -0.166667) 1.5))) (log (cbrt (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (+ (log (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))) (+ (log (cbrt (+ (* x -0.166667) 1.5))) (log (cbrt (+ (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 46 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (exp (log (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (log (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (96 enodes)
* * [misc]simplify:  iters left: 2 (111 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (log (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 47 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (exp (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (exp (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 48 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (cbrt (* (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) (* (+ 1.5 (* -0.166667 x)) (* (* (* x x) (* x x)) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) (* (+ 1.5 (* -0.166667 x)) (* (* (* x x) (* x x)) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* [exit]simplify:  Simplified to (* (* (pow (* x x) 3) (+ (* x -0.166667) 1.5)) (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* (pow (* x x) 3) (+ (* x -0.166667) 1.5)) (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 49 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (cbrt (* (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (130 enodes)
* [exit]simplify:  Simplified to (* (* (* (+ (* x -0.166667) 1.5) (* x x)) (cbrt (+ (* x -0.166667) 1.5))) (* (* (* (+ (* x -0.166667) 1.5) (* x x)) (cbrt (+ (* x -0.166667) 1.5))) (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (* (* (+ (* x -0.166667) 1.5) (* x x)) (cbrt (+ (* x -0.166667) 1.5))) (* (* (* (+ (* x -0.166667) 1.5) (* x x)) (cbrt (+ (* x -0.166667) 1.5))) (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 50 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (cbrt (* (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (* (+ 1.5 (* -0.166667 x)) (* (* (* x x) (* x x)) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (* (+ 1.5 (* -0.166667 x)) (* (* (* x x) (* x x)) (* x x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5)) (* (+ (* x -0.166667) 1.5) (* (pow x 3) (pow x 3))))
* [exit]simplify:  Simplified to (* (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5)) (* (+ (* x -0.166667) 1.5) (* (pow x 3) (pow x 3))))
* * * * [misc]progress:  [ 51 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (cbrt (* (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* * [misc]simplify:  iters left: 3 (477 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5)) (* (* (pow x 3) (pow x 3)) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5)) (* (* (pow x 3) (pow x 3)) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 52 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))) (cbrt (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (cbrt (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))) (cbrt (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [enter]simplify:  Simplifying (cbrt (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* x -0.166667) 1.5) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (+ (* x -0.166667) 1.5) (* x x)))
* * * * [misc]progress:  [ 53 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (cbrt (* (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (349 enodes)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* * * * [misc]progress:  [ 54 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))) (sqrt (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* x -0.166667) 1.5) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (+ (* x -0.166667) 1.5) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* x -0.166667) 1.5) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (+ (* x -0.166667) 1.5) (* x x)))
* * * * [misc]progress:  [ 55 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (141 enodes)
* * [misc]simplify:  iters left: 1 (157 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* -0.166667 x)) (* (* -0.166667 x) (* -0.166667 x))) (* (pow 1.5 3) (* x x)))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* -0.166667 x)) (* (* -0.166667 x) (* -0.166667 x))) (* (pow 1.5 3) (* x x)))
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (133 enodes)
* * [misc]simplify:  iters left: 1 (151 enodes)
* [exit]simplify:  Simplified to (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x))))
* [exit]simplify:  Simplified to (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x))))
* * * * [misc]progress:  [ 56 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (204 enodes)
* * [misc]simplify:  iters left: 2 (316 enodes)
* * [misc]simplify:  iters left: 1 (459 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))))
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))))
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (127 enodes)
* * [misc]simplify:  iters left: 2 (139 enodes)
* * [misc]simplify:  iters left: 1 (155 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* -0.166667 x))) (* (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x))))) (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* -0.166667 x))) (* (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x))))) (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x)))))))
* * * * [misc]progress:  [ 57 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (109 enodes)
* * [misc]simplify:  iters left: 3 (217 enodes)
* * [misc]simplify:  iters left: 2 (325 enodes)
* * [misc]simplify:  iters left: 1 (456 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))))))
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))))))
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (127 enodes)
* * [misc]simplify:  iters left: 2 (139 enodes)
* * [misc]simplify:  iters left: 1 (155 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x))))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x))))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x)))))))
* * * * [misc]progress:  [ 58 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (214 enodes)
* * [misc]simplify:  iters left: 2 (315 enodes)
* * [misc]simplify:  iters left: 1 (442 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))))))
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))))))
* [enter]simplify:  Simplifying (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (126 enodes)
* * [misc]simplify:  iters left: 2 (138 enodes)
* * [misc]simplify:  iters left: 1 (154 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (- 1.5 (* -0.166667 x))))))
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (- 1.5 (* -0.166667 x))))))
* * * * [misc]progress:  [ 59 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (210 enodes)
* * [misc]simplify:  iters left: 2 (322 enodes)
* * [misc]simplify:  iters left: 1 (450 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5)))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5)))))
* [enter]simplify:  Simplifying (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (127 enodes)
* * [misc]simplify:  iters left: 2 (141 enodes)
* * [misc]simplify:  iters left: 1 (157 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667)))) (cbrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667))))) (cbrt (- 1.5 (* x -0.166667))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667)))) (cbrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667))))) (cbrt (- 1.5 (* x -0.166667))))
* * * * [misc]progress:  [ 60 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (109 enodes)
* * [misc]simplify:  iters left: 3 (215 enodes)
* * [misc]simplify:  iters left: 2 (328 enodes)
* * [misc]simplify:  iters left: 1 (461 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))) (* x x)) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5)))))
* [exit]simplify:  Simplified to (* (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))) (* x x)) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5)))))
* [enter]simplify:  Simplifying (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (128 enodes)
* * [misc]simplify:  iters left: 2 (142 enodes)
* * [misc]simplify:  iters left: 1 (158 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667)))) (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667)))) (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667)))))
* * * * [misc]progress:  [ 61 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (207 enodes)
* * [misc]simplify:  iters left: 2 (313 enodes)
* * [misc]simplify:  iters left: 1 (454 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5)))) (* (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3))) (* x x)))
* [exit]simplify:  Simplified to (* (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5)))) (* (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3))) (* x x)))
* [enter]simplify:  Simplifying (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (128 enodes)
* * [misc]simplify:  iters left: 2 (142 enodes)
* * [misc]simplify:  iters left: 1 (158 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667)))) (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667)))) (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 62 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (128 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (364 enodes)
* [exit]simplify:  Simplified to (* (- 1.5 (* -0.166667 x)) (* (+ (* -0.166667 x) 1.5) (* x x)))
* [exit]simplify:  Simplified to (* (- 1.5 (* -0.166667 x)) (* (+ (* -0.166667 x) 1.5) (* x x)))
* [enter]simplify:  Simplifying (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* [exit]simplify:  Simplified to (- 1.5 (* x -0.166667))
* [exit]simplify:  Simplified to (- 1.5 (* x -0.166667))
* * * * [misc]progress:  [ 63 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (83 enodes)
* * [misc]simplify:  iters left: 3 (145 enodes)
* * [misc]simplify:  iters left: 2 (193 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (cbrt (+ (* x -0.166667) 1.5))) (* (* x x) (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3)))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (cbrt (+ (* x -0.166667) 1.5))) (* (* x x) (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3)))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (113 enodes)
* * [misc]simplify:  iters left: 2 (132 enodes)
* * [misc]simplify:  iters left: 1 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x)))))
* * * * [misc]progress:  [ 64 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (241 enodes)
* * [misc]simplify:  iters left: 2 (382 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (* x x)) (* (cbrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))) (cbrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (* x x)) (* (cbrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))) (cbrt (+ (* x -0.166667) 1.5))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (122 enodes)
* * [misc]simplify:  iters left: 2 (134 enodes)
* * [misc]simplify:  iters left: 1 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x))))))
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x))))))
* * * * [misc]progress:  [ 65 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (234 enodes)
* * [misc]simplify:  iters left: 2 (372 enodes)
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ (* x -0.166667) 1.5)) (* x x)) (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3)))) (cbrt (- (* 1.5 1.5) (* (* x -0.166667) (* x -0.166667)))))
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ (* x -0.166667) 1.5)) (* x x)) (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3)))) (cbrt (- (* 1.5 1.5) (* (* x -0.166667) (* x -0.166667)))))
* [enter]simplify:  Simplifying (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (122 enodes)
* * [misc]simplify:  iters left: 2 (134 enodes)
* * [misc]simplify:  iters left: 1 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667)))) (cbrt (- 1.5 (* x -0.166667))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667)))) (cbrt (- 1.5 (* x -0.166667))))
* * * * [misc]progress:  [ 66 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (156 enodes)
* * [misc]simplify:  iters left: 2 (236 enodes)
* * [misc]simplify:  iters left: 1 (363 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (* x -0.166667) 1.5))) (* (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))) (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (* x -0.166667) 1.5))) (* (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))) (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5)))))
* [enter]simplify:  Simplifying (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667))))
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667))))
* * * * [misc]progress:  [ 67 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (148 enodes)
* * [misc]simplify:  iters left: 2 (207 enodes)
* * [misc]simplify:  iters left: 1 (218 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))
* [exit]simplify:  Simplified to (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))
* [enter]simplify:  Simplifying (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (113 enodes)
* * [misc]simplify:  iters left: 2 (132 enodes)
* * [misc]simplify:  iters left: 1 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x)))))
* * * * [misc]progress:  [ 68 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (240 enodes)
* * [misc]simplify:  iters left: 2 (381 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (* (+ 1.5 (* -0.166667 x)) (- 1.5 (* -0.166667 x))))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (* (+ 1.5 (* -0.166667 x)) (- 1.5 (* -0.166667 x))))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (122 enodes)
* * [misc]simplify:  iters left: 2 (134 enodes)
* * [misc]simplify:  iters left: 1 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x))))))
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x))))))
* * * * [misc]progress:  [ 69 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (236 enodes)
* * [misc]simplify:  iters left: 2 (377 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))) (* (cbrt (+ (* -0.166667 x) 1.5)) x)) (* (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3))) x))
* [exit]simplify:  Simplified to (* (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))) (* (cbrt (+ (* -0.166667 x) 1.5)) x)) (* (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3))) x))
* [enter]simplify:  Simplifying (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (122 enodes)
* * [misc]simplify:  iters left: 2 (134 enodes)
* * [misc]simplify:  iters left: 1 (150 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667)))) (cbrt (- 1.5 (* x -0.166667))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667)))) (cbrt (- 1.5 (* x -0.166667))))
* * * * [misc]progress:  [ 70 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (158 enodes)
* * [misc]simplify:  iters left: 2 (244 enodes)
* * [misc]simplify:  iters left: 1 (374 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))) (* (* x x) (cbrt (+ (* -0.166667 x) 1.5)))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))))
* [exit]simplify:  Simplified to (* (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))) (* (* x x) (cbrt (+ (* -0.166667 x) 1.5)))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))))
* [enter]simplify:  Simplifying (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667))))
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667))))
* * * * [misc]progress:  [ 71 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* 1 (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))))>
* * * * [misc]progress:  [ 72 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x)))) (* x x))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (+ (* x -0.166667) 1.5)
* [exit]simplify:  Simplified to (+ (* x -0.166667) 1.5)
* * * * [misc]progress:  [ 73 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (cbrt (+ 1.5 (* -0.166667 x))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* [exit]simplify:  Simplified to (* (* x (cbrt (+ (* x -0.166667) 1.5))) (* x (cbrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (* x (cbrt (+ (* x -0.166667) 1.5))) (* x (cbrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 74 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (138 enodes)
* * [misc]simplify:  iters left: 2 (201 enodes)
* * [misc]simplify:  iters left: 1 (219 enodes)
* [exit]simplify:  Simplified to (* (* x (cbrt (+ (* x -0.166667) 1.5))) (* (cbrt (+ (pow 1.5 3) (pow (* x -0.166667) 3))) (* x (cbrt (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (* x (cbrt (+ (* x -0.166667) 1.5))) (* (cbrt (+ (pow 1.5 3) (pow (* x -0.166667) 3))) (* x (cbrt (+ (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 75 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))) (cbrt (- 1.5 (* -0.166667 x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (152 enodes)
* * [misc]simplify:  iters left: 2 (243 enodes)
* * [misc]simplify:  iters left: 1 (383 enodes)
* [exit]simplify:  Simplified to (* (* x (cbrt (+ (* x -0.166667) 1.5))) (* (* x (cbrt (+ (* x -0.166667) 1.5))) (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (* x (cbrt (+ (* x -0.166667) 1.5))) (* (* x (cbrt (+ (* x -0.166667) 1.5))) (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 76 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (147 enodes)
* * [misc]simplify:  iters left: 2 (199 enodes)
* * [misc]simplify:  iters left: 1 (214 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) x) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (cbrt (+ 1.5 (* -0.166667 x))) x)))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) x) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (cbrt (+ 1.5 (* -0.166667 x))) x)))
* * * * [misc]progress:  [ 77 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (240 enodes)
* * [misc]simplify:  iters left: 2 (387 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))))))
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))))))
* * * * [misc]progress:  [ 78 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (235 enodes)
* * [misc]simplify:  iters left: 2 (380 enodes)
* [exit]simplify:  Simplified to (* (* (* (* x x) (cbrt (+ (* -0.166667 x) 1.5))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))))
* [exit]simplify:  Simplified to (* (* (* (* x x) (cbrt (+ (* -0.166667 x) 1.5))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))))
* * * * [misc]progress:  [ 79 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (152 enodes)
* * [misc]simplify:  iters left: 2 (243 enodes)
* * [misc]simplify:  iters left: 1 (383 enodes)
* [exit]simplify:  Simplified to (* (* (* (* x x) (cbrt (+ (* -0.166667 x) 1.5))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5)))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))))
* [exit]simplify:  Simplified to (* (* (* (* x x) (cbrt (+ (* -0.166667 x) 1.5))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5)))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))))
* * * * [misc]progress:  [ 80 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (153 enodes)
* * [misc]simplify:  iters left: 2 (213 enodes)
* * [misc]simplify:  iters left: 1 (219 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (* x (cbrt (+ (* x -0.166667) 1.5)))) (* x (cbrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (* x (cbrt (+ (* x -0.166667) 1.5)))) (* x (cbrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 81 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (cbrt (- 1.5 (* -0.166667 x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (158 enodes)
* * [misc]simplify:  iters left: 2 (243 enodes)
* * [misc]simplify:  iters left: 1 (380 enodes)
* [exit]simplify:  Simplified to (* (* x (cbrt (+ (* x -0.166667) 1.5))) (* (* x (cbrt (+ (* x -0.166667) 1.5))) (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (* x (cbrt (+ (* x -0.166667) 1.5))) (* (* x (cbrt (+ (* x -0.166667) 1.5))) (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 82 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (83 enodes)
* * [misc]simplify:  iters left: 3 (147 enodes)
* * [misc]simplify:  iters left: 2 (202 enodes)
* * [misc]simplify:  iters left: 1 (207 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (cbrt (+ 1.5 (* -0.166667 x))) x)) (* (cbrt (+ 1.5 (* -0.166667 x))) x))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (cbrt (+ 1.5 (* -0.166667 x))) x)) (* (cbrt (+ 1.5 (* -0.166667 x))) x))
* * * * [misc]progress:  [ 83 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (cbrt (- 1.5 (* -0.166667 x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (156 enodes)
* * [misc]simplify:  iters left: 2 (236 enodes)
* * [misc]simplify:  iters left: 1 (363 enodes)
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ (* -0.166667 x) 1.5)) x) (* (cbrt (+ (* -0.166667 x) 1.5)) x)) (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))))
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ (* -0.166667 x) 1.5)) x) (* (cbrt (+ (* -0.166667 x) 1.5)) x)) (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))))
* * * * [misc]progress:  [ 84 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)) (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))))))>
* * * * [misc]progress:  [ 85 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (pow (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)) 1))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 86 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (pow (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)) 1))))>
* * * * [misc]progress:  [ 87 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (exp (+ (log (cbrt (+ 1.5 (* -0.166667 x)))) (log (* x x)))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (+ 1.5 (* -0.166667 x)))) (log (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* [exit]simplify:  Simplified to (+ (log (* x x)) (log (cbrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (+ (log (* x x)) (log (cbrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 88 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (exp (log (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (cbrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (log (* (* x x) (cbrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 89 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (log (exp (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (cbrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (exp (* (* x x) (cbrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 90 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* (* (* x x) (* x x)) (* x x)))))))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (143 enodes)
* * [misc]simplify:  iters left: 2 (337 enodes)
* * [misc]simplify:  iters left: 1 (420 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) 3) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (pow (* x x) 3) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 91 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (* (cbrt (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (cbrt (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))) (cbrt (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (cbrt (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))) (cbrt (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))) (cbrt (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (cbrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (cbrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 92 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (cbrt (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (283 enodes)
* * [misc]simplify:  iters left: 1 (448 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) 3) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (pow (* x x) 3) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 93 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (sqrt (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (sqrt (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (cbrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (cbrt (+ (* x -0.166667) 1.5))))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (cbrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (cbrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 94 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* 1 (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))))>
* * * * [misc]progress:  [ 95 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) x)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* [exit]simplify:  Simplified to (* x (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* x (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 96 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (cbrt (+ 1.5 (* -0.166667 x)))) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ 1.5 (* -0.166667 x)))) (* x x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* (* x x) (cbrt (cbrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (* x x) (cbrt (cbrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 97 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (sqrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (sqrt (+ 1.5 (* -0.166667 x)))) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ 1.5 (* -0.166667 x)))) (* x x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* (* x x) (cbrt (sqrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (* x x) (cbrt (sqrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 98 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt 1) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 99 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (* (cbrt (cbrt (+ 1.5 (* -0.166667 x)))) (cbrt (cbrt (+ 1.5 (* -0.166667 x))))) (* (cbrt (cbrt (+ 1.5 (* -0.166667 x)))) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ 1.5 (* -0.166667 x)))) (* x x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* (* x x) (cbrt (cbrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (* x x) (cbrt (cbrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 100 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (sqrt (cbrt (+ 1.5 (* -0.166667 x)))) (* (sqrt (cbrt (+ 1.5 (* -0.166667 x)))) (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (+ 1.5 (* -0.166667 x)))) (* x x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* (* x x) (sqrt (cbrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (* x x) (sqrt (cbrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 101 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* 1 (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 102 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (/ (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (113 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))
* * * * [misc]progress:  [ 103 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (/ (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (91 enodes)
* * [misc]simplify:  iters left: 2 (152 enodes)
* * [misc]simplify:  iters left: 1 (279 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))) (* x x))
* [exit]simplify:  Simplified to (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))) (* x x))
* * * * [misc]progress:  [ 104 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (* x x) (cbrt (+ 1.5 (* -0.166667 x)))))))>
* * * * [misc]progress:  [ 105 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (+ (* x -3.0) 1.0)) (exp (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (* (exp (+ (* x -3.0) 1.0)) (exp (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (120 enodes)
* * [misc]simplify:  iters left: 1 (144 enodes)
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ (* -0.166667 x) 1.5)) (exp (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ (* -0.166667 x) 1.5)) (exp (+ 1.0 (* x -3.0))))
* * * * [misc]progress:  [ 106 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))) 1))>
* * * * [misc]progress:  [ 107 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (log (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (77 enodes)
* * [misc]simplify:  iters left: 2 (89 enodes)
* * [misc]simplify:  iters left: 1 (111 enodes)
* [exit]simplify:  Simplified to (log (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (log (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0))))
* * * * [misc]progress:  [ 108 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (exp (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (120 enodes)
* * [misc]simplify:  iters left: 2 (141 enodes)
* * [misc]simplify:  iters left: 1 (173 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (exp (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0))))
* * * * [misc]progress:  [ 109 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (78 enodes)
* * [misc]simplify:  iters left: 2 (92 enodes)
* * [misc]simplify:  iters left: 1 (108 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))) (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))) (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))))
* [enter]simplify:  Simplifying (cbrt (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (77 enodes)
* * [misc]simplify:  iters left: 2 (89 enodes)
* * [misc]simplify:  iters left: 1 (111 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0))))
* * * * [misc]progress:  [ 110 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (189 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* (* x x) (cbrt (+ 1.5 (* x -0.166667)))) (* (cbrt (+ 1.5 (* x -0.166667))) (cbrt (+ 1.5 (* x -0.166667))))) (+ 1.0 (* x -3.0))) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* (* x x) (cbrt (+ 1.5 (* x -0.166667)))) (* (cbrt (+ 1.5 (* x -0.166667))) (cbrt (+ 1.5 (* x -0.166667))))) (+ 1.0 (* x -3.0))) 3)
* * * * [misc]progress:  [ 111 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (sqrt (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (77 enodes)
* * [misc]simplify:  iters left: 2 (89 enodes)
* * [misc]simplify:  iters left: 1 (111 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (sqrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0))))
* [enter]simplify:  Simplifying (sqrt (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (77 enodes)
* * [misc]simplify:  iters left: 2 (89 enodes)
* * [misc]simplify:  iters left: 1 (111 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (sqrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0))))
* * * * [misc]progress:  [ 112 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (96 enodes)
* * [misc]simplify:  iters left: 4 (260 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (* x x)) (pow (cbrt (+ (pow 1.5 3) (pow (* x -0.166667) 3))) 3)))
* [exit]simplify:  Simplified to (+ (* (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (* x x)) (pow (cbrt (+ (pow 1.5 3) (pow (* x -0.166667) 3))) 3)))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* * [misc]simplify:  iters left: 3 (325 enodes)
* [exit]simplify:  Simplified to (* (- (* (* x -0.166667) (* x -0.166667)) (* (- (* x -0.166667) 1.5) 1.5)) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))
* [exit]simplify:  Simplified to (* (- (* (* x -0.166667) (* x -0.166667)) (* (- (* x -0.166667) 1.5) 1.5)) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))
* * * * [misc]progress:  [ 113 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (304 enodes)
* [exit]simplify:  Simplified to (+ (* (* (+ (* 1.0 (- 1.0 (* x -3.0))) (* (* x -3.0) (* x -3.0))) (cbrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667))))) (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (* x x)))) (* (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (- 1.5 (* x -0.166667)))) (* (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))))))
* [exit]simplify:  Simplified to (+ (* (* (+ (* 1.0 (- 1.0 (* x -3.0))) (* (* x -3.0) (* x -3.0))) (cbrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667))))) (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (* x x)))) (* (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (- 1.5 (* x -0.166667)))) (* (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* * [misc]simplify:  iters left: 3 (387 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- 1.5 (* x -0.166667)) 1.5) (* (* x -0.166667) (* x -0.166667)))) (* (cbrt (+ (* (- 1.5 (* x -0.166667)) 1.5) (* (* x -0.166667) (* x -0.166667)))) (* (cbrt (- 1.5 (* x -0.166667))) (- (* 1.0 1.0) (* (- 1.0 (* x -3.0)) (* x -3.0))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (- 1.5 (* x -0.166667)) 1.5) (* (* x -0.166667) (* x -0.166667)))) (* (cbrt (+ (* (- 1.5 (* x -0.166667)) 1.5) (* (* x -0.166667) (* x -0.166667)))) (* (cbrt (- 1.5 (* x -0.166667))) (- (* 1.0 1.0) (* (- 1.0 (* x -3.0)) (* x -3.0))))))
* * * * [misc]progress:  [ 114 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (307 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))) (+ (* 1.0 (- 1.0 (* x -3.0))) (* (* x -3.0) (* x -3.0)))) (* (* x (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3)))) (* x (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3)))))) (* (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (cbrt (- 1.5 (* x -0.166667))) (+ (pow (* x -3.0) 3) (pow 1.0 3))))))
* [exit]simplify:  Simplified to (+ (* (* (cbrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))) (+ (* 1.0 (- 1.0 (* x -3.0))) (* (* x -3.0) (* x -3.0)))) (* (* x (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3)))) (* x (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3)))))) (* (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (cbrt (- 1.5 (* x -0.166667))) (+ (pow (* x -3.0) 3) (pow 1.0 3))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* * [misc]simplify:  iters left: 3 (365 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (- 1.5 (* x -0.166667)) 1.5) (* (* x -0.166667) (* x -0.166667)))) (- (* 1.0 1.0) (* (- 1.0 (* x -3.0)) (* x -3.0)))) (* (cbrt (+ (* (- 1.5 (* x -0.166667)) 1.5) (* (* x -0.166667) (* x -0.166667)))) (cbrt (- 1.5 (* x -0.166667)))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (- 1.5 (* x -0.166667)) 1.5) (* (* x -0.166667) (* x -0.166667)))) (- (* 1.0 1.0) (* (- 1.0 (* x -3.0)) (* x -3.0)))) (* (cbrt (+ (* (- 1.5 (* x -0.166667)) 1.5) (* (* x -0.166667) (* x -0.166667)))) (cbrt (- 1.5 (* x -0.166667)))))
* * * * [misc]progress:  [ 115 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (110 enodes)
* * [misc]simplify:  iters left: 4 (310 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (+ (* 1.0 (- 1.0 (* x -3.0))) (* (* x -3.0) (* x -3.0)))) (* (* x (cbrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667))))) (* x (cbrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667))))))) (* (* (* (cbrt (- 1.5 (* x -0.166667))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (cbrt (- 1.5 (* x -0.166667)))) (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5))))))
* [exit]simplify:  Simplified to (+ (* (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (+ (* 1.0 (- 1.0 (* x -3.0))) (* (* x -3.0) (* x -3.0)))) (* (* x (cbrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667))))) (* x (cbrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667))))))) (* (* (* (cbrt (- 1.5 (* x -0.166667))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (cbrt (- 1.5 (* x -0.166667)))) (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* * [misc]simplify:  iters left: 3 (384 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667))))) (cbrt (+ (* (- 1.5 (* x -0.166667)) 1.5) (* (* x -0.166667) (* x -0.166667)))))
* [exit]simplify:  Simplified to (* (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667))))) (cbrt (+ (* (- 1.5 (* x -0.166667)) 1.5) (* (* x -0.166667) (* x -0.166667)))))
* * * * [misc]progress:  [ 116 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (110 enodes)
* * [misc]simplify:  iters left: 4 (310 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))) (* (* x (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3)))) (* x (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3)))))) (* (* (cbrt (+ (* 1.5 (- 1.5 (* -0.166667 x))) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (* 1.5 (- 1.5 (* -0.166667 x))) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3)))))
* [exit]simplify:  Simplified to (+ (* (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))) (* (* x (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3)))) (* x (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3)))))) (* (* (cbrt (+ (* 1.5 (- 1.5 (* -0.166667 x))) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (* 1.5 (- 1.5 (* -0.166667 x))) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3)))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* * [misc]simplify:  iters left: 3 (384 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0))) (* (cbrt (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667)))) (cbrt (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667))))))
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0))) (* (cbrt (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667)))) (cbrt (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667))))))
* * * * [misc]progress:  [ 117 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (307 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))) (* (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))) x) (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))) x))) (* (* (cbrt (- 1.5 (* -0.166667 x))) (* (cbrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3)))) (cbrt (+ (* 1.5 (- 1.5 (* -0.166667 x))) (* (* -0.166667 x) (* -0.166667 x))))))
* [exit]simplify:  Simplified to (+ (* (* (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))) (* (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))) x) (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))) x))) (* (* (cbrt (- 1.5 (* -0.166667 x))) (* (cbrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3)))) (cbrt (+ (* 1.5 (- 1.5 (* -0.166667 x))) (* (* -0.166667 x) (* -0.166667 x))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* * [misc]simplify:  iters left: 3 (365 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667))))) (cbrt (+ (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- 1.5 (* x -0.166667))))))
* [exit]simplify:  Simplified to (* (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667))))) (cbrt (+ (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- 1.5 (* x -0.166667))))))
* * * * [misc]progress:  [ 118 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (304 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3))) (* (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))))) (* (+ (* 1.0 (- 1.0 (* x -3.0))) (* (* x -3.0) (* x -3.0))) (* x x)))) (* (* (* (cbrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x)))))))
* [exit]simplify:  Simplified to (+ (* (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3))) (* (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))))) (* (+ (* 1.0 (- 1.0 (* x -3.0))) (* (* x -3.0) (* x -3.0))) (* x x)))) (* (* (* (cbrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x)))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* (- (* x -0.166667) 1.5) 1.5))) (* (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667)))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* (- (* x -0.166667) 1.5) 1.5))) (* (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667)))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0))))
* * * * [misc]progress:  [ 119 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (81 enodes)
* * [misc]simplify:  iters left: 4 (221 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (* x x)) (pow (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) 3)))
* [exit]simplify:  Simplified to (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (* x x)) (pow (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) 3)))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (232 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))) (- 1.5 (* x -0.166667)))
* [exit]simplify:  Simplified to (* (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))) (- 1.5 (* x -0.166667)))
* * * * [misc]progress:  [ 120 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (98 enodes)
* * [misc]simplify:  iters left: 4 (265 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3)))) (* (* (* x x) (cbrt (+ (* x -0.166667) 1.5))) (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))))) (* (cbrt (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667)))) (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667)))))))
* [exit]simplify:  Simplified to (+ (* (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3)))) (* (* (* x x) (cbrt (+ (* x -0.166667) 1.5))) (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))))) (* (cbrt (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667)))) (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667)))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* * [misc]simplify:  iters left: 3 (291 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))) (* (cbrt (+ (* (- (* x -0.166667) 1.5) (* x -0.166667)) (* 1.5 1.5))) (cbrt (+ (* (- (* x -0.166667) 1.5) (* x -0.166667)) (* 1.5 1.5)))))
* [exit]simplify:  Simplified to (* (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))) (* (cbrt (+ (* (- (* x -0.166667) 1.5) (* x -0.166667)) (* 1.5 1.5))) (cbrt (+ (* (- (* x -0.166667) 1.5) (* x -0.166667)) (* 1.5 1.5)))))
* * * * [misc]progress:  [ 121 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (304 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667)))) (* (cbrt (- 1.5 (* x -0.166667))) (+ (pow (* x -3.0) 3) (pow 1.0 3)))) (* (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3)))) (* (* (cbrt (+ (* x -0.166667) 1.5)) (* x x)) (cbrt (- (* 1.5 1.5) (* (* x -0.166667) (* x -0.166667)))))))
* [exit]simplify:  Simplified to (+ (* (cbrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667)))) (* (cbrt (- 1.5 (* x -0.166667))) (+ (pow (* x -3.0) 3) (pow 1.0 3)))) (* (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3)))) (* (* (cbrt (+ (* x -0.166667) 1.5)) (* x x)) (cbrt (- (* 1.5 1.5) (* (* x -0.166667) (* x -0.166667)))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (329 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x -0.166667) (- (* x -0.166667) 1.5)) (* 1.5 1.5))) (* (cbrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x -0.166667) (- (* x -0.166667) 1.5)) (* 1.5 1.5))) (* (cbrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))))
* * * * [misc]progress:  [ 122 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (304 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (cbrt (+ (* 1.5 (- 1.5 (* -0.166667 x))) (* (* -0.166667 x) (* -0.166667 x))))) (* (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (* x x) (cbrt (+ 1.5 (* -0.166667 x)))))))
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (cbrt (+ (* 1.5 (- 1.5 (* -0.166667 x))) (* (* -0.166667 x) (* -0.166667 x))))) (* (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (* x x) (cbrt (+ 1.5 (* -0.166667 x)))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (328 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))) (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))) (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 123 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (82 enodes)
* * [misc]simplify:  iters left: 4 (225 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)) (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))))))
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)) (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (193 enodes)
* * [misc]simplify:  iters left: 2 (461 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667)))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667)))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))
* * * * [misc]progress:  [ 124 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (98 enodes)
* * [misc]simplify:  iters left: 4 (266 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3)))) (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (* (* x x) (cbrt (+ (* x -0.166667) 1.5))))) (* (cbrt (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667)))) (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667)))))))
* [exit]simplify:  Simplified to (+ (* (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3)))) (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (* (* x x) (cbrt (+ (* x -0.166667) 1.5))))) (* (cbrt (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667)))) (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (+ (* 1.5 1.5) (* (- (* x -0.166667) 1.5) (* x -0.166667)))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* * [misc]simplify:  iters left: 3 (291 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))) (* (cbrt (+ (* (- (* x -0.166667) 1.5) (* x -0.166667)) (* 1.5 1.5))) (cbrt (+ (* (- (* x -0.166667) 1.5) (* x -0.166667)) (* 1.5 1.5)))))
* [exit]simplify:  Simplified to (* (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))) (* (cbrt (+ (* (- (* x -0.166667) 1.5) (* x -0.166667)) (* 1.5 1.5))) (cbrt (+ (* (- (* x -0.166667) 1.5) (* x -0.166667)) (* 1.5 1.5)))))
* * * * [misc]progress:  [ 125 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (304 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667)))) (* (cbrt (- 1.5 (* x -0.166667))) (+ (pow (* x -3.0) 3) (pow 1.0 3)))) (* (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3)))) (* (* (cbrt (+ (* x -0.166667) 1.5)) (* x x)) (cbrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))))))
* [exit]simplify:  Simplified to (+ (* (cbrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667)))) (* (cbrt (- 1.5 (* x -0.166667))) (+ (pow (* x -3.0) 3) (pow 1.0 3)))) (* (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3)))) (* (* (cbrt (+ (* x -0.166667) 1.5)) (* x x)) (cbrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (329 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x -0.166667) (- (* x -0.166667) 1.5)) (* 1.5 1.5))) (* (cbrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x -0.166667) (- (* x -0.166667) 1.5)) (* 1.5 1.5))) (* (cbrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))))
* * * * [misc]progress:  [ 126 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (304 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (cbrt (+ (* 1.5 (- 1.5 (* -0.166667 x))) (* (* -0.166667 x) (* -0.166667 x))))) (* (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))) (* (* x x) (cbrt (+ 1.5 (* -0.166667 x)))))))
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (cbrt (+ (* 1.5 (- 1.5 (* -0.166667 x))) (* (* -0.166667 x) (* -0.166667 x))))) (* (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))) (* (* x x) (cbrt (+ 1.5 (* -0.166667 x)))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (328 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))) (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))) (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 127 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (82 enodes)
* * [misc]simplify:  iters left: 4 (226 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))))))
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (193 enodes)
* * [misc]simplify:  iters left: 2 (461 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667)))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667)))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))
* * * * [misc]progress:  [ 128 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (94 enodes)
* * [misc]simplify:  iters left: 4 (255 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))) (* (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5))) (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))))) (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5))))))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))) (* (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5))) (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))))) (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (259 enodes)
* * [misc]simplify:  iters left: 2 (432 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* (- (* x -0.166667) 1.5) 1.5))) (+ (* (- (* x -3.0) 1.0) (* x -3.0)) (* 1.0 1.0)))
* [exit]simplify:  Simplified to (* (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* (- (* x -0.166667) 1.5) 1.5))) (+ (* (- (* x -3.0) 1.0) (* x -3.0)) (* 1.0 1.0)))
* * * * [misc]progress:  [ 129 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (- 1.5 (* -0.166667 x)))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (cbrt (- 1.5 (* -0.166667 x))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (- 1.5 (* -0.166667 x)))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (78 enodes)
* * [misc]simplify:  iters left: 4 (215 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))))) (* (cbrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3))))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))))) (* (cbrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (cbrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (163 enodes)
* * [misc]simplify:  iters left: 2 (324 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))
* * * * [misc]progress:  [ 130 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (97 enodes)
* * [misc]simplify:  iters left: 4 (260 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (* (cbrt (+ (* x -0.166667) 1.5)) (* x x))) (* (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))) (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))))) (* (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5)))) (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5)))))))
* [exit]simplify:  Simplified to (+ (* (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (* (cbrt (+ (* x -0.166667) 1.5)) (* x x))) (* (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))) (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))))) (* (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5)))) (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5)))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* * [misc]simplify:  iters left: 3 (291 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))) (* (cbrt (+ (* (- (* x -0.166667) 1.5) (* x -0.166667)) (* 1.5 1.5))) (cbrt (+ (* (- (* x -0.166667) 1.5) (* x -0.166667)) (* 1.5 1.5)))))
* [exit]simplify:  Simplified to (* (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))) (* (cbrt (+ (* (- (* x -0.166667) 1.5) (* x -0.166667)) (* 1.5 1.5))) (cbrt (+ (* (- (* x -0.166667) 1.5) (* x -0.166667)) (* 1.5 1.5)))))
* * * * [misc]progress:  [ 131 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (304 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667)))) (* (cbrt (- 1.5 (* x -0.166667))) (+ (pow (* x -3.0) 3) (pow 1.0 3)))) (* (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3)))) (* (* (* x x) (cbrt (+ (* x -0.166667) 1.5))) (cbrt (- (* 1.5 1.5) (* (* x -0.166667) (* x -0.166667)))))))
* [exit]simplify:  Simplified to (+ (* (cbrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667)))) (* (cbrt (- 1.5 (* x -0.166667))) (+ (pow (* x -3.0) 3) (pow 1.0 3)))) (* (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3)))) (* (* (* x x) (cbrt (+ (* x -0.166667) 1.5))) (cbrt (- (* 1.5 1.5) (* (* x -0.166667) (* x -0.166667)))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (329 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x -0.166667) (- (* x -0.166667) 1.5)) (* 1.5 1.5))) (* (cbrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x -0.166667) (- (* x -0.166667) 1.5)) (* 1.5 1.5))) (* (cbrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))))
* * * * [misc]progress:  [ 132 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (304 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (cbrt (+ (* 1.5 (- 1.5 (* -0.166667 x))) (* (* -0.166667 x) (* -0.166667 x))))) (* (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3)))) (* (* (* x x) (cbrt (+ 1.5 (* -0.166667 x)))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))))))
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (cbrt (+ (* 1.5 (- 1.5 (* -0.166667 x))) (* (* -0.166667 x) (* -0.166667 x))))) (* (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3)))) (* (* (* x x) (cbrt (+ 1.5 (* -0.166667 x)))) (cbrt (* (- 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x)))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (328 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))) (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0))))) (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))))
* * * * [misc]progress:  [ 133 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (81 enodes)
* * [misc]simplify:  iters left: 4 (220 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))) (* (cbrt (* (+ 1.5 (* -0.166667 x)) (- 1.5 (* -0.166667 x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (- 1.5 (* -0.166667 x)))))))
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (+ (pow (* x -3.0) 3) (pow 1.0 3))) (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))) (* (cbrt (* (+ 1.5 (* -0.166667 x)) (- 1.5 (* -0.166667 x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (- 1.5 (* -0.166667 x)))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (193 enodes)
* * [misc]simplify:  iters left: 2 (461 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667)))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667)))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))
* * * * [misc]progress:  [ 134 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (95 enodes)
* * [misc]simplify:  iters left: 4 (261 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (* (cbrt (+ (* x -0.166667) 1.5)) x)) (* (cbrt (+ (pow 1.5 3) (pow (* x -0.166667) 3))) (* (cbrt (+ (* x -0.166667) 1.5)) x))) (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5))))))
* [exit]simplify:  Simplified to (+ (* (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (* (cbrt (+ (* x -0.166667) 1.5)) x)) (* (cbrt (+ (pow 1.5 3) (pow (* x -0.166667) 3))) (* (cbrt (+ (* x -0.166667) 1.5)) x))) (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (259 enodes)
* * [misc]simplify:  iters left: 2 (432 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* (- (* x -0.166667) 1.5) 1.5))) (+ (* (- (* x -3.0) 1.0) (* x -3.0)) (* 1.0 1.0)))
* [exit]simplify:  Simplified to (* (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* (- (* x -0.166667) 1.5) 1.5))) (+ (* (- (* x -3.0) 1.0) (* x -3.0)) (* 1.0 1.0)))
* * * * [misc]progress:  [ 135 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (- 1.5 (* -0.166667 x)))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (cbrt (- 1.5 (* -0.166667 x))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (- 1.5 (* -0.166667 x)))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (79 enodes)
* * [misc]simplify:  iters left: 4 (221 enodes)
* [exit]simplify:  Simplified to (+ (* (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (* (cbrt (+ 1.5 (* -0.166667 x))) x)) (* (* (cbrt (+ 1.5 (* -0.166667 x))) x) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))))) (* (cbrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3))))
* [exit]simplify:  Simplified to (+ (* (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (* (cbrt (+ 1.5 (* -0.166667 x))) x)) (* (* (cbrt (+ 1.5 (* -0.166667 x))) x) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))))) (* (cbrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (cbrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (163 enodes)
* * [misc]simplify:  iters left: 2 (324 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))
* * * * [misc]progress:  [ 136 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (95 enodes)
* * [misc]simplify:  iters left: 4 (260 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (cbrt (+ (pow 1.5 3) (pow (* x -0.166667) 3)))) (* (* (cbrt (+ (* x -0.166667) 1.5)) x) (* (cbrt (+ (* x -0.166667) 1.5)) x))) (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5))))))
* [exit]simplify:  Simplified to (+ (* (* (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0)))) (cbrt (+ (pow 1.5 3) (pow (* x -0.166667) 3)))) (* (* (cbrt (+ (* x -0.166667) 1.5)) x) (* (cbrt (+ (* x -0.166667) 1.5)) x))) (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (259 enodes)
* * [misc]simplify:  iters left: 2 (432 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* (- (* x -0.166667) 1.5) 1.5))) (+ (* (- (* x -3.0) 1.0) (* x -3.0)) (* 1.0 1.0)))
* [exit]simplify:  Simplified to (* (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* (- (* x -0.166667) 1.5) 1.5))) (+ (* (- (* x -3.0) 1.0) (* x -3.0)) (* 1.0 1.0)))
* * * * [misc]progress:  [ 137 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (- 1.5 (* -0.166667 x)))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (cbrt (- 1.5 (* -0.166667 x))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (cbrt (- 1.5 (* -0.166667 x)))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (79 enodes)
* * [misc]simplify:  iters left: 4 (220 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (- 1.5 (* -0.166667 x)))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) x) (* (cbrt (+ 1.5 (* -0.166667 x))) x))) (* (cbrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3))))
* [exit]simplify:  Simplified to (+ (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (- 1.5 (* -0.166667 x)))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) x) (* (cbrt (+ 1.5 (* -0.166667 x))) x))) (* (cbrt (- 1.5 (* -0.166667 x))) (+ (pow (* x -3.0) 3) (pow 1.0 3))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (cbrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (163 enodes)
* * [misc]simplify:  iters left: 2 (324 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)))
* * * * [misc]progress:  [ 138 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (81 enodes)
* * [misc]simplify:  iters left: 4 (219 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (* x x) (- (* x -3.0) 1.0)))))
* [exit]simplify:  Simplified to (+ (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (* x x) (- (* x -3.0) 1.0)))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (186 enodes)
* * [misc]simplify:  iters left: 2 (422 enodes)
* [exit]simplify:  Simplified to (* (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x))) (- (* x -3.0) 1.0))
* [exit]simplify:  Simplified to (* (+ (* 1.5 1.5) (* (- (* -0.166667 x) 1.5) (* -0.166667 x))) (- (* x -3.0) 1.0))
* * * * [misc]progress:  [ 139 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (93 enodes)
* * [misc]simplify:  iters left: 4 (263 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* (- (* x -3.0) 1.0) (* x x)))) (* (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (cbrt (- 1.5 (* -0.166667 x))))))
* [exit]simplify:  Simplified to (+ (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* (- (* x -3.0) 1.0) (* x x)))) (* (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (cbrt (- 1.5 (* -0.166667 x))))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (232 enodes)
* * [misc]simplify:  iters left: 2 (379 enodes)
* [exit]simplify:  Simplified to (* (* (* (cbrt (- 1.5 (* -0.166667 x))) (- (* x -3.0) 1.0)) (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* (- 1.5 (* -0.166667 x)) 1.5)))) (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* (- 1.5 (* -0.166667 x)) 1.5))))
* [exit]simplify:  Simplified to (* (* (* (cbrt (- 1.5 (* -0.166667 x))) (- (* x -3.0) 1.0)) (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* (- 1.5 (* -0.166667 x)) 1.5)))) (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* (- 1.5 (* -0.166667 x)) 1.5))))
* * * * [misc]progress:  [ 140 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (94 enodes)
* * [misc]simplify:  iters left: 4 (268 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (- (* x -3.0) 1.0) (* x x)) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))) (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (* (cbrt (- 1.5 (* -0.166667 x))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))))))
* [exit]simplify:  Simplified to (+ (* (* (* (- (* x -3.0) 1.0) (* x x)) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))) (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (* (cbrt (- 1.5 (* -0.166667 x))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (223 enodes)
* * [misc]simplify:  iters left: 2 (385 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x))))) (* (* (cbrt (- 1.5 (* -0.166667 x))) (- (* x -3.0) 1.0)) (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x))))) (* (* (cbrt (- 1.5 (* -0.166667 x))) (- (* x -3.0) 1.0)) (cbrt (+ (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- 1.5 (* -0.166667 x)))))))
* * * * [misc]progress:  [ 141 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (95 enodes)
* * [misc]simplify:  iters left: 4 (269 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (- (* x -3.0) 1.0) (* x x)) (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5)))) (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))) (* (* (* (cbrt (- 1.5 (* -0.166667 x))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))))))
* [exit]simplify:  Simplified to (+ (* (* (* (- (* x -3.0) 1.0) (* x x)) (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5)))) (* (cbrt (* (- 1.5 (* -0.166667 x)) (+ (* -0.166667 x) 1.5))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))) (* (* (* (cbrt (- 1.5 (* -0.166667 x))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (109 enodes)
* * [misc]simplify:  iters left: 3 (231 enodes)
* * [misc]simplify:  iters left: 2 (391 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 (- 1.5 (* -0.166667 x))) (* (* -0.166667 x) (* -0.166667 x)))) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (- (* x -3.0) 1.0)))
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 (- 1.5 (* -0.166667 x))) (* (* -0.166667 x) (* -0.166667 x)))) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (- (* x -3.0) 1.0)))
* * * * [misc]progress:  [ 142 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (95 enodes)
* * [misc]simplify:  iters left: 4 (269 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (- (* x -3.0) 1.0) (* x x)) (cbrt (+ (pow 1.5 3) (pow (* x -0.166667) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* x -0.166667) 3))) (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))))) (* (* (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5)))) (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))))) (* (cbrt (- 1.5 (* x -0.166667))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)))))
* [exit]simplify:  Simplified to (+ (* (* (* (- (* x -3.0) 1.0) (* x x)) (cbrt (+ (pow 1.5 3) (pow (* x -0.166667) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* x -0.166667) 3))) (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))))) (* (* (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5)))) (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))))) (* (cbrt (- 1.5 (* x -0.166667))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (109 enodes)
* * [misc]simplify:  iters left: 3 (229 enodes)
* * [misc]simplify:  iters left: 2 (385 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* x -0.166667) (* x -0.166667)) (* (- 1.5 (* x -0.166667)) 1.5))) (- (* x -3.0) 1.0)) (* (cbrt (+ (* (* x -0.166667) (* x -0.166667)) (* (- 1.5 (* x -0.166667)) 1.5))) (cbrt (- 1.5 (* x -0.166667)))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (* x -0.166667) (* x -0.166667)) (* (- 1.5 (* x -0.166667)) 1.5))) (- (* x -3.0) 1.0)) (* (cbrt (+ (* (* x -0.166667) (* x -0.166667)) (* (- 1.5 (* x -0.166667)) 1.5))) (cbrt (- 1.5 (* x -0.166667)))))
* * * * [misc]progress:  [ 143 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (94 enodes)
* * [misc]simplify:  iters left: 4 (268 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))) (* (- (* x -3.0) 1.0) (* x x))) (* (cbrt (+ (pow 1.5 3) (pow (* x -0.166667) 3))) (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))))) (* (* (* (cbrt (- 1.5 (* x -0.166667))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (cbrt (- 1.5 (* x -0.166667)))) (cbrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667))))))
* [exit]simplify:  Simplified to (+ (* (* (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))) (* (- (* x -3.0) 1.0) (* x x))) (* (cbrt (+ (pow 1.5 3) (pow (* x -0.166667) 3))) (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))))) (* (* (* (cbrt (- 1.5 (* x -0.166667))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (cbrt (- 1.5 (* x -0.166667)))) (cbrt (+ (* 1.5 (- 1.5 (* x -0.166667))) (* (* x -0.166667) (* x -0.166667))))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (cbrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (223 enodes)
* * [misc]simplify:  iters left: 2 (387 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (* (cbrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0)) (cbrt (- 1.5 (* x -0.166667)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 1.5) (* (* x -0.166667) (- (* x -0.166667) 1.5)))) (* (* (cbrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0)) (cbrt (- 1.5 (* x -0.166667)))))
* * * * [misc]progress:  [ 144 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (93 enodes)
* * [misc]simplify:  iters left: 4 (263 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))) (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5)))) (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (* (- (* x -3.0) 1.0) (* x x)))) (* (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5)))) (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667)))))))
* [exit]simplify:  Simplified to (+ (* (* (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))) (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5)))) (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (* (- (* x -3.0) 1.0) (* x x)))) (* (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5)))) (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667)))))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (232 enodes)
* * [misc]simplify:  iters left: 2 (378 enodes)
* [exit]simplify:  Simplified to (* (* (* (cbrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0)) (cbrt (- 1.5 (* x -0.166667)))) (cbrt (+ (* (- 1.5 (* x -0.166667)) 1.5) (* (* x -0.166667) (* x -0.166667)))))
* [exit]simplify:  Simplified to (* (* (* (cbrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0)) (cbrt (- 1.5 (* x -0.166667)))) (cbrt (+ (* (- 1.5 (* x -0.166667)) 1.5) (* (* x -0.166667) (* x -0.166667)))))
* * * * [misc]progress:  [ 145 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (- (* x -3.0) 1.0) (* x x)) (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5)))) (* (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))) (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))))) (* (* (- 1.5 (* x -0.166667)) (+ 1.0 (* x -3.0))) (- (* x -3.0) 1.0)))
* [exit]simplify:  Simplified to (+ (* (* (* (- (* x -3.0) 1.0) (* x x)) (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5)))) (* (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))) (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))))) (* (* (- 1.5 (* x -0.166667)) (+ 1.0 (* x -3.0))) (- (* x -3.0) 1.0)))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))) (cbrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (212 enodes)
* * [misc]simplify:  iters left: 1 (474 enodes)
* [exit]simplify:  Simplified to (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))
* [exit]simplify:  Simplified to (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))
* * * * [misc]progress:  [ 146 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (- (* x -3.0) 1.0) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (83 enodes)
* * [misc]simplify:  iters left: 4 (224 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (+ 1.0 (* x -3.0))) (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (- (* x -3.0) 1.0))) (* (* (* (* x x) (- (* x -3.0) 1.0)) (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3)))) (* (cbrt (+ (* -0.166667 x) 1.5)) (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3))))))
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (+ 1.0 (* x -3.0))) (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (- (* x -3.0) 1.0))) (* (* (* (* x x) (- (* x -3.0) 1.0)) (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3)))) (* (cbrt (+ (* -0.166667 x) 1.5)) (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3))))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (160 enodes)
* * [misc]simplify:  iters left: 2 (203 enodes)
* * [misc]simplify:  iters left: 1 (246 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5))) (cbrt (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5)))) (- (* x -3.0) 1.0))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5))) (cbrt (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5)))) (- (* x -3.0) 1.0))
* * * * [misc]progress:  [ 147 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (- (* x -3.0) 1.0) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (93 enodes)
* * [misc]simplify:  iters left: 4 (263 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (* (cbrt (- 1.5 (* -0.166667 x))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)))) (* (* (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3))) (* (cbrt (+ (* -0.166667 x) 1.5)) (- (* x -3.0) 1.0))) (* (cbrt (* (+ (* -0.166667 x) 1.5) (- 1.5 (* -0.166667 x)))) (* x x))))
* [exit]simplify:  Simplified to (+ (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (* (cbrt (- 1.5 (* -0.166667 x))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)))) (* (* (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3))) (* (cbrt (+ (* -0.166667 x) 1.5)) (- (* x -3.0) 1.0))) (* (cbrt (* (+ (* -0.166667 x) 1.5) (- 1.5 (* -0.166667 x)))) (* x x))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (185 enodes)
* * [misc]simplify:  iters left: 2 (254 enodes)
* * [misc]simplify:  iters left: 1 (328 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* -0.166667 x))) (- (* x -3.0) 1.0)) (cbrt (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5))))
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* -0.166667 x))) (- (* x -3.0) 1.0)) (cbrt (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5))))
* * * * [misc]progress:  [ 148 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (- (* x -3.0) 1.0) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (93 enodes)
* * [misc]simplify:  iters left: 4 (263 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- 1.5 (* x -0.166667))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))))) (* (* (- (* x -3.0) 1.0) (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3)))) (* (* (* x x) (cbrt (+ (* x -0.166667) 1.5))) (cbrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))))))
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- 1.5 (* x -0.166667))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))))) (* (* (- (* x -3.0) 1.0) (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3)))) (* (* (* x x) (cbrt (+ (* x -0.166667) 1.5))) (cbrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (185 enodes)
* * [misc]simplify:  iters left: 2 (254 enodes)
* * [misc]simplify:  iters left: 1 (330 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0)) (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* (- (* x -0.166667) 1.5) 1.5))))
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0)) (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* (- (* x -0.166667) 1.5) 1.5))))
* * * * [misc]progress:  [ 149 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (- (* x -3.0) 1.0) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (180 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (- (* x -3.0) 1.0) (* x x)) (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5)))) (* (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))) (cbrt (+ (* x -0.166667) 1.5)))) (* (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0)) (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667))))))
* [exit]simplify:  Simplified to (+ (* (* (* (- (* x -3.0) 1.0) (* x x)) (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5)))) (* (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))) (cbrt (+ (* x -0.166667) 1.5)))) (* (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0)) (* (cbrt (- 1.5 (* x -0.166667))) (cbrt (- 1.5 (* x -0.166667))))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (119 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (* (cbrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0)))
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (* (cbrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0)))
* * * * [misc]progress:  [ 150 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (- (* x -3.0) 1.0) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (83 enodes)
* * [misc]simplify:  iters left: 4 (225 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))))) (* (- (* x -3.0) 1.0) (+ 1.0 (* x -3.0)))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (cbrt (+ (* -0.166667 x) 1.5)) (* x x))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (- (* x -3.0) 1.0))))
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))))) (* (- (* x -3.0) 1.0) (+ 1.0 (* x -3.0)))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* (cbrt (+ (* -0.166667 x) 1.5)) (* x x))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (- (* x -3.0) 1.0))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (160 enodes)
* * [misc]simplify:  iters left: 2 (203 enodes)
* * [misc]simplify:  iters left: 1 (246 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5))) (cbrt (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5)))) (- (* x -3.0) 1.0))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5))) (cbrt (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5)))) (- (* x -3.0) 1.0))
* * * * [misc]progress:  [ 151 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (- (* x -3.0) 1.0) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (93 enodes)
* * [misc]simplify:  iters left: 4 (263 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (* (cbrt (- 1.5 (* -0.166667 x))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)))) (* (* (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3))) (cbrt (+ (* -0.166667 x) 1.5))) (* (* (- (* x -3.0) 1.0) (* x x)) (cbrt (* (+ (* -0.166667 x) 1.5) (- 1.5 (* -0.166667 x)))))))
* [exit]simplify:  Simplified to (+ (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (* (cbrt (- 1.5 (* -0.166667 x))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)))) (* (* (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3))) (cbrt (+ (* -0.166667 x) 1.5))) (* (* (- (* x -3.0) 1.0) (* x x)) (cbrt (* (+ (* -0.166667 x) 1.5) (- 1.5 (* -0.166667 x)))))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (185 enodes)
* * [misc]simplify:  iters left: 2 (254 enodes)
* * [misc]simplify:  iters left: 1 (328 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* -0.166667 x))) (- (* x -3.0) 1.0)) (cbrt (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5))))
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* -0.166667 x))) (- (* x -3.0) 1.0)) (cbrt (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5))))
* * * * [misc]progress:  [ 152 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (- (* x -3.0) 1.0) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (93 enodes)
* * [misc]simplify:  iters left: 4 (263 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- 1.5 (* x -0.166667))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))))) (* (* (* (- (* x -3.0) 1.0) (cbrt (+ (* x -0.166667) 1.5))) (cbrt (- (* 1.5 1.5) (* (* x -0.166667) (* x -0.166667))))) (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (* x x))))
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- 1.5 (* x -0.166667))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))))) (* (* (* (- (* x -3.0) 1.0) (cbrt (+ (* x -0.166667) 1.5))) (cbrt (- (* 1.5 1.5) (* (* x -0.166667) (* x -0.166667))))) (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (* x x))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (185 enodes)
* * [misc]simplify:  iters left: 2 (254 enodes)
* * [misc]simplify:  iters left: 1 (330 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0)) (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* (- (* x -0.166667) 1.5) 1.5))))
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0)) (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* (- (* x -0.166667) 1.5) 1.5))))
* * * * [misc]progress:  [ 153 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (- (* x -3.0) 1.0) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (cbrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667))))) (* (* (- (* x -3.0) 1.0) (cbrt (+ (* x -0.166667) 1.5))) (cbrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))))) (* (* (cbrt (- 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0))) (* (- (* x -3.0) 1.0) (cbrt (- 1.5 (* x -0.166667))))))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (cbrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667))))) (* (* (- (* x -3.0) 1.0) (cbrt (+ (* x -0.166667) 1.5))) (cbrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))))) (* (* (cbrt (- 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0))) (* (- (* x -3.0) 1.0) (cbrt (- 1.5 (* x -0.166667))))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (119 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (* (cbrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0)))
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (* (cbrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0)))
* * * * [misc]progress:  [ 154 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x))))) (* (- (* x -3.0) 1.0) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (* x x)))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (79 enodes)
* * [misc]simplify:  iters left: 4 (212 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))) (* (* (* x x) (- (* x -3.0) 1.0)) (* (* (cbrt (+ (* -0.166667 x) 1.5)) (cbrt (+ (* -0.166667 x) 1.5))) (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3))))))
* [exit]simplify:  Simplified to (+ (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))) (* (* (* x x) (- (* x -3.0) 1.0)) (* (* (cbrt (+ (* -0.166667 x) 1.5)) (cbrt (+ (* -0.166667 x) 1.5))) (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3))))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (165 enodes)
* * [misc]simplify:  iters left: 1 (183 enodes)
* [exit]simplify:  Simplified to (* (- (* x -3.0) 1.0) (cbrt (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5))))
* [exit]simplify:  Simplified to (* (- (* x -3.0) 1.0) (cbrt (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5))))
* * * * [misc]progress:  [ 155 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (cbrt (- 1.5 (* -0.166667 x)))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x))))) (* (- (* x -3.0) 1.0) (cbrt (- 1.5 (* -0.166667 x))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (cbrt (- 1.5 (* -0.166667 x)))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* x x)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (- 1.5 (* x -0.166667))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (* (* (* (cbrt (+ (* x -0.166667) 1.5)) (* x x)) (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5)))) (* (cbrt (+ (* x -0.166667) 1.5)) (- (* x -3.0) 1.0))))
* [exit]simplify:  Simplified to (+ (* (cbrt (- 1.5 (* x -0.166667))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (* (* (* (cbrt (+ (* x -0.166667) 1.5)) (* x x)) (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5)))) (* (cbrt (+ (* x -0.166667) 1.5)) (- (* x -3.0) 1.0))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (cbrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0))
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0))
* * * * [misc]progress:  [ 156 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (* (- (* x -3.0) 1.0) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (82 enodes)
* * [misc]simplify:  iters left: 4 (219 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))))) (* (- (* x -3.0) 1.0) (+ 1.0 (* x -3.0)))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (- (* x -3.0) 1.0)) (* (* (cbrt (+ (* -0.166667 x) 1.5)) (* x x)) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))))
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))))) (* (- (* x -3.0) 1.0) (+ 1.0 (* x -3.0)))) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (- (* x -3.0) 1.0)) (* (* (cbrt (+ (* -0.166667 x) 1.5)) (* x x)) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (160 enodes)
* * [misc]simplify:  iters left: 2 (203 enodes)
* * [misc]simplify:  iters left: 1 (246 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5))) (cbrt (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5)))) (- (* x -3.0) 1.0))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5))) (cbrt (+ (* (- (* -0.166667 x) 1.5) (* -0.166667 x)) (* 1.5 1.5)))) (- (* x -3.0) 1.0))
* * * * [misc]progress:  [ 157 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (* (- (* x -3.0) 1.0) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (93 enodes)
* * [misc]simplify:  iters left: 4 (263 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (* (cbrt (- 1.5 (* -0.166667 x))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)))) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* (* (- (* x -3.0) 1.0) (* x x)) (cbrt (+ (* -0.166667 x) 1.5)))) (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3)))))
* [exit]simplify:  Simplified to (+ (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (* (cbrt (- 1.5 (* -0.166667 x))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)))) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (* (* (- (* x -3.0) 1.0) (* x x)) (cbrt (+ (* -0.166667 x) 1.5)))) (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3)))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (cbrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (185 enodes)
* * [misc]simplify:  iters left: 2 (254 enodes)
* * [misc]simplify:  iters left: 1 (328 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* -0.166667 x))) (- (* x -3.0) 1.0)) (cbrt (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5))))
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* -0.166667 x))) (- (* x -3.0) 1.0)) (cbrt (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5))))
* * * * [misc]progress:  [ 158 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (* (- (* x -3.0) 1.0) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (93 enodes)
* * [misc]simplify:  iters left: 4 (263 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- 1.5 (* x -0.166667))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))))) (* (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (* (cbrt (+ (* x -0.166667) 1.5)) (* x x))) (* (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))) (- (* x -3.0) 1.0))))
* [exit]simplify:  Simplified to (+ (* (* (cbrt (- 1.5 (* x -0.166667))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))))) (* (* (cbrt (+ (pow (* x -0.166667) 3) (pow 1.5 3))) (* (cbrt (+ (* x -0.166667) 1.5)) (* x x))) (* (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))) (- (* x -3.0) 1.0))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (185 enodes)
* * [misc]simplify:  iters left: 2 (254 enodes)
* * [misc]simplify:  iters left: 1 (330 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0)) (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* (- (* x -0.166667) 1.5) 1.5))))
* [exit]simplify:  Simplified to (* (* (cbrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0)) (cbrt (- (* (* x -0.166667) (* x -0.166667)) (* (- (* x -0.166667) 1.5) 1.5))))
* * * * [misc]progress:  [ 159 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (* (- (* x -3.0) 1.0) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (175 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- (* x -3.0) 1.0) (cbrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667))))) (* (* (cbrt (+ (* x -0.166667) 1.5)) (* x x)) (cbrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))))) (* (* (cbrt (- 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0))) (* (- (* x -3.0) 1.0) (cbrt (- 1.5 (* x -0.166667))))))
* [exit]simplify:  Simplified to (+ (* (* (- (* x -3.0) 1.0) (cbrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667))))) (* (* (cbrt (+ (* x -0.166667) 1.5)) (* x x)) (cbrt (* (+ (* x -0.166667) 1.5) (- 1.5 (* x -0.166667)))))) (* (* (cbrt (- 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0))) (* (- (* x -3.0) 1.0) (cbrt (- 1.5 (* x -0.166667))))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (* (cbrt (- 1.5 (* -0.166667 x))) (cbrt (- 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (119 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (* (cbrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0)))
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (* (cbrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0)))
* * * * [misc]progress:  [ 160 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (* (- (* x -3.0) 1.0) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (218 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))) (* (* (- (* x -3.0) 1.0) (* x (cbrt (+ (* -0.166667 x) 1.5)))) (* (* x (cbrt (+ (* -0.166667 x) 1.5))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))))
* [exit]simplify:  Simplified to (+ (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))) (* (* (- (* x -3.0) 1.0) (* x (cbrt (+ (* -0.166667 x) 1.5)))) (* (* x (cbrt (+ (* -0.166667 x) 1.5))) (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (165 enodes)
* * [misc]simplify:  iters left: 1 (183 enodes)
* [exit]simplify:  Simplified to (* (- (* x -3.0) 1.0) (cbrt (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5))))
* [exit]simplify:  Simplified to (* (- (* x -3.0) 1.0) (cbrt (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5))))
* * * * [misc]progress:  [ 161 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (cbrt (- 1.5 (* -0.166667 x)))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (* (- (* x -3.0) 1.0) (cbrt (- 1.5 (* -0.166667 x))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (cbrt (- 1.5 (* -0.166667 x)))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (174 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (- 1.5 (* x -0.166667))) (* (- (* x -3.0) 1.0) (+ 1.0 (* x -3.0)))) (* (* (- (* x -3.0) 1.0) (* (cbrt (+ (* x -0.166667) 1.5)) x)) (* (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))) (* (cbrt (+ (* x -0.166667) 1.5)) x))))
* [exit]simplify:  Simplified to (+ (* (cbrt (- 1.5 (* x -0.166667))) (* (- (* x -3.0) 1.0) (+ 1.0 (* x -3.0)))) (* (* (- (* x -3.0) 1.0) (* (cbrt (+ (* x -0.166667) 1.5)) x)) (* (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))) (* (cbrt (+ (* x -0.166667) 1.5)) x))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (cbrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0))
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0))
* * * * [misc]progress:  [ 162 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (* (- (* x -3.0) 1.0) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))) (* (- (* x -3.0) 1.0) (* (* (cbrt (+ (pow 1.5 3) (pow (* -0.166667 x) 3))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (217 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))) (* (* (- (* x -3.0) 1.0) (* (cbrt (+ (* -0.166667 x) 1.5)) x)) (* (* (cbrt (+ (* -0.166667 x) 1.5)) x) (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3))))))
* [exit]simplify:  Simplified to (+ (* (cbrt (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5)))) (* (+ 1.0 (* x -3.0)) (- (* x -3.0) 1.0))) (* (* (- (* x -3.0) 1.0) (* (cbrt (+ (* -0.166667 x) 1.5)) x)) (* (* (cbrt (+ (* -0.166667 x) 1.5)) x) (cbrt (+ (pow (* -0.166667 x) 3) (pow 1.5 3))))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (cbrt (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (165 enodes)
* * [misc]simplify:  iters left: 1 (183 enodes)
* [exit]simplify:  Simplified to (* (- (* x -3.0) 1.0) (cbrt (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5))))
* [exit]simplify:  Simplified to (* (- (* x -3.0) 1.0) (cbrt (+ (* (* -0.166667 x) (- (* -0.166667 x) 1.5)) (* 1.5 1.5))))
* * * * [misc]progress:  [ 163 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (cbrt (- 1.5 (* -0.166667 x)))) (* (- (* x -3.0) 1.0) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (* (- (* x -3.0) 1.0) (cbrt (- 1.5 (* -0.166667 x))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (cbrt (- 1.5 (* -0.166667 x)))) (* (- (* x -3.0) 1.0) (* (* (cbrt (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x)))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (173 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (- 1.5 (* x -0.166667))) (* (- (* x -3.0) 1.0) (+ 1.0 (* x -3.0)))) (* (* (* x (cbrt (+ (* x -0.166667) 1.5))) (* x (cbrt (+ (* x -0.166667) 1.5)))) (* (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))) (- (* x -3.0) 1.0))))
* [exit]simplify:  Simplified to (+ (* (cbrt (- 1.5 (* x -0.166667))) (* (- (* x -3.0) 1.0) (+ 1.0 (* x -3.0)))) (* (* (* x (cbrt (+ (* x -0.166667) 1.5))) (* x (cbrt (+ (* x -0.166667) 1.5)))) (* (cbrt (* (- 1.5 (* x -0.166667)) (+ (* x -0.166667) 1.5))) (- (* x -3.0) 1.0))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (cbrt (- 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0))
* [exit]simplify:  Simplified to (* (cbrt (- 1.5 (* x -0.166667))) (- (* x -3.0) 1.0))
* * * * [misc]progress:  [ 164 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) 3)) (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))) (* (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))))))>
* [enter]simplify:  Simplifying (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) 3))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (+ (* x -0.166667) 1.5) (* x x)) 3) (pow (+ 1.0 (* x -3.0)) 3))
* [exit]simplify:  Simplified to (+ (pow (* (+ (* x -0.166667) 1.5) (* x x)) 3) (pow (+ 1.0 (* x -3.0)) 3))
* [enter]simplify:  Simplifying (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))) (* (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (- (* (* (* (cbrt (+ (* -0.166667 x) 1.5)) (cbrt (+ (* -0.166667 x) 1.5))) (* (* x x) (cbrt (+ (* -0.166667 x) 1.5)))) (* (* (cbrt (+ (* -0.166667 x) 1.5)) (cbrt (+ (* -0.166667 x) 1.5))) (* (* x x) (cbrt (+ (* -0.166667 x) 1.5))))) (- (* (* (cbrt (+ (* -0.166667 x) 1.5)) (cbrt (+ (* -0.166667 x) 1.5))) (* (cbrt (+ (* -0.166667 x) 1.5)) (* (+ 1.0 (* x -3.0)) (* x x)))) (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (- (* (* (* (cbrt (+ (* -0.166667 x) 1.5)) (cbrt (+ (* -0.166667 x) 1.5))) (* (* x x) (cbrt (+ (* -0.166667 x) 1.5)))) (* (* (cbrt (+ (* -0.166667 x) 1.5)) (cbrt (+ (* -0.166667 x) 1.5))) (* (* x x) (cbrt (+ (* -0.166667 x) 1.5))))) (- (* (* (cbrt (+ (* -0.166667 x) 1.5)) (cbrt (+ (* -0.166667 x) 1.5))) (* (cbrt (+ (* -0.166667 x) 1.5)) (* (+ 1.0 (* x -3.0)) (* x x)))) (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0)))))
* * * * [misc]progress:  [ 165 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))))>
* * * * [misc]progress:  [ 166 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))) (- (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))))>
* [enter]simplify:  Simplifying (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* [exit]simplify:  Simplified to (* (- (+ 1.0 (* x -3.0)) (* (* (cbrt (+ (* -0.166667 x) 1.5)) (cbrt (+ (* -0.166667 x) 1.5))) (* (* x x) (cbrt (+ (* -0.166667 x) 1.5))))) (+ (+ 1.0 (* x -3.0)) (* (* (cbrt (+ (* -0.166667 x) 1.5)) (cbrt (+ (* -0.166667 x) 1.5))) (* (* x x) (cbrt (+ (* -0.166667 x) 1.5))))))
* [exit]simplify:  Simplified to (* (- (+ 1.0 (* x -3.0)) (* (* (cbrt (+ (* -0.166667 x) 1.5)) (cbrt (+ (* -0.166667 x) 1.5))) (* (* x x) (cbrt (+ (* -0.166667 x) 1.5))))) (+ (+ 1.0 (* x -3.0)) (* (* (cbrt (+ (* -0.166667 x) 1.5)) (cbrt (+ (* -0.166667 x) 1.5))) (* (* x x) (cbrt (+ (* -0.166667 x) 1.5))))))
* [enter]simplify:  Simplifying (- (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (142 enodes)
* * [misc]simplify:  iters left: 2 (186 enodes)
* * [misc]simplify:  iters left: 1 (237 enodes)
* [exit]simplify:  Simplified to (- (+ 1.0 (* x -3.0)) (* (* x x) (+ 1.5 (* x -0.166667))))
* [exit]simplify:  Simplified to (- (+ 1.0 (* x -3.0)) (* (* x x) (+ 1.5 (* x -0.166667))))
* * * * [misc]progress:  [ 167 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* x -3.0) (+ 1.0 (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))))>
* [enter]simplify:  Simplifying (+ 1.0 (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 1.5 (* -0.166667 x)) (* x x)) 1.0)
* [exit]simplify:  Simplified to (+ (* (+ 1.5 (* -0.166667 x)) (* x x)) 1.0)
* * * * [misc]progress:  [ 168 / 180 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))) (+ (* x -3.0) 1.0)))>
* * * * [misc]progress:  [ 169 / 180 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (- (+ (pow (pow 1.5 2) 1/3) (* 0.0027434951989135804 (* (pow (pow 1.5 2) 1/3) (pow x 2)))) (+ (* 0.009259296296333333 (* (pow (/ 1 (pow 1.5 4)) 1/3) (pow x 2))) (* 0.07407422222222222 (* (pow (pow 1.5 2) 1/3) x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (- (+ (pow (pow 1.5 2) 1/3) (* 0.0027434951989135804 (* (pow (pow 1.5 2) 1/3) (pow x 2)))) (+ (* 0.009259296296333333 (* (pow (/ 1 (pow 1.5 4)) 1/3) (pow x 2))) (* 0.07407422222222222 (* (pow (pow 1.5 2) 1/3) x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (74 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* * [misc]simplify:  iters left: 3 (459 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* x x) (cbrt (* 1.5 1.5))) (cbrt (+ 1.5 (* -0.166667 x)))) (+ 1.0 (* x -3.0))) (* (* (* x x) (cbrt (+ 1.5 (* -0.166667 x)))) (- (* (* (cbrt (* 1.5 1.5)) (- (* x 0.0027434951989135804) 0.07407422222222222)) x) (* (cbrt (/ 1 (pow 1.5 4))) (* (* x x) 0.009259296296333333)))))
* * * * [misc]progress:  [ 170 / 180 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (- (+ (* 17.99992800021599 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 2) (pow x 2))) (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 2)) (+ (* 0.75 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 2) (* (pow -0.166667 2) (pow x 2)))) (* 5.999988000023999 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 2) x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (- (+ (* 17.99992800021599 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 2) (pow x 2))) (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 2)) (+ (* 0.75 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 2) (* (pow -0.166667 2) (pow x 2)))) (* 5.999988000023999 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 2) x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (87 enodes)
* * [misc]simplify:  iters left: 4 (213 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (* (cbrt (+ 1.5 (* x -0.166667))) (* x x)) (- (+ (* (/ 17.99992800021599 (* x x)) (exp (* (+ (log x) (log (- 0.166667))) (+ 1/3 1/3)))) (exp (* (+ (log x) (log (- 0.166667))) (+ 1/3 1/3)))) (+ (* (/ 0.75 (* (* x x) (* -0.166667 -0.166667))) (exp (* (+ (log x) (log (- 0.166667))) (+ 1/3 1/3)))) (* (/ 5.999988000023999 x) (exp (* (+ (log x) (log (- 0.166667))) (+ 1/3 1/3))))))))
* * * * [misc]progress:  [ 171 / 180 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (- (+ (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 2) (* 17.99992800021599 (/ (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 2) (pow x 2)))) (+ (* 5.999988000023999 (/ (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 2) x)) (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 2) (* (pow x 2) (pow 0.166667 2)))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (- (+ (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 2) (* 17.99992800021599 (/ (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 2) (pow x 2)))) (+ (* 5.999988000023999 (/ (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 2) x)) (* 0.75 (/ (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 2) (* (pow x 2) (pow 0.166667 2)))))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (82 enodes)
* * [misc]simplify:  iters left: 4 (204 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (- (* (/ (exp (* (- (log 0.166667) (log (/ -1 x))) (+ 1/3 1/3))) (* x x)) (- 17.99992800021599 (/ (/ 0.75 0.166667) 0.166667))) (- (* (/ 5.999988000023999 x) (exp (* (- (log 0.166667) (log (/ -1 x))) (+ 1/3 1/3)))) (exp (* (- (log 0.166667) (log (/ -1 x))) (+ 1/3 1/3))))) (* (cbrt (+ 1.5 (* x -0.166667))) (* x x))))
* * * * [misc]progress:  [ 172 / 180 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (- (+ (* 1.5 (pow x 2)) (* 8.673617379884035e-19 (pow x 4))) (* 0.166667 (pow x 3)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (- (+ (* 1.5 (pow x 2)) (* 8.673617379884035e-19 (pow x 4))) (* 0.166667 (pow x 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (231 enodes)
* * [misc]simplify:  iters left: 2 (465 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow x 4) 8.673617379884035e-19) (+ 1.0 (* x -3.0))) (* (- 1.5 (* 0.166667 x)) (* x x)))
* * * * [misc]progress:  [ 173 / 180 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (- (+ (* (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3) (pow x 2)) (* 40.49983800048598 (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3))) (+ (* 1.125 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3) (pow -0.166667 2))) (* 8.999982000035999 (* (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (- (+ (* (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3) (pow x 2)) (* 40.49983800048598 (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3))) (+ (* 1.125 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3) (pow -0.166667 2))) (* 8.999982000035999 (* (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3) x)))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (74 enodes)
* * [misc]simplify:  iters left: 4 (208 enodes)
* [exit]simplify:  Simplified to (- (+ (+ 1.0 (* x -3.0)) (* (pow (pow (exp 1/3) (+ (log (- 0.166667)) (log x))) 3) (- (+ (* x x) 40.49983800048598) (* 8.999982000035999 x)))) (* (/ 1.125 (* -0.166667 -0.166667)) (pow (pow (exp 1/3) (+ (log (- 0.166667)) (log x))) 3)))
* * * * [misc]progress:  [ 174 / 180 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (- (+ (* 40.49983800048598 (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3)) (* (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3) (pow x 2))) (+ (* 1.125 (/ (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3) (pow 0.166667 2))) (* 8.999982000035999 (* (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3) x))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (- (+ (* 40.49983800048598 (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3)) (* (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3) (pow x 2))) (+ (* 1.125 (/ (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3) (pow 0.166667 2))) (* 8.999982000035999 (* (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3) x)))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (- (* (pow (pow (exp 1/3) (- (log 0.166667) (log (/ -1 x)))) 3) (- (+ 40.49983800048598 (* x x)) (* x 8.999982000035999))) (* (/ 1.125 (* 0.166667 0.166667)) (pow (pow (exp 1/3) (- (log 0.166667) (log (/ -1 x)))) 3))))
* * * * [misc]progress:  [ 175 / 180 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (- (+ (* 0.0006858737997283951 (* (pow 1.5 1/3) (pow x 4))) (* (pow 1.5 1/3) (pow x 2))) (+ (* 0.03703711111111111 (* (pow 1.5 1/3) (pow x 3))) (* 0.0046296481481666665 (* (pow (/ 1 (pow 1.5 5)) 1/3) (pow x 4))))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (- (+ (* 0.0006858737997283951 (* (pow 1.5 1/3) (pow x 4))) (* (pow 1.5 1/3) (pow x 2))) (+ (* 0.03703711111111111 (* (pow 1.5 1/3) (pow x 3))) (* 0.0046296481481666665 (* (pow (/ 1 (pow 1.5 5)) 1/3) (pow x 4)))))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (77 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* * [misc]simplify:  iters left: 3 (472 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* (cbrt 1.5) x) (- x (* x (* x 0.03703711111111111)))) (* (* (pow x 4) 0.0046296481481666665) (cbrt (/ 1 (pow 1.5 5))))) (* (cbrt (+ 1.5 (* x -0.166667))) (cbrt (+ 1.5 (* x -0.166667))))) (+ (* (* (cbrt (+ 1.5 (* x -0.166667))) (cbrt (+ 1.5 (* x -0.166667)))) (* (* 0.0006858737997283951 (pow x 4)) (cbrt 1.5))) (+ 1.0 (* x -3.0))))
* * * * [misc]progress:  [ 176 / 180 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (- (+ (* 4.499982000053998 (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x)))))) (* (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) (pow x 2))) (+ (* 2.9999940000119993 (* (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) (pow -0.166667 2))))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (- (+ (* 4.499982000053998 (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x)))))) (* (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) (pow x 2))) (+ (* 2.9999940000119993 (* (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) (pow -0.166667 2)))))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (78 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* * [misc]simplify:  iters left: 3 (447 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (+ 1.5 (* x -0.166667))) (cbrt (+ 1.5 (* x -0.166667)))) (- (* (* (pow (- 0.166667) 1/3) (* (pow x 1/3) x)) (- x 2.9999940000119993)) (* (* (pow x 1/3) (pow (- 0.166667) 1/3)) (- (/ 0.375 (* -0.166667 -0.166667)) 4.499982000053998)))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 177 / 180 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (- (+ (* 4.499982000053998 (exp (* 1/3 (- (log 0.166667) (log (/ -1 x)))))) (* (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) (pow x 2))) (+ (* 2.9999940000119993 (* (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) (pow 0.166667 2))))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (- (+ (* 4.499982000053998 (exp (* 1/3 (- (log 0.166667) (log (/ -1 x)))))) (* (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) (pow x 2))) (+ (* 2.9999940000119993 (* (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) x)) (* 0.375 (/ (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) (pow 0.166667 2)))))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (74 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (447 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (* (cbrt (+ 1.5 (* x -0.166667))) (cbrt (+ 1.5 (* x -0.166667)))) (- (* (* x (- x 2.9999940000119993)) (pow (exp 1/3) (- (log 0.166667) (log (/ -1 x))))) (* (pow (exp 1/3) (- (log 0.166667) (log (/ -1 x)))) (- (/ (/ 0.375 0.166667) 0.166667) 4.499982000053998)))))
* * * * [misc]progress:  [ 178 / 180 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 1.5 x)) (- 1.0 (* 3.0 x)))
* * * * [misc]progress:  [ 179 / 180 ] simplifiying candidate #<alt-event (Î» (x) (- (+ 1.0 (+ (* (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3) (pow x 2)) (* 40.49983800048598 (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3)))) (+ (* 1.125 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3) (pow -0.166667 2))) (+ (* 3.0 x) (* 8.999982000035999 (* (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3) x))))))>
* [enter]simplify:  Simplifying (- (+ 1.0 (+ (* (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3) (pow x 2)) (* 40.49983800048598 (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3)))) (+ (* 1.125 (/ (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3) (pow -0.166667 2))) (+ (* 3.0 x) (* 8.999982000035999 (* (pow (exp (* 1/3 (- (log (- 0.166667)) (log (/ 1 x))))) 3) x)))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (74 enodes)
* * [misc]simplify:  iters left: 4 (207 enodes)
* [exit]simplify:  Simplified to (- (+ (+ 1.0 (* (exp (* (+ (log x) (log (- 0.166667))) (+ 1/3 1/3))) (* (pow (exp 1/3) (+ (log x) (log (- 0.166667)))) (+ (* x x) 40.49983800048598)))) (/ (- 1.125) (/ (/ (* -0.166667 -0.166667) (pow (exp 1/3) (+ (log x) (log (- 0.166667))))) (exp (* (+ (log x) (log (- 0.166667))) (+ 1/3 1/3)))))) (+ (* 3.0 x) (* (* (* 8.999982000035999 x) (pow (exp 1/3) (+ (log x) (log (- 0.166667))))) (exp (* (+ (log x) (log (- 0.166667))) (+ 1/3 1/3))))))
* * * * [misc]progress:  [ 180 / 180 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3) (pow x 2)) (+ 1.0 (* 40.49983800048598 (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3)))) (+ (* 8.999982000035999 (* (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3) x)) (+ (* 1.125 (/ (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3) (pow 0.166667 2))) (* 3.0 x)))))>
* [enter]simplify:  Simplifying (- (+ (* (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3) (pow x 2)) (+ 1.0 (* 40.49983800048598 (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3)))) (+ (* 8.999982000035999 (* (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3) x)) (+ (* 1.125 (/ (pow (exp (* 1/3 (- (log 0.166667) (log (/ -1 x))))) 3) (pow 0.166667 2))) (* 3.0 x))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (- (+ (+ (* (pow (pow (exp 1/3) (- (log 0.166667) (log (/ -1 x)))) 3) (+ 40.49983800048598 (* x x))) 1.0) (- (* (pow (pow (exp 1/3) (- (log 0.166667) (log (/ -1 x)))) 3) (- (* x 8.999982000035999))) (* (/ 1.125 (* 0.166667 0.166667)) (pow (pow (exp 1/3) (- (log 0.166667) (log (/ -1 x)))) 3)))) (* 3.0 x))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))> #<alt-delta (Î» (x) (/ (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))> #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))> #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)))> #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))> #<alt-event (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x))))> #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x))) +nan.0)) , with alts (#<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)))>)
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) x)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) x)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) x)
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
